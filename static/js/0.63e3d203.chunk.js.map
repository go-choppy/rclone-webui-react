{"version":3,"sources":["../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","../node_modules/lodash/_root.js","../node_modules/lodash/isArray.js","../node_modules/react-transition-group/index.js","../node_modules/reactstrap/es/Button.js","../node_modules/lodash/_getNative.js","../node_modules/@babel/runtime/helpers/interopRequireDefault.js","../node_modules/react-transition-group/CSSTransition.js","../node_modules/dom-helpers/class/addClass.js","../node_modules/dom-helpers/class/hasClass.js","../node_modules/dom-helpers/class/removeClass.js","../node_modules/react-transition-group/ReplaceTransition.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/isObjectLike.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_toKey.js","../node_modules/react-chartjs-2/es/index.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_Map.js","../node_modules/lodash/isObject.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/keys.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/isSymbol.js","../node_modules/chart.js/dist/Chart.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/eq.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_castPath.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/moment/moment.js","../node_modules/lodash/isEqual.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/keyBy.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_createAggregator.js","../node_modules/lodash/_arrayAggregator.js","../node_modules/lodash/_baseAggregator.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/toString.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/identity.js","../node_modules/lodash/property.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/_basePropertyDeep.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","_objectSpread","target","i","arguments","length","source","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","forEach","__webpack_require__","d","__webpack_exports__","_slicedToArray","arr","Array","isArray","_arrayWithHoles","_arr","_n","_d","_e","undefined","_s","_i","Symbol","iterator","next","done","push","err","_iterableToArrayLimit","TypeError","_nonIterableRest","freeGlobal","freeSelf","self","root","Function","module","exports","_CSSTransition","_interopRequireDefault","_ReplaceTransition","_TransitionGroup","_Transition","__esModule","default","Transition","TransitionGroup","ReplaceTransition","CSSTransition","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutPropertiesLoose__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_assertThisInitialized__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_inheritsLoose__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_4___default","n","prop_types__WEBPACK_IMPORTED_MODULE_5__","prop_types__WEBPACK_IMPORTED_MODULE_5___default","classnames__WEBPACK_IMPORTED_MODULE_6__","classnames__WEBPACK_IMPORTED_MODULE_6___default","_utils__WEBPACK_IMPORTED_MODULE_7__","propTypes","active","a","bool","aria-label","string","block","color","disabled","outline","tag","innerRef","oneOfType","object","func","onClick","size","children","node","className","cssModule","close","Button","_React$Component","props","_this","call","this","bind","_proto","prototype","e","preventDefault","render","_this$props","ariaLabel","Tag","attributes","createElement","aria-hidden","btnOutlineColor","classes","href","defaultAriaLabel","type","ref","Component","defaultProps","baseIsNative","getValue","newObj","hasOwnProperty","desc","get","set","_interopRequireWildcard","_addClass","_removeClass","_react","_extends","assign","apply","addClass","split","c","removeClass","subClass","superClass","_len","args","_key","onEnter","appearing","getClassNames","removeClasses","onEntering","activeClassName","reflowAndAddClass","onEntered","appearClassName","doneClassName","enterClassName","onExit","onExiting","onExited","classNames","isStringClassNames","create","constructor","__proto__","_this$getClassNames6","scrollTop","_default","element","classList","add","_hasClass","setAttribute","baseVal","contains","indexOf","replaceClassName","origClass","classToRemove","replace","RegExp","remove","_reactDom","_args","handleEnter","_len2","_key2","handleLifecycle","handleEntering","_len3","_key3","handleEntered","_len4","_key4","handleExit","_len5","_key5","handleExiting","_len6","_key6","handleExited","_len7","_key7","handler","idx","originalArgs","_child$props","child","Children","toArray","findDOMNode","inProp","in","excluded","sourceKeys","_objectWithoutPropertiesLoose","_React$Children$toArr","first","second","cloneElement","getRawTag","objectToString","nullTag","undefinedTag","symToStringTag","toStringTag","react__WEBPACK_IMPORTED_MODULE_2__","react__WEBPACK_IMPORTED_MODULE_2___default","prop_types__WEBPACK_IMPORTED_MODULE_3__","prop_types__WEBPACK_IMPORTED_MODULE_3___default","classnames__WEBPACK_IMPORTED_MODULE_4__","classnames__WEBPACK_IMPORTED_MODULE_4___default","_utils__WEBPACK_IMPORTED_MODULE_5__","inverse","body","Card","CardBody","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","ListCache","entries","index","clear","entry","has","eq","array","nativeCreate","getNative","isKeyable","map","data","__data__","isSymbol","INFINITY","result","process","Doughnut","Line","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","chart_js__WEBPACK_IMPORTED_MODULE_2__","chart_js__WEBPACK_IMPORTED_MODULE_2___default","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3__","lodash_isEqual__WEBPACK_IMPORTED_MODULE_3___default","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4__","lodash_keyBy__WEBPACK_IMPORTED_MODULE_4___default","_objectWithoutProperties","_classCallCheck","instance","Constructor","_possibleConstructorReturn","ReferenceError","_inherits","setPrototypeOf","NODE_ENV","PUBLIC_URL","ChartComponent","_temp","handleOnClick","event","chartInstance","getDatasetAtEvent","getElementAtEvent","getElementsAtEvent","onElementsClick","componentWillMount","componentDidMount","renderChart","componentDidUpdate","redraw","destroyChart","updateChart","shouldComponentUpdate","nextProps","_props","options","plugins","legend","height","width","nextData","transformDataProp","shadowDataProp","componentWillUnmount","memoizeDataProps","datasets","saveCurrentDatasets","checkDatasets","isDev","usingCustomKeyProvider","datasetKeyProvider","getLabelAsKey","multipleDatasets","shouldWarn","dataset","label","console","error","getCurrentDatasets","config","_this2","_this3","helpers","configMerge","currentDatasets","nextDatasets","currentDatasetsIndexed","current","splice","point","pid","otherProps","rest","update","_props2","values","destroy","_props3","id","isRequired","number","arrayOf","propName","componentName","controllers","Error","display","position","_React$Component2","_this5","_ref","_React$Component3","Pie","_this7","_ref2","_React$Component4","_this9","_ref3","_React$Component5","Bar","_this11","_ref4","_React$Component6","HorizontalBar","_this13","_ref5","_React$Component7","Radar","_this15","_ref6","_React$Component8","Polar","_this17","_ref7","_React$Component9","Bubble","_this19","_ref8","_React$Component10","Scatter","_this21","_ref9","defaults","webpackPolyfill","deprecate","paths","l","baseIsEqualDeep","isObjectLike","baseIsEqual","other","bitmask","customizer","stack","Map","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","arrayLikeKeys","baseKeys","isArrayLike","MAX_SAFE_INTEGER","reIsDeepProp","reIsPlainProp","test","baseGetTag","symbolTag","moment","conversions","rgb2hsl","rgb2hsv","rgb2hwb","rgb2cmyk","rgb2keyword","rgb2xyz","rgb2lab","rgb2lch","lab2lch","hsl2rgb","hsl2hsv","hsl","h","s","hsl2hwb","hsl2cmyk","hsl2keyword","hsv2rgb","hsv2hsl","hsv","sl","v","hsv2hwb","hsv2cmyk","hsv2keyword","hwb2rgb","hwb2hsl","hwb2hsv","hwb2cmyk","hwb2keyword","cmyk2rgb","cmyk2hsl","cmyk2hsv","cmyk2hwb","cmyk2keyword","keyword2rgb","keyword2hsl","keyword2hsv","keyword2hwb","keyword2cmyk","keyword2lab","keyword2xyz","xyz2rgb","xyz2lab","xyz2lch","lab2xyz","lab2rgb","lch2lab","lch2xyz","lch2rgb","rgb","r","g","b","min","Math","max","delta","w","k","reverseKeywords","JSON","stringify","pow","x","y","z","xyz","t1","t2","t3","val","hi","floor","f","p","q","t","hwb","wh","bl","ratio","cmyk","m","lab","y2","hr","atan2","PI","sqrt","lch","cos","sin","keyword","cssKeywords","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","convert","Converter","arg","slice","pair","exec","from","to","round","convs","routeSpace","space","getValues","setValues","vals","fspace","colorConvert","colorName","colorString","getRgba","getHsla","getRgb","rgba","getHsl","hsla","getHwb","getAlpha","hexString","hexDouble","rgbString","alpha","rgbaString","percentString","percentaString","hslString","hslaString","hwbString","reverseNames","match","hexAlpha","parseInt","parseFloat","scale","isNaN","num","str","toString","toUpperCase","name","Color","valid","lightness","whiteness","isValid","setSpace","rgbArray","hslArray","hsvArray","hwbArray","cmykArray","rgbaArray","hslaArray","setChannel","hue","saturation","saturationv","blackness","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","greyscale","clearer","opaquer","rotate","degrees","mix","mixinColor","weight","w1","w2","toJSON","clone","prop","spaces","maxes","charAt","capped","chans","sname","svalues","window","chartjsColor","noop","uid","isNullOrUndef","substr","isObject","isFinite","_isFinite","_x","Number","valueOrDefault","defaultValue","valueAtIndexOrDefault","callback","fn","thisArg","each","loopable","reverse","len","arrayEquals","a0","a1","ilen","v0","v1","klen","_merger","tval","sval","merge","_mergerIf","mergeIf","sources","merger","extend","setFn","inherits","extensions","me","ChartElement","Surrogate","__super__","helpers_core","callCallback","item","fromIndex","getValueOrDefault","getValueAtIndexOrDefault","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","asin","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","helpers_easing","easingEffects","RAD_PER_DEG","DOUBLE_PI","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","exports$1","chart","ctx","clearRect","roundedRect","radius","left","top","right","bottom","moveTo","arc","closePath","rect","drawPoint","style","rotation","xOffset","yOffset","cornerRadius","rad","beginPath","lineTo","SQRT1_2","fill","stroke","drawImage","_isPointInArea","area","clipArea","save","clip","unclipArea","restore","previous","flip","stepped","steppedLine","midpoint","tension","bezierCurveTo","controlPointPreviousX","controlPointNextX","controlPointPreviousY","controlPointNextY","helpers_canvas","drawRoundedRectangle","_set","scope","defaultColor","defaultFontColor","defaultFontFamily","defaultFontSize","defaultFontStyle","defaultLineHeight","showLines","core_defaults","helpers_options","toLineHeight","matches","toPadding","_parseFont","globalDefaults","global","fontSize","font","family","fontFamily","lineHeight","fontStyle","toFontString","resolve","inputs","context","helpers$1","easing","canvas","Element","configuration","initialize","hidden","pivot","_view","_model","_start","transition","ease","model","start","view","actual","origin","c0","c1","interpolate","tooltipPosition","hasValue","isNumber","core_element","exports$2","currentStep","numSteps","onAnimationProgress","onAnimationComplete","core_animation","animation","duration","onProgress","onComplete","core_animations","animations","request","addAnimation","lazy","startTime","Date","now","animating","requestAnimationFrame","cancelAnimation","findIndex","requestAnimFrame","startDigest","advance","nextStep","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","DatasetController","datasetIndex","datasetElementType","dataElementType","linkScales","addElements","updateIndex","meta","getMeta","getDataset","xAxisID","scales","xAxes","yAxisID","yAxes","getDatasetMeta","getScaleForId","scaleID","_getValueScaleId","_getIndexScaleId","_getValueScale","_getIndexScale","reset","_data","createMetaDataset","_chart","_datasetIndex","createMetaData","_index","metaData","addElementAndReset","updateElement","buildOrUpdateElements","isExtensible","method","base","res","resyncElements","easingValue","elements","draw","removeHoverStyle","$previousStyle","setHoverStyle","custom","getHoverColor","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","hoverBorderColor","hoverBorderWidth","numMeta","numData","insertElements","count","onDataPush","onDataPop","pop","onDataShift","shift","onDataSplice","onDataUnshift","core_datasetController","borderAlign","element_arc","inLabelRange","mouseX","vm","hoverRadius","inRange","chartX","chartY","pointRelativePosition","getAngleFromPoint","angle","distance","startAngle","endAngle","betweenAngles","withinRadius","innerRadius","outerRadius","getCenterPoint","halfAngle","halfRadius","getArea","centreAngle","rangeFromCentre","angleMargin","sA","eA","pixelMargin","fillStyle","lineWidth","lineJoin","strokeStyle","valueOrDefault$1","line","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","capBezierPoints","element_line","currentVM","spanGaps","points","_children","globalOptionLineElements","lastDrawnIndex","_loop","lineCap","setLineDash","lineDashOffset","previousItem","skip","valueOrDefault$2","defaultColor$1","xRange","abs","hitRadius","pointStyle","element_point","mouseY","inXRange","inYRange","padding","chartArea","defaultColor$2","isVertical","getBarBounds","x1","x2","y1","half","swap","orig","v2","parseBorderWidth","maxW","maxH","edge","borderSkipped","horizontal","parseBorderSkipped","_inRange","skipX","skipY","bounds","rectangle","element_rectangle","rects","border","outer","inner","boundingRects","fillRect","Arc","Point","Rectangle","resolve$1","hover","mode","categoryPercentage","barPercentage","offset","gridLines","offsetGridLines","controller_bar","bar","_ruler","getRuler","_resolveElementOptions","_xScale","_yScale","datasetLabel","labels","_updateElementGeometry","vscale","getBasePixel","isHorizontal","ruler","vpixels","calculateBarValuePixels","ipixels","calculateBarIndexPixels","head","center","_getStacks","last","stacked","stacks","isDatasetVisible","getStackCount","getStackIndex","stackCount","end","pixels","getPixelForValue","barThickness","prev","curr","ticks","getTicks","getPixelForTick","computeMinSampleSize","imeta","ivalue","getRightValue","minBarLength","controller","range","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","maxBarThickness","Infinity","dataIndex","valueOrDefault$3","resolve$2","tooltips","callbacks","title","dataPoint","xLabel","yLabel","controller_bubble","xScale","yScale","dsIndex","getPixelForDecimal","NaN","_options","resolve$3","valueOrDefault$4","animateRotate","animateScale","legendCallback","text","join","generateLabels","ds","arcOpts","bw","legendItem","cutoutPercentage","circumference","tooltipItem","dataLabel","controller_doughnut","getRingIndex","ringIndex","j","opts","availableWidth","availableHeight","minSize","arcs","chartWeight","_getRingWeight","contains0","contains90","contains180","contains270","cutout","getMaxBorderWidth","radiusLength","_getVisibleDatasetWeightTotal","offsetX","offsetY","total","calculateTotal","_getRingWeightOffset","animationOpts","centerX","centerY","calculateCircumference","hoverWidth","ringWeightOffset","dataSetIndex","axis","controller_horizontalBar","valueOrDefault$5","resolve$4","isPointInArea","lineEnabled","showLine","controller_line","lineTension","_scale","_resolveLineOptions","updateBezierControlPoints","lineModel","_resolvePointOptions","calculatePointY","ELEMENT_OPTIONS","elementOptions","dsMeta","sumPos","sumNeg","stackedRightValue","rightValue","controlPoints","capControlPoint","pt","cubicInterpolationMode","splineCurveMonotone","splineCurve","nextItem","halfBorderWidth","resolve$5","angleLines","circular","pointLabels","beginAtZero","controller_polarArea","starts","_starts","angles","_angles","_updateRadius","countVisibleElements","_computeAngle","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getDistanceFromCenterForValue","resetRadius","doughnut","controller_pie","valueOrDefault$6","resolve$6","controller_radar","pointPosition","getPointPositionForValue","bubble","horizontalBar","polarArea","pie","radar","scatter","getRelativePosition","native","parseVisibleItems","jlen","getIntersectItems","getNearestItems","intersect","distanceMetric","minDistance","POSITIVE_INFINITY","nearestItems","getDistanceMetricForAxis","useX","useY","pt1","pt2","deltaX","deltaY","indexMode","items","core_interaction","modes","single","x-axis","nearest","intersectsItem","filterByPosition","where","sortByWeight","_tmpIndex_","sort","addSizeByPosition","boxes","box","layout","core_layouts","addBox","fullWidth","removeBox","layoutItem","configure","layoutOptions","leftPadding","rightPadding","topPadding","bottomPadding","leftBoxes","rightBoxes","topBoxes","bottomBoxes","chartAreaBoxes","maxPadding","verticalBoxes","horizontalBoxes","outerBoxes","chartWidth","chartHeight","chartAreaWidth","verticalBoxWidth","maxChartAreaWidth","maxChartAreaHeight","outerBoxSizes","minBoxSizes","getPadding","boxPadding","findMaxPadding","fitBox","minBoxSize","findNextWhere","scaleMargin","leftPaddingAddition","topPaddingAddition","newMaxChartAreaHeight","newMaxChartAreaWidth","placeBox","minBox","stylesheet","freeze","EXPANDO_KEY","CSS_SIZE_MONITOR","CSS_PREFIX","CSS_RENDER_MONITOR","CSS_RENDER_ANIMATION","ANIMATION_START_EVENTS","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","readUsedSize","property","getStyle","eventListenerOptions","supports","addEventListener","passive","addListener","removeListener","removeEventListener","createEvent","nativeEvent","createDiv","cls","el","document","addResizeListener","expando","resizer","expand","shrink","appendChild","_reset","scrollLeft","onScroll","createResizer","ticking","throttled","container","maintainAspectRatio","parentNode","clientWidth","proxy","renderProxy","animationName","reflow","offsetParent","watchForRender","insertBefore","firstChild","removeResizeListener","unwatchForRender","removeChild","platform_dom$2","disableCSSInjection","_enabled","_ensureLoaded","_loaded","platform","css","_style","getElementsByTagName","createTextNode","injectCSS","acquireContext","getElementById","getContext","renderHeight","getAttribute","renderWidth","initial","displayWidth","aspectRatio","displayHeight","initCanvas","releaseContext","removeAttribute","proxies","pos","fromNativeEvent","addEvent","removeEvent","implementation","core_plugins","_plugins","_cacheId","register","plugin","unregister","getAll","notify","hook","descriptor","params","descriptors","cache","$plugins","_invalidate","core_scaleService","constructors","registerScaleType","scaleConstructor","scaleDefaults","getScaleConstructor","getScaleDefaults","updateScaleDefaults","additions","addScalesToLayout","valueOrDefault$7","enabled","titleFontStyle","titleSpacing","titleMarginBottom","titleFontColor","titleAlign","bodySpacing","bodyFontColor","bodyAlign","footerFontStyle","footerSpacing","footerMarginTop","footerFontColor","footerAlign","yPadding","xPadding","caretPadding","caretSize","multiKeyBackground","displayColors","beforeTitle","tooltipItems","labelCount","afterTitle","beforeBody","beforeLabel","labelColor","activeElement","labelTextColor","afterLabel","afterBody","beforeFooter","footer","afterFooter","positioners","average","eventPosition","nearestElement","distanceBetweenPoints","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","indexScale","valueScale","getLabelForIndex","getBaseModel","tooltipOpts","xAlign","yAlign","_bodyFontFamily","bodyFontFamily","_bodyFontStyle","bodyFontStyle","_bodyAlign","bodyFontSize","_titleFontFamily","titleFontFamily","_titleFontStyle","titleFontSize","_titleAlign","_footerFontFamily","footerFontFamily","_footerFontStyle","footerFontSize","_footerAlign","opacity","legendColorBackground","getAlignedX","align","getBeforeAfterBodyLines","exports$3","_lastActive","getTitle","lines","getBeforeBody","getBody","bodyItems","bodyItem","before","after","getAfterBody","getFooter","changed","existingModel","_active","alignment","backgroundPoint","tooltipSize","caretX","caretY","labelColors","labelTextColors","_eventPosition","itemSort","dataPoints","tooltip","combinedBodyLength","reduce","titleLineCount","footerLineCount","widthPadding","maxLineWidth","measureText","fontString","getTooltipSize","lf","rf","olf","orf","yf","midX","midY","determineAlignment","paddingAndSize","radiusAndPadding","getBackgroundPoint","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","tmp","drawTitle","textAlign","textBaseline","fillText","drawBody","textColor","drawColorBoxes","xLinePadding","colorX","fillLineOfText","strokeRect","drawFooter","drawBackground","quadraticCurveTo","hasTooltipContent","globalAlpha","handleEvent","getElementsAtEventForMode","positioners_1","core_tooltip","valueOrDefault$8","mergeScaleConfig","slen","mergeConfig","positionIsHorizontal","events","onHover","animationDuration","responsive","responsiveAnimationDuration","Chart","construct","initConfig","_bufferedRender","instances","retinaScale","devicePixelRatio","bindEvents","resize","ensureScalesHaveIDs","buildOrUpdateScales","initToolTip","stop","silent","newWidth","getMaximumWidth","newHeight","getMaximumHeight","newSize","onResize","scalesOptions","scaleOptions","xAxisOptions","yAxisOptions","updated","dtype","dposition","isDefault","scaleType","scaleClass","mergeTicksOptions","hasUpdated","buildOrUpdateControllers","newControllers","destroyDatasetMeta","ControllerClass","resetElements","newOptions","updateConfig","updateLayout","updateDatasets","lastActive","_bufferedRequest","updateDataset","animationOptions","animationObject","easingFunction","stepDecimal","drawDatasets","_drawTooltip","drawDataset","getElementsAtXAxis","_meta","generateLegend","unbindEvents","toBase64Image","toDataURL","_chartInstance","_listeners","eventHandler","updateHoverStyle","bufferedRequest","hoverOptions","core_controller","abstract","DateAdapter","Controller","types","scaleMerge","formats","parse","format","diff","startOf","endOf","_create","override","members","core_adapters","_date","core_ticks","formatters","tickValue","logDelta","log10","tickString","maxTick","logTick","toExponential","numDecimal","toFixed","logarithmic","remain","valueOrDefault$9","labelsFromTicks","computeTextSize","tick","longestText","drawBorder","drawOnChartArea","drawTicks","tickMarkLength","zeroLineWidth","zeroLineColor","zeroLineBorderDash","zeroLineBorderDashOffset","scaleLabel","labelString","minRotation","maxRotation","mirror","autoSkip","autoSkipPadding","labelOffset","minor","major","core_scale","paddingLeft","paddingTop","paddingRight","paddingBottom","_ticks","beforeUpdate","maxWidth","maxHeight","margins","_maxLabelLines","longestLabelWidth","longestTextCache","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","beforeBuildTicks","buildTicks","afterBuildTicks","beforeTickToLabelConversion","convertTicksToLabels","afterTickToLabelConversion","beforeCalculateTickRotation","calculateTickRotation","afterCalculateTickRotation","beforeFit","fit","afterFit","afterUpdate","tickOpts","userCallback","tickFont","labelRotation","cosRotation","originalLabelWidth","labelWidth","tickWidth","angleRadians","toRadians","scaleLabelOpts","gridLineOpts","_isVisible","parseFont","isFullWidth","scaleLabelFont","scaleLabelPadding","deltaHeight","largestTextWidth","tallestLabelHeightInLines","numberOfLabelLines","lineSpace","tickPadding","sinRotation","labelHeight","firstLabelWidth","lastLabelWidth","offsetLeft","offsetRight","handleMargins","rawValue","getValueForPixel","innerWidth","pixel","finalVal","innerHeight","decimal","valueOffset","getBaseValue","_autoSkip","optionTicks","tickCount","skipRatio","maxTicks","maxTicksLimit","ticksLength","_tickSize","axisLength","PaddingBottom","rot","borderValue","tickStart","tickEnd","optionMajorTicks","isRotated","isMirrored","tickFontColor","fontColor","majorTickFontColor","majorTickFont","tl","scaleLabelFontColor","labelRotationRadians","itemsToDraw","axisWidth","alignPixel","_alignPixel","lineColor","tx1","ty1","tx2","ty2","labelX","labelY","textOffset","zeroLineIndex","lineValue","getPixelForGridLine","labelYOffset","labelXOffset","glWidth","glColor","glBorderDash","glBorderDashOffset","itemToDraw","translate","scaleLabelX","scaleLabelY","halfLineHeight","isLeft","firstLineWidth","lastLineWidth","scale_category","getLabels","xLabels","yLabels","minIndex","maxIndex","valueCategory","offsetAmt","valueWidth","widthOffset","valueHeight","heightOffset","horz","valueDimension","_defaults","scale_linearbase","handleTickRangeOptions","minSign","sign","maxSign","setMin","suggestedMin","setMax","suggestedMax","getTickLimit","stepSize","ceil","_computeTickLimit","handleDirectionalChanges","numericGeneratorOptions","precision","fixedStepSize","generationOptions","dataRange","factor","niceMin","niceMax","numSpaces","unit","maxNumSpaces","rmin","rmax","spacing","niceNum","_decimalPlaces","almostWhole","almostEquals","generateTicks","ticksAsNumbers","defaultConfig$1","scale_linear","IDMatches","hasStacks","valuesPerStack","positiveValues","negativeValues","relativePoints","valuesForType","minVal","maxVal","innerDimension","_defaults$1","valueOrDefault$a","defaultConfig$2","nonNegativeOrDefault","scale_logarithmic","minNotZero","exp","significand","tickVal","endExp","endSignificand","lastTick","generateTicks$1","tickValues","_getFirstTickValue","firstTickValue","_defaults$2","valueOrDefault$b","valueAtIndexOrDefault$1","resolve$7","defaultConfig$3","animate","showLabelBackdrop","backdropColor","backdropPaddingY","backdropPaddingX","getValueCount","getTickBackdropHeight","determineLimits","getTextAlignForAngle","adjustPointPositionForLabelHeight","textSize","numberOrZero","param","scale_radialLinear","drawingArea","NEGATIVE_INFINITY","plFont","furthestLimits","furthestAngles","_pointLabelSizes","valueCount","getPointPosition","getIndexAngle","toDegrees","hLimits","vLimits","setReductions","fitWithPointLabels","setCenterPoint","largestPossibleRadius","radiusReductionLeft","radiusReductionRight","radiusReductionTop","radiusReductionBottom","leftMovement","rightMovement","topMovement","bottomMovement","maxRight","maxLeft","maxTop","maxBottom","angleMultiplier","startAngleRadians","scalingFactor","distanceFromCenter","thisAngle","getBasePosition","angleLineOpts","pointLabelOpts","tickBackdropHeight","outerDistance","outerPosition","extra","pointLabelPosition","pointLabelFontColor","drawPointLabels","yCenterOffset","drawRadiusLine","_defaults$3","valueOrDefault$c","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","INTERVALS","millisecond","common","steps","minute","hour","day","week","month","quarter","year","UNITS","sorter","arrayUnique","hash","out","interpolate$1","table","skey","tkey","mid","i0","i1","lo","lookup","span","toTimestamp","input","adapter","_adapter","time","parser","determineMajorUnit","generate","capacity","timeOpts","minUnit","interval","determineUnitForAutoTicks","unitStepSize","weekday","isoWeekday","majorTicksEnabled","milliseconds","determineStepSize","scale_time","adapters","date","warn","displayFormats","timestamp","timestamps","dataLabels","_horizontal","_table","_timestamps","getLabelCapacity","_unit","determineUnitForFormatting","_majorUnit","distribution","buildLookupTable","_offsets","computeOffsets","majorUnit","ticksFromTimestamps","tooltipFormat","datetime","tickFormatFunction","minorFormat","majorFormat","majorTime","majorTickOpts","formatter","getPixelForOffset","isReverse","getLabelWidth","ticksOpts","tickLabelWidth","tickFontSize","exampleTime","exampleLabel","_defaults$4","displayFormat","category","radialLinear","FORMATS","_id","valueOf","_format","amount","as","filler","propagate","mappers","visible","boundary","decodeFill","computeBoundary","scaleBottom","scaleTop","scaleZero","resolveTarget","visited","createMapper","isDrawable","drawArea","curve0","curve1","len0","len1","plugin_filler","afterDatasetsUpdate","$filler","mapper","beforeDatasetDraw","loop","p0","p1","d0","d1","doFill","noop$1","valueOrDefault$d","getBoxWidth","labelOpts","usePointStyle","boxWidth","ci","onLeave","lineDash","Legend","legendHitBoxes","_hoveredItem","doughnutMode","beforeBuildLabels","buildLabels","afterBuildLabels","legendItems","labelFont","hitboxes","lineWidths","totalHeight","vPadding","columnWidths","totalWidth","currentColWidth","currentColHeight","itemHeight","itemWidth","lineDefault","legendWidth","cursor","textWidth","SQRT2","drawLegendBox","halfFontSize","xLeft","yMiddle","_getLegendItemAt","hitBox","lh","hoveredItem","createNewLegendAndAttach","legendOpts","plugin_legend","_element","beforeInit","afterEvent","noop$2","Title","lineCount","fontOpts","titleX","titleY","createNewTitleBlockAndAttach","titleOpts","titleBlock","parseMaxStyle","styleValue","parentProperty","valueInPixels","isConstrainedValue","getConstraintDimension","domNode","maxStyle","percentageProperty","defaultView","_getParentNode","constrainedNode","getComputedStyle","constrainedContainer","hasCNode","hasCContainer","infinity","collection","filterCallback","filtered","arrayToSearch","startIndex","currentItem","findPreviousWhere","epsilon","rounded","exponent","log","LOG10E","powerOf10","isPowerOf10","radians","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","aliasPixel","pixelWidth","currentDevicePixelRatio","halfWidth","firstPoint","middlePoint","afterPoint","d01","d12","s01","s12","fa","fb","EPSILON","pointBefore","pointCurrent","pointAfter","alphaK","betaK","tauK","squaredMagnitude","pointsWithTangents","deltaK","mK","pointsLen","slopeDeltaX","fraction","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","evt","originalEvent","srcElement","boundingRect","getBoundingClientRect","touches","clientX","clientY","getConstraintWidth","getConstraintHeight","_calculatePadding","parentDimension","parent","host","cw","clientHeight","ch","currentStyle","getPropertyValue","forceRatio","pixelRatio","pixelSize","arrayOfThings","gc","garbageCollect","longest","thing","nestedThing","gcLen","numberOfLines","CanvasGradient","colorValue","CanvasPattern","core_helpers","_adapters","Animation","animationService","Interaction","layouts","Scale","scaleService","Ticks","Tooltip","src","pluginService","PluginBase","canvasHelpers","layoutService","LinearScaleBase","klass","cfg","toLowerCase","factory","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","asyncTag","funcTag","genTag","proxyTag","funcToString","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","seen","arrValue","othValue","compared","othIndex","baseIsArguments","objectProto","propertyIsEnumerable","isArguments","stubFalse","freeExports","nodeType","freeModule","Buffer","isBuffer","reIsUint","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isFunction","isLength","srcValue","castPath","toKey","path","isKey","stringToPath","CardHeader","hookCallback","some","hooks","isUndefined","isDate","hasOwnProp","createUTC","locale","strict","createLocalOrUTC","utc","getParsingFlags","_pf","empty","unusedTokens","unusedInput","overflow","charsLeftOver","nullInput","invalidMonth","invalidFormat","userInvalidated","iso","parsedDateParts","meridiem","rfc2822","weekdayMismatch","_isValid","flags","parsedParts","isNowValid","getTime","invalidWeekday","_strict","bigHour","isFrozen","createInvalid","fun","momentProperties","copyConfig","_isAMomentObject","_f","_l","_tzm","_isUTC","_offset","_locale","updateInProgress","Moment","updateOffset","isMoment","absFloor","toInt","argumentForCoercion","coercedNumber","compareArrays","array1","array2","dontConvert","lengthDiff","diffs","msg","suppressDeprecationWarnings","firstTime","deprecationHandler","deprecations","deprecateSimple","mergeConfigs","parentConfig","childConfig","Locale","aliases","addUnitAlias","shorthand","lowerCase","normalizeUnits","units","normalizeObjectUnits","inputObject","normalizedProp","normalizedInput","priorities","addUnitPriority","priority","zeroFill","targetLength","forceSign","absNumber","zerosToFill","formattingTokens","localFormattingTokens","formatFunctions","formatTokenFunctions","addFormatToken","token","padded","ordinal","localeData","formatMoment","expandFormat","mom","output","makeFormatFunction","invalidDate","replaceLongDateFormatTokens","longDateFormat","lastIndex","match1","match2","match3","match4","match6","match1to2","match3to4","match5to6","match1to3","match1to4","match1to6","matchUnsigned","matchSigned","matchOffset","matchShortOffset","matchWord","regexes","addRegexToken","regex","strictRegex","isStrict","getParseRegexForToken","regexEscape","matched","p2","p3","p4","tokens","addParseToken","addWeekParseToken","_w","addTimeToArrayFromToken","_a","YEAR","MONTH","DATE","HOUR","MINUTE","SECOND","MILLISECOND","WEEK","WEEKDAY","daysInYear","isLeapYear","parseTwoDigitYear","getSetYear","makeGetSet","keepTime","set$1","daysInMonth","modMonth","o","monthsShort","months","monthsShortRegex","monthsRegex","monthsParse","MONTHS_IN_FORMAT","defaultLocaleMonths","defaultLocaleMonthsShort","setMonth","dayOfMonth","getSetMonth","defaultMonthsShortRegex","defaultMonthsRegex","computeMonthsParse","cmpLenRev","shortPieces","longPieces","mixedPieces","_monthsRegex","_monthsShortRegex","_monthsStrictRegex","_monthsShortStrictRegex","createUTCDate","UTC","getUTCFullYear","setUTCFullYear","firstWeekOffset","dow","doy","fwd","fwdlw","getUTCDay","dayOfYearFromWeeks","resYear","resDayOfYear","localWeekday","weekOffset","dayOfYear","weekOfYear","resWeek","weeksInYear","weekOffsetNext","shiftWeekdays","ws","weekdaysMin","weekdaysShort","weekdays","weekdaysMinRegex","weekdaysShortRegex","weekdaysRegex","weekdaysParse","defaultLocaleWeekdays","defaultLocaleWeekdaysShort","defaultLocaleWeekdaysMin","defaultWeekdaysRegex","defaultWeekdaysShortRegex","defaultWeekdaysMinRegex","computeWeekdaysParse","minp","shortp","longp","minPieces","_weekdaysRegex","_weekdaysShortRegex","_weekdaysMinRegex","_weekdaysStrictRegex","_weekdaysShortStrictRegex","_weekdaysMinStrictRegex","hFormat","hours","lowercase","minutes","matchMeridiem","_meridiemParse","seconds","kInput","_isPm","isPM","_meridiem","pos1","pos2","globalLocale","getSetHour","baseConfig","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","LTS","LT","L","LL","LLL","LLLL","dayOfMonthOrdinalParse","relativeTime","future","past","ss","mm","hh","dd","M","MM","yy","meridiemParse","locales","localeFamilies","normalizeLocale","loadLocale","oldLocale","_abbr","code","getSetGlobalLocale","getLocale","defineLocale","abbr","_config","parentLocale","names","chooseLocale","checkOverflow","_overflowDayOfYear","_overflowWeeks","_overflowWeekday","configFromArray","currentDate","expectedWeekday","yearToUse","nowValue","_useUTC","getUTCMonth","getUTCDate","getFullYear","getMonth","getDate","currentDateArray","weekYear","temp","weekdayOverflow","GG","W","E","createLocal","_week","curWeek","gg","_dayOfYear","dayOfYearFromWeekInfo","_nextDay","ms","setFullYear","getDay","setUTCMinutes","getUTCMinutes","extendedIsoRegex","basicIsoRegex","tzRegex","isoDates","isoTimes","aspNetJsonRegex","configFromISO","allowTime","dateFormat","timeFormat","tzFormat","configFromStringAndFormat","untruncateYear","yearStr","obsOffsets","UT","GMT","EDT","EST","CDT","CST","MDT","MST","PDT","PST","configFromRFC2822","parsedArray","monthStr","dayStr","hourStr","minuteStr","secondStr","extractFromRFC2822Strings","weekdayStr","parsedInput","weekdayProvided","weekdayActual","checkWeekday","obsOffset","militaryOffset","numOffset","hm","calculateOffset","ISO_8601","RFC_2822","skipped","stringLength","totalParsedInputLength","isPm","meridiemHour","meridiemFixWrap","prepareConfig","preparse","tempConfig","bestMoment","scoreToBeat","currentScore","score","configFromStringAndArray","createFromInputFallback","configFromString","configFromObject","configFromInput","isUTC","getOwnPropertyNames","isObjectEmpty","createFromConfig","prototypeMin","prototypeMax","pickBy","moments","ordering","Duration","years","quarters","weeks","isoWeek","days","unitHasDecimal","isDurationValid","_milliseconds","_days","_months","_bubble","isDuration","absRound","separator","utcOffset","offsetFromString","chunkOffset","matcher","parts","cloneWithOffset","setTime","local","getDateOffset","getTimezoneOffset","isUtc","aspNetRegex","isoRegex","createDuration","ret","diffRes","parseIso","isBefore","positiveMomentsDifference","momentsDifference","inp","isAfter","createAdder","direction","period","addSubtract","isAdding","invalid","subtract","monthDiff","anchor2","adjust","wholeMonthDiff","anchor","newLocaleData","defaultFormat","defaultFormatUtc","lang","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","MS_PER_400_YEARS","mod$1","dividend","divisor","localStartOfDate","utcStartOfDate","addWeekYearFormatToken","getter","getSetWeekYearHelper","weeksTarget","dayOfYearData","isoWeekYear","_dayOfMonthOrdinalParse","_ordinalParse","_dayOfMonthOrdinalParseLenient","getSetDayOfMonth","getSetMinute","getSetSecond","parseMs","getSetMillisecond","proto","preParsePostFormat","sod","calendarFormat","asFloat","that","zoneDelta","startOfDate","inputString","postformat","withoutSuffix","humanize","fromNow","toNow","invalidAt","localInput","isBetween","inclusivity","localFrom","localTo","isSame","inputMs","isSameOrAfter","isSameOrBefore","parsingFlags","prioritized","unitsObj","u","getPrioritizedUnits","toObject","toDate","toISOString","keepOffset","inspect","zone","isLocal","prefix","suffix","unix","creationData","isoWeeks","weekInfo","isoWeeksInYear","parseWeekday","parseIsoWeekday","keepLocalTime","keepMinutes","localAdjust","_changeInProgress","parseZone","tZone","hasAlignedHourOffset","isDST","isUtcOffset","zoneAbbr","zoneName","dates","isDSTShifted","_isDSTShifted","proto$1","get$1","field","setter","listMonthsImpl","listWeekdaysImpl","localeSorted","_calendar","_longDateFormat","formatUpper","_invalidDate","_ordinal","isFuture","_relativeTime","pastFuture","isFormat","_monthsShort","monthName","_monthsParseExact","ii","llc","toLocaleLowerCase","_monthsParse","_longMonthsParse","_shortMonthsParse","firstDayOfYear","firstDayOfWeek","_weekdays","_weekdaysMin","_weekdaysShort","weekdayName","_weekdaysParseExact","_weekdaysParse","_shortWeekdaysParse","_minWeekdaysParse","_fullWeekdaysParse","isLower","langData","mathAbs","addSubtract$1","absCeil","daysToMonths","monthsToDays","makeAs","alias","asMilliseconds","asSeconds","asMinutes","asHours","asDays","asWeeks","asMonths","asQuarters","asYears","makeGetter","thresholds","abs$1","toISOString$1","Y","D","totalSign","ymSign","daysSign","hmsSign","proto$2","monthsFromDays","withSuffix","posNegDuration","relativeTime$1","toIsoString","version","updateLocale","tmpLocale","relativeTimeRounding","roundingFunction","relativeTimeThreshold","threshold","limit","myMoment","HTML5_FMT","DATETIME_LOCAL","DATETIME_LOCAL_SECONDS","DATETIME_LOCAL_MS","TIME","TIME_SECONDS","TIME_MS","equalArrays","equalByTag","equalObjects","getTag","argsTag","arrayTag","objectTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","toSource","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","setCacheAdd","setCacheHas","predicate","Uint8Array","mapToArray","setToArray","boolTag","dateTag","errorTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","symbolProto","symbolValueOf","byteLength","byteOffset","buffer","message","getAllKeys","objProps","objLength","skipCtor","objValue","objCtor","othCtor","baseGetAllKeys","getSymbols","arrayPush","keysFunc","symbolsFunc","arrayFilter","stubArray","nativeGetSymbols","symbol","resIndex","baseTimes","isIndex","inherited","isArr","isArg","isBuff","isType","skipIndexes","iteratee","typedArrayTags","freeProcess","require","binding","isPrototype","nativeKeys","Ctor","overArg","transform","DataView","Promise","Set","WeakMap","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","ArrayBuffer","ctorString","baseAssignValue","keyBy","createAggregator","arrayAggregator","baseAggregator","baseIteratee","initializer","accumulator","baseEach","baseForOwn","createBaseEach","baseFor","createBaseFor","fromRight","iterable","eachFunc","baseMatches","baseMatchesProperty","identity","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","isStrictComparable","hasIn","baseGet","memoizeCapped","rePropName","reEscapeChar","charCodeAt","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","baseToString","arrayMap","symbolToString","baseHasIn","hasPath","hasFunc","baseProperty","basePropertyDeep"],"mappings":"wGAAe,SAAAA,EAAAC,EAAAC,EAAAC,GAYf,OAXAD,KAAAD,EACAG,OAAAC,eAAAJ,EAAAC,EAAA,CACAC,QACAG,YAAA,EACAC,cAAA,EACAC,UAAA,IAGAP,EAAAC,GAAAC,EAGAF,ECXe,SAAAQ,EAAAC,GACf,QAAAC,EAAA,EAAiBA,EAAAC,UAAAC,OAAsBF,IAAA,CACvC,IAAAG,EAAA,MAAAF,UAAAD,GAAAC,UAAAD,GAAA,GACAI,EAAAX,OAAAY,KAAAF,GAEA,oBAAAV,OAAAa,wBACAF,IAAAG,OAAAd,OAAAa,sBAAAH,GAAAK,OAAA,SAAAC,GACA,OAAAhB,OAAAiB,yBAAAP,EAAAM,GAAAd,eAIAS,EAAAO,QAAA,SAAApB,GACMF,EAAcU,EAAAR,EAAAY,EAAAZ,MAIpB,OAAAQ,EAjBAa,EAAAC,EAAAC,EAAA,sBAAAhB,kCCGe,SAAAiB,EAAAC,EAAAhB,GACf,OCJe,SAAAgB,GACf,GAAAC,MAAAC,QAAAF,GAAA,OAAAA,EDGSG,CAAcH,IEJR,SAAAA,EAAAhB,GACf,IAAAoB,EAAA,GACAC,GAAA,EACAC,GAAA,EACAC,OAAAC,EAEA,IACA,QAAAC,EAAAC,EAAAV,EAAAW,OAAAC,cAA6CP,GAAAI,EAAAC,EAAAG,QAAAC,QAC7CV,EAAAW,KAAAN,EAAAjC,QAEAQ,GAAAoB,EAAAlB,SAAAF,GAH4EqB,GAAA,IAKzE,MAAAW,GACHV,GAAA,EACAC,EAAAS,EACG,QACH,IACAX,GAAA,MAAAK,EAAA,QAAAA,EAAA,SACK,QACL,GAAAJ,EAAA,MAAAC,GAIA,OAAAH,EFnBgCa,CAAoBjB,EAAAhB,IGJrC,WACf,UAAAkC,UAAA,wDHGgEC,GAJhEvB,EAAAC,EAAAC,EAAA,sBAAAC,sBIAA,IAAAqB,EAAiBxB,EAAQ,KAIzByB,EAAA,iBAAAC,iBAAA7C,iBAAA6C,KAGAC,EAAAH,GAAAC,GAAAG,SAAA,cAAAA,GACAC,EAAAC,QAAAH,iBCeA,IAAArB,EAAAD,MAAAC,QACAuB,EAAAC,QAAAxB,kCCtBA,IAAAyB,EAAAC,EAA4ChC,EAAQ,MAEpDiC,EAAAD,EAAgDhC,EAAQ,MAExDkC,EAAAF,EAA8ChC,EAAQ,MAEtDmC,EAAAH,EAAyChC,EAAQ,MAEjD,SAAAgC,EAAAtD,GACA,OAAAA,KAAA0D,WAAA1D,EAAA,CACA2D,QAAA3D,GAIAmD,EAAAC,QAAA,CACAQ,WAAAH,EAAAE,QACAE,gBAAAL,EAAAG,QACAG,kBAAAP,EAAAI,QACAI,cAAAV,EAAAM,uCCpBA,IAAAK,EAAA1C,EAAA,GAAA2C,EAAA3C,EAAA,IAAA4C,EAAA5C,EAAA,KAAA6C,EAAA7C,EAAA,IAAA8C,EAAA9C,EAAA,GAAA+C,EAAA/C,EAAAgD,EAAAF,GAAAG,EAAAjD,EAAA,GAAAkD,EAAAlD,EAAAgD,EAAAC,GAAAE,EAAAnD,EAAA,IAAAoD,EAAApD,EAAAgD,EAAAG,GAAAE,EAAArD,EAAA,IAQAsD,EAAA,CACAC,OAAUL,EAAAM,EAASC,KACnBC,aAAgBR,EAAAM,EAASG,OACzBC,MAASV,EAAAM,EAASC,KAClBI,MAASX,EAAAM,EAASG,OAClBG,SAAYZ,EAAAM,EAASC,KACrBM,QAAWb,EAAAM,EAASC,KACpBO,IAAOX,EAAA,EACPY,SAAYf,EAAAM,EAASU,UAAA,CAAYhB,EAAAM,EAASW,OAASjB,EAAAM,EAASY,KAAOlB,EAAAM,EAASG,SAC5EU,QAAWnB,EAAAM,EAASY,KACpBE,KAAQpB,EAAAM,EAASG,OACjBY,SAAYrB,EAAAM,EAASgB,KACrBC,UAAavB,EAAAM,EAASG,OACtBe,UAAaxB,EAAAM,EAASW,OACtBQ,MAASzB,EAAAM,EAASC,MAOlBmB,EAEA,SAAAC,GAGA,SAAAD,EAAAE,GACA,IAAAC,EAIA,OAFAA,EAAAF,EAAAG,KAAAC,KAAAH,IAAAG,MACAZ,QAAAU,EAAAV,QAAAa,KAAuCrG,OAAA+D,EAAA,EAAA/D,CAAsBkG,IAC7DA,EAPElG,OAAAgE,EAAA,EAAAhE,CAAc+F,EAAAC,GAUhB,IAAAM,EAAAP,EAAAQ,UAyDA,OAvDAD,EAAAd,QAAA,SAAAgB,GACAJ,KAAAH,MAAAhB,SACAuB,EAAAC,iBAIAL,KAAAH,MAAAT,SACAY,KAAAH,MAAAT,QAAAgB,IAIAF,EAAAI,OAAA,WACA,IAAAC,EAAAP,KAAAH,MACAvB,EAAAiC,EAAAjC,OACAkC,EAAAD,EAAA,cACA5B,EAAA4B,EAAA5B,MACAa,EAAAe,EAAAf,UACAE,EAAAa,EAAAb,MACAD,EAAAc,EAAAd,UACAb,EAAA2B,EAAA3B,MACAE,EAAAyB,EAAAzB,QACAO,EAAAkB,EAAAlB,KACAoB,EAAAF,EAAAxB,IACAC,EAAAuB,EAAAvB,SACA0B,EAAqB9G,OAAA8D,EAAA,EAAA9D,CAA6B2G,EAAA,2GAElDb,GAAA,qBAAAgB,EAAApB,WACAoB,EAAApB,SAA4BxB,EAAAS,EAAKoC,cAAA,QACjCC,eAAA,GACO,SAGP,IAAAC,EAAA,OAAA/B,EAAA,mBAAAF,EACAkC,EAAkBlH,OAAAwE,EAAA,EAAAxE,CAAgBuE,IAAUqB,EAAA,CAC5CE,SACKA,GAAA,MAAAA,GAAAmB,IAAAxB,GAAA,OAAAA,IAAAV,GAAA,aACLL,SACAO,SAAAmB,KAAAH,MAAAhB,WACKY,GAELiB,EAAAK,MAAA,WAAAN,IACAA,EAAA,KAGA,IAAAO,EAAAtB,EAAA,aACA,OAAW5B,EAAAS,EAAKoC,cAAAF,EAAoB7G,OAAA6D,EAAA,EAAA7D,CAAQ,CAC5CqH,KAAA,WAAAR,GAAAC,EAAAtB,QAAA,cAAAzD,GACK+E,EAAA,CACLlB,UAAAsB,EACAI,IAAAlC,EACAI,QAAAY,KAAAZ,QACAX,aAAA+B,GAAAQ,MAIArB,EApEA,CAqEE7B,EAAAS,EAAK4C,WAEPxB,EAAAtB,YACAsB,EAAAyB,aA/EA,CACAxC,MAAA,YACAG,IAAA,UA8Ee9D,EAAA,qBCxGf,IAAAoG,EAAmBtG,EAAQ,KAC3BuG,EAAevG,EAAQ,KAgBvB6B,EAAAC,QALA,SAAAqC,EAAAxF,GACA,IAAAC,EAAA2H,EAAApC,EAAAxF,GACA,OAAA2H,EAAA1H,UAAAgC,qBCRAiB,EAAAC,QANA,SAAApD,GACA,OAAAA,KAAA0D,WAAA1D,EAAA,CACA2D,QAAA3D,qCCAAoD,EAAAM,YAAA,EACAN,EAAAO,aAAA,GAoBA,SAAA3D,GACA,GAAAA,KAAA0D,WACA,OAAA1D,EAEA,IAAA8H,EAAA,GAEA,SAAA9H,EACA,QAAAC,KAAAD,EACA,GAAAG,OAAAuG,UAAAqB,eAAAzB,KAAAtG,EAAAC,GAAA,CACA,IAAA+H,EAAA7H,OAAAC,gBAAAD,OAAAiB,yBAAAjB,OAAAiB,yBAAApB,EAAAC,GAAA,GAEA+H,EAAAC,KAAAD,EAAAE,IACA/H,OAAAC,eAAA0H,EAAA7H,EAAA+H,GAEAF,EAAA7H,GAAAD,EAAAC,GAMA6H,EAAAnE,QAAA3D,EAtCAmI,CAAwC7G,EAAQ,IAAhD,IAEA8G,EAAA9E,EAAuChC,EAAQ,MAE/C+G,EAAA/E,EAA0ChC,EAAQ,MAElDgH,EAAAhF,EAAoChC,EAAQ,IAE5CmC,EAAAH,EAAyChC,EAAQ,MAEhCA,EAAQ,KAEzB,SAAAgC,EAAAtD,GACA,OAAAA,KAAA0D,WAAA1D,EAAA,CACA2D,QAAA3D,GA6BA,SAAAuI,IAeA,OAdAA,EAAApI,OAAAqI,QAAA,SAAA/H,GACA,QAAAC,EAAA,EAAmBA,EAAAC,UAAAC,OAAsBF,IAAA,CACzC,IAAAG,EAAAF,UAAAD,GAEA,QAAAT,KAAAY,EACAV,OAAAuG,UAAAqB,eAAAzB,KAAAzF,EAAAZ,KACAQ,EAAAR,GAAAY,EAAAZ,IAKA,OAAAQ,IAGAgI,MAAAlC,KAAA5F,WASA,IAAA+H,EAAA,SAAA5C,EAAAuB,GACA,OAAAvB,GAAAuB,KAAAsB,MAAA,KAAAtH,QAAA,SAAAuH,GACA,SAAAR,EAAAzE,SAAAmC,EAAA8C,MAIAC,EAAA,SAAA/C,EAAAuB,GACA,OAAAvB,GAAAuB,KAAAsB,MAAA,KAAAtH,QAAA,SAAAuH,GACA,SAAAP,EAAA1E,SAAAmC,EAAA8C,MAiEA7E,EAEA,SAAAoC,GAjFA,IAAA2C,EAAAC,EAoFA,SAAAhF,IAGA,IAFA,IAAAsC,EAEA2C,EAAArI,UAAAC,OAAAqI,EAAA,IAAAtH,MAAAqH,GAAAE,EAAA,EAAuEA,EAAAF,EAAaE,IACpFD,EAAAC,GAAAvI,UAAAuI,GAkGA,OA/FA7C,EAAAF,EAAAG,KAAAmC,MAAAtC,EAAA,CAAAI,MAAAtF,OAAAgI,KAAA1C,MAEA4C,QAAA,SAAArD,EAAAsD,GACA,IACArD,EADAM,EAAAgD,cAAAD,EAAA,kBACArD,UAEAM,EAAAiD,cAAAxD,EAAA,QAEA4C,EAAA5C,EAAAC,GAEAM,EAAAD,MAAA+C,SACA9C,EAAAD,MAAA+C,QAAArD,EAAAsD,IAIA/C,EAAAkD,WAAA,SAAAzD,EAAAsD,GACA,IACAI,EADAnD,EAAAgD,cAAAD,EAAA,kBACAI,gBAEAnD,EAAAoD,kBAAA3D,EAAA0D,GAEAnD,EAAAD,MAAAmD,YACAlD,EAAAD,MAAAmD,WAAAzD,EAAAsD,IAIA/C,EAAAqD,UAAA,SAAA5D,EAAAsD,GACA,IAAAO,EAAAtD,EAAAgD,cAAA,UAAAO,cAEAC,EAAAxD,EAAAgD,cAAA,SAAAO,cAEAA,EAAAR,EAAAO,EAAA,IAAAE,IAEAxD,EAAAiD,cAAAxD,EAAAsD,EAAA,kBAEAV,EAAA5C,EAAA8D,GAEAvD,EAAAD,MAAAsD,WACArD,EAAAD,MAAAsD,UAAA5D,EAAAsD,IAIA/C,EAAAyD,OAAA,SAAAhE,GACA,IACAC,EADAM,EAAAgD,cAAA,QACAtD,UAEAM,EAAAiD,cAAAxD,EAAA,UAEAO,EAAAiD,cAAAxD,EAAA,SAEA4C,EAAA5C,EAAAC,GAEAM,EAAAD,MAAA0D,QACAzD,EAAAD,MAAA0D,OAAAhE,IAIAO,EAAA0D,UAAA,SAAAjE,GACA,IACA0D,EADAnD,EAAAgD,cAAA,QACAG,gBAEAnD,EAAAoD,kBAAA3D,EAAA0D,GAEAnD,EAAAD,MAAA2D,WACA1D,EAAAD,MAAA2D,UAAAjE,IAIAO,EAAA2D,SAAA,SAAAlE,GACA,IACA8D,EADAvD,EAAAgD,cAAA,QACAO,cAEAvD,EAAAiD,cAAAxD,EAAA,QAEA4C,EAAA5C,EAAA8D,GAEAvD,EAAAD,MAAA4D,UACA3D,EAAAD,MAAA4D,SAAAlE,IAIAO,EAAAgD,cAAA,SAAA7B,GACA,IAAAyC,EAAA5D,EAAAD,MAAA6D,WACAC,EAAA,kBAAAD,EAEAlE,EAAAmE,GADAA,GAAAD,IAAA,QACAzC,EAAAyC,EAAAzC,GAGA,OACAzB,YACAyD,gBAJAU,EAAAnE,EAAA,UAAAkE,EAAAzC,EAAA,UAKAoC,cAJAM,EAAAnE,EAAA,QAAAkE,EAAAzC,EAAA,UAQAnB,EA1LA0C,EAkFA5C,GAlFA2C,EAkFA/E,GAjFA2C,UAAAvG,OAAAgK,OAAApB,EAAArC,WACAoC,EAAApC,UAAA0D,YAAAtB,EACAA,EAAAuB,UAAAtB,EA0LA,IAAAtC,EAAA1C,EAAA2C,UAuCA,OArCAD,EAAA6C,cAAA,SAAAxD,EAAA0B,GACA,IAAA8C,EAAA/D,KAAA8C,cAAA7B,GACAzB,EAAAuE,EAAAvE,UACAyD,EAAAc,EAAAd,gBACAI,EAAAU,EAAAV,cAEA7D,GAAA8C,EAAA/C,EAAAC,GACAyD,GAAAX,EAAA/C,EAAA0D,GACAI,GAAAf,EAAA/C,EAAA8D,IAGAnD,EAAAgD,kBAAA,SAAA3D,EAAAC,GAGAA,IAEAD,KAAAyE,UAGA7B,EAAA5C,EAAAC,KAIAU,EAAAI,OAAA,WACA,IAAAT,EAAAmC,EAAA,GAA2BhC,KAAAH,OAG3B,cADAA,EAAA6D,WACA3B,EAAA3E,QAAAuD,cAAAzD,EAAAE,QAAA4E,EAAA,GAAwEnC,EAAA,CACxE+C,QAAA5C,KAAA4C,QACAO,UAAAnD,KAAAmD,UACAH,WAAAhD,KAAAgD,WACAO,OAAAvD,KAAAuD,OACAC,UAAAxD,KAAAwD,UACAC,SAAAzD,KAAAyD,aAIAjG,EAnJA,CAoJCuE,EAAA3E,QAAA+D,WAED3D,EAAA4D,aAAA,CACAsC,WAAA,IAEAlG,EAAAa,UA2GE,GACF,IAAA4F,EAAAzG,EACAX,EAAAO,QAAA6G,EACArH,EAAAC,UAAA,sCCxZA,IAAAE,EAA6BhC,EAAQ,KAErC8B,EAAAM,YAAA,EACAN,EAAAO,QAIA,SAAA8G,EAAA1E,GACA0E,EAAAC,UAAAD,EAAAC,UAAAC,IAAA5E,IAA0D,EAAA6E,EAAAjH,SAAA8G,EAAA1E,KAAA,kBAAA0E,EAAA1E,UAAA0E,EAAA1E,UAAA0E,EAAA1E,UAAA,IAAAA,EAAyJ0E,EAAAI,aAAA,SAAAJ,EAAA1E,WAAA0E,EAAA1E,UAAA+E,SAAA,QAAA/E,KAHnN,IAAA6E,EAAAtH,EAAuChC,EAAQ,MAM/C6B,EAAAC,UAAA,sCCXAA,EAAAM,YAAA,EACAN,EAAAO,QAEA,SAAA8G,EAAA1E,GACA,OAAA0E,EAAAC,YAAA3E,GAAA0E,EAAAC,UAAAK,SAAAhF,IAAqF,UAAA0E,EAAA1E,UAAA+E,SAAAL,EAAA1E,WAAA,KAAAiF,QAAA,IAAAjF,EAAA,MAGrF5C,EAAAC,UAAA,sCCPA,SAAA6H,EAAAC,EAAAC,GACA,OAAAD,EAAAE,QAAA,IAAAC,OAAA,UAAAF,EAAA,uBAAAC,QAAA,YAAAA,QAAA,iBAGAjI,EAAAC,QAAA,SAAAqH,EAAA1E,GACA0E,EAAAC,UAAAD,EAAAC,UAAAY,OAAAvF,GAA6D,kBAAA0E,EAAA1E,UAAA0E,EAAA1E,UAAAkF,EAAAR,EAAA1E,aAAmH0E,EAAAI,aAAA,QAAAI,EAAAR,EAAA1E,WAAA0E,EAAA1E,UAAA+E,SAAA,GAAA/E,mCCLhL3C,EAAAM,YAAA,EACAN,EAAAO,aAAA,EAEAL,EAAwChC,EAAQ,IAAhD,IAEAgH,EAAAhF,EAAoChC,EAAQ,IAE5CiK,EAAgBjK,EAAQ,IAExBkC,EAAAF,EAA8ChC,EAAQ,MAEtD,SAAAgC,EAAAtD,GACA,OAAAA,KAAA0D,WAAA1D,EAAA,CACA2D,QAAA3D,GAqCA,IAAA8D,EAEA,SAAAqC,GApBA,IAAA2C,EAAAC,EAuBA,SAAAjF,IAGA,IAFA,IAAAuC,EAEA2C,EAAArI,UAAAC,OAAA4K,EAAA,IAAA7J,MAAAqH,GAAAE,EAAA,EAAwEA,EAAAF,EAAaE,IACrFsC,EAAAtC,GAAAvI,UAAAuI,GAqDA,OAlDA7C,EAAAF,EAAAG,KAAAmC,MAAAtC,EAAA,CAAAI,MAAAtF,OAAAuK,KAAAjF,MAEAkF,YAAA,WACA,QAAAC,EAAA/K,UAAAC,OAAAqI,EAAA,IAAAtH,MAAA+J,GAAAC,EAAA,EAA4EA,EAAAD,EAAeC,IAC3F1C,EAAA0C,GAAAhL,UAAAgL,GAGA,OAAAtF,EAAAuF,gBAAA,YAAA3C,IAGA5C,EAAAwF,eAAA,WACA,QAAAC,EAAAnL,UAAAC,OAAAqI,EAAA,IAAAtH,MAAAmK,GAAAC,EAAA,EAA4EA,EAAAD,EAAeC,IAC3F9C,EAAA8C,GAAApL,UAAAoL,GAGA,OAAA1F,EAAAuF,gBAAA,eAAA3C,IAGA5C,EAAA2F,cAAA,WACA,QAAAC,EAAAtL,UAAAC,OAAAqI,EAAA,IAAAtH,MAAAsK,GAAAC,EAAA,EAA4EA,EAAAD,EAAeC,IAC3FjD,EAAAiD,GAAAvL,UAAAuL,GAGA,OAAA7F,EAAAuF,gBAAA,cAAA3C,IAGA5C,EAAA8F,WAAA,WACA,QAAAC,EAAAzL,UAAAC,OAAAqI,EAAA,IAAAtH,MAAAyK,GAAAC,EAAA,EAA4EA,EAAAD,EAAeC,IAC3FpD,EAAAoD,GAAA1L,UAAA0L,GAGA,OAAAhG,EAAAuF,gBAAA,WAAA3C,IAGA5C,EAAAiG,cAAA,WACA,QAAAC,EAAA5L,UAAAC,OAAAqI,EAAA,IAAAtH,MAAA4K,GAAAC,EAAA,EAA4EA,EAAAD,EAAeC,IAC3FvD,EAAAuD,GAAA7L,UAAA6L,GAGA,OAAAnG,EAAAuF,gBAAA,cAAA3C,IAGA5C,EAAAoG,aAAA,WACA,QAAAC,EAAA/L,UAAAC,OAAAqI,EAAA,IAAAtH,MAAA+K,GAAAC,EAAA,EAA4EA,EAAAD,EAAeC,IAC3F1D,EAAA0D,GAAAhM,UAAAgM,GAGA,OAAAtG,EAAAuF,gBAAA,aAAA3C,IAGA5C,EAhFA0C,EAqBA5C,GArBA2C,EAqBAhF,GApBA4C,UAAAvG,OAAAgK,OAAApB,EAAArC,WACAoC,EAAApC,UAAA0D,YAAAtB,EACAA,EAAAuB,UAAAtB,EAgFA,IAAAtC,EAAA3C,EAAA4C,UA0CA,OAxCAD,EAAAmF,gBAAA,SAAAgB,EAAAC,EAAAC,GACA,IAAAC,EAEAlH,EAAAU,KAAAH,MAAAP,SAEAmH,EAAA1E,EAAA3E,QAAAsJ,SAAAC,QAAArH,GAAAgH,GAEAG,EAAA5G,MAAAwG,KAAAG,EAAAC,EAAA5G,OAAAwG,GAAAnE,MAAAsE,EAAAD,GACAvG,KAAAH,MAAAwG,IAAArG,KAAAH,MAAAwG,IAAA,EAAArB,EAAA4B,aAAA5G,QAGAE,EAAAI,OAAA,WACA,IAAAC,EAAAP,KAAAH,MACAP,EAAAiB,EAAAjB,SACAuH,EAAAtG,EAAAuG,GACAjH,EAnHA,SAAAvF,EAAAyM,GACA,SAAAzM,EAAA,SACA,IAEAZ,EAAAS,EAFAD,EAAA,GACA8M,EAAApN,OAAAY,KAAAF,GAGA,IAAAH,EAAA,EAAaA,EAAA6M,EAAA3M,OAAuBF,IACpCT,EAAAsN,EAAA7M,GACA4M,EAAAtC,QAAA/K,IAAA,IACAQ,EAAAR,GAAAY,EAAAZ,IAGA,OAAAQ,EAuGA+M,CAAA1G,EAAA,mBAEA2G,EAAAnF,EAAA3E,QAAAsJ,SAAAC,QAAArH,GACA6H,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAQA,cANArH,EAAA+C,eACA/C,EAAAmD,kBACAnD,EAAAsD,iBACAtD,EAAA0D,cACA1D,EAAA2D,iBACA3D,EAAA4D,SACA1B,EAAA3E,QAAAuD,cAAA1D,EAAAG,QAAAyC,EAAAgH,EAAA9E,EAAA3E,QAAAiK,aAAAF,EAAA,CACAzN,IAAA,QACAkJ,QAAA5C,KAAAkF,YACAlC,WAAAhD,KAAAsF,eACAnC,UAAAnD,KAAAyF,gBACK1D,EAAA3E,QAAAiK,aAAAD,EAAA,CACL1N,IAAA,SACAkJ,QAAA5C,KAAA4F,WACA5C,WAAAhD,KAAA+F,cACA5C,UAAAnD,KAAAkG,iBAIA3I,EAzGA,CA0GCwE,EAAA3E,QAAA+D,WAED5D,EAAAc,UAMC,GACD,IAAA4F,EAAA1G,EACAV,EAAAO,QAAA6G,EACArH,EAAAC,UAAA,yBC3KA,IAAAf,EAAaf,EAAQ,KACrBuM,EAAgBvM,EAAQ,KACxBwM,EAAqBxM,EAAQ,KAI7ByM,EAAA,gBACAC,EAAA,qBAGAC,EAAA5L,IAAA6L,iBAAAhM,EAiBAiB,EAAAC,QARA,SAAAlD,GACA,aAAAA,OACAgC,IAAAhC,EAAA8N,EAAAD,EAGAE,QAAA9N,OAAAD,GAAA2N,EAAA3N,GAAA4N,EAAA5N,mBCIAiD,EAAAC,QAJA,SAAAlD,GACA,aAAAA,GAAA,iBAAAA,oCCzBA,IAAA8D,EAAA1C,EAAA,GAAA2C,EAAA3C,EAAA,IAAA6M,EAAA7M,EAAA,GAAA8M,EAAA9M,EAAAgD,EAAA6J,GAAAE,EAAA/M,EAAA,GAAAgN,EAAAhN,EAAAgD,EAAA+J,GAAAE,EAAAjN,EAAA,IAAAkN,EAAAlN,EAAAgD,EAAAiK,GAAAE,EAAAnN,EAAA,IAMAsD,EAAA,CACAU,IAAOmJ,EAAA,EACPC,QAAWJ,EAAAxJ,EAASC,KACpBI,MAASmJ,EAAAxJ,EAASG,OAClB0J,KAAQL,EAAAxJ,EAASC,KACjBM,QAAWiJ,EAAAxJ,EAASC,KACpBgB,UAAauI,EAAAxJ,EAASG,OACtBe,UAAasI,EAAAxJ,EAASW,OACtBF,SAAY+I,EAAAxJ,EAASU,UAAA,CAAY8I,EAAAxJ,EAASW,OAAS6I,EAAAxJ,EAASG,OAASqJ,EAAAxJ,EAASY,QAM9EkJ,EAAA,SAAAxI,GACA,IAAAL,EAAAK,EAAAL,UACAC,EAAAI,EAAAJ,UACAb,EAAAiB,EAAAjB,MACAwJ,EAAAvI,EAAAuI,KACAD,EAAAtI,EAAAsI,QACArJ,EAAAe,EAAAf,QACA2B,EAAAZ,EAAAd,IACAC,EAAAa,EAAAb,SACA0B,EAAmB9G,OAAA8D,EAAA,EAAA9D,CAA6BiG,EAAA,+EAEhDiB,EAAgBlH,OAAAsO,EAAA,EAAAtO,CAAgBqO,IAAUzI,EAAA,SAAA2I,GAAA,eAAAC,GAAA,cAAAxJ,IAAAE,EAAA,mBAAAF,GAAAa,GAC1C,OAASoI,EAAAtJ,EAAKoC,cAAAF,EAAoB7G,OAAA6D,EAAA,EAAA7D,CAAQ,GAAG8G,EAAA,CAC7ClB,UAAAsB,EACAI,IAAAlC,MAIAqJ,EAAAhK,YACAgK,EAAAjH,aAvBA,CACArC,IAAA,OAuBe9D,EAAA,kCCxCf,IAAAwC,EAAA1C,EAAA,GAAA2C,EAAA3C,EAAA,IAAA6M,EAAA7M,EAAA,GAAA8M,EAAA9M,EAAAgD,EAAA6J,GAAAE,EAAA/M,EAAA,GAAAgN,EAAAhN,EAAAgD,EAAA+J,GAAAE,EAAAjN,EAAA,IAAAkN,EAAAlN,EAAAgD,EAAAiK,GAAAE,EAAAnN,EAAA,IAMAsD,EAAA,CACAU,IAAOmJ,EAAA,EACP1I,UAAauI,EAAAxJ,EAASG,OACtBe,UAAasI,EAAAxJ,EAASW,OACtBF,SAAY+I,EAAAxJ,EAASU,UAAA,CAAY8I,EAAAxJ,EAASW,OAAS6I,EAAAxJ,EAASG,OAASqJ,EAAAxJ,EAASY,QAM9EmJ,EAAA,SAAAzI,GACA,IAAAL,EAAAK,EAAAL,UACAC,EAAAI,EAAAJ,UACAT,EAAAa,EAAAb,SACAyB,EAAAZ,EAAAd,IACA2B,EAAmB9G,OAAA8D,EAAA,EAAA9D,CAA6BiG,EAAA,4CAEhDiB,EAAgBlH,OAAAsO,EAAA,EAAAtO,CAAgBqO,IAAUzI,EAAA,aAAAC,GAC1C,OAASoI,EAAAtJ,EAAKoC,cAAAF,EAAoB7G,OAAA6D,EAAA,EAAA7D,CAAQ,GAAG8G,EAAA,CAC7ClB,UAAAsB,EACAI,IAAAlC,MAIAsJ,EAAAjK,YACAiK,EAAAlH,aAnBA,CACArC,IAAA,OAmBe9D,EAAA,yBChCf,IAAAsN,EAAqBxN,EAAQ,KAC7ByN,EAAsBzN,EAAQ,KAC9B0N,EAAmB1N,EAAQ,KAC3B2N,EAAmB3N,EAAQ,KAC3B4N,EAAmB5N,EAAQ,KAU3B,SAAA6N,EAAAC,GACA,IAAAC,GAAA,EACAzO,EAAA,MAAAwO,EAAA,EAAAA,EAAAxO,OAGA,IAFA2F,KAAA+I,UAEAD,EAAAzO,GAAA,CACA,IAAA2O,EAAAH,EAAAC,GACA9I,KAAA2B,IAAAqH,EAAA,GAAAA,EAAA,KAKAJ,EAAAzI,UAAA4I,MAAAR,EACAK,EAAAzI,UAAA,OAAAqI,EACAI,EAAAzI,UAAAuB,IAAA+G,EACAG,EAAAzI,UAAA8I,IAAAP,EACAE,EAAAzI,UAAAwB,IAAAgH,EACA/L,EAAAC,QAAA+L,mBC/BA,IAAAM,EAASnO,EAAQ,KAuBjB6B,EAAAC,QAZA,SAAAsM,EAAAzP,GAGA,IAFA,IAAAW,EAAA8O,EAAA9O,OAEAA,KACA,GAAA6O,EAAAC,EAAA9O,GAAA,GAAAX,GACA,OAAAW,EAIA,2BCpBA,IAIAyB,EAJWf,EAAQ,KAInBe,OACAc,EAAAC,QAAAf,mBCLA,IAIAsN,EAJgBrO,EAAQ,IAIxBsO,CAAAzP,OAAA,UACAgD,EAAAC,QAAAuM,mBCLA,IAAAE,EAAgBvO,EAAQ,KAgBxB6B,EAAAC,QALA,SAAA0M,EAAA7P,GACA,IAAA8P,EAAAD,EAAAE,SACA,OAAAH,EAAA5P,GAAA8P,EAAA,iBAAA9P,EAAA,iBAAA8P,EAAAD,sBCbA,IAAAG,EAAe3O,EAAQ,KAIvB4O,EAAA,IAkBA/M,EAAAC,QATA,SAAAlD,GACA,oBAAAA,GAAA+P,EAAA/P,GACA,OAAAA,EAGA,IAAAiQ,EAAAjQ,EAAA,GACA,WAAAiQ,GAAA,EAAAjQ,IAAAgQ,EAAA,KAAAC,4CCnBA,SAAAC,GAAA9O,EAAAC,EAAAC,EAAA,sBAAA6O,IAAA/O,EAAAC,EAAAC,EAAA,sBAAA8O,IAAA,IAAAC,EAAAjP,EAAA,GAAAkP,EAAAlP,EAAAgD,EAAAiM,GAAAE,EAAAnP,EAAA,GAAAoP,EAAApP,EAAAgD,EAAAmM,GAAAE,EAAArP,EAAA,KAAAsP,EAAAtP,EAAAgD,EAAAqM,GAAAE,EAAAvP,EAAA,KAAAwP,EAAAxP,EAAAgD,EAAAuM,GAAAE,EAAAzP,EAAA,KAAA0P,EAAA1P,EAAAgD,EAAAyM,GAAAxI,EAAApI,OAAAqI,QAAA,SAAA/H,GACA,QAAAC,EAAA,EAAiBA,EAAAC,UAAAC,OAAsBF,IAAA,CACvC,IAAAG,EAAAF,UAAAD,GAEA,QAAAT,KAAAY,EACAV,OAAAuG,UAAAqB,eAAAzB,KAAAzF,EAAAZ,KACAQ,EAAAR,GAAAY,EAAAZ,IAKA,OAAAQ,GAGA,SAAAwQ,EAAAjR,EAAAe,GACA,IAAAN,EAAA,GAEA,QAAAC,KAAAV,EACAe,EAAAiK,QAAAtK,IAAA,GACAP,OAAAuG,UAAAqB,eAAAzB,KAAAtG,EAAAU,KACAD,EAAAC,GAAAV,EAAAU,IAGA,OAAAD,EAGA,SAAAyQ,EAAAC,EAAAC,GACA,KAAAD,aAAAC,GACA,UAAAxO,UAAA,qCAIA,SAAAyO,EAAArO,EAAAsD,GACA,IAAAtD,EACA,UAAAsO,eAAA,6DAGA,OAAAhL,GAAA,kBAAAA,GAAA,oBAAAA,EAAAtD,EAAAsD,EAGA,SAAAiL,EAAAzI,EAAAC,GACA,uBAAAA,GAAA,OAAAA,EACA,UAAAnG,UAAA,kEAAAmG,GAGAD,EAAApC,UAAAvG,OAAAgK,OAAApB,KAAArC,UAAA,CACA0D,YAAA,CACAlK,MAAA4I,EACAzI,YAAA,EACAE,UAAA,EACAD,cAAA,KAGAyI,IAAA5I,OAAAqR,eAAArR,OAAAqR,eAAA1I,EAAAC,GAAAD,EAAAuB,UAAAtB,GAQA,IAAA0I,EAAA,qBAAArB,GAAiDjQ,OAAA,CAAAsR,SAAA,aAAAC,WAAA,OAAe,aAEhEC,EAAA,SAAAxL,GAGA,SAAAwL,IACA,IAAAC,EAAAvL,EAEA6K,EAAA3K,KAAAoL,GAEA,QAAA3I,EAAArI,UAAAC,OAAAqI,EAAAtH,MAAAqH,GAAAE,EAAA,EAAmEA,EAAAF,EAAaE,IAChFD,EAAAC,GAAAvI,UAAAuI,GAGA,OAAA0I,EAAAvL,EAAAgL,EAAA9K,KAAAJ,EAAAG,KAAAmC,MAAAtC,EAAA,CAAAI,MAAAtF,OAAAgI,KAAA5C,EAAAwL,cAAA,SAAAC,GACA,IAAAX,EAAA9K,EAAA0L,cACAjL,EAAAT,EAAAD,MACA4L,EAAAlL,EAAAkL,kBACAC,EAAAnL,EAAAmL,kBACAC,EAAApL,EAAAoL,mBACAC,EAAArL,EAAAqL,gBACAH,KAAAb,EAAAa,kBAAAF,MACAG,KAAAd,EAAAc,kBAAAH,MACAI,KAAAf,EAAAe,mBAAAJ,MACAK,KAAAhB,EAAAe,mBAAAJ,OACKzL,EAAAoB,IAAA,SAAAgD,GACLpE,EAAAoE,WACK4G,EAAAhL,EAAAuL,GA+NL,OAvPAL,EAAAI,EAAAxL,GA2BAwL,EAAAjL,UAAA0L,mBAAA,WACA7L,KAAAwL,mBAAA7P,GAGAyP,EAAAjL,UAAA2L,kBAAA,WACA9L,KAAA+L,eAGAX,EAAAjL,UAAA6L,mBAAA,WACA,GAAAhM,KAAAH,MAAAoM,OAGA,OAFAjM,KAAAkM,oBACAlM,KAAA+L,cAIA/L,KAAAmM,eAGAf,EAAAjL,UAAAiM,sBAAA,SAAAC,GACA,IAAAC,EAAAtM,KAAAH,MAEAoB,GADAqL,EAAAL,OACAK,EAAArL,MACAsL,EAAAD,EAAAC,QACAC,EAAAF,EAAAE,QACAC,EAAAH,EAAAG,OACAC,EAAAJ,EAAAI,OACAC,EAAAL,EAAAK,MAEA,QAAAN,EAAAJ,OACA,SAGA,GAAAS,IAAAL,EAAAK,QAAAC,IAAAN,EAAAM,MACA,SAGA,GAAA1L,IAAAoL,EAAApL,KACA,SAGA,IAASsJ,IAAOkC,EAAAJ,EAAAI,QAChB,SAGA,IAASlC,IAAOgC,EAAAF,EAAAE,SAChB,SAGA,IAAAK,EAAA5M,KAAA6M,kBAAAR,GAEA,OAAS9B,IAAOvK,KAAA8M,eAAAF,KAIJrC,IAAOiC,EAAAH,EAAAG,UAGnBpB,EAAAjL,UAAA4M,qBAAA,WACA/M,KAAAkM,gBAGAd,EAAAjL,UAAA0M,kBAAA,SAAAhN,GACA,IAAA2J,EAAA3J,EAAA2J,KAEA,yBAAAA,EAEAA,EADAxJ,KAAAkE,SAGAsF,GAQA4B,EAAAjL,UAAA6M,iBAAA,WACA,GAAAhN,KAAAH,MAAA2J,KAAA,CAIA,IAAAA,EAAAxJ,KAAA6M,kBAAA7M,KAAAH,OAQA,OAPAG,KAAA8M,eAAA9K,EAAA,GAAqCwH,EAAA,CACrCyD,SAAAzD,EAAAyD,UAAAzD,EAAAyD,SAAA1D,IAAA,SAAA5H,GACA,OAAAK,EAAA,GAA0BL,OAG1B3B,KAAAkN,sBAEA1D,IAGA4B,EAAAjL,UAAAgN,cAAA,SAAAF,GACA,IAAAG,EAAA,eAAAlC,GAAA,SAAAA,EACAmC,EAAArN,KAAAH,MAAAyN,qBAAAlC,EAAAmC,cACAC,EAAAP,EAAA5S,OAAA,EAEA,GAAA+S,GAAAI,IAAAH,EAAA,CACA,IAAAI,GAAA,EACAR,EAAAnS,QAAA,SAAA4S,GACAA,EAAAC,QACAF,GAAA,KAIAA,GACAG,QAAAC,MAAA,sNAKAzC,EAAAjL,UAAA2N,mBAAA,WACA,OAAA9N,KAAAwL,eAAAxL,KAAAwL,cAAAuC,OAAAvE,MAAAxJ,KAAAwL,cAAAuC,OAAAvE,KAAAyD,UAAA,IAGA7B,EAAAjL,UAAA+M,oBAAA,WACA,IAAAc,EAAAhO,KAEAA,KAAAiN,SAAAjN,KAAAiN,UAAA,GACAjN,KAAA8N,qBACAhT,QAAA,SAAAE,GACAgT,EAAAf,SAAAe,EAAAnO,MAAAyN,mBAAAtS,SAIAoQ,EAAAjL,UAAAgM,YAAA,WACA,IAAA8B,EAAAjO,KAEAuM,EAAAvM,KAAAH,MAAA0M,QACA/C,EAAAxJ,KAAAgN,iBAAAhN,KAAAH,OACA,GAAAG,KAAAwL,cAAA,CAEAe,IACAvM,KAAAwL,cAAAe,QAAmClC,EAAA9L,EAAK2P,QAAAC,YAAAnO,KAAAwL,cAAAe,YAKxC,IAAA6B,EAAApO,KAAA8N,qBACAO,EAAA7E,EAAAyD,UAAA,GACAjN,KAAAmN,cAAAiB,GACA,IAAAE,EAAiC7D,IAAK2D,EAAApO,KAAAH,MAAAyN,oBAGtCtN,KAAAwL,cAAAuC,OAAAvE,KAAAyD,SAAAoB,EAAA9E,IAAA,SAAAvN,GACA,IAAAuS,EAAAD,EAAAL,EAAApO,MAAAyN,mBAAAtR,IAEA,GAAAuS,KAAAtN,OAAAjF,EAAAiF,KAAA,CAEAsN,EAAA/E,KAAAgF,OAAAxS,EAAAwN,KAAAnP,QACA2B,EAAAwN,KAAA1O,QAAA,SAAA2T,EAAAC,GACAH,EAAA/E,KAAAkF,GAAA1S,EAAAwN,KAAAkF,KAGA1S,EAAAwN,KAAA,IACAmF,EAAAjE,EAAA1O,EAAA,UAKA,OAAAgG,EAAA,GAA0BuM,EAAAI,GAE1B,OAAA3S,IAIAwN,EAAAyD,SAAA,IACA2B,EAAAlE,EAAAlB,EAAA,cAEAxJ,KAAAwL,cAAAuC,OAAAvE,KAAAxH,EAAA,GAAgDhC,KAAAwL,cAAAuC,OAAAvE,KAAAoF,GAChD5O,KAAAwL,cAAAqD,WAGAzD,EAAAjL,UAAA4L,YAAA,WACA,IAAA+C,EAAA9O,KAAAH,MACA0M,EAAAuC,EAAAvC,QACAE,EAAAqC,EAAArC,OACAxL,EAAA6N,EAAA7N,KACAuL,EAAAsC,EAAAtC,QACAjN,EAAAS,KAAAkE,QACAsF,EAAAxJ,KAAAgN,mBAEA,qBAAAP,GAA0ClC,IAAOa,EAAAhK,aAAAqL,YACjDF,EAAAE,UAGAzM,KAAAwL,cAAA,IAA6BnB,EAAA9L,EAAKgB,EAAA,CAClC0B,OACAuI,OACA+C,UACAC,aAIApB,EAAAjL,UAAA+L,aAAA,WAMAlM,KAAAkN,sBACA,IAAAD,EAAArT,OAAAmV,OAAA/O,KAAAiN,UACAjN,KAAAwL,cAAAuC,OAAAvE,KAAAyD,WACAjN,KAAAwL,cAAAwD,WAGA5D,EAAAjL,UAAAG,OAAA,WACA,IAAA2O,EAAAjP,KAAAH,MACA6M,EAAAuC,EAAAvC,OACAC,EAAAsC,EAAAtC,MACAuC,EAAAD,EAAAC,GACA,OAAWjF,EAAA1L,EAAKoC,cAAA,UAChBO,IAAAlB,KAAAkB,IACAwL,SACAC,QACAuC,KACA9P,QAAAY,KAAAsL,iBAIAF,EAxPA,CAyPEnB,EAAA1L,EAAK4C,WAEPiK,EAAAmC,cAAA,SAAAvS,GACA,OAAAA,EAAA2S,OAGAvC,EAAA/M,UAAA,CACAmL,KAAQW,EAAA5L,EAASU,UAAA,CAAYkL,EAAA5L,EAASW,OAASiL,EAAA5L,EAASY,OAAAgQ,WACxD1D,kBAAqBtB,EAAA5L,EAASY,KAC9BuM,kBAAqBvB,EAAA5L,EAASY,KAC9BwM,mBAAsBxB,EAAA5L,EAASY,KAC/BuN,OAAUvC,EAAA5L,EAAS6Q,OACnB3C,OAAUtC,EAAA5L,EAASW,OACnB0M,gBAAmBzB,EAAA5L,EAASY,KAC5BoN,QAAWpC,EAAA5L,EAASW,OACpBsN,QAAWrC,EAAA5L,EAAS8Q,QAASlF,EAAA5L,EAASW,QACtC+M,OAAU9B,EAAA5L,EAASC,KACnByC,KAAA,SAAApB,EAAAyP,EAAAC,GACA,IAASlF,EAAA9L,EAAKiR,YAAA3P,EAAAyP,IACd,WAAAG,MAAA,uBAAA5P,EAAAyP,GAAA,kBAAAC,EAAA,OAGA5C,MAASxC,EAAA5L,EAAS6Q,OAClB9B,mBAAsBnD,EAAA5L,EAASY,MAE/BiM,EAAAhK,aAAA,CACAqL,OAAA,CACAiD,SAAA,EACAC,SAAA,UAEA1O,KAAA,WACAyL,OAAA,IACAC,MAAA,IACAV,QAAA,EACAM,QAAA,GACAe,mBAAAlC,EAAAmC,eAEe,IACRzD,EAAA,SAAA8F,GAGP,SAAA9F,IAGA,OAFAa,EAAA3K,KAAA8J,GAEAgB,EAAA9K,KAAA4P,EAAA1N,MAAAlC,KAAA5F,YAcA,OAnBA4Q,EAAAlB,EAAA8F,GAQA9F,EAAA3J,UAAAG,OAAA,WACA,IAAAuP,EAAA7P,KAEA,OAAWiK,EAAA1L,EAAKoC,cAAAyK,EAAApJ,EAAA,GAA0ChC,KAAAH,MAAA,CAC1DqB,IAAA,SAAA4O,GACA,OAAAD,EAAArE,cAAAsE,KAAAtE,eAEAvK,KAAA,eAIA6I,EApBO,CAqBLG,EAAA1L,EAAK4C,WAuBA4I,GAtBA,SAAAgG,GAGP,SAAAC,IAGA,OAFArF,EAAA3K,KAAAgQ,GAEAlF,EAAA9K,KAAA+P,EAAA7N,MAAAlC,KAAA5F,YALA4Q,EAAAgF,EAAAD,GAQAC,EAAA7P,UAAAG,OAAA,WACA,IAAA2P,EAAAjQ,KAEA,OAAWiK,EAAA1L,EAAKoC,cAAAyK,EAAApJ,EAAA,GAA0ChC,KAAAH,MAAA,CAC1DqB,IAAA,SAAAgP,GACA,OAAAD,EAAAzE,cAAA0E,KAAA1E,eAEAvK,KAAA,UAhBO,CAqBLgJ,EAAA1L,EAAK4C,WACA,SAAAgP,GAGP,SAAApG,IAGA,OAFAY,EAAA3K,KAAA+J,GAEAe,EAAA9K,KAAAmQ,EAAAjO,MAAAlC,KAAA5F,YAcA,OAnBA4Q,EAAAjB,EAAAoG,GAQApG,EAAA5J,UAAAG,OAAA,WACA,IAAA8P,EAAApQ,KAEA,OAAWiK,EAAA1L,EAAKoC,cAAAyK,EAAApJ,EAAA,GAA0ChC,KAAAH,MAAA,CAC1DqB,IAAA,SAAAmP,GACA,OAAAD,EAAA5E,cAAA6E,KAAA7E,eAEAvK,KAAA,WAIA8I,EApBO,CAqBLE,EAAA1L,EAAK4C,aACA,SAAAmP,GAGP,SAAAC,IAGA,OAFA5F,EAAA3K,KAAAuQ,GAEAzF,EAAA9K,KAAAsQ,EAAApO,MAAAlC,KAAA5F,YALA4Q,EAAAuF,EAAAD,GAQAC,EAAApQ,UAAAG,OAAA,WACA,IAAAkQ,EAAAxQ,KAEA,OAAWiK,EAAA1L,EAAKoC,cAAAyK,EAAApJ,EAAA,GAA0ChC,KAAAH,MAAA,CAC1DqB,IAAA,SAAAuP,GACA,OAAAD,EAAAhF,cAAAiF,KAAAjF,eAEAvK,KAAA,WAhBO,CAqBLgJ,EAAA1L,EAAK4C,WACA,SAAAuP,GAGP,SAAAC,IAGA,OAFAhG,EAAA3K,KAAA2Q,GAEA7F,EAAA9K,KAAA0Q,EAAAxO,MAAAlC,KAAA5F,YALA4Q,EAAA2F,EAAAD,GAQAC,EAAAxQ,UAAAG,OAAA,WACA,IAAAsQ,EAAA5Q,KAEA,OAAWiK,EAAA1L,EAAKoC,cAAAyK,EAAApJ,EAAA,GAA0ChC,KAAAH,MAAA,CAC1DqB,IAAA,SAAA2P,GACA,OAAAD,EAAApF,cAAAqF,KAAArF,eAEAvK,KAAA,oBAhBO,CAqBLgJ,EAAA1L,EAAK4C,WACA,SAAA2P,GAGP,SAAAC,IAGA,OAFApG,EAAA3K,KAAA+Q,GAEAjG,EAAA9K,KAAA8Q,EAAA5O,MAAAlC,KAAA5F,YALA4Q,EAAA+F,EAAAD,GAQAC,EAAA5Q,UAAAG,OAAA,WACA,IAAA0Q,EAAAhR,KAEA,OAAWiK,EAAA1L,EAAKoC,cAAAyK,EAAApJ,EAAA,GAA0ChC,KAAAH,MAAA,CAC1DqB,IAAA,SAAA+P,GACA,OAAAD,EAAAxF,cAAAyF,KAAAzF,eAEAvK,KAAA,YAhBO,CAqBLgJ,EAAA1L,EAAK4C,WACA,SAAA+P,GAGP,SAAAC,IAGA,OAFAxG,EAAA3K,KAAAmR,GAEArG,EAAA9K,KAAAkR,EAAAhP,MAAAlC,KAAA5F,YALA4Q,EAAAmG,EAAAD,GAQAC,EAAAhR,UAAAG,OAAA,WACA,IAAA8Q,EAAApR,KAEA,OAAWiK,EAAA1L,EAAKoC,cAAAyK,EAAApJ,EAAA,GAA0ChC,KAAAH,MAAA,CAC1DqB,IAAA,SAAAmQ,GACA,OAAAD,EAAA5F,cAAA6F,KAAA7F,eAEAvK,KAAA,gBAhBO,CAqBLgJ,EAAA1L,EAAK4C,WACA,SAAAmQ,GAGP,SAAAC,IAGA,OAFA5G,EAAA3K,KAAAuR,GAEAzG,EAAA9K,KAAAsR,EAAApP,MAAAlC,KAAA5F,YALA4Q,EAAAuG,EAAAD,GAQAC,EAAApR,UAAAG,OAAA,WACA,IAAAkR,EAAAxR,KAEA,OAAWiK,EAAA1L,EAAKoC,cAAAyK,EAAApJ,EAAA,GAA0ChC,KAAAH,MAAA,CAC1DqB,IAAA,SAAAuQ,GACA,OAAAD,EAAAhG,cAAAiG,KAAAjG,eAEAvK,KAAA,aAhBO,CAqBLgJ,EAAA1L,EAAK4C,WACA,SAAAuQ,GAGP,SAAAC,IAGA,OAFAhH,EAAA3K,KAAA2R,GAEA7G,EAAA9K,KAAA0R,EAAAxP,MAAAlC,KAAA5F,YALA4Q,EAAA2G,EAAAD,GAQAC,EAAAxR,UAAAG,OAAA,WACA,IAAAsR,EAAA5R,KAEA,OAAWiK,EAAA1L,EAAKoC,cAAAyK,EAAApJ,EAAA,GAA0ChC,KAAAH,MAAA,CAC1DqB,IAAA,SAAA2Q,GACA,OAAAD,EAAApG,cAAAqG,KAAArG,eAEAvK,KAAA,cAhBO,CAqBLgJ,EAAA1L,EAAK4C,WACekJ,EAAA9L,EAAKuT,4CCpiB3BlV,EAAAC,QAAA,SAAAD,GAsBA,OArBAA,EAAAmV,kBACAnV,EAAAoV,UAAA,aAEApV,EAAAqV,MAAA,GAEArV,EAAA0C,WAAA1C,EAAA0C,SAAA,IACA1F,OAAAC,eAAA+C,EAAA,UACA9C,YAAA,EACA4H,IAAA,WACA,OAAA9E,EAAAsV,KAGAtY,OAAAC,eAAA+C,EAAA,MACA9C,YAAA,EACA4H,IAAA,WACA,OAAA9E,EAAAzC,KAGAyC,EAAAmV,gBAAA,GAGAnV,oBCtBA,IAAAuV,EAAsBpX,EAAQ,KAC9BqX,EAAmBrX,EAAQ,KA6B3B6B,EAAAC,QAZA,SAAAwV,EAAA1Y,EAAA2Y,EAAAC,EAAAC,EAAAC,GACA,OAAA9Y,IAAA2Y,IAIA,MAAA3Y,GAAA,MAAA2Y,IAAAF,EAAAzY,KAAAyY,EAAAE,GACA3Y,OAAA2Y,MAGAH,EAAAxY,EAAA2Y,EAAAC,EAAAC,EAAAH,EAAAI,sBC3BA,IAKAC,EALgB3X,EAAQ,IAKxBsO,CAJWtO,EAAQ,KAInB,OACA6B,EAAAC,QAAA6V,iBCwBA9V,EAAAC,QALA,SAAAlD,GACA,IAAAsH,SAAAtH,EACA,aAAAA,IAAA,UAAAsH,GAAA,YAAAA,qBC3BA,IAAA0R,EAAoB5X,EAAQ,KAC5B6X,EAAqB7X,EAAQ,KAC7B8X,EAAkB9X,EAAQ,KAC1B+X,EAAkB/X,EAAQ,KAC1BgY,EAAkBhY,EAAQ,KAU1B,SAAAiY,EAAAnK,GACA,IAAAC,GAAA,EACAzO,EAAA,MAAAwO,EAAA,EAAAA,EAAAxO,OAGA,IAFA2F,KAAA+I,UAEAD,EAAAzO,GAAA,CACA,IAAA2O,EAAAH,EAAAC,GACA9I,KAAA2B,IAAAqH,EAAA,GAAAA,EAAA,KAKAgK,EAAA7S,UAAA4I,MAAA4J,EACAK,EAAA7S,UAAA,OAAAyS,EACAI,EAAA7S,UAAAuB,IAAAmR,EACAG,EAAA7S,UAAA8I,IAAA6J,EACAE,EAAA7S,UAAAwB,IAAAoR,EACAnW,EAAAC,QAAAmW,mBC/BA,IAAAC,EAAoBlY,EAAQ,KAC5BmY,EAAenY,EAAQ,KACvBoY,EAAkBpY,EAAQ,KAmC1B6B,EAAAC,QAJA,SAAAqC,GACA,OAAAiU,EAAAjU,GAAA+T,EAAA/T,GAAAgU,EAAAhU,mBCjCA,IAAAkU,EAAA,iBAgCAxW,EAAAC,QAJA,SAAAlD,GACA,uBAAAA,MAAA,GAAAA,EAAA,MAAAA,GAAAyZ,oBC9BA,IAAA/X,EAAcN,EAAQ,KACtB2O,EAAe3O,EAAQ,KAIvBsY,EAAA,mDACAC,EAAA,QAwBA1W,EAAAC,QAdA,SAAAlD,EAAAuF,GACA,GAAA7D,EAAA1B,GACA,SAGA,IAAAsH,SAAAtH,EAEA,kBAAAsH,GAAA,UAAAA,GAAA,WAAAA,GAAA,MAAAtH,IAAA+P,EAAA/P,KAIA2Z,EAAAC,KAAA5Z,KAAA0Z,EAAAE,KAAA5Z,IAAA,MAAAuF,GAAAvF,KAAAC,OAAAsF,qBC3BA,IAAAsU,EAAiBzY,EAAQ,KACzBqX,EAAmBrX,EAAQ,KAI3B0Y,EAAA,kBAuBA7W,EAAAC,QAJA,SAAAlD,GACA,uBAAAA,GAAAyY,EAAAzY,IAAA6Z,EAAA7Z,IAAA8Z,uCClB8D7W,EAAAC,QAW7D,SAAA6W,GACD,aAEAA,OAAAlS,eAAA,WAAAkS,EAAA,QAAAA,EAGA,IAAAC,EAAA,CACAC,UACAC,UACAC,UACAC,WACAC,cACAC,UACAC,UACAC,QA0IA,SAAAzR,GACA,OAAA0R,EAAAF,EAAAxR,KA1IA2R,UACAC,QA0KA,SAAAC,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,OACArC,EAAAqC,EAAA,OAIA,WAAArC,EAGA,QAOA,CAAAsC,EADA,GAFAC,IADAvC,GAAA,IACA,EAAAA,EAAA,EAAAA,IAEAA,EAAAuC,GACA,KAFAvC,EAAAuC,GAAA,EAEA,MA1LAC,QA6LA,SAAAhS,GACA,OAAAoR,EAAAO,EAAA3R,KA7LAiS,SAgMA,SAAAjS,GACA,OAAAqR,EAAAM,EAAA3R,KAhMAkS,YAmMA,SAAAlS,GACA,OAAAsR,EAAAK,EAAA3R,KAnMAmS,UACAC,QAqOA,SAAAC,GACA,IAGAC,EACA9C,EAJAsC,EAAAO,EAAA,GACAN,EAAAM,EAAA,OACAE,EAAAF,EAAA,OAQA,OAJAC,EAAAP,EAAAQ,EAIA,CAAAT,EAAA,KAFAQ,GADAA,IAFA9C,GAAA,EAAAuC,GAAAQ,IAEA,EAAA/C,EAAA,EAAAA,IACA,GAEA,KADAA,GAAA,KA9OAgD,QAkPA,SAAAxS,GACA,OAAAoR,EAAAe,EAAAnS,KAlPAyS,SAqPA,SAAAzS,GACA,OAAAqR,EAAAc,EAAAnS,KArPA0S,YAwPA,SAAA1S,GACA,OAAAsR,EAAAa,EAAAnS,KAxPA2S,UACAC,QA+TA,SAAA5S,GACA,OAAAkR,EAAAyB,EAAA3S,KA/TA6S,QAkUA,SAAA7S,GACA,OAAAmR,EAAAwB,EAAA3S,KAlUA8S,SAqUA,SAAA9S,GACA,OAAAqR,EAAAsB,EAAA3S,KArUA+S,YAwUA,SAAA/S,GACA,OAAAsR,EAAAqB,EAAA3S,KAxUAgT,WACAC,SAwVA,SAAAjT,GACA,OAAAkR,EAAA8B,EAAAhT,KAxVAkT,SA2VA,SAAAlT,GACA,OAAAmR,EAAA6B,EAAAhT,KA3VAmT,SA8VA,SAAAnT,GACA,OAAAoR,EAAA4B,EAAAhT,KA9VAoT,aAiWA,SAAApT,GACA,OAAAsR,EAAA0B,EAAAhT,KAjWAqT,cACAC,YAmdA,SAAAtT,GACA,OAAAkR,EAAAmC,EAAArT,KAndAuT,YAsdA,SAAAvT,GACA,OAAAmR,EAAAkC,EAAArT,KAtdAwT,YAydA,SAAAxT,GACA,OAAAoR,EAAAiC,EAAArT,KAzdAyT,aA4dA,SAAAzT,GACA,OAAAqR,EAAAgC,EAAArT,KA5dA0T,YA+dA,SAAA1T,GACA,OAAAwR,EAAA6B,EAAArT,KA/dA2T,YAkeA,SAAA3T,GACA,OAAAuR,EAAA8B,EAAArT,KAleA4T,UACAC,UACAC,QAkYA,SAAA9T,GACA,OAAA0R,EAAAmC,EAAA7T,KAlYA+T,UACAC,UACAtC,UACAuC,UACAC,QA0bA,SAAAlU,GACA,OAAA+T,EAAAE,EAAAjU,KA1bAmU,QA6bA,SAAAnU,GACA,OAAAgU,EAAAC,EAAAjU,MA3bA,SAAAkR,EAAAkD,GACA,IAMAtC,EAEAtC,EARA6E,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OACAI,EAAAC,KAAAD,IAAAH,EAAAC,EAAAC,GACAG,EAAAD,KAAAC,IAAAL,EAAAC,EAAAC,GACAI,EAAAD,EAAAF,EASA,OALAE,GAAAF,EAAA1C,EAAA,EAA0BuC,GAAAK,EAAA5C,GAAAwC,EAAAC,GAAAI,EAAuCL,GAAAI,EAAA5C,EAAA,GAAAyC,EAAAF,GAAAM,EAA2CJ,GAAAG,IAAA5C,EAAA,GAAAuC,EAAAC,GAAAK,IAC5G7C,EAAA2C,KAAAD,IAAA,GAAA1C,EAAA,MACA,IAAAA,GAAA,KACAtC,GAAAgF,EAAAE,GAAA,EAEA,CAAA5C,EAAA,KADA4C,GAAAF,EAAA,EAA0BhF,GAAA,GAAAmF,GAAAD,EAAAF,GAA2CG,GAAA,EAAAD,EAAAF,IACrE,IAAAhF,GAGA,SAAA2B,EAAAiD,GACA,IAMAtC,EACAC,EAPAsC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAI,EAAAC,KAAAD,IAAAH,EAAAC,EAAAC,GACAG,EAAAD,KAAAC,IAAAL,EAAAC,EAAAC,GACAI,EAAAD,EAAAF,EASA,OALAzC,EAAA,GAAA2C,EAAA,EAAwBC,EAAAD,EAAA,OACxBA,GAAAF,EAAA1C,EAAA,EAA0BuC,GAAAK,EAAA5C,GAAAwC,EAAAC,GAAAI,EAAuCL,GAAAI,EAAA5C,EAAA,GAAAyC,EAAAF,GAAAM,EAA2CJ,GAAAG,IAAA5C,EAAA,GAAAuC,EAAAC,GAAAK,IAC5G7C,EAAA2C,KAAAD,IAAA,GAAA1C,EAAA,MACA,IAAAA,GAAA,KAEA,CAAAA,EAAAC,EADA2C,EAAA,YAIA,SAAAtD,EAAAgD,GACA,IAAAC,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAtC,EAAAZ,EAAAkD,GAAA,GACAQ,EAAA,MAAAH,KAAAD,IAAAH,EAAAI,KAAAD,IAAAF,EAAAC,IACAA,EAAA,QAAAE,KAAAC,IAAAL,EAAAI,KAAAC,IAAAJ,EAAAC,IACA,OAAAzC,EAAA,IAAA8C,EAAA,IAAAL,GAGA,SAAAlD,EAAA+C,GACA,IAMAS,EANAR,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OASA,OAJAS,EAAAJ,KAAAD,IAAA,EAAAH,EAAA,EAAAC,EAAA,EAAAC,GAIA,OAHA,EAAAF,EAAAQ,IAAA,EAAAA,IAAA,GAGA,MAFA,EAAAP,EAAAO,IAAA,EAAAA,IAAA,GAEA,MADA,EAAAN,EAAAM,IAAA,EAAAA,IAAA,GACA,IAAAA,GAGA,SAAAvD,EAAA8C,GACA,OAAAU,EAAAC,KAAAC,UAAAZ,IAGA,SAAA7C,EAAA6C,GACA,IAAAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAH,EAAA,OAEAC,IAAA,OAAAI,KAAAQ,KAAAZ,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAAG,KAAAQ,KAAAX,EAAA,iBAAAA,EAAA,MACAC,IAAA,OAAAE,KAAAQ,KAAAV,EAAA,iBAAAA,EAAA,MACA,IAAAW,EAAA,MAAAb,EAAA,MAAAC,EAAA,MAAAC,EACAY,EAAA,MAAAd,EAAA,MAAAC,EAAA,MAAAC,EACAa,EAAA,MAAAf,EAAA,MAAAC,EAAA,MAAAC,EACA,WAAAW,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAA5D,EAAA4C,GACA,IAAAiB,EAAA9D,EAAA6C,GACAc,EAAAG,EAAA,GACAF,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAaA,OARAF,GAAA,IACAC,GAAA,QACAF,GAHAA,GAAA,QAGA,QAAAT,KAAAQ,IAAAC,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAV,KAAAQ,IAAAE,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAX,KAAAQ,IAAAG,EAAA,WAAAA,EAAA,OAIA,CAHA,IAAAD,EAAA,GACA,KAAAD,EAAAC,GACA,KAAAA,EAAAC,IAQA,SAAAzD,EAAAE,GACA,IAGAyD,EACAC,EACAC,EACApB,EACAqB,EAPA3D,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACArC,EAAAqC,EAAA,OAOA,MAAAE,EAEA,OADA0D,EAAA,IAAAjG,EACAiG,KAIAH,EAAA,EAAA9F,GADA+F,EAAA/F,EAAA,GAAAA,GAAA,EAAAuC,GAAkCvC,EAAAuC,EAAAvC,EAAAuC,GAElCqC,EAAA,QAEA,QAAA3c,EAAA,EAAmBA,EAAA,EAAOA,KAC1B+d,EAAA1D,EAAA,MAAAra,EAAA,IACA,GAAA+d,IACAA,EAAA,GAAAA,IACAC,EAAA,EAAAD,EAAA,EAAAF,EAAA,GAAAC,EAAAD,GAAAE,EAAoD,EAAAA,EAAA,EAAAD,EAA8B,EAAAC,EAAA,EAAAF,GAAAC,EAAAD,IAAA,IAAAE,GAAA,EAA6DF,EAC/IlB,EAAA3c,GAAA,IAAAge,EAGA,OAAArB,EAmCA,SAAAjC,EAAAE,GACA,IAAAP,EAAAO,EAAA,MACAN,EAAAM,EAAA,OACAE,EAAAF,EAAA,OACAqD,EAAAjB,KAAAkB,MAAA7D,GAAA,EACA8D,EAAA9D,EAAA2C,KAAAkB,MAAA7D,GACA+D,EAAA,IAAAtD,GAAA,EAAAR,GACA+D,EAAA,IAAAvD,GAAA,EAAAR,EAAA6D,GACAG,EAAA,IAAAxD,GAAA,EAAAR,GAAA,EAAA6D,IACArD,EAAA,IAAAA,EAEA,OAAAmD,GACA,OACA,OAAAnD,EAAAwD,EAAAF,GAEA,OACA,OAAAC,EAAAvD,EAAAsD,GAEA,OACA,OAAAA,EAAAtD,EAAAwD,GAEA,OACA,OAAAF,EAAAC,EAAAvD,GAEA,OACA,OAAAwD,EAAAF,EAAAtD,GAEA,OACA,OAAAA,EAAAsD,EAAAC,IA+BA,SAAAnD,EAAAqD,GACA,IAIAve,EACA8a,EACAqD,EACAva,EAPAyW,EAAAkE,EAAA,OACAC,EAAAD,EAAA,OACAE,EAAAF,EAAA,OACAG,EAAAF,EAAAC,EAqBA,OAfAC,EAAA,IACAF,GAAAE,EACAD,GAAAC,GAGA1e,EAAAgd,KAAAkB,MAAA,EAAA7D,GAEA8D,EAAA,EAAA9D,EAAAra,EAEA,MAAAA,KACAme,EAAA,EAAAA,GAGAva,EAAA4a,EAAAL,IAPArD,EAAA,EAAA2D,GAOAD,GAEAxe,GACA,QACA,OACA,OACA4c,EAAA9B,EACA+B,EAAAjZ,EACAkZ,EAAA0B,EACA,MAEA,OACA5B,EAAAhZ,EACAiZ,EAAA/B,EACAgC,EAAA0B,EACA,MAEA,OACA5B,EAAA4B,EACA3B,EAAA/B,EACAgC,EAAAlZ,EACA,MAEA,OACAgZ,EAAA4B,EACA3B,EAAAjZ,EACAkZ,EAAAhC,EACA,MAEA,OACA8B,EAAAhZ,EACAiZ,EAAA2B,EACA1B,EAAAhC,EACA,MAEA,OACA8B,EAAA9B,EACA+B,EAAA2B,EACA1B,EAAAlZ,EAIA,WAAAgZ,EAAA,IAAAC,EAAA,IAAAC,GAmBA,SAAAvB,EAAAoD,GACA,IAIA/B,EACAC,EACAC,EANA5U,EAAAyW,EAAA,OACAC,EAAAD,EAAA,OACAjB,EAAAiB,EAAA,OACAvB,EAAAuB,EAAA,OAOA,OAHA/B,EAAA,EAAAI,KAAAD,IAAA,EAAA7U,GAAA,EAAAkV,MACAP,EAAA,EAAAG,KAAAD,IAAA,EAAA6B,GAAA,EAAAxB,MACAN,EAAA,EAAAE,KAAAD,IAAA,EAAAW,GAAA,EAAAN,MACA,KAAAR,EAAA,IAAAC,EAAA,IAAAC,GAmBA,SAAAX,EAAAyB,GACA,IAGAhB,EACAC,EACAC,EALAW,EAAAG,EAAA,OACAF,EAAAE,EAAA,OACAD,EAAAC,EAAA,OAcA,OATAf,GAAA,MAAAY,EAAA,OAAAC,EAAA,MAAAC,EACAb,EAAA,MAAAW,GAAA,KAAAC,EAAA,MAAAC,EAEAf,GAJAA,EAAA,OAAAa,GAAA,OAAAC,GAAA,MAAAC,GAIA,eAAAX,KAAAQ,IAAAZ,EAAA,YAAAA,GAAA,MACAC,IAAA,eAAAG,KAAAQ,IAAAX,EAAA,YAAAA,GAAA,MACAC,IAAA,eAAAE,KAAAQ,IAAAV,EAAA,YAAAA,GAAA,MACAF,EAAAI,KAAAD,IAAAC,KAAAC,IAAA,EAAAL,GAAA,GACAC,EAAAG,KAAAD,IAAAC,KAAAC,IAAA,EAAAJ,GAAA,GACAC,EAAAE,KAAAD,IAAAC,KAAAC,IAAA,EAAAH,GAAA,GACA,KAAAF,EAAA,IAAAC,EAAA,IAAAC,GAGA,SAAAV,EAAAwB,GACA,IAAAH,EAAAG,EAAA,GACAF,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAaA,OARAF,GAAA,IACAC,GAAA,QACAF,GAHAA,GAAA,QAGA,QAAAT,KAAAQ,IAAAC,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAV,KAAAQ,IAAAE,EAAA,WAAAA,EAAA,OACAC,IAAA,QAAAX,KAAAQ,IAAAG,EAAA,WAAAA,EAAA,OAIA,CAHA,IAAAD,EAAA,GACA,KAAAD,EAAAC,GACA,KAAAA,EAAAC,IAQA,SAAArB,EAAAuC,GACA,IAGApB,EACAC,EACAC,EACAmB,EANA/G,EAAA8G,EAAA,GACAza,EAAAya,EAAA,GACA/B,EAAA+B,EAAA,GAgBA,OAVA9G,GAAA,EAEA+G,GADApB,EAAA,IAAA3F,EAAA,OACA,kBAEA2F,EAAA,IAAAV,KAAAQ,KAAAzF,EAAA,WACA+G,EAAA9B,KAAAQ,IAAAE,EAAA,UAGAD,IAAA,gBAAAA,EAAA,QAAArZ,EAAA,IAAA0a,EAAA,qBAAA9B,KAAAQ,IAAApZ,EAAA,IAAA0a,EAAA,GACAnB,IAAA,iBAAAA,EAAA,SAAAmB,EAAAhC,EAAA,0BAAAE,KAAAQ,IAAAsB,EAAAhC,EAAA,OACA,CAAAW,EAAAC,EAAAC,GAGA,SAAA1D,EAAA4E,GACA,IAGAE,EACA1E,EACAnS,EALA6P,EAAA8G,EAAA,GACAza,EAAAya,EAAA,GACA/B,EAAA+B,EAAA,GAYA,OARAE,EAAA/B,KAAAgC,MAAAlC,EAAA1Y,IACAiW,EAAA,IAAA0E,EAAA,EAAA/B,KAAAiC,IAEA,IACA5E,GAAA,KAGAnS,EAAA8U,KAAAkC,KAAA9a,IAAA0Y,KACA,CAAA/E,EAAA7P,EAAAmS,GAGA,SAAAkC,EAAAhU,GACA,OAAA4T,EAAAG,EAAA/T,IAGA,SAAAiU,EAAA2C,GACA,IAGA/a,EACA0Y,EACAiC,EALAhH,EAAAoH,EAAA,GACAjX,EAAAiX,EAAA,GACA9E,EAAA8E,EAAA,GAOA,OAHAJ,EAAA1E,EAAA,MAAA2C,KAAAiC,GACA7a,EAAA8D,EAAA8U,KAAAoC,IAAAL,GACAjC,EAAA5U,EAAA8U,KAAAqC,IAAAN,GACA,CAAAhH,EAAA3T,EAAA0Y,GAWA,SAAAlB,EAAA0D,GACA,OAAAC,EAAAD,GA2BA,IAAAC,EAAA,CACAC,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAEAtL,EAAA,GAEA,QAAA9d,KAAAggB,EACAlC,EAAAC,KAAAC,UAAAgC,EAAAhgB,OAGA,IAAAqpB,EAAA,WACA,WAAAC,GAGA,QAAA7jB,KAAAwU,EAAA,CAEAoP,EAAA5jB,EAAA,gBAAAA,GAEA,gBAAA8jB,GAEA,MADA,iBAAAA,MAAA7nB,MAAA+E,UAAA+iB,MAAAnjB,KAAA3F,YACAuZ,EAAAxU,GAAA8jB,IAJA,CAMK9jB,GAEL,IAAAgkB,EAAA,cAAAC,KAAAjkB,GACAkkB,EAAAF,EAAA,GACAG,EAAAH,EAAA,IAEAJ,EAAAM,GAAAN,EAAAM,IAAA,IAEAC,GAAAP,EAAA5jB,GAAA,SAAAA,GACA,gBAAA8jB,GACA,iBAAAA,MAAA7nB,MAAA+E,UAAA+iB,MAAAnjB,KAAA3F,YACA,IAAA+d,EAAAxE,EAAAxU,GAAA8jB,GACA,oBAAA9K,QAAAxc,IAAAwc,EAAA,OAAAA,EAEA,QAAAhe,EAAA,EAAuBA,EAAAge,EAAA9d,OAAgBF,IACvCge,EAAAhe,GAAAgd,KAAAoM,MAAApL,EAAAhe,IAGA,OAAAge,GAVA,CAYKhZ,GAKL,IAAA6jB,EAAA,WACAhjB,KAAAwjB,MAAA,IAMAR,EAAA7iB,UAAAsjB,WAAA,SAAAC,EAAAhhB,GACA,IAAAqM,EAAArM,EAAA,GAEA,YAAA/G,IAAAoT,EAEA/O,KAAA2jB,UAAAD,IAIA,iBAAA3U,IACAA,EAAA3T,MAAA+E,UAAA+iB,MAAAnjB,KAAA2C,IAGA1C,KAAA4jB,UAAAF,EAAA3U,KAKAiU,EAAA7iB,UAAAyjB,UAAA,SAAAF,EAAA3U,GAIA,OAHA/O,KAAA0jB,QACA1jB,KAAAwjB,MAAA,GACAxjB,KAAAwjB,MAAAE,GAAA3U,EACA/O,MAOAgjB,EAAA7iB,UAAAwjB,UAAA,SAAAD,GACA,IAAAG,EAAA7jB,KAAAwjB,MAAAE,GAEA,IAAAG,EAAA,CACA,IAAAC,EAAA9jB,KAAA0jB,MACAL,EAAArjB,KAAAwjB,MAAAM,GACAD,EAAAd,EAAAe,GAAAJ,GAAAL,GACArjB,KAAAwjB,MAAAE,GAAAG,EAGA,OAAAA,GAGA,qCAAA/oB,QAAA,SAAA4oB,GACAV,EAAA7iB,UAAAujB,GAAA,SAAAG,GACA,OAAA7jB,KAAAyjB,WAAAC,EAAAtpB,cAGA,IAAA2pB,EAAAhB,EACAiB,EAAA,CACArK,UAAA,cACAC,aAAA,cACAC,KAAA,YACAC,WAAA,cACAC,MAAA,cACAC,MAAA,cACAC,OAAA,cACAC,MAAA,QACAC,eAAA,cACAC,KAAA,UACAC,WAAA,aACAC,MAAA,YACAC,UAAA,cACAC,UAAA,aACAC,WAAA,YACAC,UAAA,aACAC,MAAA,aACAC,eAAA,cACAC,SAAA,cACAC,QAAA,YACAC,KAAA,YACAC,SAAA,UACAC,SAAA,YACAC,cAAA,aACAC,SAAA,cACAC,UAAA,UACAC,SAAA,cACAC,UAAA,cACAC,YAAA,YACAC,eAAA,YACAC,WAAA,YACAC,WAAA,aACAC,QAAA,UACAC,WAAA,cACAC,aAAA,cACAC,cAAA,YACAC,cAAA,WACAC,cAAA,WACAC,cAAA,YACAC,WAAA,YACAC,SAAA,aACAC,YAAA,YACAC,QAAA,cACAC,QAAA,cACAC,WAAA,aACAC,UAAA,YACAC,YAAA,cACAC,YAAA,YACAC,QAAA,YACAC,UAAA,cACAC,WAAA,cACAC,KAAA,YACAC,UAAA,aACAC,KAAA,cACAC,MAAA,UACAC,YAAA,aACAC,KAAA,cACAC,SAAA,cACAC,QAAA,cACAC,UAAA,YACAC,OAAA,WACAC,MAAA,cACAC,MAAA,cACAC,SAAA,cACAC,cAAA,cACAC,UAAA,YACAC,aAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,qBAAA,cACAC,UAAA,cACAC,WAAA,cACAC,UAAA,cACAC,UAAA,cACAC,YAAA,cACAC,cAAA,aACAC,aAAA,cACAC,eAAA,cACAC,eAAA,cACAC,eAAA,cACAC,YAAA,cACAC,KAAA,UACAC,UAAA,YACAC,MAAA,cACAC,QAAA,YACAC,OAAA,UACAC,iBAAA,cACAC,WAAA,UACAC,aAAA,aACAC,aAAA,cACAC,eAAA,aACAC,gBAAA,cACAC,kBAAA,YACAC,gBAAA,aACAC,gBAAA,aACAC,aAAA,YACAC,UAAA,cACAC,UAAA,cACAC,SAAA,cACAC,YAAA,cACAC,KAAA,UACAC,QAAA,cACAC,MAAA,YACAC,UAAA,aACAC,OAAA,YACAC,UAAA,WACAC,OAAA,cACAC,cAAA,cACAC,UAAA,cACAC,cAAA,cACAC,cAAA,cACAC,WAAA,cACAC,UAAA,cACAC,KAAA,aACAC,KAAA,cACAC,KAAA,cACAC,WAAA,cACAC,OAAA,YACAC,cAAA,aACAC,IAAA,UACAC,UAAA,cACAC,UAAA,aACAC,YAAA,YACAC,OAAA,cACAC,WAAA,aACAC,SAAA,YACAC,SAAA,cACAC,OAAA,YACAC,OAAA,cACAC,QAAA,cACAC,UAAA,aACAC,UAAA,cACAC,UAAA,cACAC,KAAA,cACAC,YAAA,YACAC,UAAA,aACAC,IAAA,cACAC,KAAA,YACAC,QAAA,cACAC,OAAA,YACAC,UAAA,aACAC,OAAA,cACAC,MAAA,cACAC,MAAA,cACAC,WAAA,cACAC,OAAA,YACAC,YAAA,cAIAmB,EAAA,CACAC,UACAC,UACAC,OA8HA,SAAA1lB,GACA,IAAA2lB,EAAAH,EAAAxlB,GACA,OAAA2lB,KAAAnB,MAAA,MA/HAoB,OAkIA,SAAA5lB,GACA,IAAA6lB,EAAAJ,EAAAzlB,GACA,OAAA6lB,KAAArB,MAAA,MAnIAsB,SACAC,SAqIA,SAAA/lB,GACA,IAAAmlB,EAAAK,EAAAxlB,GAEA,OAAAmlB,EACAA,EAAA,IACKA,EAAAM,EAAAzlB,IACLmlB,EAAA,IACKA,EAAAW,EAAA9lB,IACLmlB,EAAA,QADK,GA3ILa,UAiJA,SAAAL,EAAA9lB,GACA,IAAAA,OAAA5C,IAAA4C,GAAA,IAAA8lB,EAAAhqB,OAAAkE,EAAA8lB,EAAA,GACA,UAAAM,EAAAN,EAAA,IAAAM,EAAAN,EAAA,IAAAM,EAAAN,EAAA,KAAA9lB,GAAA,GAAAA,EAAA,EAAAomB,EAAAxN,KAAAoM,MAAA,IAAAhlB,IAAA,KAlJAqmB,UAqJA,SAAAP,EAAAQ,GACA,OAAAA,EAAA,GAAAR,EAAA,IAAAA,EAAA,KACAS,EAAAT,EAAAQ,GAGA,OAAAR,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAzJAS,aACAC,cAmKA,SAAAV,EAAAQ,GACA,GAAAA,EAAA,GAAAR,EAAA,IAAAA,EAAA,KACA,OAAAW,EAAAX,EAAAQ,GAGA,IAAA9N,EAAAI,KAAAoM,MAAAc,EAAA,YACArN,EAAAG,KAAAoM,MAAAc,EAAA,YACApN,EAAAE,KAAAoM,MAAAc,EAAA,YACA,aAAAtN,EAAA,MAAAC,EAAA,MAAAC,EAAA,MA1KA+N,iBACAC,UAmLA,SAAAV,EAAAM,GACA,OAAAA,EAAA,GAAAN,EAAA,IAAAA,EAAA,KACAW,EAAAX,EAAAM,GAGA,OAAAN,EAAA,QAAAA,EAAA,SAAAA,EAAA,SAvLAW,aACAC,UAmMA,SAAAzM,EAAAmM,GAKA,YAJAlpB,IAAAkpB,IACAA,OAAAlpB,IAAA+c,EAAA,GAAAA,EAAA,MAGA,OAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,aAAA/c,IAAAkpB,GAAA,IAAAA,EAAA,KAAAA,EAAA,SAvMApL,QA0MA,SAAA3C,GACA,OAAAsO,EAAAtO,EAAAoM,MAAA,QAxMA,SAAAgB,EAAAxlB,GACA,GAAAA,EAAA,CAIA,IAKAoY,EAAA,QACAvY,EAAA,EACA8mB,EAAA3mB,EAAA2mB,MAPA,0BAQAC,EAAA,GAEA,GAAAD,EAAA,CACAA,IAAA,GACAC,EAAAD,EAAA,GAEA,QAAAlrB,EAAA,EAAqBA,EAAA2c,EAAAzc,OAAgBF,IACrC2c,EAAA3c,GAAAorB,SAAAF,EAAAlrB,GAAAkrB,EAAAlrB,GAAA,IAGAmrB,IACA/mB,EAAA4Y,KAAAoM,MAAAgC,SAAAD,IAAA,uBAEK,GAAAD,EAAA3mB,EAAA2mB,MApBL,yCAoBK,CACLC,EAAAD,EAAA,GACAA,IAAA,GAEA,QAAAlrB,EAAA,EAAqBA,EAAA2c,EAAAzc,OAAgBF,IACrC2c,EAAA3c,GAAAorB,SAAAF,EAAAnC,MAAA,EAAA/oB,EAAA,EAAAA,EAAA,OAGAmrB,IACA/mB,EAAA4Y,KAAAoM,MAAAgC,SAAAD,EAAA,uBAEK,GAAAD,EAAA3mB,EAAA2mB,MA9BL,4FA8BK,CACL,QAAAlrB,EAAA,EAAqBA,EAAA2c,EAAAzc,OAAgBF,IACrC2c,EAAA3c,GAAAorB,SAAAF,EAAAlrB,EAAA,IAGAoE,EAAAinB,WAAAH,EAAA,SACK,GAAAA,EAAA3mB,EAAA2mB,MAnCL,8GAmCK,CACL,QAAAlrB,EAAA,EAAqBA,EAAA2c,EAAAzc,OAAgBF,IACrC2c,EAAA3c,GAAAgd,KAAAoM,MAAA,KAAAiC,WAAAH,EAAAlrB,EAAA,KAGAoE,EAAAinB,WAAAH,EAAA,SACK,GAAAA,EAAA3mB,EAAA2mB,MAxCL,SAwCK,CACL,kBAAAA,EAAA,GACA,gBAKA,KAFAvO,EAAAkN,EAAAqB,EAAA,KAGA,OAIA,QAAAlrB,EAAA,EAAmBA,EAAA2c,EAAAzc,OAAgBF,IACnC2c,EAAA3c,GAAAsrB,EAAA3O,EAAA3c,GAAA,OAUA,OAJAoE,EAHAA,GAAA,GAAAA,EAGAknB,EAAAlnB,EAAA,KAFA,EAKAuY,EAAA,GAAAvY,EACAuY,GAGA,SAAAqN,EAAAzlB,GACA,GAAAA,EAAA,CAIA,IACA2mB,EAAA3mB,EAAA2mB,MADA,4GAGA,GAAAA,EAAA,CACA,IAAAR,EAAAW,WAAAH,EAAA,IACA7Q,EAAAiR,EAAAF,SAAAF,EAAA,WACA5Q,EAAAgR,EAAAD,WAAAH,EAAA,WACAnT,EAAAuT,EAAAD,WAAAH,EAAA,WACA9mB,EAAAknB,EAAAC,MAAAb,GAAA,EAAAA,EAAA,KACA,OAAArQ,EAAAC,EAAAvC,EAAA3T,KAIA,SAAAimB,EAAA9lB,GACA,GAAAA,EAAA,CAIA,IACA2mB,EAAA3mB,EAAA2mB,MADA,0GAGA,GAAAA,EAAA,CACA,IAAAR,EAAAW,WAAAH,EAAA,IACA7Q,EAAAiR,EAAAF,SAAAF,EAAA,WACA/N,EAAAmO,EAAAD,WAAAH,EAAA,WACApO,EAAAwO,EAAAD,WAAAH,EAAA,WACA9mB,EAAAknB,EAAAC,MAAAb,GAAA,EAAAA,EAAA,KACA,OAAArQ,EAAA8C,EAAAL,EAAA1Y,KAwCA,SAAAumB,EAAAT,EAAAQ,GAKA,YAJAlpB,IAAAkpB,IACAA,OAAAlpB,IAAA0oB,EAAA,GAAAA,EAAA,MAGA,QAAAA,EAAA,QAAAA,EAAA,QAAAA,EAAA,QAAAQ,EAAA,IAcA,SAAAG,EAAAX,EAAAQ,GACA,IAAA9N,EAAAI,KAAAoM,MAAAc,EAAA,YACArN,EAAAG,KAAAoM,MAAAc,EAAA,YACApN,EAAAE,KAAAoM,MAAAc,EAAA,YACA,cAAAtN,EAAA,MAAAC,EAAA,MAAAC,EAAA,OAAA4N,GAAAR,EAAA,WAWA,SAAAa,EAAAX,EAAAM,GAKA,YAJAlpB,IAAAkpB,IACAA,OAAAlpB,IAAA4oB,EAAA,GAAAA,EAAA,MAGA,QAAAA,EAAA,QAAAA,EAAA,SAAAA,EAAA,SAAAM,EAAA,IAkBA,SAAAY,EAAAE,EAAAzO,EAAAE,GACA,OAAAD,KAAAD,IAAAC,KAAAC,IAAAF,EAAAyO,GAAAvO,GAGA,SAAAuN,EAAAgB,GACA,IAAAC,EAAAD,EAAAE,SAAA,IAAAC,cACA,OAAAF,EAAAvrB,OAAA,MAAAurB,IAIA,IAAAR,EAAA,GAEA,QAAAW,KAAA/B,EACAoB,EAAApB,EAAA+B,MAKA,IAAAC,EAAA,SAAAA,EAAAvsB,GACA,OAAAA,aAAAusB,EACAvsB,EAGAuG,gBAAAgmB,GAIAhmB,KAAAimB,OAAA,EACAjmB,KAAA+O,OAAA,CACA+H,IAAA,QACAvC,IAAA,QACAQ,IAAA,QACA2D,IAAA,QACAI,KAAA,UACA+L,MAAA,QAKA,kBAAAprB,GACAoqB,EAAAI,EAAAC,QAAAzqB,IAGAuG,KAAA4jB,UAAA,MAAAC,IACOA,EAAAI,EAAAE,QAAA1qB,IACPuG,KAAA4jB,UAAA,MAAAC,IACOA,EAAAI,EAAAO,OAAA/qB,KACPuG,KAAA4jB,UAAA,MAAAC,GAEK,kBAAApqB,SAGLkC,KAFAkoB,EAAApqB,GAEAsd,QAAApb,IAAAkoB,EAAA1C,IACAnhB,KAAA4jB,UAAA,MAAAC,QACOloB,IAAAkoB,EAAA3R,QAAAvW,IAAAkoB,EAAAqC,UACPlmB,KAAA4jB,UAAA,MAAAC,QACOloB,IAAAkoB,EAAA5O,QAAAtZ,IAAAkoB,EAAAlqB,MACPqG,KAAA4jB,UAAA,MAAAC,QACOloB,IAAAkoB,EAAAvM,QAAA3b,IAAAkoB,EAAAsC,UACPnmB,KAAA4jB,UAAA,MAAAC,QACOloB,IAAAkoB,EAAAxhB,QAAA1G,IAAAkoB,EAAA9I,MACP/a,KAAA4jB,UAAA,OAAAC,MArCA,IAAAmC,EAAAvsB,GAaA,IAAAoqB,IA6BAmC,EAAA7lB,UAAA,CACAimB,QAAA,WACA,OAAApmB,KAAAimB,OAEAnP,IAAA,WACA,OAAA9W,KAAAqmB,SAAA,MAAAjsB,YAEAma,IAAA,WACA,OAAAvU,KAAAqmB,SAAA,MAAAjsB,YAEA2a,IAAA,WACA,OAAA/U,KAAAqmB,SAAA,MAAAjsB,YAEAse,IAAA,WACA,OAAA1Y,KAAAqmB,SAAA,MAAAjsB,YAEA0e,KAAA,WACA,OAAA9Y,KAAAqmB,SAAA,OAAAjsB,YAEAksB,SAAA,WACA,OAAAtmB,KAAA+O,OAAA+H,KAEAyP,SAAA,WACA,OAAAvmB,KAAA+O,OAAAwF,KAEAiS,SAAA,WACA,OAAAxmB,KAAA+O,OAAAgG,KAEA0R,SAAA,WACA,IAAA1X,EAAA/O,KAAA+O,OAEA,WAAAA,EAAA8V,MACA9V,EAAA2J,IAAAhe,OAAA,CAAAqU,EAAA8V,QAGA9V,EAAA2J,KAEAgO,UAAA,WACA,OAAA1mB,KAAA+O,OAAA+J,MAEA6N,UAAA,WACA,IAAA5X,EAAA/O,KAAA+O,OACA,OAAAA,EAAA+H,IAAApc,OAAA,CAAAqU,EAAA8V,SAEA+B,UAAA,WACA,IAAA7X,EAAA/O,KAAA+O,OACA,OAAAA,EAAAwF,IAAA7Z,OAAA,CAAAqU,EAAA8V,SAEAA,MAAA,SAAA1M,GACA,YAAAxc,IAAAwc,EACAnY,KAAA+O,OAAA8V,OAGA7kB,KAAA4jB,UAAA,QAAAzL,GACAnY,OAEAmhB,IAAA,SAAAhJ,GACA,OAAAnY,KAAA6mB,WAAA,QAAA1O,IAEA8E,MAAA,SAAA9E,GACA,OAAAnY,KAAA6mB,WAAA,QAAA1O,IAEAiC,KAAA,SAAAjC,GACA,OAAAnY,KAAA6mB,WAAA,QAAA1O,IAEA2O,IAAA,SAAA3O,GAMA,OALAA,IAEAA,GADAA,GAAA,KACA,MAAAA,KAGAnY,KAAA6mB,WAAA,QAAA1O,IAEA4O,WAAA,SAAA5O,GACA,OAAAnY,KAAA6mB,WAAA,QAAA1O,IAEA+N,UAAA,SAAA/N,GACA,OAAAnY,KAAA6mB,WAAA,QAAA1O,IAEA6O,YAAA,SAAA7O,GACA,OAAAnY,KAAA6mB,WAAA,QAAA1O,IAEAgO,UAAA,SAAAhO,GACA,OAAAnY,KAAA6mB,WAAA,QAAA1O,IAEA8O,UAAA,SAAA9O,GACA,OAAAnY,KAAA6mB,WAAA,QAAA1O,IAEAxe,MAAA,SAAAwe,GACA,OAAAnY,KAAA6mB,WAAA,QAAA1O,IAEA4C,KAAA,SAAA5C,GACA,OAAAnY,KAAA6mB,WAAA,SAAA1O,IAEA6G,QAAA,SAAA7G,GACA,OAAAnY,KAAA6mB,WAAA,SAAA1O,IAEA0K,OAAA,SAAA1K,GACA,OAAAnY,KAAA6mB,WAAA,SAAA1O,IAEA+B,MAAA,SAAA/B,GACA,OAAAnY,KAAA6mB,WAAA,SAAA1O,IAEAuM,UAAA,WACA,OAAAT,EAAAS,UAAA1kB,KAAA+O,OAAA+H,MAEA8N,UAAA,WACA,OAAAX,EAAAW,UAAA5kB,KAAA+O,OAAA+H,IAAA9W,KAAA+O,OAAA8V,QAEAC,WAAA,WACA,OAAAb,EAAAa,WAAA9kB,KAAA+O,OAAA+H,IAAA9W,KAAA+O,OAAA8V,QAEAE,cAAA,WACA,OAAAd,EAAAc,cAAA/kB,KAAA+O,OAAA+H,IAAA9W,KAAA+O,OAAA8V,QAEAI,UAAA,WACA,OAAAhB,EAAAgB,UAAAjlB,KAAA+O,OAAAwF,IAAAvU,KAAA+O,OAAA8V,QAEAK,WAAA,WACA,OAAAjB,EAAAiB,WAAAllB,KAAA+O,OAAAwF,IAAAvU,KAAA+O,OAAA8V,QAEAM,UAAA,WACA,OAAAlB,EAAAkB,UAAAnlB,KAAA+O,OAAA2J,IAAA1Y,KAAA+O,OAAA8V,QAEApL,QAAA,WACA,OAAAwK,EAAAxK,QAAAzZ,KAAA+O,OAAA+H,IAAA9W,KAAA+O,OAAA8V,QAEAqC,UAAA,WACA,IAAApQ,EAAA9W,KAAA+O,OAAA+H,IACA,OAAAA,EAAA,OAAAA,EAAA,MAAAA,EAAA,IAEAqQ,WAAA,WAKA,IAHA,IAAArQ,EAAA9W,KAAA+O,OAAA+H,IACAsQ,EAAA,GAEAjtB,EAAA,EAAqBA,EAAA2c,EAAAzc,OAAgBF,IAAA,CACrC,IAAAktB,EAAAvQ,EAAA3c,GAAA,IACAitB,EAAAjtB,GAAAktB,GAAA,OAAAA,EAAA,MAAAlQ,KAAAQ,KAAA0P,EAAA,iBAGA,YAAAD,EAAA,SAAAA,EAAA,SAAAA,EAAA,IAEAE,SAAA,SAAAC,GAEA,IAAAC,EAAAxnB,KAAAmnB,aACAM,EAAAF,EAAAJ,aAEA,OAAAK,EAAAC,GACAD,EAAA,MAAAC,EAAA,MAGAA,EAAA,MAAAD,EAAA,MAEAE,MAAA,SAAAH,GACA,IAAAI,EAAA3nB,KAAAsnB,SAAAC,GAEA,OAAAI,GAAA,IACA,MAGAA,GAAA,aAEAC,KAAA,WAEA,IAAA9Q,EAAA9W,KAAA+O,OAAA+H,IAEA,OADA,IAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,QACA,KAEA+Q,MAAA,WACA,OAAA7nB,KAAA4nB,QAEAE,OAAA,WAGA,IAFA,IAAAhR,EAAA,GAEA3c,EAAA,EAAqBA,EAAA,EAAOA,IAC5B2c,EAAA3c,GAAA,IAAA6F,KAAA+O,OAAA+H,IAAA3c,GAIA,OADA6F,KAAA4jB,UAAA,MAAA9M,GACA9W,MAEA+nB,QAAA,SAAAlP,GACA,IAAAtE,EAAAvU,KAAA+O,OAAAwF,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAsE,EACA7Y,KAAA4jB,UAAA,MAAArP,GACAvU,MAEAgoB,OAAA,SAAAnP,GACA,IAAAtE,EAAAvU,KAAA+O,OAAAwF,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAsE,EACA7Y,KAAA4jB,UAAA,MAAArP,GACAvU,MAEAioB,SAAA,SAAApP,GACA,IAAAtE,EAAAvU,KAAA+O,OAAAwF,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAsE,EACA7Y,KAAA4jB,UAAA,MAAArP,GACAvU,MAEAkoB,WAAA,SAAArP,GACA,IAAAtE,EAAAvU,KAAA+O,OAAAwF,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAsE,EACA7Y,KAAA4jB,UAAA,MAAArP,GACAvU,MAEAmoB,OAAA,SAAAtP,GACA,IAAAH,EAAA1Y,KAAA+O,OAAA2J,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAG,EACA7Y,KAAA4jB,UAAA,MAAAlL,GACA1Y,MAEAooB,QAAA,SAAAvP,GACA,IAAAH,EAAA1Y,KAAA+O,OAAA2J,IAGA,OAFAA,EAAA,IAAAA,EAAA,GAAAG,EACA7Y,KAAA4jB,UAAA,MAAAlL,GACA1Y,MAEAqoB,UAAA,WACA,IAAAvR,EAAA9W,KAAA+O,OAAA+H,IAEAqB,EAAA,GAAArB,EAAA,OAAAA,EAAA,OAAAA,EAAA,GAEA,OADA9W,KAAA4jB,UAAA,OAAAzL,QACAnY,MAEAsoB,QAAA,SAAAzP,GACA,IAAAgM,EAAA7kB,KAAA+O,OAAA8V,MAEA,OADA7kB,KAAA4jB,UAAA,QAAAiB,IAAAhM,GACA7Y,MAEAuoB,QAAA,SAAA1P,GACA,IAAAgM,EAAA7kB,KAAA+O,OAAA8V,MAEA,OADA7kB,KAAA4jB,UAAA,QAAAiB,IAAAhM,GACA7Y,MAEAwoB,OAAA,SAAAC,GACA,IAAAlU,EAAAvU,KAAA+O,OAAAwF,IACAuS,GAAAvS,EAAA,GAAAkU,GAAA,IAGA,OAFAlU,EAAA,GAAAuS,EAAA,MAAAA,IACA9mB,KAAA4jB,UAAA,MAAArP,GACAvU,MAOA0oB,IAAA,SAAAC,EAAAC,GACA,IACArB,EAAAoB,EACApQ,OAAA5c,IAAAitB,EAAA,GAAAA,EACAtR,EAAA,EAAAiB,EAAA,EACAha,EAJAyB,KAIA6kB,QAAA0C,EAAA1C,QACAgE,IAAAvR,EAAA/Y,KAAA,EAAA+Y,KAAA/Y,IAAA,EAAA+Y,EAAA/Y,IAAA,KACAuqB,EAAA,EAAAD,EACA,OAAA7oB,KAAA8W,IAAA+R,EAPA7oB,KAOAmhB,MAAA2H,EAAAvB,EAAApG,MAAA0H,EAPA7oB,KAOAid,QAAA6L,EAAAvB,EAAAtK,QAAA4L,EAPA7oB,KAOAoa,OAAA0O,EAAAvB,EAAAnN,QAAAyK,MAPA7kB,KAOA6kB,QAAAtM,EAAAgP,EAAA1C,SAAA,EAAAtM,KAEAwQ,OAAA,WACA,OAAA/oB,KAAA8W,OAEAkS,MAAA,WAKA,IAGArvB,EAAAsH,EAHA2I,EAAA,IAAAoc,EACA1rB,EAAA0F,KAAA+O,OACA7U,EAAA0P,EAAAmF,OAGA,QAAAka,KAAA3uB,EACAA,EAAAkH,eAAAynB,KACAtvB,EAAAW,EAAA2uB,GAGA,oBAFAhoB,EAAA,GAAmB4kB,SAAA9lB,KAAApG,IAGnBO,EAAA+uB,GAAAtvB,EAAAupB,MAAA,GACW,oBAAAjiB,EACX/G,EAAA+uB,GAAAtvB,EAEAiU,QAAAC,MAAA,0BAAAlU,IAKA,OAAAiQ,KAGAsf,OAAA,CACApS,IAAA,uBACAvC,IAAA,iCACAQ,IAAA,6BACA2D,IAAA,gCACAI,KAAA,qCAEAkN,EAAA7lB,UAAAgpB,MAAA,CACArS,IAAA,cACAvC,IAAA,cACAQ,IAAA,cACA2D,IAAA,cACAI,KAAA,mBAGAkN,EAAA7lB,UAAAwjB,UAAA,SAAAD,GAIA,IAHA,IAAA3U,EAAA/O,KAAA+O,OACA8U,EAAA,GAEA1pB,EAAA,EAAmBA,EAAAupB,EAAArpB,OAAkBF,IACrC0pB,EAAAH,EAAA0F,OAAAjvB,IAAA4U,EAAA2U,GAAAvpB,GAQA,OALA,IAAA4U,EAAA8V,QACAhB,EAAAtlB,EAAAwQ,EAAA8V,OAIAhB,GAGAmC,EAAA7lB,UAAAyjB,UAAA,SAAAF,EAAAG,GACA,IAIA1pB,EAiCAkvB,EArCAta,EAAA/O,KAAA+O,OACAma,EAAAlpB,KAAAkpB,OACAC,EAAAnpB,KAAAmpB,MACAtE,EAAA,EAIA,GAFA7kB,KAAAimB,OAAA,EAEA,UAAAvC,EACAmB,EAAAhB,OACK,GAAAA,EAAAxpB,OAEL0U,EAAA2U,GAAAG,EAAAX,MAAA,EAAAQ,EAAArpB,QACAwqB,EAAAhB,EAAAH,EAAArpB,aACK,QAAAsB,IAAAkoB,EAAAH,EAAA0F,OAAA,KAEL,IAAAjvB,EAAA,EAAiBA,EAAAupB,EAAArpB,OAAkBF,IACnC4U,EAAA2U,GAAAvpB,GAAA0pB,EAAAH,EAAA0F,OAAAjvB,IAGA0qB,EAAAhB,EAAAtlB,OACK,QAAA5C,IAAAkoB,EAAAqF,EAAAxF,GAAA,KAEL,IAAA4F,EAAAJ,EAAAxF,GAEA,IAAAvpB,EAAA,EAAiBA,EAAAupB,EAAArpB,OAAkBF,IACnC4U,EAAA2U,GAAAvpB,GAAA0pB,EAAAyF,EAAAnvB,IAGA0qB,EAAAhB,EAAAgB,MAKA,GAFA9V,EAAA8V,MAAA1N,KAAAC,IAAA,EAAAD,KAAAD,IAAA,OAAAvb,IAAAkpB,EAAA9V,EAAA8V,UAEA,UAAAnB,EACA,SAKA,IAAAvpB,EAAA,EAAeA,EAAAupB,EAAArpB,OAAkBF,IACjCkvB,EAAAlS,KAAAC,IAAA,EAAAD,KAAAD,IAAAiS,EAAAzF,GAAAvpB,GAAA4U,EAAA2U,GAAAvpB,KACA4U,EAAA2U,GAAAvpB,GAAAgd,KAAAoM,MAAA8F,GAIA,QAAAE,KAAAL,EACAK,IAAA7F,IACA3U,EAAAwa,GAAAxF,EAAAL,GAAA6F,GAAAxa,EAAA2U,KAIA,UAGAsC,EAAA7lB,UAAAkmB,SAAA,SAAA3C,EAAAhhB,GACA,IAAAmhB,EAAAnhB,EAAA,GAEA,YAAA/G,IAAAkoB,EAEA7jB,KAAA2jB,UAAAD,IAIA,kBAAAG,IACAA,EAAAzoB,MAAA+E,UAAA+iB,MAAAnjB,KAAA2C,IAGA1C,KAAA4jB,UAAAF,EAAAG,GACA7jB,OAGAgmB,EAAA7lB,UAAA0mB,WAAA,SAAAnD,EAAA5a,EAAAqP,GACA,IAAAqR,EAAAxpB,KAAA+O,OAAA2U,GAEA,YAAA/nB,IAAAwc,EAEAqR,EAAA1gB,GACKqP,IAAAqR,EAAA1gB,GAEL9I,MAIAwpB,EAAA1gB,GAAAqP,EACAnY,KAAA4jB,UAAAF,EAAA8F,GACAxpB,OAGA,qBAAAypB,SACAA,OAAAzD,SAGA,IAAA0D,EAAA1D,EAKA9X,EAAA,CAIAyb,KAAA,aAOAC,IAAA,WACA,IAAA1a,EAAA,EACA,kBACA,OAAAA,KAHA,GAaA2a,cAAA,SAAAlwB,GACA,cAAAA,GAAA,qBAAAA,GASA0B,QAAA,SAAA1B,GACA,GAAAyB,MAAAC,SAAAD,MAAAC,QAAA1B,GACA,SAGA,IAAAsH,EAAArH,OAAAuG,UAAA0lB,SAAA9lB,KAAApG,GAEA,kBAAAsH,EAAA6oB,OAAA,iBAAA7oB,EAAA6oB,QAAA,IAaAC,SAAA,SAAApwB,GACA,cAAAA,GAAA,oBAAAC,OAAAuG,UAAA0lB,SAAA9lB,KAAApG,IAQAqwB,SAAA,SAAAC,GACA,SAAAD,EAAAE,GACA,OAAAD,EAAA/nB,MAAAlC,KAAA5F,WAOA,OAJA4vB,EAAAnE,SAAA,WACA,OAAAoE,EAAApE,YAGAmE,EATA,CAUK,SAAArwB,GACL,yBAAAA,gBAAAwwB,SAAAH,SAAArwB,KASAywB,eAAA,SAAAzwB,EAAA0wB,GACA,2BAAA1wB,EAAA0wB,EAAA1wB,GAUA2wB,sBAAA,SAAA3wB,EAAAmP,EAAAuhB,GACA,OAAAnc,EAAAkc,eAAAlc,EAAA7S,QAAA1B,KAAAmP,GAAAnP,EAAA0wB,IAWAE,SAAA,SAAAC,EAAA9nB,EAAA+nB,GACA,GAAAD,GAAA,oBAAAA,EAAAzqB,KACA,OAAAyqB,EAAAtoB,MAAAuoB,EAAA/nB,IAaAgoB,KAAA,SAAAC,EAAAH,EAAAC,EAAAG,GACA,IAAAzwB,EAAA0wB,EAAArwB,EAEA,GAAA0T,EAAA7S,QAAAsvB,GAGA,GAFAE,EAAAF,EAAAtwB,OAEAuwB,EACA,IAAAzwB,EAAA0wB,EAAA,EAA2B1wB,GAAA,EAAQA,IACnCqwB,EAAAzqB,KAAA0qB,EAAAE,EAAAxwB,WAGA,IAAAA,EAAA,EAAqBA,EAAA0wB,EAAS1wB,IAC9BqwB,EAAAzqB,KAAA0qB,EAAAE,EAAAxwB,WAGO,GAAA+T,EAAA6b,SAAAY,GAIP,IAHAnwB,EAAAZ,OAAAY,KAAAmwB,GACAE,EAAArwB,EAAAH,OAEAF,EAAA,EAAmBA,EAAA0wB,EAAS1wB,IAC5BqwB,EAAAzqB,KAAA0qB,EAAAE,EAAAnwB,EAAAL,IAAAK,EAAAL,KAYA2wB,YAAA,SAAAC,EAAAC,GACA,IAAA7wB,EAAA8wB,EAAAC,EAAAC,EAEA,IAAAJ,IAAAC,GAAAD,EAAA1wB,SAAA2wB,EAAA3wB,OACA,SAGA,IAAAF,EAAA,EAAA8wB,EAAAF,EAAA1wB,OAAmCF,EAAA8wB,IAAU9wB,EAI7C,GAHA+wB,EAAAH,EAAA5wB,GACAgxB,EAAAH,EAAA7wB,GAEA+wB,aAAA9vB,OAAA+vB,aAAA/vB,OACA,IAAA8S,EAAA4c,YAAAI,EAAAC,GACA,cAES,GAAAD,IAAAC,EAET,SAIA,UAQAnC,MAAA,SAAA1uB,GACA,GAAA4T,EAAA7S,QAAAf,GACA,OAAAA,EAAAiP,IAAA2E,EAAA8a,OAGA,GAAA9a,EAAA6b,SAAAzvB,GAAA,CAMA,IALA,IAAAJ,EAAA,GACAM,EAAAZ,OAAAY,KAAAF,GACA8wB,EAAA5wB,EAAAH,OACAkd,EAAA,EAEcA,EAAA6T,IAAU7T,EACxBrd,EAAAM,EAAA+c,IAAArJ,EAAA8a,MAAA1uB,EAAAE,EAAA+c,KAGA,OAAArd,EAGA,OAAAI,GAQA+wB,QAAA,SAAA3xB,EAAAQ,EAAAI,EAAAiS,GACA,IAAA+e,EAAApxB,EAAAR,GACA6xB,EAAAjxB,EAAAZ,GAEAwU,EAAA6b,SAAAuB,IAAApd,EAAA6b,SAAAwB,GACArd,EAAAsd,MAAAF,EAAAC,EAAAhf,GAEArS,EAAAR,GAAAwU,EAAA8a,MAAAuC,IAQAE,UAAA,SAAA/xB,EAAAQ,EAAAI,GACA,IAAAgxB,EAAApxB,EAAAR,GACA6xB,EAAAjxB,EAAAZ,GAEAwU,EAAA6b,SAAAuB,IAAApd,EAAA6b,SAAAwB,GACArd,EAAAwd,QAAAJ,EAAAC,GACOrxB,EAAAsH,eAAA9H,KACPQ,EAAAR,GAAAwU,EAAA8a,MAAAuC,KAaAC,MAAA,SAAAtxB,EAAAI,EAAAiS,GACA,IAEAif,EAAArxB,EAAAK,EAAA4wB,EAAA7T,EAFAoU,EAAAzd,EAAA7S,QAAAf,KAAA,CAAAA,GACA2wB,EAAAU,EAAAtxB,OAGA,IAAA6T,EAAA6b,SAAA7vB,GACA,OAAAA,EAMA,IAFAsxB,GADAjf,KAAA,IACAqf,QAAA1d,EAAAmd,QAEAlxB,EAAA,EAAiBA,EAAA8wB,IAAU9wB,EAG3B,GAFAG,EAAAqxB,EAAAxxB,GAEA+T,EAAA6b,SAAAzvB,GAMA,IAFAE,EAAAZ,OAAAY,KAAAF,GAEAid,EAAA,EAAA6T,EAAA5wB,EAAAH,OAAuCkd,EAAA6T,IAAU7T,EACjDiU,EAAAhxB,EAAA+c,GAAArd,EAAAI,EAAAiS,GAIA,OAAArS,GAUAwxB,QAAA,SAAAxxB,EAAAI,GACA,OAAA4T,EAAAsd,MAAAtxB,EAAAI,EAAA,CACAsxB,OAAA1d,EAAAud,aAWAI,OAAA,SAAA3xB,GAKA,IAJA,IAAA4xB,EAAA,SAAAnyB,EAAAD,GACAQ,EAAAR,GAAAC,GAGAQ,EAAA,EAAA8wB,EAAA7wB,UAAAC,OAA8CF,EAAA8wB,IAAU9wB,EACxD+T,EAAAwc,KAAAtwB,UAAAD,GAAA2xB,GAGA,OAAA5xB,GAMA6xB,SAAA,SAAAC,GACA,IAAAC,EAAAjsB,KACAksB,EAAAF,KAAAxqB,eAAA,eAAAwqB,EAAAnoB,YAAA,WACA,OAAAooB,EAAA/pB,MAAAlC,KAAA5F,YAGA+xB,EAAA,WACAnsB,KAAA6D,YAAAqoB,GAYA,OATAC,EAAAhsB,UAAA8rB,EAAA9rB,UACA+rB,EAAA/rB,UAAA,IAAAgsB,EACAD,EAAAL,OAAA3d,EAAA6d,SAEAC,GACA9d,EAAA2d,OAAAK,EAAA/rB,UAAA6rB,GAGAE,EAAAE,UAAAH,EAAA9rB,UACA+rB,IAGAG,EAAAne,EAUAA,EAAAoe,aAAApe,EAAAqc,SAUArc,EAAAzJ,QAAA,SAAA0E,EAAAojB,EAAAC,GACA,OAAApxB,MAAA+E,UAAAsE,QAAA1E,KAAAoJ,EAAAojB,EAAAC,IAWAte,EAAAue,kBAAAve,EAAAkc,eASAlc,EAAAwe,yBAAAxe,EAAAoc,sBAOA,IAAAqC,EAAA,CACAC,OAAA,SAAAnU,GACA,OAAAA,GAEAoU,WAAA,SAAApU,GACA,OAAAA,KAEAqU,YAAA,SAAArU,GACA,OAAAA,KAAA,IAEAsU,cAAA,SAAAtU,GACA,OAAAA,GAAA,MACA,GAAAA,KAGA,MAAAA,KAAA,OAEAuU,YAAA,SAAAvU,GACA,OAAAA,OAEAwU,aAAA,SAAAxU,GACA,OAAAA,GAAA,GAAAA,IAAA,GAEAyU,eAAA,SAAAzU,GACA,OAAAA,GAAA,MACA,GAAAA,MAGA,KAAAA,GAAA,GAAAA,IAAA,IAEA0U,YAAA,SAAA1U,GACA,OAAAA,SAEA2U,aAAA,SAAA3U,GACA,SAAAA,GAAA,GAAAA,MAAA,IAEA4U,eAAA,SAAA5U,GACA,OAAAA,GAAA,MACA,GAAAA,SAGA,KAAAA,GAAA,GAAAA,MAAA,IAEA6U,YAAA,SAAA7U,GACA,OAAAA,WAEA8U,aAAA,SAAA9U,GACA,OAAAA,GAAA,GAAAA,QAAA,GAEA+U,eAAA,SAAA/U,GACA,OAAAA,GAAA,MACA,GAAAA,UAGA,KAAAA,GAAA,GAAAA,QAAA,IAEAgV,WAAA,SAAAhV,GACA,SAAAtB,KAAAoC,IAAAd,GAAAtB,KAAAiC,GAAA,KAEAsU,YAAA,SAAAjV,GACA,OAAAtB,KAAAqC,IAAAf,GAAAtB,KAAAiC,GAAA,KAEAuU,cAAA,SAAAlV,GACA,WAAAtB,KAAAoC,IAAApC,KAAAiC,GAAAX,GAAA,IAEAmV,WAAA,SAAAnV,GACA,WAAAA,EAAA,EAAAtB,KAAAQ,IAAA,MAAAc,EAAA,KAEAoV,YAAA,SAAApV,GACA,WAAAA,EAAA,IAAAtB,KAAAQ,IAAA,MAAAc,IAEAqV,cAAA,SAAArV,GACA,WAAAA,EACA,EAGA,IAAAA,EACA,GAGAA,GAAA,MACA,GAAAtB,KAAAQ,IAAA,MAAAc,EAAA,IAGA,MAAAtB,KAAAQ,IAAA,QAAAc,KAEAsV,WAAA,SAAAtV,GACA,OAAAA,GAAA,EACAA,IAGAtB,KAAAkC,KAAA,EAAAZ,KAAA,IAEAuV,YAAA,SAAAvV,GACA,OAAAtB,KAAAkC,KAAA,GAAAZ,GAAA,GAAAA,IAEAwV,cAAA,SAAAxV,GACA,OAAAA,GAAA,OACA,IAAAtB,KAAAkC,KAAA,EAAAZ,KAAA,GAGA,IAAAtB,KAAAkC,KAAA,GAAAZ,GAAA,GAAAA,GAAA,IAEAyV,cAAA,SAAAzV,GACA,IAAAhE,EAAA,QACA8D,EAAA,EACAha,EAAA,EAEA,WAAAka,EACA,EAGA,IAAAA,EACA,GAGAF,IACAA,EAAA,IAGAha,EAAA,GACAA,EAAA,EACAkW,EAAA8D,EAAA,GAEA9D,EAAA8D,GAAA,EAAApB,KAAAiC,IAAAjC,KAAAgX,KAAA,EAAA5vB,IAGAA,EAAA4Y,KAAAQ,IAAA,MAAAc,GAAA,IAAAtB,KAAAqC,KAAAf,EAAAhE,IAAA,EAAA0C,KAAAiC,IAAAb,KAEA6V,eAAA,SAAA3V,GACA,IAAAhE,EAAA,QACA8D,EAAA,EACAha,EAAA,EAEA,WAAAka,EACA,EAGA,IAAAA,EACA,GAGAF,IACAA,EAAA,IAGAha,EAAA,GACAA,EAAA,EACAkW,EAAA8D,EAAA,GAEA9D,EAAA8D,GAAA,EAAApB,KAAAiC,IAAAjC,KAAAgX,KAAA,EAAA5vB,GAGAA,EAAA4Y,KAAAQ,IAAA,MAAAc,GAAAtB,KAAAqC,KAAAf,EAAAhE,IAAA,EAAA0C,KAAAiC,IAAAb,GAAA,IAEA8V,iBAAA,SAAA5V,GACA,IAAAhE,EAAA,QACA8D,EAAA,EACAha,EAAA,EAEA,WAAAka,EACA,EAGA,KAAAA,GAAA,IACA,GAGAF,IACAA,EAAA,KAGAha,EAAA,GACAA,EAAA,EACAkW,EAAA8D,EAAA,GAEA9D,EAAA8D,GAAA,EAAApB,KAAAiC,IAAAjC,KAAAgX,KAAA,EAAA5vB,GAGAka,EAAA,EACAla,EAAA4Y,KAAAQ,IAAA,MAAAc,GAAA,IAAAtB,KAAAqC,KAAAf,EAAAhE,IAAA,EAAA0C,KAAAiC,IAAAb,IAAA,GAGAha,EAAA4Y,KAAAQ,IAAA,OAAAc,GAAA,IAAAtB,KAAAqC,KAAAf,EAAAhE,IAAA,EAAA0C,KAAAiC,IAAAb,GAAA,OAEA+V,WAAA,SAAA7V,GACA,IAAAhE,EAAA,QACA,OAAAgE,MAAAhE,EAAA,GAAAgE,EAAAhE,IAEA8Z,YAAA,SAAA9V,GACA,IAAAhE,EAAA,QACA,OAAAgE,GAAA,GAAAA,IAAAhE,EAAA,GAAAgE,EAAAhE,GAAA,GAEA+Z,cAAA,SAAA/V,GACA,IAAAhE,EAAA,QAEA,OAAAgE,GAAA,MACAA,MAAA,GAAAhE,GAAA,QAAAgE,EAAAhE,GAAA,GAGA,KAAAgE,GAAA,GAAAA,IAAA,GAAAhE,GAAA,QAAAgE,EAAAhE,GAAA,IAEAga,aAAA,SAAAhW,GACA,SAAAkU,EAAA+B,cAAA,EAAAjW,IAEAiW,cAAA,SAAAjW,GACA,OAAAA,EAAA,OACA,OAAAA,IAGAA,EAAA,OACA,QAAAA,GAAA,UAAAA,EAAA,IAGAA,EAAA,SACA,QAAAA,GAAA,WAAAA,EAAA,MAGA,QAAAA,GAAA,YAAAA,EAAA,SAEAkW,gBAAA,SAAAlW,GACA,OAAAA,EAAA,GACA,GAAAkU,EAAA8B,aAAA,EAAAhW,GAGA,GAAAkU,EAAA+B,cAAA,EAAAjW,EAAA,QAGAmW,EAAA,CACAjC,WAWAN,EAAAwC,cAAAlC,EACA,IAAAvT,EAAAjC,KAAAiC,GACA0V,EAAA1V,EAAA,IACA2V,EAAA,EAAA3V,EACA4V,GAAA5V,EAAA,EACA6V,GAAA7V,EAAA,EACA8V,GAAA,EAAA9V,EAAA,EAKA+V,GAAA,CAKApmB,MAAA,SAAAqmB,GACAA,EAAAC,IAAAC,UAAA,IAAAF,EAAAziB,MAAAyiB,EAAA1iB,SAcA6iB,YAAA,SAAAF,EAAAzX,EAAAC,EAAAlL,EAAAD,EAAA8iB,GACA,GAAAA,EAAA,CACA,IAAAzY,EAAAI,KAAAD,IAAAsY,EAAA9iB,EAAA,EAAAC,EAAA,GACA8iB,EAAA7X,EAAAb,EACA2Y,EAAA7X,EAAAd,EACA4Y,EAAA/X,EAAAjL,EAAAoK,EACA6Y,EAAA/X,EAAAnL,EAAAqK,EACAsY,EAAAQ,OAAAjY,EAAA8X,GAEAD,EAAAE,GAAAD,EAAAE,GACAP,EAAAS,IAAAL,EAAAC,EAAA3Y,GAAAqC,GAAA4V,IACAK,EAAAS,IAAAH,EAAAD,EAAA3Y,GAAAiY,GAAA,GACAK,EAAAS,IAAAH,EAAAC,EAAA7Y,EAAA,EAAAiY,IACAK,EAAAS,IAAAL,EAAAG,EAAA7Y,EAAAiY,GAAA5V,IACSqW,EAAAE,GACTN,EAAAQ,OAAAJ,EAAA5X,GACAwX,EAAAS,IAAAH,EAAAD,EAAA3Y,GAAAiY,OACAK,EAAAS,IAAAL,EAAAC,EAAA3Y,EAAAiY,GAAA5V,EAAA4V,KACSU,EAAAE,GACTP,EAAAS,IAAAL,EAAAC,EAAA3Y,GAAAqC,EAAA,GACAiW,EAAAS,IAAAL,EAAAG,EAAA7Y,EAAA,EAAAqC,IAEAiW,EAAAS,IAAAL,EAAAC,EAAA3Y,GAAAqC,KAGAiW,EAAAU,YACAV,EAAAQ,OAAAjY,EAAAC,QAEAwX,EAAAW,KAAApY,EAAAC,EAAAlL,EAAAD,IAGAujB,UAAA,SAAAZ,EAAAa,EAAAV,EAAA5X,EAAAC,EAAAsY,GACA,IAAAlvB,EAAAmvB,EAAAC,EAAAhxB,EAAAixB,EACAC,GAAAJ,GAAA,GAAArB,EAEA,IAAAoB,GAAA,kBAAAA,GAGA,+BAFAjvB,EAAAivB,EAAArK,aAEA,+BAAA5kB,GAMA,KAAAykB,MAAA8J,OAAA,IAMA,OAFAH,EAAAmB,YAEAN,GAEA,QACAb,EAAAS,IAAAlY,EAAAC,EAAA2X,EAAA,EAAAT,GACAM,EAAAU,YACA,MAEA,eACAV,EAAAQ,OAAAjY,EAAAT,KAAAqC,IAAA+W,GAAAf,EAAA3X,EAAAV,KAAAoC,IAAAgX,GAAAf,GACAe,GAAArB,GACAG,EAAAoB,OAAA7Y,EAAAT,KAAAqC,IAAA+W,GAAAf,EAAA3X,EAAAV,KAAAoC,IAAAgX,GAAAf,GACAe,GAAArB,GACAG,EAAAoB,OAAA7Y,EAAAT,KAAAqC,IAAA+W,GAAAf,EAAA3X,EAAAV,KAAAoC,IAAAgX,GAAAf,GACAH,EAAAU,YACA,MAEA,kBASA1wB,EAAAmwB,GADAc,EAAA,KAAAd,GAEAY,EAAAjZ,KAAAoC,IAAAgX,EAAAtB,IAAA5vB,EACAgxB,EAAAlZ,KAAAqC,IAAA+W,EAAAtB,IAAA5vB,EACAgwB,EAAAS,IAAAlY,EAAAwY,EAAAvY,EAAAwY,EAAAC,EAAAC,EAAAnX,EAAAmX,EAAAvB,IACAK,EAAAS,IAAAlY,EAAAyY,EAAAxY,EAAAuY,EAAAE,EAAAC,EAAAvB,GAAAuB,GACAlB,EAAAS,IAAAlY,EAAAwY,EAAAvY,EAAAwY,EAAAC,EAAAC,IAAAvB,IACAK,EAAAS,IAAAlY,EAAAyY,EAAAxY,EAAAuY,EAAAE,EAAAC,EAAAvB,GAAAuB,EAAAnX,GACAiW,EAAAU,YACA,MAEA,WACA,IAAAI,EAAA,CACA9wB,EAAA8X,KAAAuZ,QAAAlB,EACAH,EAAAW,KAAApY,EAAAvY,EAAAwY,EAAAxY,EAAA,EAAAA,EAAA,EAAAA,GACA,MAGAkxB,GAAAtB,GAIA,cACAmB,EAAAjZ,KAAAoC,IAAAgX,GAAAf,EACAa,EAAAlZ,KAAAqC,IAAA+W,GAAAf,EACAH,EAAAQ,OAAAjY,EAAAwY,EAAAvY,EAAAwY,GACAhB,EAAAoB,OAAA7Y,EAAAyY,EAAAxY,EAAAuY,GACAf,EAAAoB,OAAA7Y,EAAAwY,EAAAvY,EAAAwY,GACAhB,EAAAoB,OAAA7Y,EAAAyY,EAAAxY,EAAAuY,GACAf,EAAAU,YACA,MAEA,eACAQ,GAAAtB,GAIA,YACAmB,EAAAjZ,KAAAoC,IAAAgX,GAAAf,EACAa,EAAAlZ,KAAAqC,IAAA+W,GAAAf,EACAH,EAAAQ,OAAAjY,EAAAwY,EAAAvY,EAAAwY,GACAhB,EAAAoB,OAAA7Y,EAAAwY,EAAAvY,EAAAwY,GACAhB,EAAAQ,OAAAjY,EAAAyY,EAAAxY,EAAAuY,GACAf,EAAAoB,OAAA7Y,EAAAyY,EAAAxY,EAAAuY,GACA,MAEA,WACAA,EAAAjZ,KAAAoC,IAAAgX,GAAAf,EACAa,EAAAlZ,KAAAqC,IAAA+W,GAAAf,EACAH,EAAAQ,OAAAjY,EAAAwY,EAAAvY,EAAAwY,GACAhB,EAAAoB,OAAA7Y,EAAAwY,EAAAvY,EAAAwY,GACAhB,EAAAQ,OAAAjY,EAAAyY,EAAAxY,EAAAuY,GACAf,EAAAoB,OAAA7Y,EAAAyY,EAAAxY,EAAAuY,GACAG,GAAAtB,GACAmB,EAAAjZ,KAAAoC,IAAAgX,GAAAf,EACAa,EAAAlZ,KAAAqC,IAAA+W,GAAAf,EACAH,EAAAQ,OAAAjY,EAAAwY,EAAAvY,EAAAwY,GACAhB,EAAAoB,OAAA7Y,EAAAwY,EAAAvY,EAAAwY,GACAhB,EAAAQ,OAAAjY,EAAAyY,EAAAxY,EAAAuY,GACAf,EAAAoB,OAAA7Y,EAAAyY,EAAAxY,EAAAuY,GACA,MAEA,WACAA,EAAAjZ,KAAAoC,IAAAgX,GAAAf,EACAa,EAAAlZ,KAAAqC,IAAA+W,GAAAf,EACAH,EAAAQ,OAAAjY,EAAAwY,EAAAvY,EAAAwY,GACAhB,EAAAoB,OAAA7Y,EAAAwY,EAAAvY,EAAAwY,GACA,MAEA,WACAhB,EAAAQ,OAAAjY,EAAAC,GACAwX,EAAAoB,OAAA7Y,EAAAT,KAAAoC,IAAAgX,GAAAf,EAAA3X,EAAAV,KAAAqC,IAAA+W,GAAAf,GAIAH,EAAAsB,OACAtB,EAAAuB,eA/GAvB,EAAAwB,UAAAX,EAAAtY,EAAAsY,EAAAvjB,MAAA,EAAAkL,EAAAqY,EAAAxjB,OAAA,EAAAwjB,EAAAvjB,MAAAujB,EAAAxjB,SAyHAokB,eAAA,SAAAriB,EAAAsiB,GAGA,OAAAtiB,EAAAmJ,EAAAmZ,EAAAtB,KAFA,MAEAhhB,EAAAmJ,EAAAmZ,EAAApB,MAFA,MAEAlhB,EAAAoJ,EAAAkZ,EAAArB,IAFA,MAEAjhB,EAAAoJ,EAAAkZ,EAAAnB,OAFA,MAIAoB,SAAA,SAAA3B,EAAA0B,GACA1B,EAAA4B,OACA5B,EAAAmB,YACAnB,EAAAW,KAAAe,EAAAtB,KAAAsB,EAAArB,IAAAqB,EAAApB,MAAAoB,EAAAtB,KAAAsB,EAAAnB,OAAAmB,EAAArB,KACAL,EAAA6B,QAEAC,WAAA,SAAA9B,GACAA,EAAA+B,WAEAX,OAAA,SAAApB,EAAAgC,EAAAn3B,EAAAo3B,GACA,IAAAC,EAAAr3B,EAAAs3B,YAEA,GAAAD,EAAA,CACA,cAAAA,EAAA,CACA,IAAAE,GAAAJ,EAAAzZ,EAAA1d,EAAA0d,GAAA,EACAyX,EAAAoB,OAAAgB,EAAAH,EAAAp3B,EAAA2d,EAAAwZ,EAAAxZ,GACAwX,EAAAoB,OAAAgB,EAAAH,EAAAD,EAAAxZ,EAAA3d,EAAA2d,OACS,UAAA0Z,IAAAD,GAAA,UAAAC,GAAAD,EACTjC,EAAAoB,OAAAY,EAAAzZ,EAAA1d,EAAA2d,GAEAwX,EAAAoB,OAAAv2B,EAAA0d,EAAAyZ,EAAAxZ,GAGAwX,EAAAoB,OAAAv2B,EAAA0d,EAAA1d,EAAA2d,QAIA3d,EAAAw3B,QAKArC,EAAAsC,cAAAL,EAAAD,EAAAO,sBAAAP,EAAAQ,kBAAAP,EAAAD,EAAAS,sBAAAT,EAAAU,kBAAAT,EAAAp3B,EAAA23B,kBAAA33B,EAAA03B,sBAAAN,EAAAp3B,EAAA63B,kBAAA73B,EAAA43B,sBAAA53B,EAAA0d,EAAA1d,EAAA2d,GAJAwX,EAAAoB,OAAAv2B,EAAA0d,EAAA1d,EAAA2d,KAOAma,GAAA7C,GAUA9C,EAAAtjB,MAAAomB,GAAApmB,MASAsjB,EAAA4F,qBAAA,SAAA5C,GACAA,EAAAmB,YACArB,GAAAI,YAAArtB,MAAAitB,GAAA/0B,YAGA,IAAA0X,GAAA,CAIAogB,KAAA,SAAAC,EAAApjB,GACA,OAAAsd,EAAAb,MAAAxrB,KAAAmyB,KAAAnyB,KAAAmyB,GAAA,IAAgEpjB,KAIhE+C,GAAAogB,KAAA,UACAE,aAAA,kBACAC,iBAAA,OACAC,kBAAA,qDACAC,gBAAA,GACAC,iBAAA,SACAC,kBAAA,IACAC,WAAA,IAGA,IAAAC,GAAA7gB,GACAsY,GAAAiC,EAAAjC,eAqBAwI,GAAA,CASAC,aAAA,SAAAl5B,EAAA0F,GACA,IAAAyzB,GAAA,GAAAn5B,GAAA0rB,MAAA,wCAEA,IAAAyN,GAAA,WAAAA,EAAA,GACA,WAAAzzB,EAKA,OAFA1F,GAAAm5B,EAAA,GAEAA,EAAA,IACA,SACA,OAAAn5B,EAEA,QACAA,GAAA,IAOA,OAAA0F,EAAA1F,GAUAo5B,UAAA,SAAAp5B,GACA,IAAA8e,EAAA1B,EAAAE,EAAA/E,EAWA,OATAma,EAAAtC,SAAApwB,IACA8e,GAAA9e,EAAA+1B,KAAA,EACA3Y,GAAApd,EAAAg2B,OAAA,EACA1Y,GAAAtd,EAAAi2B,QAAA,EACA1d,GAAAvY,EAAA81B,MAAA,GAEAhX,EAAA1B,EAAAE,EAAA/E,GAAAvY,GAAA,EAGA,CACA+1B,IAAAjX,EACAkX,MAAA5Y,EACA6Y,OAAA3Y,EACAwY,KAAAvd,EACAxF,OAAA+L,EAAAxB,EACAtK,MAAAuF,EAAA6E,IAWAic,WAAA,SAAAzmB,GACA,IAAA0mB,EAAAN,GAAAO,OACA7zB,EAAA+qB,GAAA7d,EAAA4mB,SAAAF,EAAAV,iBACAa,EAAA,CACAC,OAAAjJ,GAAA7d,EAAA+mB,WAAAL,EAAAX,mBACAiB,WAAAlH,EAAA9f,QAAAsmB,aAAAzI,GAAA7d,EAAAgnB,WAAAN,EAAAR,mBAAApzB,GACAA,OACA6wB,MAAA9F,GAAA7d,EAAAinB,UAAAP,EAAAT,kBACA5J,OAAA,KACAlqB,OAAA,IAGA,OADA00B,EAAA10B,OA7FA,SAAA00B,GACA,OAAAA,GAAA/G,EAAAxC,cAAAuJ,EAAA/zB,OAAAgtB,EAAAxC,cAAAuJ,EAAAC,QACA,MAGAD,EAAAlD,MAAAkD,EAAAlD,MAAA,SAAAkD,EAAAxK,OAAAwK,EAAAxK,OAAA,QAAAwK,EAAA/zB,KAAA,MAAA+zB,EAAAC,OAwFAI,CAAAL,GACAA,GAYAM,QAAA,SAAAC,EAAAC,EAAA9qB,GACA,IAAA3O,EAAA8wB,EAAAtxB,EAEA,IAAAQ,EAAA,EAAA8wB,EAAA0I,EAAAt5B,OAAuCF,EAAA8wB,IAAU9wB,EAGjD,QAAAwB,KAFAhC,EAAAg6B,EAAAx5B,WAMAwB,IAAAi4B,GAAA,oBAAAj6B,IACAA,IAAAi6B,SAGAj4B,IAAAmN,GAAAujB,EAAAhxB,QAAA1B,KACAA,IAAAmP,SAGAnN,IAAAhC,GACA,OAAAA,IAKAk6B,GAAAxH,EACAyH,GAAAlF,EACAmF,GAAA/B,GACAzlB,GAAAqmB,GACAiB,GAAAC,UACAD,GAAAE,UACAF,GAAAtnB,WAkDA,IAAAynB,GAAA,SAAAC,GACAJ,GAAAhI,OAAA7rB,KAAAi0B,GACAj0B,KAAAk0B,WAAAhyB,MAAAlC,KAAA5F,YAGAy5B,GAAAhI,OAAAmI,GAAA7zB,UAAA,CACA+zB,WAAA,WACAl0B,KAAAm0B,QAAA,GAEAC,MAAA,WACA,IAAAnI,EAAAjsB,KAOA,OALAisB,EAAAoI,QACApI,EAAAoI,MAAAR,GAAA7K,MAAAiD,EAAAqI,SAGArI,EAAAsI,OAAA,GACAtI,GAEAuI,WAAA,SAAAC,GACA,IAAAxI,EAAAjsB,KACA00B,EAAAzI,EAAAqI,OACAK,EAAA1I,EAAAsI,OACAK,EAAA3I,EAAAoI,MAEA,OAAAK,GAAA,IAAAD,GAMAG,IACAA,EAAA3I,EAAAoI,MAAA,IAGAM,IACAA,EAAA1I,EAAAsI,OAAA,IApFA,SAAAI,EAAAC,EAAAF,EAAAD,GACA,IACAt6B,EAAA8wB,EAAAvxB,EAAAm7B,EAAAC,EAAA56B,EAAA+G,EAAA8zB,EAAAC,EADAx6B,EAAAZ,OAAAY,KAAAk6B,GAGA,IAAAv6B,EAAA,EAAA8wB,EAAAzwB,EAAAH,OAAmCF,EAAA8wB,IAAU9wB,EAW7C,GAVAT,EAAAc,EAAAL,GACAD,EAAAw6B,EAAAh7B,GAGAk7B,EAAApzB,eAAA9H,KACAk7B,EAAAl7B,GAAAQ,IAGA26B,EAAAD,EAAAl7B,MAEAQ,GAAA,MAAAR,EAAA,IAWA,GAPAi7B,EAAAnzB,eAAA9H,KACAi7B,EAAAj7B,GAAAm7B,GAGAC,EAAAH,EAAAj7B,IACAuH,SAAA/G,YAEA46B,EACA,cAAA7zB,GAGA,IAFA8zB,EAAArL,EAAAoL,IAEA7O,QACA+O,EAAAtL,EAAAxvB,IAEA+rB,MAAA,CACA2O,EAAAl7B,GAAAs7B,EAAAtM,IAAAqM,EAAAN,GAAA7P,YACA,eAGS,GAAAiP,GAAA7J,SAAA8K,IAAAjB,GAAA7J,SAAA9vB,GAAA,CACT06B,EAAAl7B,GAAAo7B,GAAA56B,EAAA46B,GAAAL,EACA,SAIAG,EAAAl7B,GAAAQ,GA2CA+6B,CAAAN,EAAAC,EAAAF,EAAAD,GACAxI,IAdAA,EAAAoI,MAAAK,EACAzI,EAAAsI,OAAA,KACAtI,IAcAiJ,gBAAA,WACA,OACAtd,EAAA5X,KAAAs0B,OAAA1c,EACAC,EAAA7X,KAAAs0B,OAAAzc,IAGAsd,SAAA,WACA,OAAAtB,GAAAuB,SAAAp1B,KAAAs0B,OAAA1c,IAAAic,GAAAuB,SAAAp1B,KAAAs0B,OAAAzc,MAGAmc,GAAAnI,OAAAgI,GAAA9H,SACA,IAAAsJ,GAAArB,GACAsB,GAAAD,GAAAxJ,OAAA,CACAuD,MAAA,KAEAmG,YAAA,EAEAC,SAAA,GAEA1B,OAAA,GAEAxzB,OAAA,KAEAm1B,oBAAA,KAEAC,oBAAA,OAGAC,GAAAL,GASA17B,OAAAC,eAAAy7B,GAAAn1B,UAAA,mBACAuB,IAAA,WACA,OAAA1B,QAUApG,OAAAC,eAAAy7B,GAAAn1B,UAAA,iBACAuB,IAAA,WACA,OAAA1B,KAAAovB,OAEAztB,IAAA,SAAAhI,GACAqG,KAAAovB,MAAAz1B,KAIAg5B,GAAAT,KAAA,UACA0D,UAAA,CACAC,SAAA,IACA/B,OAAA,eACAgC,WAAAjC,GAAAlK,KACAoM,WAAAlC,GAAAlK,QAIA,IAAAqM,GAAA,CACAC,WAAA,GACAC,QAAA,KAQAC,aAAA,SAAA/G,EAAAwG,EAAAC,EAAAO,GACA,IACAj8B,EAAA8wB,EADAgL,EAAAj2B,KAAAi2B,WAUA,IARAL,EAAAxG,QACAwG,EAAAS,UAAAC,KAAAC,MACAX,EAAAC,WAEAO,IACAhH,EAAAoH,WAAA,GAGAr8B,EAAA,EAAA8wB,EAAAgL,EAAA57B,OAA2CF,EAAA8wB,IAAU9wB,EACrD,GAAA87B,EAAA97B,GAAAi1B,UAEA,YADA6G,EAAA97B,GAAAy7B,GAKAK,EAAA/5B,KAAA05B,GAEA,IAAAK,EAAA57B,QACA2F,KAAAy2B,yBAGAC,gBAAA,SAAAtH,GACA,IAAAtmB,EAAA+qB,GAAA8C,UAAA32B,KAAAi2B,WAAA,SAAAL,GACA,OAAAA,EAAAxG,aAGA,IAAAtmB,IACA9I,KAAAi2B,WAAAznB,OAAA1F,EAAA,GACAsmB,EAAAoH,WAAA,IAGAC,sBAAA,WACA,IAAAxK,EAAAjsB,KAEA,OAAAisB,EAAAiK,UAIAjK,EAAAiK,QAAArC,GAAA+C,iBAAA72B,KAAA0pB,OAAA,WACAwC,EAAAiK,QAAA,KACAjK,EAAA4K,kBAQAA,YAAA,WACA72B,KACA82B,UADA92B,KAGAi2B,WAAA57B,OAAA,GAHA2F,KAIAy2B,yBAOAK,QAAA,WAKA,IAJA,IACAlB,EAAAxG,EAAAoG,EAAAuB,EADAd,EAAAj2B,KAAAi2B,WAEA97B,EAAA,EAEAA,EAAA87B,EAAA57B,QACAu7B,EAAAK,EAAA97B,GACAi1B,EAAAwG,EAAAxG,MACAoG,EAAAI,EAAAJ,SAGAuB,EAAA5f,KAAAkB,OAAAie,KAAAC,MAAAX,EAAAS,WAAAT,EAAAC,SAAAL,GAAA,EACAI,EAAAL,YAAApe,KAAAD,IAAA6f,EAAAvB,GACA3B,GAAAtJ,SAAAqL,EAAAt1B,OAAA,CAAA8uB,EAAAwG,GAAAxG,GACAyE,GAAAtJ,SAAAqL,EAAAH,oBAAA,CAAAG,GAAAxG,GAEAwG,EAAAL,aAAAC,GACA3B,GAAAtJ,SAAAqL,EAAAF,oBAAA,CAAAE,GAAAxG,GACAA,EAAAoH,WAAA,EACAP,EAAAznB,OAAArU,EAAA,MAEAA,IAKAu5B,GAAAG,GAAAtnB,QAAAmnB,QACAsD,GAAA,0CA8CA,SAAAC,GAAA9tB,EAAA+tB,GACA,IAAAC,EAAAhuB,EAAAiuB,SAEA,GAAAD,EAAA,CAIA,IAAAE,EAAAF,EAAAE,UACAvuB,EAAAuuB,EAAA5yB,QAAAyyB,IAEA,IAAApuB,GACAuuB,EAAA7oB,OAAA1F,EAAA,GAGAuuB,EAAAh9B,OAAA,IAIA28B,GAAAl8B,QAAA,SAAApB,UACAyP,EAAAzP,YAEAyP,EAAAiuB,WAIA,IAAAE,GAAA,SAAAlI,EAAAmI,GACAv3B,KAAAk0B,WAAA9E,EAAAmI,IAGA1D,GAAAhI,OAAAyL,GAAAn3B,UAAA,CAKAq3B,mBAAA,KAMAC,gBAAA,KACAvD,WAAA,SAAA9E,EAAAmI,GACAv3B,KACAovB,QADApvB,KAEA8I,MAAAyuB,EAFAv3B,KAGA03B,aAHA13B,KAIA23B,eAEAC,YAAA,SAAAL,GACAv3B,KAAA8I,MAAAyuB,GAEAG,WAAA,WACA,IAAAzL,EAAAjsB,KACA63B,EAAA5L,EAAA6L,UACApqB,EAAAue,EAAA8L,aAEA,OAAAF,EAAAG,SAAAH,EAAAG,WAAA/L,EAAAmD,MAAA6I,SACAJ,EAAAG,QAAAtqB,EAAAsqB,SAAA/L,EAAAmD,MAAA7iB,QAAA0rB,OAAAC,MAAA,GAAAhpB,IAGA,OAAA2oB,EAAAM,SAAAN,EAAAM,WAAAlM,EAAAmD,MAAA6I,SACAJ,EAAAM,QAAAzqB,EAAAyqB,SAAAlM,EAAAmD,MAAA7iB,QAAA0rB,OAAAG,MAAA,GAAAlpB,KAGA6oB,WAAA,WACA,OAAA/3B,KAAAovB,MAAA5lB,KAAAyD,SAAAjN,KAAA8I,QAEAgvB,QAAA,WACA,OAAA93B,KAAAovB,MAAAiJ,eAAAr4B,KAAA8I,QAEAwvB,cAAA,SAAAC,GACA,OAAAv4B,KAAAovB,MAAA6I,OAAAM,IAMAC,iBAAA,WACA,OAAAx4B,KAAA83B,UAAAK,SAMAM,iBAAA,WACA,OAAAz4B,KAAA83B,UAAAE,SAMAU,eAAA,WACA,OAAA14B,KAAAs4B,cAAAt4B,KAAAw4B,qBAMAG,eAAA,WACA,OAAA34B,KAAAs4B,cAAAt4B,KAAAy4B,qBAEAG,MAAA,WACA54B,KAAA6O,QAAA,IAMAG,QAAA,WACAhP,KAAA64B,OACA5B,GAAAj3B,KAAA64B,MAAA74B,OAGA84B,kBAAA,WACA,IACA73B,EADAjB,KACAw3B,mBACA,OAAAv2B,GAAA,IAAAA,EAAA,CACA83B,OAHA/4B,KAGAovB,MACA4J,cAJAh5B,KAIA8I,SAGAmwB,eAAA,SAAAnwB,GACA,IACA7H,EADAjB,KACAy3B,gBACA,OAAAx2B,GAAA,IAAAA,EAAA,CACA83B,OAHA/4B,KAGAovB,MACA4J,cAJAh5B,KAIA8I,MACAowB,OAAApwB,KAGA6uB,YAAA,WACA,IAIAx9B,EAAA8wB,EAHA4M,EADA73B,KACA83B,UACAtuB,EAFAxJ,KAEA+3B,aAAAvuB,MAAA,GACA2vB,EAAAtB,EAAAruB,KAGA,IAAArP,EAAA,EAAA8wB,EAAAzhB,EAAAnP,OAAqCF,EAAA8wB,IAAU9wB,EAC/Cg/B,EAAAh/B,GAAAg/B,EAAAh/B,IAPA6F,KAOAi5B,eAAA9+B,GAGA09B,EAAAnqB,QAAAmqB,EAAAnqB,SAVA1N,KAUA84B,qBAEAM,mBAAA,SAAAtwB,GACA,IAAA5E,EAAAlE,KAAAi5B,eAAAnwB,GACA9I,KAAA83B,UAAAtuB,KAAAgF,OAAA1F,EAAA,EAAA5E,GACAlE,KAAAq5B,cAAAn1B,EAAA4E,GAAA,IAEAwwB,sBAAA,WACA,IA5LAnwB,EAAA+tB,EA4LAjL,EAAAjsB,KACA0N,EAAAue,EAAA8L,aACAvuB,EAAAkE,EAAAlE,OAAAkE,EAAAlE,KAAA,IAIAyiB,EAAA4M,QAAArvB,IACAyiB,EAAA4M,OAEA5B,GAAAhL,EAAA4M,MAAA5M,GAGAziB,GAAA5P,OAAA2/B,aAAA/vB,KAxMA0tB,EAyMAjL,GAzMA9iB,EAyMAK,GAxMA4tB,SACAjuB,EAAAiuB,SAAAC,UAAAn7B,KAAAg7B,IAKAt9B,OAAAC,eAAAsP,EAAA,YACApP,cAAA,EACAD,YAAA,EACAH,MAAA,CACA09B,UAAA,CAAAH,MAGAF,GAAAl8B,QAAA,SAAApB,GACA,IAAA8/B,EAAA,SAAA9/B,EAAA0vB,OAAA,GAAAtD,cAAApsB,EAAAwpB,MAAA,GACAuW,EAAAtwB,EAAAzP,GACAE,OAAAC,eAAAsP,EAAAzP,EAAA,CACAK,cAAA,EACAD,YAAA,EACAH,MAAA,WACA,IAAA+I,EAAAtH,MAAA+E,UAAA+iB,MAAAnjB,KAAA3F,WACAs/B,EAAAD,EAAAv3B,MAAAlC,KAAA0C,GAMA,OALAmxB,GAAAnJ,KAAAvhB,EAAAiuB,SAAAC,UAAA,SAAAn4B,GACA,oBAAAA,EAAAs6B,IACAt6B,EAAAs6B,GAAAt3B,MAAAhD,EAAAwD,KAGAg3B,SAgLAzN,EAAA4M,MAAArvB,GAKAyiB,EAAA0N,kBAEA9qB,OAAAglB,GAAAlK,KACA6K,WAAA,SAAAoF,GAMA,IALA,IAAA/B,EAAA73B,KAAA83B,UACA+B,EAAAhC,EAAAruB,MAAA,GACAyhB,EAAA4O,EAAAx/B,OACAF,EAAA,EAEYA,EAAA8wB,IAAU9wB,EACtB0/B,EAAA1/B,GAAAq6B,WAAAoF,GAGA/B,EAAAnqB,SACAmqB,EAAAnqB,QAAA8mB,WAAAoF,IAGAE,KAAA,WACA,IAAAjC,EAAA73B,KAAA83B,UACA+B,EAAAhC,EAAAruB,MAAA,GACAyhB,EAAA4O,EAAAx/B,OACAF,EAAA,EAMA,IAJA09B,EAAAnqB,SACAmqB,EAAAnqB,QAAAosB,OAGY3/B,EAAA8wB,IAAU9wB,EACtB0/B,EAAA1/B,GAAA2/B,QAGAC,iBAAA,SAAA71B,GACA2vB,GAAArI,MAAAtnB,EAAAowB,OAAApwB,EAAA81B,gBAAA,WACA91B,EAAA81B,gBAEAC,cAAA,SAAA/1B,GACA,IAAAwJ,EAAA1N,KAAAovB,MAAA5lB,KAAAyD,SAAA/I,EAAA80B,eACAlwB,EAAA5E,EAAAg1B,OACAgB,EAAAh2B,EAAAg2B,QAAA,GACAxF,EAAAxwB,EAAAowB,OACA6F,EAAAtG,GAAAsG,cACAj2B,EAAA81B,eAAA,CACAI,gBAAA1F,EAAA0F,gBACAC,YAAA3F,EAAA2F,YACAC,YAAA5F,EAAA4F,aAEA5F,EAAA0F,gBAAA1G,GAAA,CAAAwG,EAAAK,qBAAA7sB,EAAA6sB,qBAAAJ,EAAAzF,EAAA0F,uBAAAz+B,EAAAmN,GACA4rB,EAAA2F,YAAA3G,GAAA,CAAAwG,EAAAM,iBAAA9sB,EAAA8sB,iBAAAL,EAAAzF,EAAA2F,mBAAA1+B,EAAAmN,GACA4rB,EAAA4F,YAAA5G,GAAA,CAAAwG,EAAAO,iBAAA/sB,EAAA+sB,iBAAA/F,EAAA4F,kBAAA3+B,EAAAmN,IAMA6wB,eAAA,WACA,IACA9B,EADA73B,KACA83B,UACAtuB,EAFAxJ,KAEA+3B,aAAAvuB,KACAkxB,EAAA7C,EAAAruB,KAAAnP,OACAsgC,EAAAnxB,EAAAnP,OAEAsgC,EAAAD,EACA7C,EAAAruB,KAAAgF,OAAAmsB,EAAAD,EAAAC,GACOA,EAAAD,GARP16B,KASA46B,eAAAF,EAAAC,EAAAD,IAOAE,eAAA,SAAAjG,EAAAkG,GACA,QAAA1gC,EAAA,EAAqBA,EAAA0gC,IAAW1gC,EAChC6F,KAAAo5B,mBAAAzE,EAAAx6B,IAOA2gC,WAAA,WACA,IAAAD,EAAAzgC,UAAAC,OACA2F,KAAA46B,eAAA56B,KAAA+3B,aAAAvuB,KAAAnP,OAAAwgC,MAMAE,UAAA,WACA/6B,KAAA83B,UAAAtuB,KAAAwxB,OAMAC,YAAA,WACAj7B,KAAA83B,UAAAtuB,KAAA0xB,SAMAC,aAAA,SAAAxG,EAAAkG,GACA76B,KAAA83B,UAAAtuB,KAAAgF,OAAAmmB,EAAAkG,GACA76B,KAAA46B,eAAAjG,EAAAv6B,UAAAC,OAAA,IAMA+gC,cAAA,WACAp7B,KAAA46B,eAAA,EAAAxgC,UAAAC,WAGAi9B,GAAAzL,OAAAgI,GAAA9H,SACA,IAAAsP,GAAA/D,GAEA3E,GAAAT,KAAA,UACA2H,SAAA,CACA/J,IAAA,CACAsK,gBAAAzH,GAAAO,OAAAd,aACAiI,YAAA,OACAC,YAAA,EACAgB,YAAA,aAKA,IAAAC,GAAAlG,GAAAxJ,OAAA,CACA2P,aAAA,SAAAC,GACA,IAAAC,EAAA17B,KAAAq0B,MAEA,QAAAqH,GACAvkB,KAAAQ,IAAA8jB,EAAAC,EAAA9jB,EAAA,GAAAT,KAAAQ,IAAA+jB,EAAAlM,OAAAkM,EAAAC,YAAA,IAKAC,QAAA,SAAAC,EAAAC,GACA,IAAAJ,EAAA17B,KAAAq0B,MAEA,GAAAqH,EAAA,CAWA,IAVA,IAAAK,EAAAlI,GAAAmI,kBAAAN,EAAA,CACA9jB,EAAAikB,EACAhkB,EAAAikB,IAEAG,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,SAEAC,EAAAT,EAAAS,WACAC,EAAAV,EAAAU,SAEAA,EAAAD,GACAC,GAAA,EAAAjlB,KAAAiC,GAGA,KAAA6iB,EAAAG,GACAH,GAAA,EAAA9kB,KAAAiC,GAGA,KAAA6iB,EAAAE,GACAF,GAAA,EAAA9kB,KAAAiC,GAIA,IAAAijB,EAAAJ,GAAAE,GAAAF,GAAAG,EACAE,EAAAJ,GAAAR,EAAAa,aAAAL,GAAAR,EAAAc,YACA,OAAAH,GAAAC,EAGA,UAEAG,eAAA,WACA,IAAAf,EAAA17B,KAAAq0B,MACAqI,GAAAhB,EAAAS,WAAAT,EAAAU,UAAA,EACAO,GAAAjB,EAAAa,YAAAb,EAAAc,aAAA,EACA,OACA5kB,EAAA8jB,EAAA9jB,EAAAT,KAAAoC,IAAAmjB,GAAAC,EACA9kB,EAAA6jB,EAAA7jB,EAAAV,KAAAqC,IAAAkjB,GAAAC,IAGAC,QAAA,WACA,IAAAlB,EAAA17B,KAAAq0B,MACA,OAAAld,KAAAiC,KAAAsiB,EAAAU,SAAAV,EAAAS,aAAA,EAAAhlB,KAAAiC,MAAAjC,KAAAQ,IAAA+jB,EAAAc,YAAA,GAAArlB,KAAAQ,IAAA+jB,EAAAa,YAAA,KAEArH,gBAAA,WACA,IAAAwG,EAAA17B,KAAAq0B,MACAwI,EAAAnB,EAAAS,YAAAT,EAAAU,SAAAV,EAAAS,YAAA,EACAW,GAAApB,EAAAc,YAAAd,EAAAa,aAAA,EAAAb,EAAAa,YACA,OACA3kB,EAAA8jB,EAAA9jB,EAAAT,KAAAoC,IAAAsjB,GAAAC,EACAjlB,EAAA6jB,EAAA7jB,EAAAV,KAAAqC,IAAAqjB,GAAAC,IAGAhD,KAAA,WACA,IAKAiD,EALA1N,EAAArvB,KAAA+4B,OAAA1J,IACAqM,EAAA17B,KAAAq0B,MACA2I,EAAAtB,EAAAS,WACAc,EAAAvB,EAAAU,SACAc,EAAA,UAAAxB,EAAAJ,YAAA,MAEAjM,EAAA4B,OACA5B,EAAAmB,YACAnB,EAAAS,IAAA4L,EAAA9jB,EAAA8jB,EAAA7jB,EAAAV,KAAAC,IAAAskB,EAAAc,YAAAU,EAAA,GAAAF,EAAAC,GACA5N,EAAAS,IAAA4L,EAAA9jB,EAAA8jB,EAAA7jB,EAAA6jB,EAAAa,YAAAU,EAAAD,GAAA,GACA3N,EAAAU,YACAV,EAAA8N,UAAAzB,EAAAtB,gBACA/K,EAAAsB,OAEA+K,EAAApB,cACA,UAAAoB,EAAAJ,aAGAjM,EAAAmB,YACAuM,EAAAG,EAAAxB,EAAAc,YACAnN,EAAAS,IAAA4L,EAAA9jB,EAAA8jB,EAAA7jB,EAAA6jB,EAAAc,YAAAQ,EAAAD,EAAAE,EAAAF,GAEArB,EAAAa,YAAAW,GACAH,EAAAG,EAAAxB,EAAAa,YACAlN,EAAAS,IAAA4L,EAAA9jB,EAAA8jB,EAAA7jB,EAAA6jB,EAAAa,YAAAW,EAAAD,EAAAF,EAAAC,EAAAD,GAAA,IAEA1N,EAAAS,IAAA4L,EAAA9jB,EAAA8jB,EAAA7jB,EAAAqlB,EAAAD,EAAA9lB,KAAAiC,GAAA,EAAA4jB,EAAA7lB,KAAAiC,GAAA,GAGAiW,EAAAU,YACAV,EAAA6B,OACA7B,EAAAmB,YACAnB,EAAAS,IAAA4L,EAAA9jB,EAAA8jB,EAAA7jB,EAAA6jB,EAAAc,YAAAQ,EAAAC,GACA5N,EAAAS,IAAA4L,EAAA9jB,EAAA8jB,EAAA7jB,EAAA6jB,EAAAa,YAAAU,EAAAD,GAAA,GACA3N,EAAAU,YACAV,EAAA+N,UAAA,EAAA1B,EAAApB,YACAjL,EAAAgO,SAAA,UAEAhO,EAAA+N,UAAA1B,EAAApB,YACAjL,EAAAgO,SAAA,SAGAhO,EAAAiO,YAAA5B,EAAArB,YACAhL,EAAAuB,UAGAvB,EAAA+B,aAGAmM,GAAA1J,GAAAzJ,eACAgI,GAAAO,GAAAO,OAAAd,aAEAO,GAAAT,KAAA,UACA2H,SAAA,CACA2D,KAAA,CACA9L,QAAA,GACA0I,gBAAAhI,GACAkI,YAAA,EACAD,YAAAjI,GACAqL,eAAA,OACAC,WAAA,GACAC,iBAAA,EACAC,gBAAA,QACAC,iBAAA,EACAlN,MAAA,MAMA,IAAAmN,GAAAzI,GAAAxJ,OAAA,CACAiO,KAAA,WACA,IAWAhxB,EAAAyF,EAAA8iB,EAAA0M,EAVArC,EADA17B,KACAq0B,MACAhF,EAFArvB,KAEA+4B,OAAA1J,IACA2O,EAAAtC,EAAAsC,SAEAC,EALAj+B,KAKAk+B,UAAAhb,QAGA+P,EAAAN,GAAAO,OACAiL,EAAAlL,EAAA4G,SAAA2D,KACAY,GAAA,EAuBA,IAjCAp+B,KAaAq+B,OAAAJ,EAAA5jC,QACA4jC,EAAA/hC,KAAA+hC,EAAA,IAGA5O,EAAA4B,OAEA5B,EAAAiP,QAAA5C,EAAA+B,gBAAAU,EAAAV,eAEApO,EAAAkP,aACAlP,EAAAkP,YAAA7C,EAAAgC,YAAAS,EAAAT,YAGArO,EAAAmP,eAAAjB,GAAA7B,EAAAiC,iBAAAQ,EAAAR,kBACAtO,EAAAgO,SAAA3B,EAAAkC,iBAAAO,EAAAP,gBACAvO,EAAA+N,UAAAG,GAAA7B,EAAApB,YAAA6D,EAAA7D,aACAjL,EAAAiO,YAAA5B,EAAArB,aAAApH,EAAAb,aAEA/C,EAAAmB,YACA4N,GAAA,EAEAt1B,EAAA,EAAqBA,EAAAm1B,EAAA5jC,SAAuByO,EAC5CyF,EAAA0vB,EAAAn1B,GACAuoB,EAAAwC,GAAA4K,aAAAR,EAAAn1B,GACAi1B,EAAAxvB,EAAA8lB,MAEA,IAAAvrB,EACAi1B,EAAAW,OACArP,EAAAQ,OAAAkO,EAAAnmB,EAAAmmB,EAAAlmB,GACAumB,EAAAt1B,IAGAuoB,GAAA,IAAA+M,EAAA/M,EAAA4M,EAAAG,GAEAL,EAAAW,OACAN,IAAAt1B,EAAA,IAAAk1B,IAAA,IAAAI,EAEA/O,EAAAQ,OAAAkO,EAAAnmB,EAAAmmB,EAAAlmB,GAGAgc,GAAAE,OAAAtD,OAAApB,EAAAgC,EAAAgD,MAAA9lB,EAAA8lB,OAGA+J,EAAAt1B,IAKAumB,EAAAuB,SACAvB,EAAA+B,aAGAuN,GAAA9K,GAAAzJ,eACAwU,GAAAjM,GAAAO,OAAAd,aAkBA,SAAAyM,GAAApD,GACA,IAAAC,EAAA17B,KAAAq0B,MACA,QAAAqH,GAAAvkB,KAAA2nB,IAAArD,EAAAC,EAAA9jB,GAAA8jB,EAAAlM,OAAAkM,EAAAqD,UAlBApM,GAAAT,KAAA,UACA2H,SAAA,CACAprB,MAAA,CACA+gB,OAAA,EACAwP,WAAA,SACA5E,gBAAAwE,GACAvE,YAAAuE,GACAtE,YAAA,EAEAyE,UAAA,EACApD,YAAA,EACAlB,iBAAA,MAeA,IAAAwE,GAAA5J,GAAAxJ,OAAA,CACA+P,QAAA,SAAAH,EAAAyD,GACA,IAAAxD,EAAA17B,KAAAq0B,MACA,QAAAqH,GAAAvkB,KAAAQ,IAAA8jB,EAAAC,EAAA9jB,EAAA,GAAAT,KAAAQ,IAAAunB,EAAAxD,EAAA7jB,EAAA,GAAAV,KAAAQ,IAAA+jB,EAAAqD,UAAArD,EAAAlM,OAAA,IAEAgM,aAAAqD,GACAM,SAAAN,GACAO,SAZA,SAAAF,GACA,IAAAxD,EAAA17B,KAAAq0B,MACA,QAAAqH,GAAAvkB,KAAA2nB,IAAAI,EAAAxD,EAAA7jB,GAAA6jB,EAAAlM,OAAAkM,EAAAqD,WAWAtC,eAAA,WACA,IAAAf,EAAA17B,KAAAq0B,MACA,OACAzc,EAAA8jB,EAAA9jB,EACAC,EAAA6jB,EAAA7jB,IAGA+kB,QAAA,WACA,OAAAzlB,KAAAiC,GAAAjC,KAAAQ,IAAA3X,KAAAq0B,MAAA7E,OAAA,IAEA0F,gBAAA,WACA,IAAAwG,EAAA17B,KAAAq0B,MACA,OACAzc,EAAA8jB,EAAA9jB,EACAC,EAAA6jB,EAAA7jB,EACAwnB,QAAA3D,EAAAlM,OAAAkM,EAAApB,cAGAR,KAAA,SAAAwF,GACA,IAAA5D,EAAA17B,KAAAq0B,MACAhF,EAAArvB,KAAA+4B,OAAA1J,IACA2P,EAAAtD,EAAAsD,WACA7O,EAAAuL,EAAAvL,SACAX,EAAAkM,EAAAlM,OACA5X,EAAA8jB,EAAA9jB,EACAC,EAAA6jB,EAAA7jB,EACAob,EAAAN,GAAAO,OACAd,EAAAa,EAAAb,aAEAsJ,EAAAgD,YAKA/iC,IAAA2jC,GAAAzL,GAAAE,OAAAjD,eAAA4K,EAAA4D,MACAjQ,EAAAiO,YAAA5B,EAAArB,aAAAjI,EACA/C,EAAA+N,UAAAuB,GAAAjD,EAAApB,YAAArH,EAAA4G,SAAAprB,MAAA6rB,aACAjL,EAAA8N,UAAAzB,EAAAtB,iBAAAhI,EACAyB,GAAAE,OAAA9D,UAAAZ,EAAA2P,EAAAxP,EAAA5X,EAAAC,EAAAsY,OAIAoP,GAAA5M,GAAAO,OAAAd,aAaA,SAAAoN,GAAA9D,GACA,OAAAA,QAAA//B,IAAA+/B,EAAA/uB,MAUA,SAAA8yB,GAAA/D,GACA,IAAAgE,EAAAC,EAAAC,EAAA3mB,EAAA4mB,EAgBA,OAdAL,GAAA9D,IACAmE,EAAAnE,EAAA/uB,MAAA,EACA+yB,EAAAhE,EAAA9jB,EAAAioB,EACAF,EAAAjE,EAAA9jB,EAAAioB,EACAD,EAAAzoB,KAAAD,IAAAwkB,EAAA7jB,EAAA6jB,EAAAjC,MACAxgB,EAAA9B,KAAAC,IAAAskB,EAAA7jB,EAAA6jB,EAAAjC,QAEAoG,EAAAnE,EAAAhvB,OAAA,EACAgzB,EAAAvoB,KAAAD,IAAAwkB,EAAA9jB,EAAA8jB,EAAAjC,MACAkG,EAAAxoB,KAAAC,IAAAskB,EAAA9jB,EAAA8jB,EAAAjC,MACAmG,EAAAlE,EAAA7jB,EAAAgoB,EACA5mB,EAAAyiB,EAAA7jB,EAAAgoB,GAGA,CACApQ,KAAAiQ,EACAhQ,IAAAkQ,EACAjQ,MAAAgQ,EACA/P,OAAA3W,GAIA,SAAA6mB,GAAAC,EAAA5U,EAAA6U,GACA,OAAAD,IAAA5U,EAAA6U,EAAAD,IAAAC,EAAA7U,EAAA4U,EAuBA,SAAAE,GAAAvE,EAAAwE,EAAAC,GACA,IAEA1nB,EAAA1B,EAAAE,EAAA/E,EAFAvY,EAAA+hC,EAAApB,YACAoE,EAtBA,SAAAhD,GACA,IAAA0E,EAAA1E,EAAA2E,cACA3G,EAAA,GAEA,OAAA0G,GAIA1E,EAAA4E,WACA5E,EAAAjC,KAAAiC,EAAA9jB,IACAwoB,EAAAN,GAAAM,EAAA,iBAEK1E,EAAAjC,KAAAiC,EAAA7jB,IACLuoB,EAAAN,GAAAM,EAAA,iBAGA1G,EAAA0G,IAAA,EACA1G,GAZAA,EAiBA6G,CAAA7E,GAYA,OATA7H,GAAA9J,SAAApwB,IACA8e,GAAA9e,EAAA+1B,KAAA,EACA3Y,GAAApd,EAAAg2B,OAAA,EACA1Y,GAAAtd,EAAAi2B,QAAA,EACA1d,GAAAvY,EAAA81B,MAAA,GAEAhX,EAAA1B,EAAAE,EAAA/E,GAAAvY,GAAA,EAGA,CACA8e,EAAAimB,EAAAhP,KAAAjX,EAAA,IAAAA,EAAA0nB,IAAA1nB,EACA1B,EAAA2nB,EAAA/O,OAAA5Y,EAAA,IAAAA,EAAAmpB,IAAAnpB,EACAE,EAAAynB,EAAA9O,QAAA3Y,EAAA,IAAAA,EAAAkpB,IAAAlpB,EACA/E,EAAAwsB,EAAAjP,MAAAvd,EAAA,IAAAA,EAAAguB,IAAAhuB,GAyBA,SAAAsuB,GAAA9E,EAAA9jB,EAAAC,GACA,IAAA4oB,EAAA,OAAA7oB,EACA8oB,EAAA,OAAA7oB,EACA8oB,KAAAjF,GAAA+E,GAAAC,IAAAjB,GAAA/D,GACA,OAAAiF,IAAAF,GAAA7oB,GAAA+oB,EAAAlR,MAAA7X,GAAA+oB,EAAAhR,SAAA+Q,GAAA7oB,GAAA8oB,EAAAjR,KAAA7X,GAAA8oB,EAAA/Q,QAtHA+C,GAAAT,KAAA,UACA2H,SAAA,CACA+G,UAAA,CACAxG,gBAAAmF,GACAlF,YAAAkF,GACAc,cAAA,SACA/F,YAAA,MAmHA,IAAAuG,GAAAxL,GAAAxJ,OAAA,CACAiO,KAAA,WACA,IAAAzK,EAAArvB,KAAA+4B,OAAA1J,IACAqM,EAAA17B,KAAAq0B,MACAyM,EAhCA,SAAApF,GACA,IAAAiF,EAAAlB,GAAA/D,GACA/uB,EAAAg0B,EAAAhR,MAAAgR,EAAAlR,KACA/iB,EAAAi0B,EAAA/Q,OAAA+Q,EAAAjR,IACAqR,EAAAd,GAAAvE,EAAA/uB,EAAA,EAAAD,EAAA,GACA,OACAs0B,MAAA,CACAppB,EAAA+oB,EAAAlR,KACA5X,EAAA8oB,EAAAjR,IACApY,EAAA3K,EACA6H,EAAA9H,GAEAu0B,MAAA,CACArpB,EAAA+oB,EAAAlR,KAAAsR,EAAA7uB,EACA2F,EAAA8oB,EAAAjR,IAAAqR,EAAAtoB,EACAnB,EAAA3K,EAAAo0B,EAAA7uB,EAAA6uB,EAAAhqB,EACAvC,EAAA9H,EAAAq0B,EAAAtoB,EAAAsoB,EAAA9pB,IAgBAiqB,CAAAxF,GACAsF,EAAAF,EAAAE,MACAC,EAAAH,EAAAG,MACA5R,EAAA8N,UAAAzB,EAAAtB,gBACA/K,EAAA8R,SAAAH,EAAAppB,EAAAopB,EAAAnpB,EAAAmpB,EAAA1pB,EAAA0pB,EAAAxsB,GAEAwsB,EAAA1pB,IAAA2pB,EAAA3pB,GAAA0pB,EAAAxsB,IAAAysB,EAAAzsB,IAIA6a,EAAA4B,OACA5B,EAAAmB,YACAnB,EAAAW,KAAAgR,EAAAppB,EAAAopB,EAAAnpB,EAAAmpB,EAAA1pB,EAAA0pB,EAAAxsB,GACA6a,EAAA6B,OACA7B,EAAA8N,UAAAzB,EAAArB,YACAhL,EAAAW,KAAAiR,EAAArpB,EAAAqpB,EAAAppB,EAAAopB,EAAA3pB,EAAA2pB,EAAAzsB,GACA6a,EAAAsB,KAAA,WACAtB,EAAA+B,YAEA1kB,OAAA,WACA,IAAAgvB,EAAA17B,KAAAq0B,MACA,OAAAqH,EAAAjC,KAAAiC,EAAA7jB,GAEA+jB,QAAA,SAAAH,EAAAyD,GACA,OAAAsB,GAAAxgC,KAAAq0B,MAAAoH,EAAAyD,IAEA1D,aAAA,SAAAC,EAAAyD,GACA,IAAAxD,EAAA17B,KAAAq0B,MACA,OAAAmL,GAAA9D,GAAA8E,GAAA9E,EAAAD,EAAA,MAAA+E,GAAA9E,EAAA,KAAAwD,IAEAC,SAAA,SAAA1D,GACA,OAAA+E,GAAAxgC,KAAAq0B,MAAAoH,EAAA,OAEA2D,SAAA,SAAAF,GACA,OAAAsB,GAAAxgC,KAAAq0B,MAAA,KAAA6K,IAEAzC,eAAA,WACA,IACA7kB,EAAAC,EADA6jB,EAAA17B,KAAAq0B,MAWA,OARAmL,GAAA9D,IACA9jB,EAAA8jB,EAAA9jB,EACAC,GAAA6jB,EAAA7jB,EAAA6jB,EAAAjC,MAAA,IAEA7hB,GAAA8jB,EAAA9jB,EAAA8jB,EAAAjC,MAAA,EACA5hB,EAAA6jB,EAAA7jB,GAGA,CACAD,IACAC,MAGA+kB,QAAA,WACA,IAAAlB,EAAA17B,KAAAq0B,MACA,OAAAmL,GAAA9D,KAAA/uB,MAAAwK,KAAA2nB,IAAApD,EAAA7jB,EAAA6jB,EAAAjC,MAAAiC,EAAAhvB,OAAAyK,KAAA2nB,IAAApD,EAAA9jB,EAAA8jB,EAAAjC,OAEAvE,gBAAA,WACA,IAAAwG,EAAA17B,KAAAq0B,MACA,OACAzc,EAAA8jB,EAAA9jB,EACAC,EAAA6jB,EAAA7jB,MAIAgiB,GAAA,GACAuH,GAAA7F,GACAxxB,GAAA+zB,GACAuD,GAAApC,GACAqC,GAAAT,GACAhH,GAAAuH,OACAvH,GAAA9vB,QACA8vB,GAAAwH,SACAxH,GAAAyH,aACA,IAAAC,GAAA1N,GAAAtnB,QAAAmnB,QAEAf,GAAAT,KAAA,OACAsP,MAAA,CACAC,KAAA,SAEAxJ,OAAA,CACAC,MAAA,EACAj3B,KAAA,WACAygC,mBAAA,GACAC,cAAA,GACAC,QAAA,EACAC,UAAA,CACAC,iBAAA,KAGA1J,MAAA,EACAn3B,KAAA,cA8FA,IAAA8gC,GAAA1G,GAAAxP,OAAA,CACA4L,gBAAAoC,GAAAyH,UACApN,WAAA,WACA,IACA2D,EACAwD,GAAAl7B,UAAA+zB,WAAAhyB,MAFAlC,KAEA5F,YACAy9B,EAHA73B,KAGA83B,WACArlB,MAJAzS,KAIA+3B,aAAAtlB,MACAolB,EAAAmK,KAAA,GAEAnzB,OAAA,SAAA+pB,GACA,IAEAz+B,EAAA8wB,EADA6V,EADA9gC,KACA83B,UAAAtuB,KAIA,IALAxJ,KAGAiiC,OAHAjiC,KAGAkiC,WAEA/nC,EAAA,EAAA8wB,EAAA6V,EAAAzmC,OAAsCF,EAAA8wB,IAAU9wB,EALhD6F,KAMAq5B,cAAAyH,EAAA3mC,KAAAy+B,IAGAS,cAAA,SAAAuH,EAAA93B,EAAA8vB,GACA,IAAA3M,EAAAjsB,KACA63B,EAAA5L,EAAA6L,UACApqB,EAAAue,EAAA8L,aAEAxrB,EAAA0f,EAAAkW,uBAAAvB,EAAA93B,GAEA83B,EAAAwB,QAAAnW,EAAAqM,cAAAT,EAAAG,SACA4I,EAAAyB,QAAApW,EAAAqM,cAAAT,EAAAM,SACAyI,EAAA5H,cAAA/M,EAAAnjB,MACA83B,EAAA1H,OAAApwB,EACA83B,EAAAtM,OAAA,CACA8F,gBAAA7tB,EAAA6tB,gBACAC,YAAA9tB,EAAA8tB,YACAgG,cAAA9zB,EAAA8zB,cACA/F,YAAA/tB,EAAA+tB,YACAgI,aAAA50B,EAAAC,MACAA,MAAAse,EAAAmD,MAAA5lB,KAAA+4B,OAAAz5B,IAGAmjB,EAAAuW,uBAAA5B,EAAA93B,EAAA8vB,GAEAgI,EAAAxM,SAMAoO,uBAAA,SAAA5B,EAAA93B,EAAA8vB,GACA,IAAA3M,EAAAjsB,KACA00B,EAAAkM,EAAAtM,OAEAmO,EAAAxW,EAAAyM,iBAEAe,EAAAgJ,EAAAC,eACApC,EAAAmC,EAAAE,eACAC,EAAA3W,EAAAgW,QAAAhW,EAAAiW,WACAW,EAAA5W,EAAA6W,wBAAA7W,EAAAnjB,SACAi6B,EAAA9W,EAAA+W,wBAAA/W,EAAAnjB,QAAA85B,GACAlO,EAAA4L,aACA5L,EAAA+E,KAAAb,EAAAa,EAAAoJ,EAAApJ,KACA/E,EAAA9c,EAAA0oB,EAAA1H,EAAAa,EAAAoJ,EAAAI,KAAAF,EAAAG,OACAxO,EAAA7c,EAAAyoB,EAAAyC,EAAAG,OAAAtK,EAAAa,EAAAoJ,EAAAI,KACAvO,EAAAhoB,OAAA4zB,EAAAyC,EAAA1jC,UAAA1D,EACA+4B,EAAA/nB,MAAA2zB,OAAA3kC,EAAAonC,EAAA1jC,MASA8jC,WAAA,SAAAC,GACA,IAQAjpC,EAAA09B,EAPAzI,EADApvB,KACAovB,MAEA3J,EAHAzlB,KAGA24B,iBAEA0K,EAAA5d,EAAAlZ,QAAA82B,QACApY,OAAAtvB,IAAAynC,EAAAhU,EAAA5lB,KAAAyD,SAAA5S,OAAA+oC,EAAA,EACAE,EAAA,GAGA,IAAAnpC,EAAA,EAAiBA,EAAA8wB,IAAU9wB,GAC3B09B,EAAAzI,EAAAiJ,eAAAl+B,IAEA6nC,KAAA5S,EAAAmU,iBAAAppC,MAAA,IAAAkpC,IAAA,IAAAA,IAAA,IAAAC,EAAA7+B,QAAAozB,EAAAplB,aAAA9W,IAAA0nC,SAAA1nC,IAAAk8B,EAAAplB,QAAA,IAAA6wB,EAAA7+B,QAAAozB,EAAAplB,UACA6wB,EAAApnC,KAAA27B,EAAAplB,OAIA,OAAA6wB,GAOAE,cAAA,WACA,OAAAxjC,KAAAmjC,aAAA9oC,QAUAopC,cAAA,SAAAlM,EAAAxR,GACA,IAAAud,EAAAtjC,KAAAmjC,WAAA5L,GAEAzuB,OAAAnN,IAAAoqB,EAAAud,EAAA7+B,QAAAshB,IAAA,EAEA,WAAAjd,EAAAw6B,EAAAjpC,OAAA,EAAAyO,GAMAo5B,SAAA,WACA,IAUA/nC,EAAA8wB,EARAxF,EAFAzlB,KAEA24B,iBAEA+K,EAJA1jC,KAIAwjC,gBACAjM,EALAv3B,KAKA8I,MACA65B,EAAAld,EAAAkd,eACAhO,EAAAgO,EAAAld,EAAAgK,KAAAhK,EAAAiK,IACAiU,EAAAhP,GAAAgO,EAAAld,EAAA9Y,MAAA8Y,EAAA/Y,QACAk3B,EAAA,GAGA,IAAAzpC,EAAA,EAAA8wB,EAZAjrB,KAYA83B,UAAAtuB,KAAAnP,OAAkDF,EAAA8wB,IAAU9wB,EAC5DypC,EAAA1nC,KAAAupB,EAAAoe,iBAAA,KAAA1pC,EAAAo9B,IAIA,OACArgB,IAFA2c,GAAAhK,cAAApE,EAAAlZ,QAAAu3B,cA9NA,SAAAre,EAAAme,GACA,IAEAG,EAAAC,EAAA7pC,EAAA8wB,EAFA/T,EAAAuO,EAAAkd,eAAAld,EAAA9Y,MAAA8Y,EAAA/Y,OACAu3B,EAAAxe,EAAAye,WAGA,IAAA/pC,EAAA,EAAA8wB,EAAA2Y,EAAAvpC,OAAqCF,EAAA8wB,IAAU9wB,EAC/C+c,EAAAC,KAAAD,MAAAC,KAAA2nB,IAAA8E,EAAAzpC,GAAAypC,EAAAzpC,EAAA,KAGA,IAAAA,EAAA,EAAA8wB,EAAAgZ,EAAA5pC,OAAoCF,EAAA8wB,IAAU9wB,EAC9C6pC,EAAAve,EAAA0e,gBAAAhqC,GACA+c,EAAA/c,EAAA,EAAAgd,KAAAD,MAAA8sB,EAAAD,GAAA7sB,EACA6sB,EAAAC,EAGA,OAAA9sB,EA+MAktB,CAAA3e,EAAAme,IAAA,EAGAA,SACAjP,QACAgP,MACAD,aACAje,UAQAqd,wBAAA,SAAAvL,EAAAzuB,GACA,IAaA3O,EAAAkqC,EAAAC,EAAA7K,EAAAwJ,EAAA5jC,EAZA+vB,EADApvB,KACAovB,MACAyI,EAFA73B,KAEA83B,UAEArS,EAJAzlB,KAIA04B,iBAEAiK,EAAAld,EAAAkd,eACA11B,EAAAmiB,EAAA5lB,KAAAyD,SACAtT,GAAA8rB,EAAA8e,cAAAt3B,EAAAsqB,GAAA/tB,KAAAV,IACA07B,EAAA/e,EAAAlZ,QAAAi4B,aACAnB,EAAA5d,EAAAlZ,QAAA82B,QACA5wB,EAAAolB,EAAAplB,MACAkiB,EAAA,EAGA,GAAA0O,QAAA1nC,IAAA0nC,QAAA1nC,IAAA8W,EACA,IAAAtY,EAAA,EAAmBA,EAAAo9B,IAAkBp9B,GACrCkqC,EAAAjV,EAAAiJ,eAAAl+B,IAEA6nC,KAAAqC,EAAA5xB,WAAA4xB,EAAAI,WAAAjM,qBAAA/S,EAAAvW,IAAAkgB,EAAAmU,iBAAAppC,KACAmqC,GAAA7e,EAAA8e,cAAAt3B,EAAA9S,GAAAqP,KAAAV,KAEAnP,EAAA,GAAA2qC,EAAA,GAAA3qC,GAAA,GAAA2qC,EAAA,KACA3P,GAAA2P,IAoBA,OAdA7K,EAAAhU,EAAAoe,iBAAAlP,GACAsO,EAAAxd,EAAAoe,iBAAAlP,EAAAh7B,GACA0F,EAAA4jC,EAAAxJ,OAEA99B,IAAA6oC,GAAArtB,KAAA2nB,IAAAz/B,GAAAmlC,IACAnlC,EAAAmlC,EAGAvB,EADAtpC,GAAA,IAAAgpC,GAAAhpC,EAAA,GAAAgpC,EACAlJ,EAAA+K,EAEA/K,EAAA+K,GAIA,CACAnlC,OACAo6B,OACAwJ,OACAC,OAAAD,EAAA5jC,EAAA,IAOA2jC,wBAAA,SAAAzL,EAAAzuB,EAAA85B,GACA,IACAr2B,EAAAq2B,EAAAnd,MAAAlZ,QACAm4B,EAAA,SAAAn4B,EAAAu3B,aA/OA,SAAAh7B,EAAA85B,EAAAr2B,GACA,IAKAooB,EALAiP,EAAAhB,EAAAgB,OACAI,EAAAJ,EAAA96B,GACAi7B,EAAAj7B,EAAA,EAAA86B,EAAA96B,EAAA,QACA9M,EAAA8M,EAAA86B,EAAAvpC,OAAA,EAAAupC,EAAA96B,EAAA,QACA67B,EAAAp4B,EAAAm1B,mBAgBA,OAbA,OAAAqC,IAGAA,EAAAC,GAAA,OAAAhoC,EAAA4mC,EAAAe,IAAAf,EAAAjO,MAAA34B,EAAAgoC,IAGA,OAAAhoC,IAEAA,EAAAgoC,IAAAD,GAGApP,EAAAqP,KAAA7sB,KAAAD,IAAA6sB,EAAA/nC,IAAA,EAAA2oC,EAEA,CACAC,MAFAztB,KAAA2nB,IAAA9iC,EAAA+nC,GAAA,EAAAY,EAEA/B,EAAAc,WACA7qB,MAAAtM,EAAAo1B,cACAhN,SAuNAkQ,CAAA/7B,EAAA85B,EAAAr2B,GA9QA,SAAAzD,EAAA85B,EAAAr2B,GACA,IAGAlN,EAAAwZ,EAHAisB,EAAAv4B,EAAAu3B,aACAjJ,EAAA+H,EAAAc,WACAM,EAAApB,EAAAgB,OAAA96B,GAcA,OAXA+qB,GAAAhK,cAAAib,IACAzlC,EAAAujC,EAAA1rB,IAAA3K,EAAAm1B,mBACA7oB,EAAAtM,EAAAo1B,gBAKAtiC,EAAAylC,EAAAjK,EACAhiB,EAAA,GAGA,CACA+rB,MAAAvlC,EAAAw7B,EACAhiB,QACA8b,MAAAqP,EAAA3kC,EAAA,GA0PA0lC,CAAAj8B,EAAA85B,EAAAr2B,GACAy4B,EAHAhlC,KAGAyjC,cAAAlM,EAHAv3B,KAGA83B,UAAArlB,OACAywB,EAAAwB,EAAA/P,MAAA+P,EAAAE,MAAAI,EAAAN,EAAAE,MAAA,EACAvlC,EAAA8X,KAAAD,IAAA2c,GAAAzJ,eAAA7d,EAAA04B,gBAAAC,KAAAR,EAAAE,MAAAF,EAAA7rB,OACA,OACA4gB,KAAAyJ,EAAA7jC,EAAA,EACA4jC,KAAAC,EAAA7jC,EAAA,EACA6jC,SACA7jC,SAGAy6B,KAAA,WACA,IACA1K,EADApvB,KACAovB,MAEA3J,EAHAzlB,KAGA04B,iBAEAoI,EALA9gC,KAKA83B,UAAAtuB,KACAkE,EANA1N,KAMA+3B,aACA9M,EAAA6V,EAAAzmC,OACAF,EAAA,EAGA,IAFA05B,GAAAE,OAAA/C,SAAA5B,EAAAC,IAAAD,EAAAkQ,WAEYnlC,EAAA8wB,IAAU9wB,EACtBurB,MAAAD,EAAA8e,cAAA72B,EAAAlE,KAAArP,MACA2mC,EAAA3mC,GAAA2/B,OAIAjG,GAAAE,OAAA5C,WAAA/B,EAAAC,MAMA8S,uBAAA,SAAAvB,EAAA93B,GACA,IAOA3O,EAAA8wB,EAAAvxB,EANA01B,EADApvB,KACAovB,MACAniB,EAAAmiB,EAAA5lB,KAAAyD,SACAS,EAAAT,EAHAjN,KAGA8I,OACAoxB,EAAA0G,EAAA1G,QAAA,GACA3tB,EAAA6iB,EAAA7iB,QAAAstB,SAAA+G,UACA7xB,EAAA,GAGA6kB,EAAA,CACAxE,QACA+V,UAAAr8B,EACA4E,UACA6pB,aAbAv3B,KAaA8I,OAEAtO,EAAA,gEAEA,IAAAL,EAAA,EAAA8wB,EAAAzwB,EAAAH,OAAqCF,EAAA8wB,IAAU9wB,EAE/C4U,EADArV,EAAAc,EAAAL,IACAonC,GAAA,CAAArH,EAAAxgC,GAAAgU,EAAAhU,GAAA6S,EAAA7S,IAAAk6B,EAAA9qB,GAGA,OAAAiG,KAGAq2B,GAAAvR,GAAAzJ,eACAib,GAAAxR,GAAAtnB,QAAAmnB,QAEAf,GAAAT,KAAA,UACAsP,MAAA,CACAC,KAAA,UAEAxJ,OAAA,CACAC,MAAA,EACAj3B,KAAA,SAEA0O,SAAA,SACAT,GAAA,aAGAkpB,MAAA,EACAn3B,KAAA,SACA0O,SAAA,OACAT,GAAA,cAGAo2B,SAAA,CACAC,UAAA,CACAC,MAAA,WAEA,UAEA73B,MAAA,SAAA4e,EAAA/iB,GACA,IAAA84B,EAAA94B,EAAAyD,SAAAsf,EAAAgL,cAAA5pB,OAAA,GACA83B,EAAAj8B,EAAAyD,SAAAsf,EAAAgL,cAAA/tB,KAAA+iB,EAAAzjB,OACA,OAAAw5B,EAAA,MAAA/V,EAAAmZ,OAAA,KAAAnZ,EAAAoZ,OAAA,KAAAF,EAAA1uB,EAAA,SAMA,IAAA6uB,GAAAvK,GAAAxP,OAAA,CAIA4L,gBAAAoC,GAAAwH,MAKAxyB,OAAA,SAAA+pB,GACA,IAAA3M,EAAAjsB,KACA63B,EAAA5L,EAAA6L,UACAmG,EAAApG,EAAAruB,KAEAqqB,GAAAnJ,KAAAuT,EAAA,SAAAxvB,EAAA3F,GACAmjB,EAAAoN,cAAA5qB,EAAA3F,EAAA8vB,MAOAS,cAAA,SAAA5qB,EAAA3F,EAAA8vB,GACA,IAAA3M,EAAAjsB,KACA63B,EAAA5L,EAAA6L,UACAoC,EAAAzrB,EAAAyrB,QAAA,GACA2L,EAAA5Z,EAAAqM,cAAAT,EAAAG,SACA8N,EAAA7Z,EAAAqM,cAAAT,EAAAM,SAEA5rB,EAAA0f,EAAAkW,uBAAA1zB,EAAA3F,GAEAU,EAAAyiB,EAAA8L,aAAAvuB,KAAAV,GACAi9B,EAAA9Z,EAAAnjB,MACA8O,EAAAghB,EAAAiN,EAAAG,mBAAA,IAAAH,EAAAhC,iBAAA,kBAAAr6B,IAAAy8B,IAAAn9B,EAAAi9B,GACAluB,EAAA+gB,EAAAkN,EAAApD,eAAAoD,EAAAjC,iBAAAr6B,EAAAV,EAAAi9B,GACAt3B,EAAA2zB,QAAAyD,EACAp3B,EAAA4zB,QAAAyD,EACAr3B,EAAAy3B,SAAA35B,EACAkC,EAAAuqB,cAAA+M,EACAt3B,EAAAyqB,OAAApwB,EACA2F,EAAA6lB,OAAA,CACA8F,gBAAA7tB,EAAA6tB,gBACAC,YAAA9tB,EAAA8tB,YACAC,YAAA/tB,EAAA+tB,YACAyE,UAAAxyB,EAAAwyB,UACAC,WAAAzyB,EAAAyyB,WACA7O,SAAA5jB,EAAA4jB,SACAX,OAAAoJ,EAAA,EAAArsB,EAAAijB,OACAkP,KAAAxE,EAAAwE,MAAAhZ,MAAA9N,IAAA8N,MAAA7N,GACAD,IACAC,KAEApJ,EAAA2lB,SAMA6F,cAAA,SAAAxrB,GACA,IAAAimB,EAAAjmB,EAAA6lB,OACA/nB,EAAAkC,EAAAy3B,SACA/L,EAAAtG,GAAAsG,cACA1rB,EAAAurB,eAAA,CACAI,gBAAA1F,EAAA0F,gBACAC,YAAA3F,EAAA2F,YACAC,YAAA5F,EAAA4F,YACA9K,OAAAkF,EAAAlF,QAEAkF,EAAA0F,gBAAAgL,GAAA74B,EAAAguB,qBAAAJ,EAAA5tB,EAAA6tB,kBACA1F,EAAA2F,YAAA+K,GAAA74B,EAAAiuB,iBAAAL,EAAA5tB,EAAA8tB,cACA3F,EAAA4F,YAAA8K,GAAA74B,EAAAkuB,iBAAAluB,EAAA+tB,aACA5F,EAAAlF,OAAAjjB,EAAAijB,OAAAjjB,EAAAovB,aAMAwG,uBAAA,SAAA1zB,EAAA3F,GACA,IAQA3O,EAAA8wB,EAAAvxB,EAPA01B,EADApvB,KACAovB,MACAniB,EAAAmiB,EAAA5lB,KAAAyD,SACAS,EAAAT,EAHAjN,KAGA8I,OACAoxB,EAAAzrB,EAAAyrB,QAAA,GACA3tB,EAAA6iB,EAAA7iB,QAAAstB,SAAAprB,MACAjF,EAAAkE,EAAAlE,KAAAV,GACAiG,EAAA,GAGA6kB,EAAA,CACAxE,QACA+V,UAAAr8B,EACA4E,UACA6pB,aAdAv3B,KAcA8I,OAEAtO,EAAA,+JAEA,IAAAL,EAAA,EAAA8wB,EAAAzwB,EAAAH,OAAqCF,EAAA8wB,IAAU9wB,EAE/C4U,EADArV,EAAAc,EAAAL,IACAkrC,GAAA,CAAAnL,EAAAxgC,GAAAgU,EAAAhU,GAAA6S,EAAA7S,IAAAk6B,EAAA9qB,GAKA,OADAiG,EAAAygB,OAAA6V,GAAA,CAAAnL,EAAA1K,OAAAhmB,IAAAuN,OAAApb,EAAA+R,EAAA8hB,OAAAjjB,EAAAijB,QAAAoE,EAAA9qB,GACAiG,KAGAo3B,GAAAtS,GAAAtnB,QAAAmnB,QACA0S,GAAAvS,GAAAzJ,eAEAuI,GAAAT,KAAA,YACA0D,UAAA,CAEAyQ,eAAA,EAEAC,cAAA,GAEA9E,MAAA,CACAC,KAAA,UAEA8E,eAAA,SAAAnX,GACA,IAAAoX,EAAA,GACAA,EAAAtqC,KAAA,cAAAkzB,EAAAlgB,GAAA,aACA,IAAA1F,EAAA4lB,EAAA5lB,KACAyD,EAAAzD,EAAAyD,SACAs1B,EAAA/4B,EAAA+4B,OAEA,GAAAt1B,EAAA5S,OACA,QAAAF,EAAA,EAAuBA,EAAA8S,EAAA,GAAAzD,KAAAnP,SAA6BF,EACpDqsC,EAAAtqC,KAAA,qCAAA+Q,EAAA,GAAAmtB,gBAAAjgC,GAAA,aAEAooC,EAAApoC,IACAqsC,EAAAtqC,KAAAqmC,EAAApoC,IAGAqsC,EAAAtqC,KAAA,SAKA,OADAsqC,EAAAtqC,KAAA,SACAsqC,EAAAC,KAAA,KAEAh6B,OAAA,CACA81B,OAAA,CACAmE,eAAA,SAAAtX,GACA,IAAA5lB,EAAA4lB,EAAA5lB,KAEA,OAAAA,EAAA+4B,OAAAloC,QAAAmP,EAAAyD,SAAA5S,OACAmP,EAAA+4B,OAAAh5B,IAAA,SAAAoE,EAAAxT,GACA,IAAA09B,EAAAzI,EAAAiJ,eAAA,GACAsO,EAAAn9B,EAAAyD,SAAA,GACA6iB,EAAA+H,EAAAruB,KAAArP,GACA+/B,EAAApK,KAAAoK,QAAA,GACA0M,EAAAxX,EAAA7iB,QAAAstB,SAAA/J,IACAa,EAAAwV,GAAA,CAAAjM,EAAAE,gBAAAuM,EAAAvM,gBAAAwM,EAAAxM,sBAAAz+B,EAAAxB,GACAy2B,EAAAuV,GAAA,CAAAjM,EAAAG,YAAAsM,EAAAtM,YAAAuM,EAAAvM,kBAAA1+B,EAAAxB,GACA0sC,EAAAV,GAAA,CAAAjM,EAAAI,YAAAqM,EAAArM,YAAAsM,EAAAtM,kBAAA3+B,EAAAxB,GACA,OACAqsC,KAAA74B,EACAwvB,UAAAxM,EACA2M,YAAA1M,EACAwM,UAAAyJ,EACA1S,OAAAzO,MAAAihB,EAAAn9B,KAAArP,KAAA09B,EAAAruB,KAAArP,GAAAg6B,OAEArrB,MAAA3O,KAKA,KAGAiF,QAAA,SAAAgB,EAAA0mC,GACA,IAEA3sC,EAAA8wB,EAAA4M,EAFA/uB,EAAAg+B,EAAAh+B,MACAsmB,EAAApvB,KAAAovB,MAGA,IAAAj1B,EAAA,EAAA8wB,GAAAmE,EAAA5lB,KAAAyD,UAAA,IAAA5S,OAA8DF,EAAA8wB,IAAU9wB,GACxE09B,EAAAzI,EAAAiJ,eAAAl+B,IAEAqP,KAAAV,KACA+uB,EAAAruB,KAAAV,GAAAqrB,QAAA0D,EAAAruB,KAAAV,GAAAqrB,QAIA/E,EAAAvgB,WAIAk4B,iBAAA,GAEA5W,UAAA,GAAAhZ,KAAAiC,GAEA4tB,cAAA,EAAA7vB,KAAAiC,GAEAksB,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEA73B,MAAA,SAAAs5B,EAAAz9B,GACA,IAAA09B,EAAA19B,EAAA+4B,OAAA0E,EAAAn+B,OACAnP,EAAA,KAAA6P,EAAAyD,SAAAg6B,EAAA1P,cAAA/tB,KAAAy9B,EAAAn+B,OAWA,OATA+qB,GAAAx4B,QAAA6rC,IAGAA,IAAAhkB,SACA,IAAAvpB,EAEAutC,GAAAvtC,EAGAutC,OAMA,IAAAC,GAAA9L,GAAAxP,OAAA,CACA4L,gBAAAoC,GAAAuH,IACA1J,WAAA7D,GAAAlK,KAEAyd,aAAA,SAAA7P,GAGA,IAFA,IAAA8P,EAAA,EAEAC,EAAA,EAAqBA,EAAA/P,IAAkB+P,EACvCtnC,KAAAovB,MAAAmU,iBAAA+D,MACAD,EAIA,OAAAA,GAEAx4B,OAAA,SAAA+pB,GACA,IAkBAz+B,EAAA8wB,EAlBAgB,EAAAjsB,KACAovB,EAAAnD,EAAAmD,MACAkQ,EAAAlQ,EAAAkQ,UACAiI,EAAAnY,EAAA7iB,QACAi7B,EAAAlI,EAAA3P,MAAA2P,EAAA7P,KACAgY,EAAAnI,EAAA1P,OAAA0P,EAAA5P,IACAgY,EAAAvwB,KAAAD,IAAAswB,EAAAC,GACA7F,EAAA,CACAhqB,EAAA,EACAC,EAAA,GAEAggB,EAAA5L,EAAA6L,UACA6P,EAAA9P,EAAAruB,KACAu9B,EAAAQ,EAAAR,iBACAC,EAAAO,EAAAP,cAEAY,EAAA3b,EAAA4b,eAAA5b,EAAAnjB,OAIA,GAAAk+B,EAAA,EAAA7vB,KAAAiC,GAAA,CACA,IAAA+iB,EAAAoL,EAAApX,UAAA,EAAAhZ,KAAAiC,IAEAgjB,GADAD,GAAA,EAAAhlB,KAAAiC,IAAA+iB,GAAAhlB,KAAAiC,IAAA,EAAA+iB,GAAAhlB,KAAAiC,GAAA,MACA4tB,EACArS,EAAA,CACA/c,EAAAT,KAAAoC,IAAA4iB,GACAtkB,EAAAV,KAAAqC,IAAA2iB,IAEAwH,EAAA,CACA/rB,EAAAT,KAAAoC,IAAA6iB,GACAvkB,EAAAV,KAAAqC,IAAA4iB,IAEA0L,EAAA3L,GAAA,GAAAC,GAAA,GAAAD,GAAA,EAAAhlB,KAAAiC,IAAA,EAAAjC,KAAAiC,IAAAgjB,EACA2L,EAAA5L,GAAA,GAAAhlB,KAAAiC,IAAA,GAAAjC,KAAAiC,IAAAgjB,GAAAD,GAAA,IAAAhlB,KAAAiC,IAAA,IAAAjC,KAAAiC,IAAAgjB,EACA4L,EAAA7L,IAAAhlB,KAAAiC,KAAAjC,KAAAiC,IAAAgjB,GAAAD,GAAAhlB,KAAAiC,IAAAjC,KAAAiC,IAAAgjB,EACA6L,EAAA9L,GAAA,IAAAhlB,KAAAiC,IAAA,IAAAjC,KAAAiC,IAAAgjB,GAAAD,GAAA,IAAAhlB,KAAAiC,IAAA,IAAAjC,KAAAiC,IAAAgjB,EACA8L,EAAAnB,EAAA,IACA7vB,EAAA,CACAU,EAAAowB,GAAA,EAAA7wB,KAAAD,IAAAyd,EAAA/c,GAAA+c,EAAA/c,EAAA,IAAAswB,GAAAvE,EAAA/rB,GAAA+rB,EAAA/rB,EAAA,IAAAswB,IACArwB,EAAAowB,GAAA,EAAA9wB,KAAAD,IAAAyd,EAAA9c,GAAA8c,EAAA9c,EAAA,IAAAqwB,GAAAvE,EAAA9rB,GAAA8rB,EAAA9rB,EAAA,IAAAqwB,KAEA9wB,EAAA,CACAQ,EAAAkwB,EAAA,EAAA3wB,KAAAC,IAAAud,EAAA/c,GAAA+c,EAAA/c,EAAA,IAAAswB,GAAAvE,EAAA/rB,GAAA+rB,EAAA/rB,EAAA,IAAAswB,IACArwB,EAAAkwB,EAAA,EAAA5wB,KAAAC,IAAAud,EAAA9c,GAAA8c,EAAA9c,EAAA,IAAAqwB,GAAAvE,EAAA9rB,GAAA8rB,EAAA9rB,EAAA,IAAAqwB,KAEA7oC,EAAA,CACAsN,MAAA,IAAAyK,EAAAQ,EAAAV,EAAAU,GACAlL,OAAA,IAAA0K,EAAAS,EAAAX,EAAAW,IAEA6vB,EAAAvwB,KAAAD,IAAAswB,EAAAnoC,EAAAsN,MAAA86B,EAAApoC,EAAAqN,QACAk1B,EAAA,CACAhqB,GAAA,IAAAR,EAAAQ,EAAAV,EAAAU,GACAC,GAAA,IAAAT,EAAAS,EAAAX,EAAAW,IAIA,IAAA1d,EAAA,EAAA8wB,EAAA0c,EAAAttC,OAAqCF,EAAA8wB,IAAU9wB,EAC/CwtC,EAAAxtC,GAAA+rC,SAAAja,EAAAkW,uBAAAwF,EAAAxtC,MAaA,IAVAi1B,EAAAkL,YAAArO,EAAAkc,oBACA/Y,EAAAoN,YAAArlB,KAAAC,KAAAswB,EAAAtY,EAAAkL,aAAA,KACAlL,EAAAmN,YAAAplB,KAAAC,IAAA2vB,EAAA3X,EAAAoN,YAAA,IAAAuK,EAAA,KACA3X,EAAAgZ,cAAAhZ,EAAAoN,YAAApN,EAAAmN,cAAAtQ,EAAAoc,iCAAA,GACAjZ,EAAAkZ,QAAA1G,EAAAhqB,EAAAwX,EAAAoN,YACApN,EAAAmZ,QAAA3G,EAAA/pB,EAAAuX,EAAAoN,YACA3E,EAAA2Q,MAAAvc,EAAAwc,iBACAxc,EAAAuQ,YAAApN,EAAAoN,YAAApN,EAAAgZ,aAAAnc,EAAAyc,qBAAAzc,EAAAnjB,OACAmjB,EAAAsQ,YAAAplB,KAAAC,IAAA6U,EAAAuQ,YAAApN,EAAAgZ,aAAAR,EAAA,GAEAztC,EAAA,EAAA8wB,EAAA0c,EAAAttC,OAAqCF,EAAA8wB,IAAU9wB,EAC/C8xB,EAAAoN,cAAAsO,EAAAxtC,KAAAy+B,IAGAS,cAAA,SAAAvJ,EAAAhnB,EAAA8vB,GACA,IAAA3M,EAAAjsB,KACAovB,EAAAnD,EAAAmD,MACAkQ,EAAAlQ,EAAAkQ,UACAiI,EAAAnY,EAAA7iB,QACAo8B,EAAApB,EAAA3R,UACAgT,GAAAtJ,EAAA7P,KAAA6P,EAAA3P,OAAA,EACAkZ,GAAAvJ,EAAA5P,IAAA4P,EAAA1P,QAAA,EACAuM,EAAAoL,EAAApX,SAEAiM,EAAAmL,EAAApX,SAEAziB,EAAAue,EAAA8L,aACAiP,EAAApO,GAAA+P,EAAAtC,cAAA,EAAAvW,EAAAqE,OAAA,EAAAlI,EAAA6c,uBAAAp7B,EAAAlE,KAAAV,KAAAy+B,EAAAP,eAAA,EAAA7vB,KAAAiC,KACAmjB,EAAA3D,GAAA+P,EAAArC,aAAA,EAAAra,EAAAsQ,YACAC,EAAA5D,GAAA+P,EAAArC,aAAA,EAAAra,EAAAuQ,YACAjwB,EAAAujB,EAAAoW,UAAA,GACArS,GAAAhI,OAAAiE,EAAA,CAEAkJ,cAAA/M,EAAAnjB,MACAowB,OAAApwB,EAEAwrB,OAAA,CACA8F,gBAAA7tB,EAAA6tB,gBACAC,YAAA9tB,EAAA8tB,YACAC,YAAA/tB,EAAA+tB,YACAgB,YAAA/uB,EAAA+uB,YACA1jB,EAAAgxB,EAAAxZ,EAAAkZ,QACAzwB,EAAAgxB,EAAAzZ,EAAAmZ,QACApM,aACAC,WACA4K,gBACAxK,cACAD,cACA5uB,MAAAkmB,GAAAvJ,sBAAA5c,EAAAC,MAAA7E,EAAAsmB,EAAA5lB,KAAA+4B,OAAAz5B,OAGA,IAAA4rB,EAAA5E,EAAAwE,OAEAsE,GAAA+P,EAAAtC,gBAEA3R,EAAAyH,WADA,IAAArzB,EACAy+B,EAAApX,SAEAlE,EAAA6L,UAAAtuB,KAAAV,EAAA,GAAAwrB,OAAA8H,SAGA1H,EAAA0H,SAAA1H,EAAAyH,WAAAzH,EAAAsS,eAGAlX,EAAAsE,SAEAqU,eAAA,WACA,IAGA9uC,EAHA+T,EAAA1N,KAAA+3B,aACAF,EAAA73B,KAAA83B,UACA0Q,EAAA,EAaA,OAXA3U,GAAAnJ,KAAAmN,EAAAruB,KAAA,SAAAtF,EAAA4E,GACAnP,EAAA+T,EAAAlE,KAAAV,GAEA4c,MAAA/rB,IAAAuK,EAAAiwB,SACAqU,GAAArxB,KAAA2nB,IAAAnlC,MAOA6uC,GAEAM,uBAAA,SAAAnvC,GACA,IAAA6uC,EAAAxoC,KAAA83B,UAAA0Q,MAEA,OAAAA,EAAA,IAAA9iB,MAAA/rB,GACA,EAAAwd,KAAAiC,IAAAjC,KAAA2nB,IAAAnlC,GAAA6uC,GAGA,GAGAL,kBAAA,SAAAR,GACA,IAGAxtC,EAAA8wB,EAAA4M,EAAA/H,EAAA2U,EAAAl4B,EAAA+tB,EAAAyO,EAFA3xB,EAAA,EACAgY,EAFApvB,KAEAovB,MAGA,IAAAuY,EAEA,IAAAxtC,EAAA,EAAA8wB,EAAAmE,EAAA5lB,KAAAyD,SAAA5S,OAAsDF,EAAA8wB,IAAU9wB,EAChE,GAAAi1B,EAAAmU,iBAAAppC,GAAA,CACA09B,EAAAzI,EAAAiJ,eAAAl+B,GACAwtC,EAAA9P,EAAAruB,KAEArP,IAZA6F,KAYA8I,QACA27B,EAAA5M,EAAA4M,YAGA,MAKA,IAAAkD,EACA,SAGA,IAAAxtC,EAAA,EAAA8wB,EAAA0c,EAAAttC,OAAqCF,EAAA8wB,IAAU9wB,EAC/C21B,EAAA6X,EAAAxtC,GAGA,WAFAoS,EAAAk4B,IAAAtC,uBAAArS,EAAA31B,GAAA21B,EAAAoW,UAEA5K,cACAhB,EAAA/tB,EAAA+tB,YACAyO,EAAAx8B,EAAAkuB,iBAEArjB,EAAA2xB,GADA3xB,EAAAkjB,EAAAljB,EAAAkjB,EAAAljB,GACA2xB,EAAA3xB,GAIA,OAAAA,GAMA6iB,cAAA,SAAAnK,GACA,IAAA4E,EAAA5E,EAAAwE,OACA/nB,EAAAujB,EAAAoW,SACA/L,EAAAtG,GAAAsG,cACArK,EAAAkK,eAAA,CACAI,gBAAA1F,EAAA0F,gBACAC,YAAA3F,EAAA2F,YACAC,YAAA5F,EAAA4F,aAEA5F,EAAA0F,gBAAAgM,GAAA75B,EAAAguB,qBAAAJ,EAAA5tB,EAAA6tB,kBACA1F,EAAA2F,YAAA+L,GAAA75B,EAAAiuB,iBAAAL,EAAA5tB,EAAA8tB,cACA3F,EAAA4F,YAAA8L,GAAA75B,EAAAkuB,iBAAAluB,EAAA+tB,cAMA6H,uBAAA,SAAArS,EAAAhnB,GACA,IAMA3O,EAAA8wB,EAAAvxB,EALA01B,EADApvB,KACAovB,MACA1hB,EAFA1N,KAEA+3B,aACAmC,EAAApK,EAAAoK,QAAA,GACA3tB,EAAA6iB,EAAA7iB,QAAAstB,SAAA/J,IACA/gB,EAAA,GAGA6kB,EAAA,CACAxE,QACA+V,UAAAr8B,EACA4E,UACA6pB,aAZAv3B,KAYA8I,OAEAtO,EAAA,2HAEA,IAAAL,EAAA,EAAA8wB,EAAAzwB,EAAAH,OAAqCF,EAAA8wB,IAAU9wB,EAE/C4U,EADArV,EAAAc,EAAAL,IACAgsC,GAAA,CAAAjM,EAAAxgC,GAAAgU,EAAAhU,GAAA6S,EAAA7S,IAAAk6B,EAAA9qB,GAGA,OAAAiG,GAOA25B,qBAAA,SAAAnR,GAGA,IAFA,IAAAyR,EAAA,EAEA7uC,EAAA,EAAqBA,EAAAo9B,IAAkBp9B,EACvC6F,KAAAovB,MAAAmU,iBAAAppC,KACA6uC,GAAAhpC,KAAA6nC,eAAA1tC,IAIA,OAAA6uC,GAMAnB,eAAA,SAAAoB,GACA,OAAA9xB,KAAAC,IAAAgvB,GAAApmC,KAAAovB,MAAA5lB,KAAAyD,SAAAg8B,GAAArgB,OAAA,OAOAyf,8BAAA,WACA,OAAAroC,KAAA0oC,qBAAA1oC,KAAAovB,MAAA5lB,KAAAyD,SAAA5S,WAIAs4B,GAAAT,KAAA,iBACAsP,MAAA,CACAC,KAAA,QACAyH,KAAA,KAEAjR,OAAA,CACAC,MAAA,EACAj3B,KAAA,SACA0O,SAAA,WAEAyoB,MAAA,EACAn3B,KAAA,WACA0O,SAAA,OACA+xB,mBAAA,GACAC,cAAA,GACAC,QAAA,EACAC,UAAA,CACAC,iBAAA,MAIAjI,SAAA,CACA+G,UAAA,CACAP,cAAA,SAGAiF,SAAA,CACA7D,KAAA,QACAyH,KAAA,OAIA,IAAAC,GAAApH,GAAAlW,OAAA,CAIA2M,iBAAA,WACA,OAAAx4B,KAAA83B,UAAAE,SAMAS,iBAAA,WACA,OAAAz4B,KAAA83B,UAAAK,WAGAiR,GAAAvV,GAAAzJ,eACAif,GAAAxV,GAAAtnB,QAAAmnB,QACA4V,GAAAzV,GAAAE,OAAAjD,eAoBA,SAAAyY,GAAA77B,EAAAnB,GACA,OAAA68B,GAAA17B,EAAA87B,SAAAj9B,EAAAmmB,WAnBAC,GAAAT,KAAA,QACAQ,WAAA,EACAsL,UAAA,EACAwD,MAAA,CACAC,KAAA,SAEAxJ,OAAA,CACAC,MAAA,EACAj3B,KAAA,WACAiO,GAAA,aAEAkpB,MAAA,EACAn3B,KAAA,SACAiO,GAAA,gBASA,IAAAu6B,GAAApO,GAAAxP,OAAA,CACA2L,mBAAAqC,GAAA9vB,KACA0tB,gBAAAoC,GAAAwH,MACAxyB,OAAA,SAAA+pB,GACA,IAOAz+B,EAAA8wB,EAPAgB,EAAAjsB,KACA63B,EAAA5L,EAAA6L,UACA0F,EAAA3F,EAAAnqB,QACAuwB,EAAApG,EAAAruB,MAAA,GACAic,EAAAwG,EAAAqM,cAAAT,EAAAM,SACAzqB,EAAAue,EAAA8L,aACAyR,EAAAD,GAAA77B,EAAAue,EAAAmD,MAAA7iB,SAoBA,IAjBAi9B,SAEA7tC,IAAA+R,EAAAgkB,cAAA/1B,IAAA+R,EAAAg8B,cACAh8B,EAAAg8B,YAAAh8B,EAAAgkB,SAIA8L,EAAAmM,OAAAlkB,EACA+X,EAAAxE,cAAA/M,EAAAnjB,MAEA00B,EAAAU,UAAAD,EAEAT,EAAAlJ,OAAArI,EAAA2d,oBAAApM,GACAA,EAAApJ,SAIAj6B,EAAA,EAAA8wB,EAAAgT,EAAA5jC,OAAuCF,EAAA8wB,IAAU9wB,EACjD8xB,EAAAoN,cAAA4E,EAAA9jC,KAAAy+B,GAQA,IALA4Q,GAAA,IAAAhM,EAAAlJ,OAAA5C,SACAzF,EAAA4d,4BAIA1vC,EAAA,EAAA8wB,EAAAgT,EAAA5jC,OAAuCF,EAAA8wB,IAAU9wB,EACjD8jC,EAAA9jC,GAAAi6B,SAGAiF,cAAA,SAAA5qB,EAAA3F,EAAA8vB,GACA,IASAhhB,EAAAC,EATAoU,EAAAjsB,KACA63B,EAAA5L,EAAA6L,UACAoC,EAAAzrB,EAAAyrB,QAAA,GACAxsB,EAAAue,EAAA8L,aACAR,EAAAtL,EAAAnjB,MACAnP,EAAA+T,EAAAlE,KAAAV,GACAg9B,EAAA7Z,EAAAqM,cAAAT,EAAAM,SACA0N,EAAA5Z,EAAAqM,cAAAT,EAAAG,SACA8R,EAAAjS,EAAAnqB,QAAA4mB,OAGA/nB,EAAA0f,EAAA8d,qBAAAt7B,EAAA3F,GAEA8O,EAAAiuB,EAAAhC,iBAAA,kBAAAlqC,IAAAssC,IAAAn9B,EAAAyuB,GACA1f,EAAA+gB,EAAAkN,EAAApD,eAAAzW,EAAA+d,gBAAArwC,EAAAmP,EAAAyuB,GAEA9oB,EAAA2zB,QAAAyD,EACAp3B,EAAA4zB,QAAAyD,EACAr3B,EAAAy3B,SAAA35B,EACAkC,EAAAuqB,cAAAzB,EACA9oB,EAAAyqB,OAAApwB,EAEA2F,EAAA6lB,OAAA,CACA1c,IACAC,IACA6mB,KAAAxE,EAAAwE,MAAAhZ,MAAA9N,IAAA8N,MAAA7N,GAEA2X,OAAAjjB,EAAAijB,OACAwP,WAAAzyB,EAAAyyB,WACA7O,SAAA5jB,EAAA4jB,SACAiK,gBAAA7tB,EAAA6tB,gBACAC,YAAA9tB,EAAA8tB,YACAC,YAAA/tB,EAAA+tB,YACA5I,QAAA0X,GAAAlP,EAAAxI,QAAAoY,IAAApY,QAAA,GACAF,cAAAsY,KAAAtY,YAEAuN,UAAAxyB,EAAAwyB,YAOAgL,qBAAA,SAAA7lC,EAAA4E,GACA,IAMA3O,EAAA8wB,EAAAvxB,EALA01B,EADApvB,KACAovB,MACA1hB,EAAA0hB,EAAA5lB,KAAAyD,SAFAjN,KAEA8I,OACAoxB,EAAAh2B,EAAAg2B,QAAA,GACA3tB,EAAA6iB,EAAA7iB,QAAAstB,SAAAprB,MACAM,EAAA,GAGA6kB,EAAA,CACAxE,QACA+V,UAAAr8B,EACA4E,UACA6pB,aAZAv3B,KAYA8I,OAEAmhC,EAAA,CACA7P,gBAAA,uBACAC,YAAA,mBACAC,YAAA,mBACAyE,UAAA,iBACAxE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAkB,YAAA,mBACAqD,WAAA,aACAxP,OAAA,cACAW,SAAA,iBAEA31B,EAAAZ,OAAAY,KAAAyvC,GAEA,IAAA9vC,EAAA,EAAA8wB,EAAAzwB,EAAAH,OAAqCF,EAAA8wB,IAAU9wB,EAC/CT,EAAAc,EAAAL,GACA4U,EAAArV,GAAA2vC,GAAA,CAAAnP,EAAAxgC,GAAAgU,EAAAu8B,EAAAvwC,IAAAgU,EAAAhU,GAAA6S,EAAA7S,IAAAk6B,EAAA9qB,GAGA,OAAAiG,GAMA66B,oBAAA,SAAA1lC,GACA,IAOA/J,EAAA8wB,EAAAvxB,EANA01B,EADApvB,KACAovB,MACA1hB,EAAA0hB,EAAA5lB,KAAAyD,SAFAjN,KAEA8I,OACAoxB,EAAAh2B,EAAAg2B,QAAA,GACA3tB,EAAA6iB,EAAA7iB,QACA29B,EAAA39B,EAAAstB,SAAA2D,KACAzuB,EAAA,GAEAvU,EAAA,mJAEA,IAAAL,EAAA,EAAA8wB,EAAAzwB,EAAAH,OAAqCF,EAAA8wB,IAAU9wB,EAE/C4U,EADArV,EAAAc,EAAAL,IACAkvC,GAAA,CAAAnP,EAAAxgC,GAAAgU,EAAAhU,GAAAwwC,EAAAxwC,KASA,OAHAqV,EAAAivB,SAAAoL,GAAA17B,EAAAswB,SAAAzxB,EAAAyxB,UACAjvB,EAAA2iB,QAAA0X,GAAA17B,EAAAg8B,YAAAQ,EAAAxY,SACA3iB,EAAAyiB,YAAA6X,GAAA,CAAAnP,EAAA1I,YAAA9jB,EAAA8jB,YAAA0Y,EAAA3Y,UACAxiB,GAEAi7B,gBAAA,SAAArwC,EAAAmP,EAAAyuB,GACA,IAMAp9B,EAAAwsC,EAAAwD,EALA/a,EADApvB,KACAovB,MACAyI,EAFA73B,KAEA83B,UACAgO,EAHA9lC,KAGAs4B,cAAAT,EAAAM,SACAiS,EAAA,EACAC,EAAA,EAGA,GAAAvE,EAAAv5B,QAAA82B,QAAA,CACA,IAAAlpC,EAAA,EAAmBA,EAAAo9B,EAAkBp9B,IAIrC,GAHAwsC,EAAAvX,EAAA5lB,KAAAyD,SAAA9S,GAGA,UAFAgwC,EAAA/a,EAAAiJ,eAAAl+B,IAEA8G,MAAAkpC,EAAAhS,UAAA2N,EAAA52B,IAAAkgB,EAAAmU,iBAAAppC,GAAA,CACA,IAAAmwC,EAAAngB,OAAA2b,EAAAvB,cAAAoC,EAAAn9B,KAAAV,KAEAwhC,EAAA,EACAD,GAAAC,GAAA,EAEAF,GAAAE,GAAA,EAKA,IAAAC,EAAApgB,OAAA2b,EAAAvB,cAAA5qC,IAEA,OAAA4wC,EAAA,EACAzE,EAAAjC,iBAAAwG,EAAAE,GAGAzE,EAAAjC,iBAAAuG,EAAAG,GAGA,OAAAzE,EAAAjC,iBAAAlqC,IAEAkwC,0BAAA,WACA,IAMA1vC,EAAA8wB,EAAAyJ,EAAA8V,EALApb,EADApvB,KACAovB,MACAyI,EAFA73B,KAEA83B,UACAgS,EAAAjS,EAAAnqB,QAAA4mB,OACAvD,EAAA3B,EAAAkQ,UACArB,EAAApG,EAAAruB,MAAA,GASA,SAAAihC,EAAAC,EAAAxzB,EAAAE,GACA,OAAAD,KAAAC,IAAAD,KAAAD,IAAAwzB,EAAAtzB,GAAAF,GAGA,GAVA4yB,EAAA9L,WACAC,IAAAtjC,OAAA,SAAA+vC,GACA,OAAAA,EAAApW,OAAAoK,QAQA,aAAAoL,EAAAa,uBACA9W,GAAA+W,oBAAA3M,QAEA,IAAA9jC,EAAA,EAAA8wB,EAAAgT,EAAA5jC,OAAyCF,EAAA8wB,IAAU9wB,EACnDu6B,EAAAuJ,EAAA9jC,GAAAm6B,OACAkW,EAAA3W,GAAAgX,YAAAhX,GAAA4K,aAAAR,EAAA9jC,GAAAm6B,OAAAI,EAAAb,GAAAiX,SAAA7M,EAAA9jC,GAAAm6B,OAAAwV,EAAApY,SACAgD,EAAA9C,sBAAA4Y,EAAAnZ,SAAAzZ,EACA8c,EAAA5C,sBAAA0Y,EAAAnZ,SAAAxZ,EACA6c,EAAA7C,kBAAA2Y,EAAAxuC,KAAA4b,EACA8c,EAAA3C,kBAAAyY,EAAAxuC,KAAA6b,EAIA,GAAAuX,EAAA7iB,QAAAstB,SAAA2D,KAAAK,gBACA,IAAA1jC,EAAA,EAAA8wB,EAAAgT,EAAA5jC,OAAyCF,EAAA8wB,IAAU9wB,EACnDu6B,EAAAuJ,EAAA9jC,GAAAm6B,OAEAgV,GAAA5U,EAAA3D,KACA52B,EAAA,GAAAmvC,GAAArL,EAAA9jC,EAAA,GAAAm6B,OAAAvD,KACA2D,EAAA9C,sBAAA6Y,EAAA/V,EAAA9C,sBAAAb,EAAAtB,KAAAsB,EAAApB,OACA+E,EAAA5C,sBAAA2Y,EAAA/V,EAAA5C,sBAAAf,EAAArB,IAAAqB,EAAAnB,SAGAz1B,EAAA8jC,EAAA5jC,OAAA,GAAAivC,GAAArL,EAAA9jC,EAAA,GAAAm6B,OAAAvD,KACA2D,EAAA7C,kBAAA4Y,EAAA/V,EAAA7C,kBAAAd,EAAAtB,KAAAsB,EAAApB,OACA+E,EAAA3C,kBAAA0Y,EAAA/V,EAAA3C,kBAAAhB,EAAArB,IAAAqB,EAAAnB,WAMAkK,KAAA,WACA,IAMAiR,EALA3b,EADApvB,KACAovB,MACAyI,EAFA73B,KAEA83B,UACAmG,EAAApG,EAAAruB,MAAA,GACAunB,EAAA3B,EAAAkQ,UACArU,EAAAgT,EAAA5jC,OAEAF,EAAA,EAeA,IAbAovC,GATAvpC,KASA+3B,aAAA3I,EAAA7iB,WACAw+B,GAAAlT,EAAAnqB,QAAA4mB,OAAAgG,aAAA,KACAzG,GAAAE,OAAA/C,SAAA5B,EAAAC,IAAA,CACAI,KAAAsB,EAAAtB,KACAE,MAAAoB,EAAApB,MACAD,IAAAqB,EAAArB,IAAAqb,EACAnb,OAAAmB,EAAAnB,OAAAmb,IAEAlT,EAAAnqB,QAAAosB,OACAjG,GAAAE,OAAA5C,WAAA/B,EAAAC,MAIYl1B,EAAA8wB,IAAU9wB,EACtB8jC,EAAA9jC,GAAA2/B,KAAA/I,IAOAkJ,cAAA,SAAAxrB,GACA,IAAAimB,EAAAjmB,EAAA6lB,OACA/nB,EAAAkC,EAAAy3B,SACA/L,EAAAtG,GAAAsG,cACA1rB,EAAAurB,eAAA,CACAI,gBAAA1F,EAAA0F,gBACAC,YAAA3F,EAAA2F,YACAC,YAAA5F,EAAA4F,YACA9K,OAAAkF,EAAAlF,QAEAkF,EAAA0F,gBAAAgP,GAAA78B,EAAAguB,qBAAAJ,EAAA5tB,EAAA6tB,kBACA1F,EAAA2F,YAAA+O,GAAA78B,EAAAiuB,iBAAAL,EAAA5tB,EAAA8tB,cACA3F,EAAA4F,YAAA8O,GAAA78B,EAAAkuB,iBAAAluB,EAAA+tB,aACA5F,EAAAlF,OAAA4Z,GAAA78B,EAAAovB,YAAApvB,EAAAijB,WAGAwb,GAAAnX,GAAAtnB,QAAAmnB,QAEAf,GAAAT,KAAA,aACAzM,MAAA,CACAxkB,KAAA,eACAgqC,WAAA,CACAv7B,SAAA,GAEAmyB,UAAA,CACAqJ,UAAA,GAEAC,YAAA,CACAz7B,SAAA,GAEAu0B,MAAA,CACAmH,aAAA,IAIAxV,UAAA,CACAyQ,eAAA,EACAC,cAAA,GAEAnK,YAAA,GAAAhlB,KAAAiC,GACAmtB,eAAA,SAAAnX,GACA,IAAAoX,EAAA,GACAA,EAAAtqC,KAAA,cAAAkzB,EAAAlgB,GAAA,aACA,IAAA1F,EAAA4lB,EAAA5lB,KACAyD,EAAAzD,EAAAyD,SACAs1B,EAAA/4B,EAAA+4B,OAEA,GAAAt1B,EAAA5S,OACA,QAAAF,EAAA,EAAuBA,EAAA8S,EAAA,GAAAzD,KAAAnP,SAA6BF,EACpDqsC,EAAAtqC,KAAA,qCAAA+Q,EAAA,GAAAmtB,gBAAAjgC,GAAA,aAEAooC,EAAApoC,IACAqsC,EAAAtqC,KAAAqmC,EAAApoC,IAGAqsC,EAAAtqC,KAAA,SAKA,OADAsqC,EAAAtqC,KAAA,SACAsqC,EAAAC,KAAA,KAEAh6B,OAAA,CACA81B,OAAA,CACAmE,eAAA,SAAAtX,GACA,IAAA5lB,EAAA4lB,EAAA5lB,KAEA,OAAAA,EAAA+4B,OAAAloC,QAAAmP,EAAAyD,SAAA5S,OACAmP,EAAA+4B,OAAAh5B,IAAA,SAAAoE,EAAAxT,GACA,IAAA09B,EAAAzI,EAAAiJ,eAAA,GACAsO,EAAAn9B,EAAAyD,SAAA,GACA6iB,EAAA+H,EAAAruB,KAAArP,GACA+/B,EAAApK,EAAAoK,QAAA,GACA0M,EAAAxX,EAAA7iB,QAAAstB,SAAA/J,IACAa,EAAAqa,GAAA,CAAA9Q,EAAAE,gBAAAuM,EAAAvM,gBAAAwM,EAAAxM,sBAAAz+B,EAAAxB,GACAy2B,EAAAoa,GAAA,CAAA9Q,EAAAG,YAAAsM,EAAAtM,YAAAuM,EAAAvM,kBAAA1+B,EAAAxB,GACA0sC,EAAAmE,GAAA,CAAA9Q,EAAAI,YAAAqM,EAAArM,YAAAsM,EAAAtM,kBAAA3+B,EAAAxB,GACA,OACAqsC,KAAA74B,EACAwvB,UAAAxM,EACA2M,YAAA1M,EACAwM,UAAAyJ,EACA1S,OAAAzO,MAAAihB,EAAAn9B,KAAArP,KAAA09B,EAAAruB,KAAArP,GAAAg6B,OAEArrB,MAAA3O,KAKA,KAGAiF,QAAA,SAAAgB,EAAA0mC,GACA,IAEA3sC,EAAA8wB,EAAA4M,EAFA/uB,EAAAg+B,EAAAh+B,MACAsmB,EAAApvB,KAAAovB,MAGA,IAAAj1B,EAAA,EAAA8wB,GAAAmE,EAAA5lB,KAAAyD,UAAA,IAAA5S,OAA8DF,EAAA8wB,IAAU9wB,GACxE09B,EAAAzI,EAAAiJ,eAAAl+B,IACAqP,KAAAV,GAAAqrB,QAAA0D,EAAAruB,KAAAV,GAAAqrB,OAGA/E,EAAAvgB,WAIAy2B,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEA73B,MAAA,SAAA4e,EAAA/iB,GACA,OAAAA,EAAA+4B,OAAAhW,EAAAzjB,OAAA,KAAAyjB,EAAAoZ,YAMA,IAAA0F,GAAAhQ,GAAAxP,OAAA,CACA4L,gBAAAoC,GAAAuH,IACA1J,WAAA7D,GAAAlK,KACA9a,OAAA,SAAA+pB,GACA,IAOAz+B,EAAA8wB,EAAAgR,EAPAhQ,EAAAjsB,KACA0N,EAAAue,EAAA8L,aACAF,EAAA5L,EAAA6L,UACAnD,EAAA1I,EAAAmD,MAAA7iB,QAAA4vB,YAAA,EACAmP,EAAArf,EAAAsf,QAAA,GACAC,EAAAvf,EAAAwf,QAAA,GACA9D,EAAA9P,EAAAruB,KAOA,IAJAyiB,EAAAyf,gBAEA7T,EAAAgD,MAAA5O,EAAA0f,uBAEAxxC,EAAA,EAAA8wB,EAAAvd,EAAAlE,KAAAnP,OAA6CF,EAAA8wB,EAAU9wB,IACvDmxC,EAAAnxC,GAAAw6B,EACAsH,EAAAhQ,EAAA2f,cAAAzxC,GACAqxC,EAAArxC,GAAA8hC,EACAtH,GAAAsH,EAGA,IAAA9hC,EAAA,EAAA8wB,EAAA0c,EAAAttC,OAAqCF,EAAA8wB,IAAU9wB,EAC/CwtC,EAAAxtC,GAAA+rC,SAAAja,EAAAkW,uBAAAwF,EAAAxtC,MACA8xB,EAAAoN,cAAAsO,EAAAxtC,KAAAy+B,IAOA8S,cAAA,WACA,IAAAzf,EAAAjsB,KACAovB,EAAAnD,EAAAmD,MACAkQ,EAAAlQ,EAAAkQ,UACAiI,EAAAnY,EAAA7iB,QACAm7B,EAAAvwB,KAAAD,IAAAooB,EAAA3P,MAAA2P,EAAA7P,KAAA6P,EAAA1P,OAAA0P,EAAA5P,KACAN,EAAAoN,YAAArlB,KAAAC,IAAAswB,EAAA,KACAtY,EAAAmN,YAAAplB,KAAAC,IAAAmwB,EAAAR,iBAAA3X,EAAAoN,YAAA,IAAA+K,EAAAR,iBAAA,KACA3X,EAAAgZ,cAAAhZ,EAAAoN,YAAApN,EAAAmN,aAAAnN,EAAAyc,yBACA5f,EAAAuQ,YAAApN,EAAAoN,YAAApN,EAAAgZ,aAAAnc,EAAAnjB,MACAmjB,EAAAsQ,YAAAtQ,EAAAuQ,YAAApN,EAAAgZ,cAEA/O,cAAA,SAAAvJ,EAAAhnB,EAAA8vB,GACA,IAAA3M,EAAAjsB,KACAovB,EAAAnD,EAAAmD,MACA1hB,EAAAue,EAAA8L,aACAwP,EAAAnY,EAAA7iB,QACAo8B,EAAApB,EAAA3R,UACAnQ,EAAA2J,EAAA3J,MACA8c,EAAAnT,EAAA5lB,KAAA+4B,OACAqG,EAAAnjB,EAAAqmB,QACAjD,EAAApjB,EAAAsmB,QAEAC,EAAAzE,EAAApL,WACAD,EAAApM,EAAAqE,OAAA,EAAA1O,EAAAwmB,8BAAAv+B,EAAAlE,KAAAV,IACAqzB,EAAAlQ,EAAAsf,QAAAziC,GACAszB,EAAAD,GAAArM,EAAAqE,OAAA,EAAAlI,EAAAwf,QAAA3iC,IACAojC,EAAAvD,EAAArC,aAAA,EAAA7gB,EAAAwmB,8BAAAv+B,EAAAlE,KAAAV,IACAyD,EAAAujB,EAAAoW,UAAA,GACArS,GAAAhI,OAAAiE,EAAA,CAEAkJ,cAAA/M,EAAAnjB,MACAowB,OAAApwB,EACA6gC,OAAAlkB,EAEA6O,OAAA,CACA8F,gBAAA7tB,EAAA6tB,gBACAC,YAAA9tB,EAAA8tB,YACAC,YAAA/tB,EAAA+tB,YACAgB,YAAA/uB,EAAA+uB,YACA1jB,EAAAgxB,EACA/wB,EAAAgxB,EACAtM,YAAA,EACAC,YAAA5D,EAAAsT,EAAAhQ,EACAC,WAAAvD,GAAA+P,EAAAtC,cAAA2F,EAAA7P,EACAC,SAAAxD,GAAA+P,EAAAtC,cAAA2F,EAAA5P,EACAzuB,MAAAkmB,GAAAvJ,sBAAAiY,EAAAz5B,EAAAy5B,EAAAz5B,OAGAgnB,EAAAsE,SAEAuX,qBAAA,WACA,IAAAj+B,EAAA1N,KAAA+3B,aACAF,EAAA73B,KAAA83B,UACA+C,EAAA,EAMA,OALAhH,GAAAnJ,KAAAmN,EAAAruB,KAAA,SAAAtF,EAAA4E,GACA4c,MAAAhY,EAAAlE,KAAAV,KAAA5E,EAAAiwB,QACA0G,MAGAA,GAMAZ,cAAA,SAAAnK,GACA,IAAA4E,EAAA5E,EAAAwE,OACA/nB,EAAAujB,EAAAoW,SACA/L,EAAAtG,GAAAsG,cACA/P,EAAAyJ,GAAAzJ,eACA0F,EAAAkK,eAAA,CACAI,gBAAA1F,EAAA0F,gBACAC,YAAA3F,EAAA2F,YACAC,YAAA5F,EAAA4F,aAEA5F,EAAA0F,gBAAAhQ,EAAA7d,EAAAguB,qBAAAJ,EAAA5tB,EAAA6tB,kBACA1F,EAAA2F,YAAAjQ,EAAA7d,EAAAiuB,iBAAAL,EAAA5tB,EAAA8tB,cACA3F,EAAA4F,YAAAlQ,EAAA7d,EAAAkuB,iBAAAluB,EAAA+tB,cAMA6H,uBAAA,SAAArS,EAAAhnB,GACA,IAMA3O,EAAA8wB,EAAAvxB,EALA01B,EADApvB,KACAovB,MACA1hB,EAFA1N,KAEA+3B,aACAmC,EAAApK,EAAAoK,QAAA,GACA3tB,EAAA6iB,EAAA7iB,QAAAstB,SAAA/J,IACA/gB,EAAA,GAGA6kB,EAAA,CACAxE,QACA+V,UAAAr8B,EACA4E,UACA6pB,aAZAv3B,KAYA8I,OAEAtO,EAAA,2HAEA,IAAAL,EAAA,EAAA8wB,EAAAzwB,EAAAH,OAAqCF,EAAA8wB,IAAU9wB,EAE/C4U,EADArV,EAAAc,EAAAL,IACA6wC,GAAA,CAAA9Q,EAAAxgC,GAAAgU,EAAAhU,GAAA6S,EAAA7S,IAAAk6B,EAAA9qB,GAGA,OAAAiG,GAMA68B,cAAA,SAAA9iC,GACA,IAAAmjB,EAAAjsB,KACA66B,EAAA76B,KAAA83B,UAAA+C,MACAntB,EAAAue,EAAA8L,aACAF,EAAA5L,EAAA6L,UAEA,GAAApS,MAAAhY,EAAAlE,KAAAV,KAAA+uB,EAAAruB,KAAAV,GAAAqrB,OACA,SAIA,IAAAP,EAAA,CACAxE,MAAAnD,EAAAmD,MACA+V,UAAAr8B,EACA4E,UACA6pB,aAAAtL,EAAAnjB,OAEA,OAAAkiC,GAAA,CAAA/e,EAAAmD,MAAA7iB,QAAAstB,SAAA/J,IAAAmM,MAAA,EAAA9kB,KAAAiC,GAAAyhB,GAAAjH,EAAA9qB,MAIA6pB,GAAAT,KAAA,MAAA2B,GAAA7K,MAAA2J,GAAAwZ,WAEAxZ,GAAAT,KAAA,OACA6U,iBAAA,IAIA,IAAAqF,GAAAjF,GACAkF,GAAAxY,GAAAzJ,eACAkiB,GAAAzY,GAAAtnB,QAAAmnB,QAEAf,GAAAT,KAAA,SACAzM,MAAA,CACAxkB,KAAA,gBAEA44B,SAAA,CACA2D,KAAA,CACA9L,QAAA,MAMA,IAAA6a,GAAAlR,GAAAxP,OAAA,CACA2L,mBAAAqC,GAAA9vB,KACA0tB,gBAAAoC,GAAAwH,MACA3J,WAAA7D,GAAAlK,KACA9a,OAAA,SAAA+pB,GACA,IAMAz+B,EAAA8wB,EANAgB,EAAAjsB,KACA63B,EAAA5L,EAAA6L,UACA0F,EAAA3F,EAAAnqB,QACAuwB,EAAApG,EAAAruB,MAAA,GACAic,EAAAwG,EAAAmD,MAAA3J,MACA/X,EAAAue,EAAA8L,aAiBA,SAdAp8B,IAAA+R,EAAAgkB,cAAA/1B,IAAA+R,EAAAg8B,cACAh8B,EAAAg8B,YAAAh8B,EAAAgkB,SAIA8L,EAAAmM,OAAAlkB,EACA+X,EAAAxE,cAAA/M,EAAAnjB,MAEA00B,EAAAU,UAAAD,EACAT,EAAAa,OAAA,EAEAb,EAAAlJ,OAAArI,EAAA2d,oBAAApM,GACAA,EAAApJ,QAEAj6B,EAAA,EAAA8wB,EAAAgT,EAAA5jC,OAAuCF,EAAA8wB,IAAU9wB,EACjD8xB,EAAAoN,cAAA4E,EAAA9jC,KAAAy+B,GAMA,IAFA3M,EAAA4d,4BAEA1vC,EAAA,EAAA8wB,EAAAgT,EAAA5jC,OAAuCF,EAAA8wB,IAAU9wB,EACjD8jC,EAAA9jC,GAAAi6B,SAGAiF,cAAA,SAAA5qB,EAAA3F,EAAA8vB,GACA,IAAA3M,EAAAjsB,KACAk6B,EAAAzrB,EAAAyrB,QAAA,GACAxsB,EAAAue,EAAA8L,aACAtS,EAAAwG,EAAAmD,MAAA3J,MACA+mB,EAAA/mB,EAAAgnB,yBAAA3jC,EAAA4E,EAAAlE,KAAAV,IAEAyD,EAAA0f,EAAA8d,qBAAAt7B,EAAA3F,GAEAghC,EAAA7d,EAAA6L,UAAApqB,QAAA4mB,OAEA1c,EAAAghB,EAAAnT,EAAAqmB,QAAAU,EAAA50B,EACAC,EAAA+gB,EAAAnT,EAAAsmB,QAAAS,EAAA30B,EAEApJ,EAAAk7B,OAAAlkB,EACAhX,EAAAy3B,SAAA35B,EACAkC,EAAAuqB,cAAA/M,EAAAnjB,MACA2F,EAAAyqB,OAAApwB,EAEA2F,EAAA6lB,OAAA,CACA1c,IAEAC,IACA6mB,KAAAxE,EAAAwE,MAAAhZ,MAAA9N,IAAA8N,MAAA7N,GAEA2X,OAAAjjB,EAAAijB,OACAwP,WAAAzyB,EAAAyyB,WACA7O,SAAA5jB,EAAA4jB,SACAiK,gBAAA7tB,EAAA6tB,gBACAC,YAAA9tB,EAAA8tB,YACAC,YAAA/tB,EAAA+tB,YACA5I,QAAA2a,GAAAnS,EAAAxI,QAAAoY,IAAApY,QAAA,GAEAqN,UAAAxyB,EAAAwyB,YAOAgL,qBAAA,SAAA7lC,EAAA4E,GACA,IAMA3O,EAAA8wB,EAAAvxB,EALA01B,EADApvB,KACAovB,MACA1hB,EAAA0hB,EAAA5lB,KAAAyD,SAFAjN,KAEA8I,OACAoxB,EAAAh2B,EAAAg2B,QAAA,GACA3tB,EAAA6iB,EAAA7iB,QAAAstB,SAAAprB,MACAM,EAAA,GAGA6kB,EAAA,CACAxE,QACA+V,UAAAr8B,EACA4E,UACA6pB,aAZAv3B,KAYA8I,OAEAmhC,EAAA,CACA7P,gBAAA,uBACAC,YAAA,mBACAC,YAAA,mBACAyE,UAAA,iBACAxE,qBAAA,4BACAC,iBAAA,wBACAC,iBAAA,wBACAkB,YAAA,mBACAqD,WAAA,aACAxP,OAAA,cACAW,SAAA,iBAEA31B,EAAAZ,OAAAY,KAAAyvC,GAEA,IAAA9vC,EAAA,EAAA8wB,EAAAzwB,EAAAH,OAAqCF,EAAA8wB,IAAU9wB,EAC/CT,EAAAc,EAAAL,GACA4U,EAAArV,GAAA4yC,GAAA,CAAApS,EAAAxgC,GAAAgU,EAAAu8B,EAAAvwC,IAAAgU,EAAAhU,GAAA6S,EAAA7S,IAAAk6B,EAAA9qB,GAGA,OAAAiG,GAMA66B,oBAAA,SAAA1lC,GACA,IAMA/J,EAAA8wB,EAAAvxB,EALA01B,EADApvB,KACAovB,MACA1hB,EAAA0hB,EAAA5lB,KAAAyD,SAFAjN,KAEA8I,OACAoxB,EAAAh2B,EAAAg2B,QAAA,GACA3tB,EAAA6iB,EAAA7iB,QAAAstB,SAAA2D,KACAzuB,EAAA,GAEAvU,EAAA,0HAEA,IAAAL,EAAA,EAAA8wB,EAAAzwB,EAAAH,OAAqCF,EAAA8wB,IAAU9wB,EAE/C4U,EADArV,EAAAc,EAAAL,IACAmyC,GAAA,CAAApS,EAAAxgC,GAAAgU,EAAAhU,GAAA6S,EAAA7S,KAIA,OADAqV,EAAA2iB,QAAA2a,GAAA3+B,EAAAg8B,YAAAn9B,EAAAmlB,SACA3iB,GAEA86B,0BAAA,WACA,IAIA1vC,EAAA8wB,EAAAyJ,EAAA8V,EAHA3S,EADA73B,KACA83B,UACA/G,EAFA/wB,KAEAovB,MAAAkQ,UACArB,EAAApG,EAAAruB,MAAA,GAGA,SAAAihC,EAAAC,EAAAxzB,EAAAE,GACA,OAAAD,KAAAC,IAAAD,KAAAD,IAAAwzB,EAAAtzB,GAAAF,GAGA,IAAA/c,EAAA,EAAA8wB,EAAAgT,EAAA5jC,OAAuCF,EAAA8wB,IAAU9wB,EACjDu6B,EAAAuJ,EAAA9jC,GAAAm6B,OACAkW,EAAA3W,GAAAgX,YAAAhX,GAAA4K,aAAAR,EAAA9jC,GAAA,GAAAm6B,OAAAI,EAAAb,GAAAiX,SAAA7M,EAAA9jC,GAAA,GAAAm6B,OAAAI,EAAAhD,SAEAgD,EAAA9C,sBAAA6Y,EAAAD,EAAAnZ,SAAAzZ,EAAAmZ,EAAAtB,KAAAsB,EAAApB,OACA+E,EAAA5C,sBAAA2Y,EAAAD,EAAAnZ,SAAAxZ,EAAAkZ,EAAArB,IAAAqB,EAAAnB,QACA8E,EAAA7C,kBAAA4Y,EAAAD,EAAAxuC,KAAA4b,EAAAmZ,EAAAtB,KAAAsB,EAAApB,OACA+E,EAAA3C,kBAAA0Y,EAAAD,EAAAxuC,KAAA6b,EAAAkZ,EAAArB,IAAAqB,EAAAnB,SAGAqK,cAAA,SAAAxrB,GACA,IAAAimB,EAAAjmB,EAAA6lB,OACA/nB,EAAAkC,EAAAy3B,SACA/L,EAAAtG,GAAAsG,cACA1rB,EAAAurB,eAAA,CACAI,gBAAA1F,EAAA0F,gBACAC,YAAA3F,EAAA2F,YACAC,YAAA5F,EAAA4F,YACA9K,OAAAkF,EAAAlF,QAEAkF,EAAA0F,gBAAAiS,GAAA9/B,EAAAguB,qBAAAJ,EAAA5tB,EAAA6tB,kBACA1F,EAAA2F,YAAAgS,GAAA9/B,EAAAiuB,iBAAAL,EAAA5tB,EAAA8tB,cACA3F,EAAA4F,YAAA+R,GAAA9/B,EAAAkuB,iBAAAluB,EAAA+tB,aACA5F,EAAAlF,OAAA6c,GAAA9/B,EAAAovB,YAAApvB,EAAAijB,WAIAmD,GAAAT,KAAA,WACAsP,MAAA,CACAC,KAAA,UAEAxJ,OAAA,CACAC,MAAA,EACAhpB,GAAA,WAEAjO,KAAA,SAEA0O,SAAA,WAEAyoB,MAAA,EACAlpB,GAAA,WACAjO,KAAA,SACA0O,SAAA,UAGA+iB,WAAA,EACA4S,SAAA,CACAC,UAAA,CACAC,MAAA,WACA,UAEA73B,MAAA,SAAA4e,GACA,UAAAA,EAAAmZ,OAAA,KAAAnZ,EAAAoZ,OAAA,SAOA,IAIAn2B,GAAA,CACAwyB,IAAAD,GACA2K,OAAA9G,GACAuG,SAAAhF,GACAwF,cAAAxD,GACA3L,KAAAiM,GACAmD,UAAAvB,GACAwB,IAAAT,GACAU,MAAAP,GACAQ,QAbAtD,IAsBA,SAAAuD,GAAA5sC,EAAAgvB,GACA,OAAAhvB,EAAA6sC,OACA,CACAr1B,EAAAxX,EAAAwX,EACAC,EAAAzX,EAAAyX,GAIAgc,GAAAmZ,oBAAA5sC,EAAAgvB,GASA,SAAA8d,GAAA9d,EAAA/oB,GACA,IACAwxB,EAAA19B,EAAAmtC,EAAArc,EAAAkiB,EADAlgC,EAAAmiB,EAAA5lB,KAAAyD,SAGA,IAAA9S,EAAA,EAAA8wB,EAAAhe,EAAA5S,OAAuCF,EAAA8wB,IAAU9wB,EACjD,GAAAi1B,EAAAmU,iBAAAppC,GAMA,IAFA09B,EAAAzI,EAAAiJ,eAAAl+B,GAEAmtC,EAAA,EAAA6F,EAAAtV,EAAAruB,KAAAnP,OAA0CitC,EAAA6F,IAAU7F,EAAA,CACpD,IAAApjC,EAAA2zB,EAAAruB,KAAA89B,GAEApjC,EAAAmwB,MAAAqK,MACAr4B,EAAAnC,IAaA,SAAAkpC,GAAAhe,EAAAzf,GACA,IAAAkqB,EAAA,GAMA,OALAqT,GAAA9d,EAAA,SAAAlrB,GACAA,EAAA03B,QAAAjsB,EAAAiI,EAAAjI,EAAAkI,IACAgiB,EAAA39B,KAAAgI,KAGA21B,EAYA,SAAAwT,GAAAje,EAAAzf,EAAA29B,EAAAC,GACA,IAAAC,EAAArjB,OAAAsjB,kBACAC,EAAA,GAiBA,OAhBAR,GAAA9d,EAAA,SAAAlrB,GACA,IAAAopC,GAAAppC,EAAA03B,QAAAjsB,EAAAiI,EAAAjI,EAAAkI,GAAA,CAIA,IAAAqrB,EAAAh/B,EAAAu4B,iBACAP,EAAAqR,EAAA59B,EAAAuzB,GAEAhH,EAAAsR,GACAE,EAAA,CAAAxpC,GACAspC,EAAAtR,GACOA,IAAAsR,GAEPE,EAAAxxC,KAAAgI,MAGAwpC,EASA,SAAAC,GAAAzE,GACA,IAAA0E,GAAA,IAAA1E,EAAAzkC,QAAA,KACAopC,GAAA,IAAA3E,EAAAzkC,QAAA,KACA,gBAAAqpC,EAAAC,GACA,IAAAC,EAAAJ,EAAAz2B,KAAA2nB,IAAAgP,EAAAl2B,EAAAm2B,EAAAn2B,GAAA,EACAq2B,EAAAJ,EAAA12B,KAAA2nB,IAAAgP,EAAAj2B,EAAAk2B,EAAAl2B,GAAA,EACA,OAAAV,KAAAkC,KAAAlC,KAAAQ,IAAAq2B,EAAA,GAAA72B,KAAAQ,IAAAs2B,EAAA,KAIA,SAAAC,GAAA9e,EAAAhvB,EAAAmM,GACA,IAAAoD,EAAAq9B,GAAA5sC,EAAAgvB,GAEA7iB,EAAA28B,KAAA38B,EAAA28B,MAAA,IACA,IAAAqE,EAAAI,GAAAphC,EAAA28B,MACAiF,EAAA5hC,EAAA+gC,UAAAF,GAAAhe,EAAAzf,GAAA09B,GAAAje,EAAAzf,GAAA,EAAA49B,GACA1T,EAAA,GAEA,OAAAsU,EAAA9zC,QAIA+0B,EAAA5lB,KAAAyD,SAAAnS,QAAA,SAAA4S,EAAA6pB,GACA,GAAAnI,EAAAmU,iBAAAhM,GAAA,CACA,IAAAM,EAAAzI,EAAAiJ,eAAAd,GACArzB,EAAA2zB,EAAAruB,KAAA2kC,EAAA,GAAAjV,QAEAh1B,MAAAmwB,MAAAqK,MACA7E,EAAA39B,KAAAgI,MAIA21B,GAbA,GA+BA,IAAAuU,GAAA,CAEAC,MAAA,CACAC,OAAA,SAAAlf,EAAAhvB,GACA,IAAAuP,EAAAq9B,GAAA5sC,EAAAgvB,GACAyK,EAAA,GAOA,OANAqT,GAAA9d,EAAA,SAAAlrB,GACA,GAAAA,EAAA03B,QAAAjsB,EAAAiI,EAAAjI,EAAAkI,GAEA,OADAgiB,EAAA39B,KAAAgI,GACA21B,IAGAA,EAAA3W,MAAA,MASAvV,MAAAugC,GAYAplC,MAAAolC,GAWAxgC,QAAA,SAAA0hB,EAAAhvB,EAAAmM,GACA,IAAAoD,EAAAq9B,GAAA5sC,EAAAgvB,GACA7iB,EAAA28B,KAAA38B,EAAA28B,MAAA,KACA,IAAAqE,EAAAI,GAAAphC,EAAA28B,MACAiF,EAAA5hC,EAAA+gC,UAAAF,GAAAhe,EAAAzf,GAAA09B,GAAAje,EAAAzf,GAAA,EAAA49B,GAMA,OAJAY,EAAA9zC,OAAA,IACA8zC,EAAA/e,EAAAiJ,eAAA8V,EAAA,GAAAnV,eAAAxvB,MAGA2kC,GASAI,SAAA,SAAAnf,EAAAhvB,GACA,OAAA8tC,GAAA9e,EAAAhvB,EAAA,CACAktC,WAAA,KAYA7+B,MAAA,SAAA2gB,EAAAhvB,GACA,IAAAuP,EAAAq9B,GAAA5sC,EAAAgvB,GACA,OAAAge,GAAAhe,EAAAzf,IAWA6+B,QAAA,SAAApf,EAAAhvB,EAAAmM,GACA,IAAAoD,EAAAq9B,GAAA5sC,EAAAgvB,GACA7iB,EAAA28B,KAAA38B,EAAA28B,MAAA,KACA,IAAAqE,EAAAI,GAAAphC,EAAA28B,MACA,OAAAmE,GAAAje,EAAAzf,EAAApD,EAAA+gC,UAAAC,IAWA31B,EAAA,SAAAwX,EAAAhvB,EAAAmM,GACA,IAAAoD,EAAAq9B,GAAA5sC,EAAAgvB,GACA+e,EAAA,GACAM,GAAA,EAgBA,OAfAvB,GAAA9d,EAAA,SAAAlrB,GACAA,EAAAi7B,SAAAxvB,EAAAiI,IACAu2B,EAAAjyC,KAAAgI,GAGAA,EAAA03B,QAAAjsB,EAAAiI,EAAAjI,EAAAkI,KACA42B,GAAA,KAKAliC,EAAA+gC,YAAAmB,IACAN,EAAA,IAGAA,GAWAt2B,EAAA,SAAAuX,EAAAhvB,EAAAmM,GACA,IAAAoD,EAAAq9B,GAAA5sC,EAAAgvB,GACA+e,EAAA,GACAM,GAAA,EAgBA,OAfAvB,GAAA9d,EAAA,SAAAlrB,GACAA,EAAAk7B,SAAAzvB,EAAAkI,IACAs2B,EAAAjyC,KAAAgI,GAGAA,EAAA03B,QAAAjsB,EAAAiI,EAAAjI,EAAAkI,KACA42B,GAAA,KAKAliC,EAAA+gC,YAAAmB,IACAN,EAAA,IAGAA,KAKA,SAAAO,GAAAvlC,EAAAwG,GACA,OAAAkkB,GAAA8a,MAAAxlC,EAAA,SAAA8L,GACA,OAAAA,EAAAtF,eAIA,SAAAi/B,GAAAzlC,EAAAyhB,GACAzhB,EAAArO,QAAA,SAAAma,EAAA9a,GAEA,OADA8a,EAAA45B,WAAA10C,EACA8a,IAEA9L,EAAA2lC,KAAA,SAAAvwC,EAAA0Y,GACA,IAAAiU,EAAAN,EAAA3T,EAAA1Y,EACA4sB,EAAAP,EAAArsB,EAAA0Y,EACA,OAAAiU,EAAAtC,SAAAuC,EAAAvC,OAAAsC,EAAA2jB,WAAA1jB,EAAA0jB,WAAA3jB,EAAAtC,OAAAuC,EAAAvC,SAEAzf,EAAArO,QAAA,SAAAma,UACAA,EAAA45B,aA0BA,SAAAE,GAAAC,EAAA3vC,GACAw0B,GAAAnJ,KAAAskB,EAAA,SAAAC,GACA5vC,EAAA4vC,EAAAt/B,WAAAs/B,EAAAtM,eAAAsM,EAAAviC,OAAAuiC,EAAAtiC,QAIAgmB,GAAAT,KAAA,UACAgd,OAAA,CACA7P,QAAA,CACA3P,IAAA,EACAC,MAAA,EACAC,OAAA,EACAH,KAAA,MAyBA,IA8TA1xB,GA9TAoxC,GAAA,CACAr9B,SAAA,GAQAs9B,OAAA,SAAAhgB,EAAA7C,GACA6C,EAAA4f,QACA5f,EAAA4f,MAAA,IAIAziB,EAAA8iB,UAAA9iB,EAAA8iB,YAAA,EACA9iB,EAAA5c,SAAA4c,EAAA5c,UAAA,MACA4c,EAAA3D,OAAA2D,EAAA3D,QAAA,EACAwG,EAAA4f,MAAA9yC,KAAAqwB,IAQA+iB,UAAA,SAAAlgB,EAAAmgB,GACA,IAAAzmC,EAAAsmB,EAAA4f,MAAA5f,EAAA4f,MAAAvqC,QAAA8qC,IAAA,GAEA,IAAAzmC,GACAsmB,EAAA4f,MAAAxgC,OAAA1F,EAAA,IAUA0mC,UAAA,SAAApgB,EAAA7C,EAAAhgB,GAMA,IALA,IAGA0c,EAHAppB,EAAA,kCACAorB,EAAAprB,EAAAxF,OACAF,EAAA,EAGYA,EAAA8wB,IAAU9wB,EACtB8uB,EAAAppB,EAAA1F,GAEAoS,EAAA/K,eAAAynB,KACAsD,EAAAtD,GAAA1c,EAAA0c,KAYApa,OAAA,SAAAugB,EAAAziB,EAAAD,GACA,GAAA0iB,EAAA,CAIA,IAAAqgB,EAAArgB,EAAA7iB,QAAA2iC,QAAA,GACA7P,EAAAxL,GAAAtnB,QAAAwmB,UAAA0c,EAAApQ,SACAqQ,EAAArQ,EAAA5P,KACAkgB,EAAAtQ,EAAA1P,MACAigB,EAAAvQ,EAAA3P,IACAmgB,EAAAxQ,EAAAzP,OACAkgB,EAAApB,GAAAtf,EAAA4f,MAAA,QACAe,EAAArB,GAAAtf,EAAA4f,MAAA,SACAgB,EAAAtB,GAAAtf,EAAA4f,MAAA,OACAiB,EAAAvB,GAAAtf,EAAA4f,MAAA,UACAkB,EAAAxB,GAAAtf,EAAA4f,MAAA,aAEAJ,GAAAkB,GAAA,GACAlB,GAAAmB,GAAA,GACAnB,GAAAoB,GAAA,GACApB,GAAAqB,GAAA,GACA,IA2DAE,EA3DAC,EAAAN,EAAAp1C,OAAAq1C,GACAM,EAAAL,EAAAt1C,OAAAu1C,GACAK,EAAAF,EAAA11C,OAAA21C,GAsCAE,EAAA5jC,EAAA+iC,EAAAC,EACAa,EAAA9jC,EAAAkjC,EAAAC,EACAY,EAAAF,EAAA,EAGAG,GAAA/jC,EAAA8jC,GAAAL,EAAA/1C,OAKAs2C,EAAAJ,EACAK,EAAAJ,EACAK,EAAA,CACAnhB,IAAAkgB,EACAngB,KAAAigB,EACA9f,OAAAigB,EACAlgB,MAAAggB,GAEAmB,EAAA,GAsBAjd,GAAAnJ,KAAA4lB,EAnBA,SAAArB,GACA,IAAAvH,EACA/E,EAAAsM,EAAAtM,eAEAA,GACA+E,EAAAuH,EAAApgC,OAAAogC,EAAAI,UAAAkB,EAAAI,EAAAH,EAAA,GACAI,GAAAlJ,EAAAh7B,SAEAg7B,EAAAuH,EAAApgC,OAAA6hC,EAAAE,GACAD,GAAAjJ,EAAA/6B,OAGAmkC,EAAA50C,KAAA,CACAokC,WAAAqC,EACAh2B,MAAA+6B,EAAA/6B,MACAsiC,UAMAkB,EAhOA,SAAAnB,GACA,IAAAtf,EAAA,EACAD,EAAA,EACAG,EAAA,EACAD,EAAA,EAUA,OATAkE,GAAAnJ,KAAAskB,EAAA,SAAAC,GACA,GAAAA,EAAA8B,WAAA,CACA,IAAAC,EAAA/B,EAAA8B,aACArhB,EAAAvY,KAAAC,IAAAsY,EAAAshB,EAAAthB,KACAD,EAAAtY,KAAAC,IAAAqY,EAAAuhB,EAAAvhB,MACAG,EAAAzY,KAAAC,IAAAwY,EAAAohB,EAAAphB,QACAD,EAAAxY,KAAAC,IAAAuY,EAAAqhB,EAAArhB,UAGA,CACAD,MACAD,OACAG,SACAD,SA8MAshB,CAAAX,GA4BAzc,GAAAnJ,KAAA0lB,EAAAc,GACAnC,GAAAqB,EAAAS,GAEAhd,GAAAnJ,KAAA2lB,EAAAa,GACAnC,GAAAsB,EAAAQ,GAmBAhd,GAAAnJ,KAAA0lB,EAjBA,SAAAnB,GACA,IAAAkC,EAAAtd,GAAAud,cAAAN,EAAA,SAAApJ,GACA,OAAAA,EAAAuH,UAEAoC,EAAA,CACA5hB,KAAA,EACAE,MAAA,EACAD,IAAAmhB,EAAAnhB,IACAE,OAAAihB,EAAAjhB,QAGAuhB,GACAlC,EAAApgC,OAAAsiC,EAAAxkC,MAAAikC,EAAAS,KAaAtC,GAAAuB,EANAO,EAAA,CACAnhB,IAAAkgB,EACAngB,KAAAigB,EACA9f,OAAAigB,EACAlgB,MAAAggB,IAIA,IAAA2B,EAAAn6B,KAAAC,IAAA+4B,EAAA1gB,KAAAohB,EAAAphB,KAAA,GACAohB,EAAAphB,MAAA6hB,EACAT,EAAAlhB,OAAAxY,KAAAC,IAAA+4B,EAAAxgB,MAAAkhB,EAAAlhB,MAAA,GACA,IAAA4hB,EAAAp6B,KAAAC,IAAA+4B,EAAAzgB,IAAAmhB,EAAAnhB,IAAA,GACAmhB,EAAAnhB,KAAA6hB,EACAV,EAAAjhB,QAAAzY,KAAAC,IAAA+4B,EAAAvgB,OAAAihB,EAAAjhB,OAAA,GAIA,IAAA4hB,EAAA9kC,EAAAmkC,EAAAnhB,IAAAmhB,EAAAjhB,OACA6hB,EAAA9kC,EAAAkkC,EAAAphB,KAAAohB,EAAAlhB,MAEA8hB,IAAAd,GAAAa,IAAAZ,IACA/c,GAAAnJ,KAAA0lB,EAAA,SAAAnB,GACAA,EAAAviC,OAAA8kC,IAEA3d,GAAAnJ,KAAA2lB,EAAA,SAAApB,GACAA,EAAAI,YACAJ,EAAAtiC,MAAA8kC,KAGAb,EAAAY,EACAb,EAAAc,GAIA,IAAAhiB,EAAAigB,EAAA4B,EACA5hB,EAAAkgB,EAAA2B,EAoBA1d,GAAAnJ,KAAAolB,EAAAp1C,OAAAs1C,GAAA0B,GAEAjiB,GAAAkhB,EACAjhB,GAAAkhB,EACA/c,GAAAnJ,KAAAqlB,EAAA2B,GACA7d,GAAAnJ,KAAAulB,EAAAyB,GAEAtiB,EAAAkQ,UAAA,CACA7P,KAAAohB,EAAAphB,KACAC,IAAAmhB,EAAAnhB,IACAC,MAAAkhB,EAAAphB,KAAAkhB,EACA/gB,OAAAihB,EAAAnhB,IAAAkhB,GAGA/c,GAAAnJ,KAAAwlB,EAAA,SAAAjB,GACAA,EAAAxf,KAAAL,EAAAkQ,UAAA7P,KACAwf,EAAAvf,IAAAN,EAAAkQ,UAAA5P,IACAuf,EAAAtf,MAAAP,EAAAkQ,UAAA3P,MACAsf,EAAArf,OAAAR,EAAAkQ,UAAA1P,OACAqf,EAAApgC,OAAA8hC,EAAAC,KA1HA,SAAAM,EAAAjC,GACA,IAAAkC,EAAAtd,GAAAud,cAAAN,EAAA,SAAAa,GACA,OAAAA,EAAA1C,UAGA,GAAAkC,EACA,GAAAA,EAAA7Q,WAAA,CACA,IAAA+Q,EAAA,CACA5hB,KAAAtY,KAAAC,IAAAy5B,EAAAphB,KAAA0gB,EAAA1gB,MACAE,MAAAxY,KAAAC,IAAAy5B,EAAAlhB,MAAAwgB,EAAAxgB,OACAD,IAAA,EACAE,OAAA,GAIAqf,EAAApgC,OAAAogC,EAAAI,UAAAkB,EAAAI,EAAAH,EAAA,EAAAa,QAEApC,EAAApgC,OAAAsiC,EAAAxkC,MAAAikC,GAoEA,SAAAc,EAAAzC,GACAA,EAAAtM,gBACAsM,EAAAxf,KAAAwf,EAAAI,UAAAK,EAAAmB,EAAAphB,KACAwf,EAAAtf,MAAAsf,EAAAI,UAAA1iC,EAAAgjC,EAAAkB,EAAAphB,KAAAkhB,EACA1B,EAAAvf,MACAuf,EAAArf,OAAAF,EAAAuf,EAAAviC,OAEAgjB,EAAAuf,EAAArf,SAEAqf,EAAAxf,OACAwf,EAAAtf,MAAAF,EAAAwf,EAAAtiC,MACAsiC,EAAAvf,IAAAmhB,EAAAnhB,IACAuf,EAAArf,OAAAihB,EAAAnhB,IAAAkhB,EAEAnhB,EAAAwf,EAAAtf,UAqDAiiB,IAJA7zC,GAJAnE,OAAAi4C,OAAA,CACAz0C,QAJA,w3BAQAW,GAAAX,SAAAW,GAIA+zC,GAAA,WAEAC,GAAAC,uBACAC,GAAAD,yBACAE,GAAAF,2BACAG,GAAA,0CAOAC,GAAA,CACAC,WAAA,YACAC,UAAA,YACAC,SAAA,UACAC,aAAA,aACAC,YAAA,YACAC,YAAA,YACAC,UAAA,UACAC,aAAA,WACAC,WAAA,YAYA,SAAAC,GAAA5uC,EAAA6uC,GACA,IAAAp5C,EAAAk6B,GAAAmf,SAAA9uC,EAAA6uC,GACAjgB,EAAAn5B,KAAA0rB,MAAA,qBACA,OAAAyN,EAAA3I,OAAA2I,EAAA,SAAAn3B,EAgEA,IAmBAs3C,KAnBA,WACA,IAAAC,GAAA,EAEA,IACA,IAAA3mC,EAAA3S,OAAAC,eAAA,GAA4C,WAE5C6H,IAAA,WACAwxC,GAAA,KAGAzpB,OAAA0pB,iBAAA,SAAA5mC,GACK,MAAAnM,IAGL,OAAA8yC,EAdA,IAmBA,CACAE,SAAA,GAGA,SAAAC,GAAA9zC,EAAA0B,EAAAi2B,GACA33B,EAAA4zC,iBAAAlyC,EAAAi2B,EAAA+b,IAGA,SAAAK,GAAA/zC,EAAA0B,EAAAi2B,GACA33B,EAAAg0C,oBAAAtyC,EAAAi2B,EAAA+b,IAGA,SAAAO,GAAAvyC,EAAAmuB,EAAAxX,EAAAC,EAAA47B,GACA,OACAxyC,OACAmuB,QACA6d,OAAAwG,GAAA,KACA77B,OAAAjc,IAAAic,IAAA,KACAC,OAAAlc,IAAAkc,IAAA,MA2BA,SAAA67B,GAAAC,GACA,IAAAC,EAAAC,SAAAlzC,cAAA,OAEA,OADAizC,EAAAp0C,UAAAm0C,GAAA,GACAC,EAsEA,SAAAE,GAAAv0C,EAAA23B,EAAA9H,GACA,IAAA2kB,EAAAx0C,EAAAuyC,MAAAvyC,EAAAuyC,IAAA,IAEAkC,EAAAD,EAAAC,QArEA,SAAA3tC,GACA,IAGA2tC,EAAAN,GAAA3B,IACAkC,EAAAP,GAAA3B,GAAA,WACAmC,EAAAR,GAAA3B,GAAA,WACAkC,EAAAE,YAAAT,MACAQ,EAAAC,YAAAT,MACAM,EAAAG,YAAAF,GACAD,EAAAG,YAAAD,GAEAF,EAAAI,OAAA,WACAH,EAAAI,WAZA,IAaAJ,EAAAjwC,UAbA,IAcAkwC,EAAAG,WAdA,IAeAH,EAAAlwC,UAfA,KAkBA,IAAAswC,EAAA,WACAN,EAAAI,SAEA/tC,KAKA,OAFAgtC,GAAAY,EAAA,SAAAK,EAAAr0C,KAAAg0C,EAAA,WACAZ,GAAAa,EAAA,SAAAI,EAAAr0C,KAAAi0C,EAAA,WACAF,EA0CAO,CA7FA,SAAA/pB,EAAAC,GACA,IAAA+pB,GAAA,EACA9xC,EAAA,GACA,kBACAA,EAAAtH,MAAA+E,UAAA+iB,MAAAnjB,KAAA3F,WACAqwB,KAAAzqB,KAEAw0C,IACAA,GAAA,EACA3gB,GAAA+C,iBAAA72B,KAAA0pB,OAAA,WACA+qB,GAAA,EACAhqB,EAAAtoB,MAAAuoB,EAAA/nB,OAkFA+xC,CAAA,WACA,GAAAV,EAAAC,QAAA,CACA,IAAAU,EAAAtlB,EAAA7iB,QAAAooC,qBAAAp1C,EAAAq1C,WACAt9B,EAAAo9B,IAAAG,YAAA,EACA3d,EAAAsc,GAAA,SAAApkB,IAEAslB,KAAAG,YAAAv9B,GAAA8X,EAAA2E,QAQAmD,EAAAsc,GAAA,SAAApkB,SApDA,SAAA7vB,EAAA8G,GACA,IAAA0tC,EAAAx0C,EAAAuyC,MAAAvyC,EAAAuyC,IAAA,IAEAgD,EAAAf,EAAAgB,YAAA,SAAA30C,GACAA,EAAA40C,gBAAA9C,IACA7rC,KAIAwtB,GAAAnJ,KAAAynB,GAAA,SAAAlxC,GACAoyC,GAAA9zC,EAAA0B,EAAA6zC,KAOAf,EAAAkB,SAAA11C,EAAA21C,aACA31C,EAAA4E,UAAAC,IAAA6tC,IAwCAkD,CAAA51C,EAAA,WACA,GAAAw0C,EAAAC,QAAA,CACA,IAAAU,EAAAn1C,EAAAq1C,WAEAF,OAAAV,EAAAY,YACAF,EAAAU,aAAApB,EAAAU,EAAAW,YAIArB,EAAAI,YAKA,SAAAkB,GAAA/1C,GACA,IAAAw0C,EAAAx0C,EAAAuyC,KAAA,GACAkC,EAAAD,EAAAC,eACAD,EAAAC,QAtDA,SAAAz0C,GACA,IAAAw0C,EAAAx0C,EAAAuyC,KAAA,GACAgD,EAAAf,EAAAgB,YAEAD,IACAjhB,GAAAnJ,KAAAynB,GAAA,SAAAlxC,GACAqyC,GAAA/zC,EAAA0B,EAAA6zC,YAEAf,EAAAgB,aAGAx1C,EAAA4E,UAAAY,OAAAktC,IA4CAsD,CAAAh2C,GAEAy0C,KAAAY,YACAZ,EAAAY,WAAAY,YAAAxB,GAkBA,IAAAyB,GAAA,CAQAC,qBAAA,EAOAC,SAAA,qBAAAlsB,QAAA,qBAAAoqB,SAKA+B,cAAA,WACA51C,KAAA61C,UAIA71C,KAAA61C,SAAA,EAEA71C,KAAA01C,qBAzCA,SAAAI,EAAAC,GAEA,IAAA7lB,EAAA4lB,EAAAE,QAAAnC,SAAAlzC,cAAA,SAEAm1C,EAAAE,SACAF,EAAAE,OAAA9lB,EACA6lB,EAAA,mBAAAA,EACA7lB,EAAA5rB,aAAA,mBACAuvC,SAAAoC,qBAAA,WAAA9B,YAAAjkB,IAGAA,EAAAikB,YAAAN,SAAAqC,eAAAH,IA+BAI,CAAAn2C,KAAA4xC,MAGAwE,eAAA,SAAA7pB,EAAAxe,GACA,kBAAAwe,EACAA,EAAAsnB,SAAAwC,eAAA9pB,GACOA,EAAAlyB,SAEPkyB,IAAA,IAGAA,KAAAwH,SAEAxH,IAAAwH,QAMA,IAAAH,EAAArH,KAAA+pB,YAAA/pB,EAAA+pB,WAAA,MAYA,OATAt2C,KAAA41C,gBASAhiB,KAAAG,SAAAxH,GAzTA,SAAAwH,EAAAhmB,GACA,IAAAmiB,EAAA6D,EAAA7D,MAGAqmB,EAAAxiB,EAAAyiB,aAAA,UACAC,EAAA1iB,EAAAyiB,aAAA,SAkBA,GAhBAziB,EAAA+d,IAAA,CACA4E,QAAA,CACAhqC,OAAA6pC,EACA5pC,MAAA8pC,EACAvmB,MAAA,CACAxgB,QAAAwgB,EAAAxgB,QACAhD,OAAAwjB,EAAAxjB,OACAC,MAAAujB,EAAAvjB,SAOAujB,EAAAxgB,QAAAwgB,EAAAxgB,SAAA,QAEA,OAAA+mC,GAAA,KAAAA,EAAA,CACA,IAAAE,EAAA7D,GAAA/e,EAAA,cAEAp4B,IAAAg7C,IACA5iB,EAAApnB,MAAAgqC,GAIA,UAAAJ,GAAA,KAAAA,EACA,QAAAxiB,EAAA7D,MAAAxjB,OAIAqnB,EAAArnB,OAAAqnB,EAAApnB,OAAAoB,EAAAxB,QAAAqqC,aAAA,OACO,CACP,IAAAC,EAAA/D,GAAA/e,EAAA,eAEAp4B,IAAAg7C,IACA5iB,EAAArnB,OAAAmqC,IAiRAC,CAAAvqB,EAAAxe,GACA6lB,GAGA,MAEAmjB,eAAA,SAAAnjB,GACA,IAAAG,EAAAH,EAAAG,OAEA,GAAAA,EAAA+d,IAAA,CAIA,IAAA4E,EAAA3iB,EAAA+d,IAAA4E,QACA,mBAAA57C,QAAA,SAAAmuB,GACA,IAAAtvB,EAAA+8C,EAAAztB,GAEA4K,GAAAhK,cAAAlwB,GACAo6B,EAAAijB,gBAAA/tB,GAEA8K,EAAAzvB,aAAA2kB,EAAAtvB,KAGAk6B,GAAAnJ,KAAAgsB,EAAAxmB,OAAA,GAAwC,SAAAv2B,EAAAD,GACxCq6B,EAAA7D,MAAAx2B,GAAAC,IAOAo6B,EAAApnB,MAAAonB,EAAApnB,aACAonB,EAAA+d,MAEAqB,iBAAA,SAAA/jB,EAAAnuB,EAAAi2B,GACA,IAAAnD,EAAA3E,EAAA2E,OAEA,cAAA9yB,EAAA,CAMA,IAAA8yC,EAAA7c,EAAA4a,MAAA5a,EAAA4a,IAAA,IACAmF,EAAAlD,EAAAkD,UAAAlD,EAAAkD,QAAA,IAEAnC,EAAAmC,EAAA7nB,EAAAlgB,GAAA,IAAAjO,GAAA,SAAAsK,GACA2rB,EAzQA,SAAA3rB,EAAA6jB,GACA,IAAAnuB,EAAAmxC,GAAA7mC,EAAAtK,OAAAsK,EAAAtK,KACAi2C,EAAArjB,GAAAmZ,oBAAAzhC,EAAA6jB,GACA,OAAAokB,GAAAvyC,EAAAmuB,EAAA8nB,EAAAt/B,EAAAs/B,EAAAr/B,EAAAtM,GAsQA4rC,CAAA5rC,EAAA6jB,KAGAikB,GAAAtf,EAAA9yB,EAAA6zC,QAXAhB,GAAA/f,EAAAmD,EAAA9H,IAaAmkB,oBAAA,SAAAnkB,EAAAnuB,EAAAi2B,GACA,IAAAnD,EAAA3E,EAAA2E,OAEA,cAAA9yB,EAAA,CAMA,IAAA8yC,EAAA7c,EAAA4a,KAAA,GACAmF,EAAAlD,EAAAkD,SAAA,GACAnC,EAAAmC,EAAA7nB,EAAAlgB,GAAA,IAAAjO,GAEA6zC,GAIAxB,GAAAvf,EAAA9yB,EAAA6zC,QAZAQ,GAAAvhB,KA0BAF,GAAAujB,SAAA/D,GAWAxf,GAAAwjB,YAAA/D,GAEA,IAAAgE,GAAA7B,GAAAE,SAAAF,GA7dA,CACAW,eAAA,SAAA7pB,GAMA,OALAA,KAAAwH,SAEAxH,IAAAwH,QAGAxH,KAAA+pB,WAAA,cA6dAR,GAAAjiB,GAAAhI,OAAA,CAIAqI,WAAA,aASAkiB,eAAA,aAQAW,eAAA,aASA5D,iBAAA,aAQAI,oBAAA,cACG+D,IAEH3kB,GAAAT,KAAA,UACA1lB,QAAA,KASA,IAAA+qC,GAAA,CAKAC,SAAA,GAQAC,SAAA,EAMAC,SAAA,SAAAlrC,GACA,IAAA+L,EAAAvY,KAAAw3C,SACA,GAAA98C,OAAA8R,GAAA1R,QAAA,SAAA68C,IACA,IAAAp/B,EAAA9T,QAAAkzC,IACAp/B,EAAArc,KAAAy7C,KAGA33C,KAAAy3C,YAOAG,WAAA,SAAAprC,GACA,IAAA+L,EAAAvY,KAAAw3C,SACA,GAAA98C,OAAA8R,GAAA1R,QAAA,SAAA68C,GACA,IAAArxC,EAAAiS,EAAA9T,QAAAkzC,IAEA,IAAArxC,GACAiS,EAAA/J,OAAAlI,EAAA,KAGAtG,KAAAy3C,YAOA1uC,MAAA,WACA/I,KAAAw3C,SAAA,GACAx3C,KAAAy3C,YAQA5c,MAAA,WACA,OAAA76B,KAAAw3C,SAAAn9C,QAQAw9C,OAAA,WACA,OAAA73C,KAAAw3C,UAYAM,OAAA,SAAA1oB,EAAA2oB,EAAAr1C,GACA,IAEAvI,EAAA69C,EAAAL,EAAAM,EAAAze,EAFA0e,EAAAl4C,KAAAk4C,YAAA9oB,GACAnE,EAAAitB,EAAA79C,OAGA,IAAAF,EAAA,EAAiBA,EAAA8wB,IAAU9wB,EAK3B,GAJA69C,EAAAE,EAAA/9C,GACAw9C,EAAAK,EAAAL,OAGA,oBAFAne,EAAAme,EAAAI,OAGAE,EAAA,CAAA7oB,GAAA10B,OAAAgI,GAAA,KACAxG,KAAA87C,EAAAzrC,UAEA,IAAAitB,EAAAt3B,MAAAy1C,EAAAM,IACA,SAKA,UAQAC,YAAA,SAAA9oB,GACA,IAAA+oB,EAAA/oB,EAAAgpB,WAAAhpB,EAAAgpB,SAAA,IAEA,GAAAD,EAAAjpC,KAAAlP,KAAAy3C,SACA,OAAAU,EAAAD,YAGA,IAAA1rC,EAAA,GACA0rC,EAAA,GACAnqC,EAAAqhB,KAAArhB,QAAA,GACAxB,EAAAwB,EAAAxB,SAAAwB,EAAAxB,QAAAC,SAAA,GA6BA,OA3BAxM,KAAAw3C,SAAA98C,OAAAqT,EAAAvB,SAAA,IAAA1R,QAAA,SAAA68C,GACA,IAAArxC,EAAAkG,EAAA/H,QAAAkzC,GAEA,QAAArxC,EAAA,CAIA,IAAA4I,EAAAyoC,EAAAzoC,GACAq4B,EAAAh7B,EAAA2C,IAEA,IAAAq4B,KAIA,IAAAA,IACAA,EAAA1T,GAAA7K,MAAA2J,GAAAO,OAAA1mB,QAAA0C,KAGA1C,EAAAtQ,KAAAy7C,GACAO,EAAAh8C,KAAA,CACAy7C,SACAprC,QAAAg7B,GAAA,SAIA4Q,EAAAD,cACAC,EAAAjpC,GAAAlP,KAAAy3C,SACAS,GASAG,YAAA,SAAAjpB,UACAA,EAAAgpB,WAGAE,GAAA,CAGAC,aAAA,GAIAzmC,SAAA,GACA0mC,kBAAA,SAAAv3C,EAAAw3C,EAAAC,GACA14C,KAAAu4C,aAAAt3C,GAAAw3C,EACAz4C,KAAA8R,SAAA7Q,GAAA4yB,GAAA7K,MAAA0vB,IAEAC,oBAAA,SAAA13C,GACA,OAAAjB,KAAAu4C,aAAA/2C,eAAAP,GAAAjB,KAAAu4C,aAAAt3C,QAAAtF,GAEAi9C,iBAAA,SAAA33C,GAEA,OAAAjB,KAAA8R,SAAAtQ,eAAAP,GAAA4yB,GAAArI,MAAA,GAAoE,CAAAmH,GAAAlN,MAAAzlB,KAAA8R,SAAA7Q,KAAA,IAEpE43C,oBAAA,SAAA53C,EAAA63C,GACA94C,KAEA8R,SAAAtQ,eAAAP,KAFAjB,KAGA8R,SAAA7Q,GAAA4yB,GAAAhI,OAHA7rB,KAGA8R,SAAA7Q,GAAA63C,KAGAC,kBAAA,SAAA3pB,GAEAyE,GAAAnJ,KAAA0E,EAAA6I,OAAA,SAAAxS,GAEAA,EAAA4pB,UAAA5pB,EAAAlZ,QAAA8iC,UACA5pB,EAAA9V,SAAA8V,EAAAlZ,QAAAoD,SACA8V,EAAAmD,OAAAnD,EAAAlZ,QAAAqc,OACAumB,GAAAC,OAAAhgB,EAAA3J,OAIAuzB,GAAAnlB,GAAAzJ,eAEAuI,GAAAT,KAAA,UACAoT,SAAA,CACA2T,SAAA,EACA/e,OAAA,KACAuH,KAAA,UACA9xB,SAAA,UACA29B,WAAA,EACAlT,gBAAA,kBACA8e,eAAA,OACAC,aAAA,EACAC,kBAAA,EACAC,eAAA,OACAC,WAAA,OACAC,YAAA,EACAC,cAAA,OACAC,UAAA,OACAC,gBAAA,OACAC,cAAA,EACAC,gBAAA,EACAC,gBAAA,OACAC,YAAA,OACAC,SAAA,EACAC,SAAA,EACAC,aAAA,EACAC,UAAA,EACA5pB,aAAA,EACA6pB,mBAAA,OACAC,eAAA,EACA/f,YAAA,gBACAC,YAAA,EACAiL,UAAA,CAEA8U,YAAAxmB,GAAAlK,KACA6b,MAAA,SAAA8U,EAAA9wC,GACA,IAAAg8B,EAAA,GACAjD,EAAA/4B,EAAA+4B,OACAgY,EAAAhY,IAAAloC,OAAA,EAEA,GAAAigD,EAAAjgD,OAAA,GACA,IAAAkyB,EAAA+tB,EAAA,GAEA/tB,EAAA5e,MACA63B,EAAAjZ,EAAA5e,MACa4e,EAAAmZ,OACbF,EAAAjZ,EAAAmZ,OACa6U,EAAA,GAAAhuB,EAAAzjB,MAAAyxC,IACb/U,EAAAjD,EAAAhW,EAAAzjB,QAIA,OAAA08B,GAEAgV,WAAA3mB,GAAAlK,KAEA8wB,WAAA5mB,GAAAlK,KAEA+wB,YAAA7mB,GAAAlK,KACAhc,MAAA,SAAAs5B,EAAAz9B,GACA,IAAAmE,EAAAnE,EAAAyD,SAAAg6B,EAAA1P,cAAA5pB,OAAA,GAYA,OAVAA,IACAA,GAAA,MAGAkmB,GAAAhK,cAAAod,EAAAttC,OAGAgU,GAAAs5B,EAAAtB,OAFAh4B,GAAAs5B,EAAAttC,MAKAgU,GAEAgtC,WAAA,SAAA1T,EAAA7X,GACA,IAAAyI,EAAAzI,EAAAiJ,eAAA4O,EAAA1P,cACAqjB,EAAA/iB,EAAAruB,KAAAy9B,EAAAn+B,OACA8rB,EAAAgmB,EAAAvmB,MACA,OACAgG,YAAAzF,EAAAyF,YACAD,gBAAAxF,EAAAwF,kBAGAygB,eAAA,WACA,OAAA76C,KAAAkmC,SAAAsT,eAEAsB,WAAAjnB,GAAAlK,KAEAoxB,UAAAlnB,GAAAlK,KAEAqxB,aAAAnnB,GAAAlK,KACAsxB,OAAApnB,GAAAlK,KACAuxB,YAAArnB,GAAAlK,SAKA,IAAAwxB,GAAA,CAOAC,QAAA,SAAAvhB,GACA,IAAAA,EAAAx/B,OACA,SAGA,IAAAF,EAAA0wB,EACAjT,EAAA,EACAC,EAAA,EACAgjB,EAAA,EAEA,IAAA1gC,EAAA,EAAA0wB,EAAAgP,EAAAx/B,OAAwCF,EAAA0wB,IAAS1wB,EAAA,CACjD,IAAAy5C,EAAA/Z,EAAA1/B,GAEA,GAAAy5C,KAAAze,WAAA,CACA,IAAA+hB,EAAAtD,EAAA1e,kBACAtd,GAAAs/B,EAAAt/B,EACAC,GAAAq/B,EAAAr/B,IACAgjB,GAIA,OACAjjB,IAAAijB,EACAhjB,IAAAgjB,IAWA2T,QAAA,SAAA3U,EAAAwhB,GACA,IAGAlhD,EAAA0wB,EAAAywB,EAHA1jC,EAAAyjC,EAAAzjC,EACAC,EAAAwjC,EAAAxjC,EACA21B,EAAArjB,OAAAsjB,kBAGA,IAAAtzC,EAAA,EAAA0wB,EAAAgP,EAAAx/B,OAAwCF,EAAA0wB,IAAS1wB,EAAA,CACjD,IAAAy5C,EAAA/Z,EAAA1/B,GAEA,GAAAy5C,KAAAze,WAAA,CACA,IAAA+N,EAAA0Q,EAAAnX,iBACAzhC,EAAA64B,GAAA0nB,sBAAAF,EAAAnY,GAEAloC,EAAAwyC,IACAA,EAAAxyC,EACAsgD,EAAA1H,IAKA,GAAA0H,EAAA,CACA,IAAAE,EAAAF,EAAApmB,kBACAtd,EAAA4jC,EAAA5jC,EACAC,EAAA2jC,EAAA3jC,EAGA,OACAD,IACAC,OAKA,SAAA4jC,GAAAhiB,EAAAiiB,GAUA,OATAA,IACA7nB,GAAAx4B,QAAAqgD,GAEAtgD,MAAA+E,UAAAjE,KAAAgG,MAAAu3B,EAAAiiB,GAEAjiB,EAAAv9B,KAAAw/C,IAIAjiB,EAUA,SAAAkiB,GAAA/1B,GACA,yBAAAA,gBAAAg2B,SAAAh2B,EAAAnhB,QAAA,SACAmhB,EAAAxjB,MAAA,MAGAwjB,EASA,SAAAi2B,GAAA33C,GACA,IAAA2hC,EAAA3hC,EAAAk+B,QACA0D,EAAA5hC,EAAAm+B,SAAAn+B,EAAAylC,OAEA7gC,EAAA5E,EAAAg1B,OACA3B,EAAArzB,EAAA80B,cAEAyL,EAAAvgC,EAAA60B,OAAAV,eAAAd,GAAAkN,WAEAqX,EAAArX,EAAA9L,iBAEAojB,EAAAtX,EAAA/L,iBAEA,OACAgN,OAAAG,IAAAmW,iBAAAlzC,EAAAyuB,GAAA,GACAoO,OAAAG,IAAAkW,iBAAAlzC,EAAAyuB,GAAA,GACA5pB,MAAAmuC,EAAA,GAAAA,EAAAE,iBAAAlzC,EAAAyuB,GAAA,GACA59B,MAAAoiD,EAAA,GAAAA,EAAAC,iBAAAlzC,EAAAyuB,GAAA,GACAzuB,QACAyuB,eACA3f,EAAA1T,EAAAowB,OAAA1c,EACAC,EAAA3T,EAAAowB,OAAAzc,GASA,SAAAokC,GAAAC,GACA,IAAAjpB,EAAAN,GAAAO,OACA,OAEA8mB,SAAAkC,EAAAlC,SACAD,SAAAmC,EAAAnC,SACAoC,OAAAD,EAAAC,OACAC,OAAAF,EAAAE,OAEA5C,cAAA0C,EAAA1C,cACA6C,gBAAArD,GAAAkD,EAAAI,eAAArpB,EAAAX,mBACAiqB,eAAAvD,GAAAkD,EAAAM,cAAAvpB,EAAAT,kBACAiqB,WAAAP,EAAAzC,UACAiD,aAAA1D,GAAAkD,EAAAQ,aAAAzpB,EAAAV,iBACAgnB,YAAA2C,EAAA3C,YAEAF,eAAA6C,EAAA7C,eACAsD,iBAAA3D,GAAAkD,EAAAU,gBAAA3pB,EAAAX,mBACAuqB,gBAAA7D,GAAAkD,EAAAhD,eAAAjmB,EAAAT,kBACAsqB,cAAA9D,GAAAkD,EAAAY,cAAA7pB,EAAAV,iBACAwqB,YAAAb,EAAA5C,WACAH,aAAA+C,EAAA/C,aACAC,kBAAA8C,EAAA9C,kBAEAS,gBAAAqC,EAAArC,gBACAmD,kBAAAhE,GAAAkD,EAAAe,iBAAAhqB,EAAAX,mBACA4qB,iBAAAlE,GAAAkD,EAAAxC,gBAAAzmB,EAAAT,kBACA2qB,eAAAnE,GAAAkD,EAAAiB,eAAAlqB,EAAAV,iBACA6qB,aAAAlB,EAAApC,YACAH,cAAAuC,EAAAvC,cACAC,gBAAAsC,EAAAtC,gBAEAM,UAAAgC,EAAAhC,UACA5pB,aAAA4rB,EAAA5rB,aACA8J,gBAAA8hB,EAAA9hB,gBACAijB,QAAA,EACAC,sBAAApB,EAAA/B,mBACAC,cAAA8B,EAAA9B,cACA/f,YAAA6hB,EAAA7hB,YACAC,YAAA4hB,EAAA5hB,aA+MA,SAAAijB,GAAA7hB,EAAA8hB,GACA,iBAAAA,EAAA9hB,EAAA9jB,EAAA8jB,EAAA/uB,MAAA,YAAA6wC,EAAA9hB,EAAA9jB,EAAA8jB,EAAA/uB,MAAA+uB,EAAAse,SAAAte,EAAA9jB,EAAA8jB,EAAAse,SAOA,SAAAyD,GAAAlzB,GACA,OAAAkxB,GAAA,GAAAE,GAAApxB,IAGA,IAAAmzB,GAAAroB,GAAAxJ,OAAA,CACAqI,WAAA,WACAl0B,KAAAs0B,OAAA2nB,GAAAj8C,KAAAkmC,UACAlmC,KAAA29C,YAAA,IAIAC,SAAA,WACA,IACArW,EADAvnC,KACAkmC,SACAX,EAAAgC,EAAAhC,UACA8U,EAAA9U,EAAA8U,YAAAn4C,MAHAlC,KAGA5F,WACAorC,EAAAD,EAAAC,MAAAtjC,MAJAlC,KAIA5F,WACAogD,EAAAjV,EAAAiV,WAAAt4C,MALAlC,KAKA5F,WACAyjD,EAAA,GAIA,OAHAA,EAAApC,GAAAoC,EAAAlC,GAAAtB,IACAwD,EAAApC,GAAAoC,EAAAlC,GAAAnW,IACAqY,EAAApC,GAAAoC,EAAAlC,GAAAnB,KAIAsD,cAAA,WACA,OAAAL,GAAAz9C,KAAAkmC,SAAAX,UAAAkV,WAAAv4C,MAAAlC,KAAA5F,aAGA2jD,QAAA,SAAAzD,EAAA9wC,GACA,IAAAyiB,EAAAjsB,KACAulC,EAAAtZ,EAAAia,SAAAX,UACAyY,EAAA,GAYA,OAXAnqB,GAAAnJ,KAAA4vB,EAAA,SAAArT,GACA,IAAAgX,EAAA,CACAC,OAAA,GACAL,MAAA,GACAM,MAAA,IAEA1C,GAAAwC,EAAAC,OAAAvC,GAAApW,EAAAmV,YAAA36C,KAAAksB,EAAAgb,EAAAz9B,KACAiyC,GAAAwC,EAAAJ,MAAAtY,EAAA53B,MAAA5N,KAAAksB,EAAAgb,EAAAz9B,IACAiyC,GAAAwC,EAAAE,MAAAxC,GAAApW,EAAAuV,WAAA/6C,KAAAksB,EAAAgb,EAAAz9B,KACAw0C,EAAA9hD,KAAA+hD,KAEAD,GAGAI,aAAA,WACA,OAAAX,GAAAz9C,KAAAkmC,SAAAX,UAAAwV,UAAA74C,MAAAlC,KAAA5F,aAIAikD,UAAA,WACA,IACA9Y,EADAvlC,KACAkmC,SAAAX,UACAyV,EAAAzV,EAAAyV,aAAA94C,MAFAlC,KAEA5F,WACA6gD,EAAA1V,EAAA0V,OAAA/4C,MAHAlC,KAGA5F,WACA8gD,EAAA3V,EAAA2V,YAAAh5C,MAJAlC,KAIA5F,WACAyjD,EAAA,GAIA,OAHAA,EAAApC,GAAAoC,EAAAlC,GAAAX,IACA6C,EAAApC,GAAAoC,EAAAlC,GAAAV,IACA4C,EAAApC,GAAAoC,EAAAlC,GAAAT,KAGArsC,OAAA,SAAAyvC,GACA,IA0BAnkD,EAAA0wB,EA1BAoB,EAAAjsB,KACAunC,EAAAtb,EAAAia,SAIAqY,EAAAtyB,EAAAqI,OACAI,EAAAzI,EAAAqI,OAAA2nB,GAAA1U,GACAjpC,EAAA2tB,EAAAuyB,QACAh1C,EAAAyiB,EAAA4M,MAEA4lB,EAAA,CACAtC,OAAAoC,EAAApC,OACAC,OAAAmC,EAAAnC,QAEAsC,EAAA,CACA9mC,EAAA2mC,EAAA3mC,EACAC,EAAA0mC,EAAA1mC,GAEA8mC,EAAA,CACAhyC,MAAA4xC,EAAA5xC,MACAD,OAAA6xC,EAAA7xC,QAEAwoB,EAAA,CACAtd,EAAA2mC,EAAAK,OACA/mC,EAAA0mC,EAAAM,QAIA,GAAAvgD,EAAAjE,OAAA,CACAq6B,EAAA2oB,QAAA,EACA,IAAAyB,EAAA,GACAC,EAAA,GACA7pB,EAAAimB,GAAA5T,EAAA53B,UAAA5P,KAAAksB,EAAA3tB,EAAA2tB,EAAA+yB,gBACA,IAAA1E,EAAA,GAEA,IAAAngD,EAAA,EAAA0wB,EAAAvsB,EAAAjE,OAAwCF,EAAA0wB,IAAS1wB,EACjDmgD,EAAAp+C,KAAA2/C,GAAAv9C,EAAAnE,KAIAotC,EAAA5sC,SACA2/C,IAAA3/C,OAAA,SAAA4D,GACA,OAAAgpC,EAAA5sC,OAAA4D,EAAAiL,MAKA+9B,EAAA0X,WACA3E,IAAAxL,KAAA,SAAAvwC,EAAA0Y,GACA,OAAAswB,EAAA0X,SAAA1gD,EAAA0Y,EAAAzN,MAKAqqB,GAAAnJ,KAAA4vB,EAAA,SAAArT,GACA6X,EAAA5iD,KAAAqrC,EAAAhC,UAAAoV,WAAA56C,KAAAksB,EAAAgb,EAAAhb,EAAA8M,SACAgmB,EAAA7iD,KAAAqrC,EAAAhC,UAAAsV,eAAA96C,KAAAksB,EAAAgb,EAAAhb,EAAA8M,WAGArE,EAAA8Q,MAAAvZ,EAAA2xB,SAAAtD,EAAA9wC,GACAkrB,EAAA+lB,WAAAxuB,EAAA6xB,cAAAxD,EAAA9wC,GACAkrB,EAAAtsB,KAAA6jB,EAAA8xB,QAAAzD,EAAA9wC,GACAkrB,EAAAqmB,UAAA9uB,EAAAmyB,aAAA9D,EAAA9wC,GACAkrB,EAAAumB,OAAAhvB,EAAAoyB,UAAA/D,EAAA9wC,GAEAkrB,EAAA9c,EAAAsd,EAAAtd,EACA8c,EAAA7c,EAAAqd,EAAArd,EACA6c,EAAAulB,aAAA1S,EAAA0S,aACAvlB,EAAAoqB,cACApqB,EAAAqqB,kBAEArqB,EAAAwqB,WAAA5E,EAEAqE,EAzVA,SAAAQ,EAAAzqB,GACA,IAAArF,EAAA8vB,EAAApmB,OAAA1J,IACA3iB,EAAA,EAAAgoB,EAAAqlB,SAEAptC,EAAA,EAEAvE,EAAAssB,EAAAtsB,KACAg3C,EAAAh3C,EAAAi3C,OAAA,SAAAxkB,EAAAojB,GACA,OAAApjB,EAAAojB,EAAAC,OAAA7jD,OAAA4jD,EAAAJ,MAAAxjD,OAAA4jD,EAAAE,MAAA9jD,QACK,GACL+kD,GAAA1qB,EAAA+lB,WAAApgD,OAAAq6B,EAAAqmB,UAAA1gD,OACA,IAAAilD,EAAA5qB,EAAA8Q,MAAAnrC,OACAklD,EAAA7qB,EAAAumB,OAAA5gD,OACAyiD,EAAApoB,EAAAooB,cACAJ,EAAAhoB,EAAAgoB,aACAS,EAAAzoB,EAAAyoB,eACAzwC,GAAA4yC,EAAAxC,EAEApwC,GAAA4yC,KAAA,GAAA5qB,EAAAykB,aAAA,EAEAzsC,GAAA4yC,EAAA5qB,EAAA0kB,kBAAA,EAEA1sC,GAAA0yC,EAAA1C,EAEAhwC,GAAA0yC,KAAA,GAAA1qB,EAAA6kB,YAAA,EAEA7sC,GAAA6yC,EAAA7qB,EAAAklB,gBAAA,EAEAltC,GAAA6yC,EAAApC,EAEAzwC,GAAA6yC,KAAA,GAAA7qB,EAAAilB,cAAA,EAGA,IAAA6F,EAAA,EAEAC,EAAA,SAAAjiB,GACA7wB,EAAAwK,KAAAC,IAAAzK,EAAA0iB,EAAAqwB,YAAAliB,GAAA7wB,MAAA6yC,IAsBA,OAnBAnwB,EAAA+D,KAAAS,GAAA8rB,WAAA7C,EAAApoB,EAAAmoB,gBAAAnoB,EAAAioB,kBACA9oB,GAAAnJ,KAAAgK,EAAA8Q,MAAAia,GAEApwB,EAAA+D,KAAAS,GAAA8rB,WAAAjD,EAAAhoB,EAAA6nB,eAAA7nB,EAAA2nB,iBACAxoB,GAAAnJ,KAAAgK,EAAA+lB,WAAA//C,OAAAg6B,EAAAqmB,WAAA0E,GAEAD,EAAA9qB,EAAA0lB,cAAAsC,EAAA,IACA7oB,GAAAnJ,KAAAtiB,EAAA,SAAA61C,GACApqB,GAAAnJ,KAAAuzB,EAAAC,OAAAuB,GACA5rB,GAAAnJ,KAAAuzB,EAAAJ,MAAA4B,GACA5rB,GAAAnJ,KAAAuzB,EAAAE,MAAAsB,KAGAD,EAAA,EAEAnwB,EAAA+D,KAAAS,GAAA8rB,WAAAxC,EAAAzoB,EAAAwoB,iBAAAxoB,EAAAsoB,mBACAnpB,GAAAnJ,KAAAgK,EAAAumB,OAAAwE,GAGA,CACA9yC,MAFAA,GAAA,EAAA+nB,EAAAslB,SAGAttC,UA6RAkzC,CAAA5/C,KAAA00B,GACA+pB,EAtRA,SAAAU,EAAA9/C,GACA,IAYAwgD,EAAAC,EAEAC,EAAAC,EAEAC,EAhBAvrB,EAAAyqB,EAAA7qB,OACAlF,EAAA+vB,EAAApmB,OACAuG,EAAA6f,EAAApmB,OAAAuG,UACA6c,EAAA,SACAC,EAAA,SAEA1nB,EAAA7c,EAAAxY,EAAAqN,OACA0vC,EAAA,MACK1nB,EAAA7c,EAAAuX,EAAA1iB,OAAArN,EAAAqN,SACL0vC,EAAA,UASA,IAAA8D,GAAA5gB,EAAA7P,KAAA6P,EAAA3P,OAAA,EACAwwB,GAAA7gB,EAAA5P,IAAA4P,EAAA1P,QAAA,EAEA,WAAAwsB,GACAyD,EAAA,SAAAjoC,GACA,OAAAA,GAAAsoC,GAGAJ,EAAA,SAAAloC,GACA,OAAAA,EAAAsoC,KAGAL,EAAA,SAAAjoC,GACA,OAAAA,GAAAvY,EAAAsN,MAAA,GAGAmzC,EAAA,SAAAloC,GACA,OAAAA,GAAAwX,EAAAziB,MAAAtN,EAAAsN,MAAA,IAIAozC,EAAA,SAAAnoC,GACA,OAAAA,EAAAvY,EAAAsN,MAAA+nB,EAAAwlB,UAAAxlB,EAAAulB,aAAA7qB,EAAAziB,OAGAqzC,EAAA,SAAApoC,GACA,OAAAA,EAAAvY,EAAAsN,MAAA+nB,EAAAwlB,UAAAxlB,EAAAulB,aAAA,GAGAgG,EAAA,SAAApoC,GACA,OAAAA,GAAAsoC,EAAA,gBAGAN,EAAAnrB,EAAA9c,IACAukC,EAAA,OAEA4D,EAAArrB,EAAA9c,KACAukC,EAAA,SACAC,EAAA6D,EAAAvrB,EAAA7c,KAEKioC,EAAAprB,EAAA9c,KACLukC,EAAA,QAEA6D,EAAAtrB,EAAA9c,KACAukC,EAAA,SACAC,EAAA6D,EAAAvrB,EAAA7c,KAIA,IAAA0vB,EAAA4X,EAAAjZ,SACA,OACAiW,OAAA5U,EAAA4U,OAAA5U,EAAA4U,SACAC,OAAA7U,EAAA6U,OAAA7U,EAAA6U,UA+MAgE,CAAApgD,KAAA2+C,GAEAD,EAzMA,SAAAhjB,EAAAr8B,EAAAo/C,EAAArvB,GAEA,IAAAxX,EAAA8jB,EAAA9jB,EACAC,EAAA6jB,EAAA7jB,EACAqiC,EAAAxe,EAAAwe,UACAD,EAAAve,EAAAue,aACA3pB,EAAAoL,EAAApL,aACA6rB,EAAAsC,EAAAtC,OACAC,EAAAqC,EAAArC,OACAiE,EAAAnG,EAAAD,EACAqG,EAAAhwB,EAAA2pB,EAoCA,MAlCA,UAAAkC,EACAvkC,GAAAvY,EAAAsN,MACK,WAAAwvC,KACLvkC,GAAAvY,EAAAsN,MAAA,GAEAtN,EAAAsN,MAAAyiB,EAAAziB,QACAiL,EAAAwX,EAAAziB,MAAAtN,EAAAsN,OAGAiL,EAAA,IACAA,EAAA,IAIA,QAAAwkC,EACAvkC,GAAAwoC,EAEAxoC,GADK,WAAAukC,EACL/8C,EAAAqN,OAAA2zC,EAEAhhD,EAAAqN,OAAA,EAGA,WAAA0vC,EACA,SAAAD,EACAvkC,GAAAyoC,EACO,UAAAlE,IACPvkC,GAAAyoC,GAEK,SAAAlE,EACLvkC,GAAA0oC,EACK,UAAAnE,IACLvkC,GAAA0oC,GAGA,CACA1oC,IACAC,KAyJA0oC,CAAA7rB,EAAAiqB,EAAAF,EAAAxyB,EAAA8M,aAEArE,EAAA2oB,QAAA,EAkBA,OAfA3oB,EAAAynB,OAAAsC,EAAAtC,OACAznB,EAAA0nB,OAAAqC,EAAArC,OACA1nB,EAAA9c,EAAA8mC,EAAA9mC,EACA8c,EAAA7c,EAAA6mC,EAAA7mC,EACA6c,EAAA/nB,MAAAgyC,EAAAhyC,MACA+nB,EAAAhoB,OAAAiyC,EAAAjyC,OAEAgoB,EAAAkqB,OAAA1pB,EAAAtd,EACA8c,EAAAmqB,OAAA3pB,EAAArd,EACAoU,EAAAqI,OAAAI,EAEA4pB,GAAA/W,EAAArN,QACAqN,EAAArN,OAAAn6B,KAAAksB,EAAAyI,GAGAzI,GAEAu0B,UAAA,SAAAC,EAAAphD,GACA,IAAAgwB,EAAArvB,KAAA+4B,OAAA1J,IACAqM,EAAA17B,KAAAq0B,MACAqsB,EAAA1gD,KAAA2gD,iBAAAF,EAAAphD,EAAAq8B,GACArM,EAAAoB,OAAAiwB,EAAAhhB,GAAAghB,EAAA9gB,IACAvQ,EAAAoB,OAAAiwB,EAAA/gB,GAAA+gB,EAAAznC,IACAoW,EAAAoB,OAAAiwB,EAAAE,GAAAF,EAAAG,KAEAF,iBAAA,SAAAF,EAAAphD,EAAAq8B,GACA,IAAAgE,EAAAC,EAAAihB,EAAAhhB,EAAA3mB,EAAA4nC,EACA3G,EAAAxe,EAAAwe,UACA5pB,EAAAoL,EAAApL,aACA6rB,EAAAzgB,EAAAygB,OACAC,EAAA1gB,EAAA0gB,OACA0E,EAAAL,EAAA7oC,EACAmpC,EAAAN,EAAA5oC,EACAlL,EAAAtN,EAAAsN,MACAD,EAAArN,EAAAqN,OAEA,cAAA0vC,EACAnjC,EAAA8nC,EAAAr0C,EAAA,EAEA,SAAAyvC,GAEAxc,GADAD,EAAAohB,GACA5G,EACA0G,EAAAlhB,EACAE,EAAA3mB,EAAAihC,EACA2G,EAAA5nC,EAAAihC,IAGAva,GADAD,EAAAohB,EAAAn0C,GACAutC,EACA0G,EAAAlhB,EACAE,EAAA3mB,EAAAihC,EACA2G,EAAA5nC,EAAAihC,QAiBA,GAdA,SAAAiC,GAEAzc,GADAC,EAAAmhB,EAAAxwB,EAAA4pB,GACAA,EACA0G,EAAAjhB,EAAAua,GACS,UAAAiC,GAETzc,GADAC,EAAAmhB,EAAAn0C,EAAA2jB,EAAA4pB,GACAA,EACA0G,EAAAjhB,EAAAua,IAEAva,EAAAjE,EAAAkjB,OACAlf,EAAAC,EAAAua,EACA0G,EAAAjhB,EAAAua,GAGA,QAAAkC,EAEAnjC,GADA2mB,EAAAmhB,GACA7G,EACA2G,EAAAjhB,MACS,CAET3mB,GADA2mB,EAAAmhB,EAAAr0C,GACAwtC,EACA2G,EAAAjhB,EAEA,IAAAohB,EAAAJ,EACAA,EAAAlhB,EACAA,EAAAshB,EAIA,OACAthB,KACAC,KACAihB,KACAhhB,KACA3mB,KACA4nC,OAGAI,UAAA,SAAAvW,EAAAhP,EAAArM,GACA,IAAAmW,EAAA9J,EAAA8J,MAEA,GAAAA,EAAAnrC,OAAA,CACAqwC,EAAA9yB,EAAA2lC,GAAA7hB,IAAAqhB,aACA1tB,EAAA6xB,UAAAxlB,EAAAqhB,YACA1tB,EAAA8xB,aAAA,MACA,IAIAhnD,EAAA0wB,EAJAiyB,EAAAphB,EAAAohB,cACA3D,EAAAzd,EAAAyd,aAKA,IAJA9pB,EAAA8N,UAAAzB,EAAA2d,eACAhqB,EAAA+D,KAAAS,GAAA8rB,WAAA7C,EAAAphB,EAAAmhB,gBAAAnhB,EAAAihB,kBAGAxiD,EAAA,EAAA0wB,EAAA2a,EAAAnrC,OAAuCF,EAAA0wB,IAAS1wB,EAChDk1B,EAAA+xB,SAAA5b,EAAArrC,GAAAuwC,EAAA9yB,EAAA8yB,EAAA7yB,GACA6yB,EAAA7yB,GAAAilC,EAAA3D,EAEAh/C,EAAA,IAAAqrC,EAAAnrC,SACAqwC,EAAA7yB,GAAA6jB,EAAA0d,kBAAAD,KAKAkI,SAAA,SAAA3W,EAAAhP,EAAArM,GACA,IAQAiyB,EARA5E,EAAAhhB,EAAAghB,aACAnD,EAAA7d,EAAA6d,YACAE,EAAA/d,EAAA+gB,WACAr0C,EAAAszB,EAAAtzB,KACAm5C,EAAA7lB,EAAA0e,cACA0E,EAAApjB,EAAAojB,YACA0C,EAAA,EACAC,EAAAF,EAAAhE,GAAA7hB,EAAA,UAEArM,EAAA6xB,UAAAzH,EACApqB,EAAA8xB,aAAA,MACA9xB,EAAA+D,KAAAS,GAAA8rB,WAAAjD,EAAAhhB,EAAA6gB,eAAA7gB,EAAA2gB,iBACA3R,EAAA9yB,EAAA2lC,GAAA7hB,EAAA+d,GAEA,IAAAiI,EAAA,SAAAlkB,GACAnO,EAAA+xB,SAAA5jB,EAAAkN,EAAA9yB,EAAA4pC,EAAA9W,EAAA7yB,GACA6yB,EAAA7yB,GAAA6kC,EAAAnD,GAIAlqB,EAAA8N,UAAAzB,EAAA8d,cACA3lB,GAAAnJ,KAAAgR,EAAA+e,WAAAiH,GACAF,EAAAD,GAAA,UAAA9H,EAAA,WAAAA,EAAAiD,EAAA,IAAAA,EAAA,IAEA7oB,GAAAnJ,KAAAtiB,EAAA,SAAA61C,EAAA9jD,GACAmnD,EAAA5lB,EAAAqjB,gBAAA5kD,GACAk1B,EAAA8N,UAAAmkB,EACAztB,GAAAnJ,KAAAuzB,EAAAC,OAAAwD,GACA7tB,GAAAnJ,KAAAuzB,EAAAJ,MAAA,SAAArgB,GAEA+jB,IAEAlyB,EAAA8N,UAAAzB,EAAA4hB,sBACAjuB,EAAA8R,SAAAsgB,EAAA/W,EAAA7yB,EAAA6kC,KAEArtB,EAAA+N,UAAA,EACA/N,EAAAiO,YAAAwhB,EAAA3kD,GAAAkgC,YACAhL,EAAAsyB,WAAAF,EAAA/W,EAAA7yB,EAAA6kC,KAEArtB,EAAA8N,UAAA2hB,EAAA3kD,GAAAigC,gBACA/K,EAAA8R,SAAAsgB,EAAA,EAAA/W,EAAA7yB,EAAA,EAAA6kC,EAAA,EAAAA,EAAA,GACArtB,EAAA8N,UAAAmkB,GAGAI,EAAAlkB,KAEA3J,GAAAnJ,KAAAuzB,EAAAE,MAAAuD,KAGAF,EAAA,EAEA3tB,GAAAnJ,KAAAgR,EAAAqf,UAAA2G,GACAhX,EAAA7yB,GAAA0hC,GAEAqI,WAAA,SAAAlX,EAAAhP,EAAArM,GACA,IAAA4rB,EAAAvf,EAAAuf,OAEAA,EAAA5gD,SACAqwC,EAAA9yB,EAAA2lC,GAAA7hB,IAAA0hB,cACA1S,EAAA7yB,GAAA6jB,EAAAke,gBACAvqB,EAAA6xB,UAAAxlB,EAAA0hB,aACA/tB,EAAA8xB,aAAA,MACA9xB,EAAA8N,UAAAzB,EAAAme,gBACAxqB,EAAA+D,KAAAS,GAAA8rB,WAAAjkB,EAAAyhB,eAAAzhB,EAAAwhB,iBAAAxhB,EAAAshB,mBACAnpB,GAAAnJ,KAAAuwB,EAAA,SAAAzd,GACAnO,EAAA+xB,SAAA5jB,EAAAkN,EAAA9yB,EAAA8yB,EAAA7yB,GACA6yB,EAAA7yB,GAAA6jB,EAAAyhB,eAAAzhB,EAAAie,kBAIAkI,eAAA,SAAAnX,EAAAhP,EAAArM,EAAAsvB,GACAtvB,EAAA8N,UAAAzB,EAAAtB,gBACA/K,EAAAiO,YAAA5B,EAAArB,YACAhL,EAAA+N,UAAA1B,EAAApB,YACA,IAAA6hB,EAAAzgB,EAAAygB,OACAC,EAAA1gB,EAAA0gB,OACAxkC,EAAA8yB,EAAA9yB,EACAC,EAAA6yB,EAAA7yB,EACAlL,EAAAgyC,EAAAhyC,MACAD,EAAAiyC,EAAAjyC,OACA8iB,EAAAkM,EAAApL,aACAjB,EAAAmB,YACAnB,EAAAQ,OAAAjY,EAAA4X,EAAA3X,GAEA,QAAAukC,GACAp8C,KAAAwgD,UAAA9V,EAAAiU,GAGAtvB,EAAAoB,OAAA7Y,EAAAjL,EAAA6iB,EAAA3X,GACAwX,EAAAyyB,iBAAAlqC,EAAAjL,EAAAkL,EAAAD,EAAAjL,EAAAkL,EAAA2X,GAEA,WAAA4sB,GAAA,UAAAD,GACAn8C,KAAAwgD,UAAA9V,EAAAiU,GAGAtvB,EAAAoB,OAAA7Y,EAAAjL,EAAAkL,EAAAnL,EAAA8iB,GACAH,EAAAyyB,iBAAAlqC,EAAAjL,EAAAkL,EAAAnL,EAAAkL,EAAAjL,EAAA6iB,EAAA3X,EAAAnL,GAEA,WAAA0vC,GACAp8C,KAAAwgD,UAAA9V,EAAAiU,GAGAtvB,EAAAoB,OAAA7Y,EAAA4X,EAAA3X,EAAAnL,GACA2iB,EAAAyyB,iBAAAlqC,EAAAC,EAAAnL,EAAAkL,EAAAC,EAAAnL,EAAA8iB,GAEA,WAAA4sB,GAAA,SAAAD,GACAn8C,KAAAwgD,UAAA9V,EAAAiU,GAGAtvB,EAAAoB,OAAA7Y,EAAAC,EAAA2X,GACAH,EAAAyyB,iBAAAlqC,EAAAC,EAAAD,EAAA4X,EAAA3X,GACAwX,EAAAU,YACAV,EAAAsB,OAEA+K,EAAApB,YAAA,GACAjL,EAAAuB,UAGAkJ,KAAA,WACA,IAAAzK,EAAArvB,KAAA+4B,OAAA1J,IACAqM,EAAA17B,KAAAq0B,MAEA,OAAAqH,EAAA2hB,QAAA,CAIA,IAAAsB,EAAA,CACAhyC,MAAA+uB,EAAA/uB,MACAD,OAAAgvB,EAAAhvB,QAEAg+B,EAAA,CACA9yB,EAAA8jB,EAAA9jB,EACAC,EAAA6jB,EAAA7jB,GAGAwlC,EAAAlmC,KAAA2nB,IAAApD,EAAA2hB,QAAA,QAAA3hB,EAAA2hB,QAEA0E,EAAArmB,EAAA8J,MAAAnrC,QAAAqhC,EAAA+e,WAAApgD,QAAAqhC,EAAAtzB,KAAA/N,QAAAqhC,EAAAqf,UAAA1gD,QAAAqhC,EAAAuf,OAAA5gD,OAEA2F,KAAAkmC,SAAA+S,SAAA8I,IACA1yB,EAAA4B,OACA5B,EAAA2yB,YAAA3E,EAEAr9C,KAAA6hD,eAAAnX,EAAAhP,EAAArM,EAAAsvB,GAEAjU,EAAA7yB,GAAA6jB,EAAAqe,SAEA/5C,KAAAihD,UAAAvW,EAAAhP,EAAArM,GAEArvB,KAAAqhD,SAAA3W,EAAAhP,EAAArM,GAEArvB,KAAA4hD,WAAAlX,EAAAhP,EAAArM,GACAA,EAAA+B,aAUA6wB,YAAA,SAAA7hD,GACA,IAAA6rB,EAAAjsB,KACAuM,EAAA0f,EAAAia,SACAoY,GAAA,EAyBA,OAxBAryB,EAAA0xB,YAAA1xB,EAAA0xB,aAAA,GAEA,aAAAv9C,EAAAa,KACAgrB,EAAAuyB,QAAA,GAEAvyB,EAAAuyB,QAAAvyB,EAAA8M,OAAAmpB,0BAAA9hD,EAAAmM,EAAAk1B,KAAAl1B,IAIA+xC,GAAAzqB,GAAA/I,YAAAmB,EAAAuyB,QAAAvyB,EAAA0xB,gBAGA1xB,EAAA0xB,YAAA1xB,EAAAuyB,SAEAjyC,EAAA0sC,SAAA1sC,EAAA2tB,UACAjO,EAAA+yB,eAAA,CACApnC,EAAAxX,EAAAwX,EACAC,EAAAzX,EAAAyX,GAEAoU,EAAApd,QAAA,GACAod,EAAAmI,UAIAkqB,KAOA6D,GAAAhH,GACAiH,GAAA1E,GACA0E,GAAAjH,YAAAgH,GACA,IAAAE,GAAAxuB,GAAAzJ,eAuBA,SAAAk4B,KAGA,OAAAzuB,GAAArI,MAAA,GAA6B,GAAAtI,MAAAnjB,KAAA3F,WAAA,CAC7BwxB,OAAA,SAAAlyB,EAAAQ,EAAAI,EAAAiS,GACA,aAAA7S,GAAA,UAAAA,EAAA,CACA,IACAS,EAAA8G,EAAAwkB,EADA88B,EAAAjoD,EAAAZ,GAAAW,OAOA,IAJAH,EAAAR,KACAQ,EAAAR,GAAA,IAGAS,EAAA,EAAqBA,EAAAooD,IAAUpoD,EAC/BsrB,EAAAnrB,EAAAZ,GAAAS,GACA8G,EAAAohD,GAAA58B,EAAAxkB,KAAA,UAAAvH,EAAA,qBAEAS,GAAAD,EAAAR,GAAAW,QACAH,EAAAR,GAAAwC,KAAA,KAGAhC,EAAAR,GAAAS,GAAA8G,MAAAwkB,EAAAxkB,MAAAwkB,EAAAxkB,OAAA/G,EAAAR,GAAAS,GAAA8G,KAGA4yB,GAAArI,MAAAtxB,EAAAR,GAAAS,GAAA,CAAAm+C,GAAAM,iBAAA33C,GAAAwkB,IAGAoO,GAAArI,MAAAtxB,EAAAR,GAAAS,GAAAsrB,QAIAoO,GAAAxI,QAAA3xB,EAAAQ,EAAAI,EAAAiS,MAYA,SAAAi2C,KAGA,OAAA3uB,GAAArI,MAAA,GAA6B,GAAAtI,MAAAnjB,KAAA3F,WAAA,CAC7BwxB,OAAA,SAAAlyB,EAAAQ,EAAAI,EAAAiS,GACA,IAAA+e,EAAApxB,EAAAR,IAAA,GACA6xB,EAAAjxB,EAAAZ,GAEA,WAAAA,EAEAQ,EAAAR,GAAA4oD,GAAAh3B,EAAAC,GACS,UAAA7xB,EAETQ,EAAAR,GAAAm6B,GAAArI,MAAAF,EAAA,CAAAgtB,GAAAM,iBAAArtB,EAAAtqB,MAAAsqB,IAEAsI,GAAAxI,QAAA3xB,EAAAQ,EAAAI,EAAAiS,MA+BA,SAAAk2C,GAAA9yC,GACA,cAAAA,GAAA,WAAAA,EA/GAgjB,GAAAT,KAAA,UACA2H,SAAA,GACA6oB,OAAA,0DACAlhB,MAAA,CACAmhB,QAAA,KACAlhB,KAAA,UACA6L,WAAA,EACAsV,kBAAA,KAEAxjD,QAAA,KACAu1C,qBAAA,EACAkO,YAAA,EACAC,4BAAA,IAsGA,IAAAC,GAAA,SAAAx2B,EAAAxe,GAEA,OADA/N,KAAAgjD,UAAAz2B,EAAAxe,GACA/N,MAGA6zB,GAAAhI,OAAAk3B,GAAA5iD,UAEA,CAIA6iD,UAAA,SAAAz2B,EAAAxe,GACA,IAAAke,EAAAjsB,KACA+N,EA1CA,SAAAA,GAIA,IAAAvE,GAHAuE,KAAA,IAGAvE,KAAAuE,EAAAvE,MAAA,GAIA,OAHAA,EAAAyD,SAAAzD,EAAAyD,UAAA,GACAzD,EAAA+4B,OAAA/4B,EAAA+4B,QAAA,GACAx0B,EAAAxB,QAAAi2C,GAAA7vB,GAAAO,OAAAP,GAAA5kB,EAAA9M,MAAA8M,EAAAxB,SAAA,IACAwB,EAkCAk1C,CAAAl1C,GACA,IAAA6lB,EAAAkiB,GAAAM,eAAA7pB,EAAAxe,GACAgmB,EAAAH,KAAAG,OACArnB,EAAAqnB,KAAArnB,OACAC,EAAAonB,KAAApnB,MACAsf,EAAA/c,GAAA2kB,GAAAjK,MACAqC,EAAAoD,IAAAuE,EACA3H,EAAA8H,SACA9H,EAAAle,SACAke,EAAAtf,QACAsf,EAAAvf,SACAuf,EAAA2qB,YAAAlqC,EAAAC,EAAAD,EAAA,KACAuf,EAAA1f,QAAAwB,EAAAxB,QACA0f,EAAAi3B,iBAAA,EAUAj3B,EAAAmD,MAAAnD,EACAA,EAAAwY,WAAAxY,EAGA82B,GAAAI,UAAAl3B,EAAA/c,IAAA+c,EAEAryB,OAAAC,eAAAoyB,EAAA,QACAvqB,IAAA,WACA,OAAAuqB,EAAAle,OAAAvE,MAEA7H,IAAA,SAAAhI,GACAsyB,EAAAle,OAAAvE,KAAA7P,KAIAi6B,GAAAG,GASA9H,EAAAiI,aACAjI,EAAApd,UALAjB,QAAAC,MAAA,sEAWAqmB,WAAA,WACA,IAAAjI,EAAAjsB,KAiBA,OAfAu3C,GAAAO,OAAA7rB,EAAA,cACA4H,GAAAuvB,YAAAn3B,IAAA1f,QAAA82C,kBACAp3B,EAAAq3B,aAEAr3B,EAAA1f,QAAAs2C,YAEA52B,EAAAs3B,QAAA,GAIAt3B,EAAAu3B,sBACAv3B,EAAAw3B,sBACAx3B,EAAAy3B,cAEAnM,GAAAO,OAAA7rB,EAAA,aACAA,GAEAljB,MAAA,WAEA,OADA8qB,GAAAE,OAAAhrB,MAAA/I,MACAA,MAEA2jD,KAAA,WAGA,OADA3tB,GAAAU,gBAAA12B,MACAA,MAEAujD,OAAA,SAAAK,GACA,IAAA33B,EAAAjsB,KACAuM,EAAA0f,EAAA1f,QACAwnB,EAAA9H,EAAA8H,OACA6iB,EAAArqC,EAAAooC,qBAAA1oB,EAAA2qB,aAAA,KAIAiN,EAAA1sC,KAAAC,IAAA,EAAAD,KAAAkB,MAAAwb,GAAAiwB,gBAAA/vB,KACAgwB,EAAA5sC,KAAAC,IAAA,EAAAD,KAAAkB,MAAAu+B,EAAAiN,EAAAjN,EAAA/iB,GAAAmwB,iBAAAjwB,KAEA,IAAA9H,EAAAtf,QAAAk3C,GAAA53B,EAAAvf,SAAAq3C,KAIAhwB,EAAApnB,MAAAsf,EAAAtf,MAAAk3C,EACA9vB,EAAArnB,OAAAuf,EAAAvf,OAAAq3C,EACAhwB,EAAA7D,MAAAvjB,MAAAk3C,EAAA,KACA9vB,EAAA7D,MAAAxjB,OAAAq3C,EAAA,KACAlwB,GAAAuvB,YAAAn3B,EAAA1f,EAAA82C,mBAEAO,GAAA,CAEA,IAAAK,EAAA,CACAt3C,MAAAk3C,EACAn3C,OAAAq3C,GAEAxM,GAAAO,OAAA7rB,EAAA,UAAAg4B,IAEA13C,EAAA23C,UACA33C,EAAA23C,SAAAj4B,EAAAg4B,GAGAh4B,EAAA03B,OACA13B,EAAApd,OAAA,CACAgnB,SAAAtpB,EAAAu2C,gCAIAU,oBAAA,WACA,IAAAj3C,EAAAvM,KAAAuM,QACA43C,EAAA53C,EAAA0rB,QAAA,GACAmsB,EAAA73C,EAAAkZ,MACAoO,GAAAnJ,KAAAy5B,EAAAjsB,MAAA,SAAAmsB,EAAAv7C,GACAu7C,EAAAn1C,GAAAm1C,EAAAn1C,IAAA,UAAApG,IAEA+qB,GAAAnJ,KAAAy5B,EAAA/rB,MAAA,SAAAksB,EAAAx7C,GACAw7C,EAAAp1C,GAAAo1C,EAAAp1C,IAAA,UAAApG,IAGAs7C,IACAA,EAAAl1C,GAAAk1C,EAAAl1C,IAAA,UAOAu0C,oBAAA,WACA,IAAAx3B,EAAAjsB,KACAuM,EAAA0f,EAAA1f,QACA0rB,EAAAhM,EAAAgM,QAAA,GACAkW,EAAA,GACAoW,EAAA3qD,OAAAY,KAAAy9B,GAAAonB,OAAA,SAAA5lD,EAAAyV,GAEA,OADAzV,EAAAyV,IAAA,EACAzV,GACO,IAEP8S,EAAA0rB,SACAkW,IAAAzzC,QAAA6R,EAAA0rB,OAAAC,OAAA,IAAA3uB,IAAA,SAAA86C,GACA,OACA93C,QAAA83C,EACAG,MAAA,WACAC,UAAA,aAESl4C,EAAA0rB,OAAAG,OAAA,IAAA7uB,IAAA,SAAA+6C,GACT,OACA/3C,QAAA+3C,EACAE,MAAA,SACAC,UAAA,YAKAl4C,EAAAkZ,OACA0oB,EAAAjyC,KAAA,CACAqQ,UAAAkZ,MACA++B,MAAA,eACAE,WAAA,EACAD,UAAA,cAIA5wB,GAAAnJ,KAAAyjB,EAAA,SAAA5hB,GACA,IAAA63B,EAAA73B,EAAAhgB,QACA2C,EAAAk1C,EAAAl1C,GACAy1C,EAAAtC,GAAA+B,EAAAnjD,KAAAsrB,EAAAi4B,OAEA/B,GAAA2B,EAAAz0C,YAAA8yC,GAAAl2B,EAAAk4B,aACAL,EAAAz0C,SAAA4c,EAAAk4B,WAGAF,EAAAr1C,IAAA,EACA,IAAAuW,EAAA,KAEA,GAAAvW,KAAA+oB,KAAA/oB,GAAAjO,OAAA0jD,GACAl/B,EAAAwS,EAAA/oB,IACA3C,QAAA63C,EACA3+B,EAAA4J,IAAApD,EAAAoD,IACA5J,EAAA2J,MAAAnD,MACS,CACT,IAAA24B,EAAAtM,GAAAK,oBAAAgM,GAEA,IAAAC,EACA,OAGAn/B,EAAA,IAAAm/B,EAAA,CACA11C,KACAjO,KAAA0jD,EACAp4C,QAAA63C,EACA/0B,IAAApD,EAAAoD,IACAD,MAAAnD,IAEAgM,EAAAxS,EAAAvW,IAAAuW,EAGAA,EAAAo/B,oBAIAt4B,EAAAm4B,YACAz4B,EAAAxG,WAIAoO,GAAAnJ,KAAA65B,EAAA,SAAAO,EAAA51C,GACA41C,UACA7sB,EAAA/oB,KAGA+c,EAAAgM,SACAqgB,GAAAS,kBAAA/4C,OAEA+kD,yBAAA,WACA,IAAA94B,EAAAjsB,KACAglD,EAAA,GA0BA,OAzBAnxB,GAAAnJ,KAAAuB,EAAAziB,KAAAyD,SAAA,SAAAS,EAAA6pB,GACA,IAAAM,EAAA5L,EAAAoM,eAAAd,GACAt2B,EAAAyM,EAAAzM,MAAAgrB,EAAAle,OAAA9M,KASA,GAPA42B,EAAA52B,MAAA42B,EAAA52B,WACAgrB,EAAAg5B,mBAAA1tB,GACAM,EAAA5L,EAAAoM,eAAAd,IAGAM,EAAA52B,OAEA42B,EAAA4M,WACA5M,EAAA4M,WAAA7M,YAAAL,GACAM,EAAA4M,WAAA/M,iBACS,CACT,IAAAwtB,EAAA11C,GAAAqoB,EAAA52B,MAEA,QAAAtF,IAAAupD,EACA,UAAAz1C,MAAA,IAAAooB,EAAA52B,KAAA,0BAGA42B,EAAA4M,WAAA,IAAAygB,EAAAj5B,EAAAsL,GACAytB,EAAA9oD,KAAA27B,EAAA4M,cAEOxY,GACP+4B,GAOAG,cAAA,WACA,IAAAl5B,EAAAjsB,KACA6zB,GAAAnJ,KAAAuB,EAAAziB,KAAAyD,SAAA,SAAAS,EAAA6pB,GACAtL,EAAAoM,eAAAd,GAAAkN,WAAA7L,SACO3M,IAMP2M,MAAA,WACA54B,KAAAmlD,gBACAnlD,KAAAm/C,QAAAjrB,cAEArlB,OAAA,SAAAd,GACA,IAAAke,EAAAjsB,KAeA,GAbA+N,GAAA,kBAAAA,IAEAA,EAAA,CACA8nB,SAAA9nB,EACAqoB,KAAAh8B,UAAA,KA1TA,SAAAg1B,GACA,IAAAg2B,EAAAh2B,EAAA7iB,QACAsnB,GAAAnJ,KAAA0E,EAAA6I,OAAA,SAAAxS,GACA0pB,GAAAG,UAAAlgB,EAAA3J,KAEA2/B,EAAA5C,GAAA7vB,GAAAO,OAAAP,GAAAvD,EAAArhB,OAAA9M,MAAAmkD,GACAh2B,EAAA7iB,QAAA6iB,EAAArhB,OAAAxB,QAAA64C,EACAh2B,EAAAo0B,sBACAp0B,EAAAq0B,sBAEAr0B,EAAA+vB,QAAAjZ,SAAAkf,EAAA9f,SACAlW,EAAA+vB,QAAAjrB,aAmTAmxB,CAAAp5B,GAGAsrB,GAAAc,YAAApsB,IAEA,IAAAsrB,GAAAO,OAAA7rB,EAAA,iBAKAA,EAAAkzB,QAAAtmB,MAAA5M,EAAAziB,KAEA,IAAAw7C,EAAA/4B,EAAA84B,2BAEAlxB,GAAAnJ,KAAAuB,EAAAziB,KAAAyD,SAAA,SAAAS,EAAA6pB,GACAtL,EAAAoM,eAAAd,GAAAkN,WAAAnL,yBACOrN,GACPA,EAAAq5B,eAEAr5B,EAAA1f,QAAAqpB,WAAA3J,EAAA1f,QAAAqpB,UAAAC,UACAhC,GAAAnJ,KAAAs6B,EAAA,SAAAvgB,GACAA,EAAA7L,UAIA3M,EAAAs5B,iBAGAt5B,EAAAkzB,QAAAjrB,aAGAjI,EAAAu5B,WAAA,GAEAjO,GAAAO,OAAA7rB,EAAA,eAEAA,EAAAi3B,gBACAj3B,EAAAw5B,iBAAA,CACA5vB,SAAA9nB,EAAA8nB,SACA/B,OAAA/lB,EAAA+lB,OACAsC,KAAAroB,EAAAqoB,MAGAnK,EAAA3rB,OAAAyN,KASAu3C,aAAA,YAGA,IAAA/N,GAAAO,OAFA93C,KAEA,kBAIAmvC,GAAAtgC,OAAA7O,UAAA2M,MAAA3M,KAAA0M,QASA6qC,GAAAO,OAfA93C,KAeA,oBACAu3C,GAAAO,OAhBA93C,KAgBA,iBAQAulD,eAAA,WAGA,QAAAhO,GAAAO,OAFA93C,KAEA,yBAIA,QAAA7F,EAAA,EAAA8wB,EANAjrB,KAMAwJ,KAAAyD,SAAA5S,OAAqDF,EAAA8wB,IAAU9wB,EAN/D6F,KAOA0lD,cAAAvrD,GAGAo9C,GAAAO,OAVA93C,KAUA,yBAQA0lD,cAAA,SAAA58C,GACA,IACA+uB,EADA73B,KACAq4B,eAAAvvB,GACApG,EAAA,CACAm1B,OACA/uB,UAGA,IAAAyuC,GAAAO,OAPA93C,KAOA,uBAAA0C,MAIAm1B,EAAA4M,WAAA51B,SACA0oC,GAAAO,OAZA93C,KAYA,sBAAA0C,MAEApC,OAAA,SAAAyN,GACA,IAAAke,EAAAjsB,KAEA+N,GAAA,kBAAAA,IAEAA,EAAA,CACA8nB,SAAA9nB,EACAqoB,KAAAh8B,UAAA,KAIA,IAAAurD,EAAA15B,EAAA1f,QAAAqpB,UACAC,EAAAwsB,GAAAt0C,EAAA8nB,SAAA8vB,KAAA9vB,UACAO,EAAAroB,EAAAqoB,KAEA,QAAAmhB,GAAAO,OAAA7rB,EAAA,iBAIA,IAAA8J,EAAA,SAAAH,GACA2hB,GAAAO,OAAA7rB,EAAA,eACA4H,GAAAtJ,SAAAo7B,KAAA5vB,WAAA,CAAAH,GAAA3J,IAGA,GAAA05B,GAAA9vB,EAAA,CACA,IAAAD,EAAA,IAAAD,GAAA,CACAH,SAAAK,EAAA,MAEA/B,OAAA/lB,EAAA+lB,QAAA6xB,EAAA7xB,OACAxzB,OAAA,SAAA8uB,EAAAw2B,GACA,IAAAC,EAAAhyB,GAAAC,OAAAnH,QAAAi5B,EAAA9xB,QACAyB,EAAAqwB,EAAArwB,YACAuwB,EAAAvwB,EAAAqwB,EAAApwB,SACApG,EAAA0K,KAAA+rB,EAAAC,KAAAvwB,IAEAE,oBAAAkwB,EAAA7vB,WACAJ,oBAAAK,IAEAC,GAAAG,aAAAlK,EAAA2J,EAAAC,EAAAO,QAEAnK,EAAA6N,OAEA/D,EAAA,IAAAJ,GAAA,CACAH,SAAA,EACApG,MAAAnD,KAIA,OAAAA,IAEA6N,KAAA,SAAAF,GACA,IAAA3N,EAAAjsB,KACAisB,EAAAljB,QAEA8qB,GAAAhK,cAAA+P,KACAA,EAAA,GAGA3N,EAAAuI,WAAAoF,GAEA3N,EAAAtf,OAAA,GAAAsf,EAAAvf,QAAA,IAIA,IAAA6qC,GAAAO,OAAA7rB,EAAA,cAAA2N,MAKA/F,GAAAnJ,KAAAuB,EAAA+iB,MAAA,SAAAC,GACAA,EAAAnV,KAAA7N,EAAAqT,YACOrT,GACPA,EAAA85B,aAAAnsB,GAEA3N,EAAA+5B,aAAApsB,GAEA2d,GAAAO,OAAA7rB,EAAA,aAAA2N,MAMApF,WAAA,SAAAoF,GAGA,IAFA,IAEAz/B,EAAA,EAAA8wB,GAFAjrB,KAEAwJ,KAAAyD,UAAA,IAAA5S,OAA6DF,EAAA8wB,IAAU9wB,EAFvE6F,KAGAujC,iBAAAppC,IAHA6F,KAIAq4B,eAAAl+B,GAAAsqC,WAAAjQ,WAAAoF,GAJA55B,KAQAm/C,QAAA3qB,WAAAoF,IAQAmsB,aAAA,SAAAnsB,GACA,IAAA3N,EAAAjsB,KAEA,QAAAu3C,GAAAO,OAAA7rB,EAAA,sBAAA2N,IAAA,CAKA,QAAAz/B,GAAA8xB,EAAAziB,KAAAyD,UAAA,IAAA5S,OAAA,EAAuDF,GAAA,IAAQA,EAC/D8xB,EAAAsX,iBAAAppC,IACA8xB,EAAAg6B,YAAA9rD,EAAAy/B,GAIA2d,GAAAO,OAAA7rB,EAAA,qBAAA2N,MAQAqsB,YAAA,SAAAn9C,EAAA8wB,GACA,IACA/B,EADA73B,KACAq4B,eAAAvvB,GACApG,EAAA,CACAm1B,OACA/uB,QACA8wB,gBAGA,IAAA2d,GAAAO,OARA93C,KAQA,qBAAA0C,MAIAm1B,EAAA4M,WAAA3K,KAAAF,GACA2d,GAAAO,OAbA93C,KAaA,oBAAA0C,MAQAsjD,aAAA,SAAApsB,GACA,IACAulB,EADAn/C,KACAm/C,QACAz8C,EAAA,CACAy8C,UACAvlB,gBAGA,IAAA2d,GAAAO,OAPA93C,KAOA,qBAAA0C,MAIAy8C,EAAArlB,OACAyd,GAAAO,OAZA93C,KAYA,oBAAA0C,MAOAgJ,kBAAA,SAAAtL,GACA,OAAAguC,GAAAC,MAAAC,OAAAtuC,KAAAI,IAEAuL,mBAAA,SAAAvL,GACA,OAAAguC,GAAAC,MAAA1gC,MAAA3N,KAAAI,EAAA,CACAktC,WAAA,KAGA4Y,mBAAA,SAAA9lD,GACA,OAAAguC,GAAAC,MAAA,UAAAruC,KAAAI,EAAA,CACAktC,WAAA,KAGA4U,0BAAA,SAAA9hD,EAAAqhC,EAAAl1B,GACA,IAAAitB,EAAA4U,GAAAC,MAAA5M,GAEA,0BAAAjI,EACAA,EAAAx5B,KAAAI,EAAAmM,GAGA,IAEAd,kBAAA,SAAArL,GACA,OAAAguC,GAAAC,MAAA3gC,QAAA1N,KAAAI,EAAA,CACAktC,WAAA,KAGAjV,eAAA,SAAAd,GACA,IACA7pB,EADA1N,KACAwJ,KAAAyD,SAAAsqB,GAEA7pB,EAAAy4C,QACAz4C,EAAAy4C,MAAA,IAGA,IAAAtuB,EAAAnqB,EAAAy4C,MAPAnmD,KAOAkP,IAeA,OAbA2oB,IACAA,EAAAnqB,EAAAy4C,MAVAnmD,KAUAkP,IAAA,CACAjO,KAAA,KACAuI,KAAA,GACAkE,QAAA,KACA+2B,WAAA,KACAtQ,OAAA,KAEA6D,QAAA,KACAG,QAAA,OAIAN,GAEAgU,uBAAA,WAGA,IAFA,IAAAhR,EAAA,EAEA1gC,EAAA,EAAA8wB,EAAAjrB,KAAAwJ,KAAAyD,SAAA5S,OAAuDF,EAAA8wB,IAAU9wB,EACjE6F,KAAAujC,iBAAAppC,IACA0gC,IAIA,OAAAA,GAEA0I,iBAAA,SAAAhM,GACA,IAAAM,EAAA73B,KAAAq4B,eAAAd,GAGA,yBAAAM,EAAA1D,QAAA0D,EAAA1D,QAAAn0B,KAAAwJ,KAAAyD,SAAAsqB,GAAApD,QAEAiyB,eAAA,WACA,OAAApmD,KAAAuM,QAAAg6B,eAAAvmC,OAMAilD,mBAAA,SAAA1tB,GACA,IAAAroB,EAAAlP,KAAAkP,GACAxB,EAAA1N,KAAAwJ,KAAAyD,SAAAsqB,GACAM,EAAAnqB,EAAAy4C,OAAAz4C,EAAAy4C,MAAAj3C,GAEA2oB,IACAA,EAAA4M,WAAAz1B,iBACAtB,EAAAy4C,MAAAj3C,KAGAF,QAAA,WACA,IAEA7U,EAAA8wB,EAFAgB,EAAAjsB,KACA+zB,EAAA9H,EAAA8H,OAIA,IAFA9H,EAAA03B,OAEAxpD,EAAA,EAAA8wB,EAAAgB,EAAAziB,KAAAyD,SAAA5S,OAAiDF,EAAA8wB,IAAU9wB,EAC3D8xB,EAAAg5B,mBAAA9qD,GAGA45B,IACA9H,EAAAo6B,eACAxyB,GAAAE,OAAAhrB,MAAAkjB,GACA6pB,GAAAiB,eAAA9qB,EAAAoD,KACApD,EAAA8H,OAAA,KACA9H,EAAAoD,IAAA,MAGAkoB,GAAAO,OAAA7rB,EAAA,kBACA82B,GAAAI,UAAAl3B,EAAA/c,KAEAo3C,cAAA,WACA,OAAAtmD,KAAA+zB,OAAAwyB,UAAArkD,MAAAlC,KAAA+zB,OAAA35B,YAEAspD,YAAA,WACA,IAAAz3B,EAAAjsB,KACAisB,EAAAkzB,QAAA,IAAAiD,GAAA,CACArpB,OAAA9M,EACAu6B,eAAAv6B,EAEA4M,MAAA5M,EAAAziB,KACA08B,SAAAja,EAAA1f,QAAA+4B,UACOrZ,IAMPq3B,WAAA,WACA,IAAAr3B,EAAAjsB,KACAq3B,EAAApL,EAAAw6B,WAAA,GAEAvvB,EAAA,WACAjL,EAAAy6B,aAAAxkD,MAAA+pB,EAAA7xB,YAGAy5B,GAAAnJ,KAAAuB,EAAA1f,QAAAm2C,OAAA,SAAAzhD,GACA60C,GAAA3C,iBAAAlnB,EAAAhrB,EAAAi2B,GACAG,EAAAp2B,GAAAi2B,IAIAjL,EAAA1f,QAAAs2C,aACA3rB,EAAA,WACAjL,EAAAs3B,UAGAzN,GAAA3C,iBAAAlnB,EAAA,SAAAiL,GACAG,EAAAksB,OAAArsB,IAOAmvB,aAAA,WACA,IAAAp6B,EAAAjsB,KACAq3B,EAAApL,EAAAw6B,WAEApvB,WAIApL,EAAAw6B,WACA5yB,GAAAnJ,KAAA2M,EAAA,SAAAH,EAAAj2B,GACA60C,GAAAvC,oBAAAtnB,EAAAhrB,EAAAi2B,OAGAyvB,iBAAA,SAAA9sB,EAAA4H,EAAAwX,GACA,IACA/0C,EAAA/J,EAAA8wB,EADAuO,EAAAyf,EAAA,mCAGA,IAAA9+C,EAAA,EAAA8wB,EAAA4O,EAAAx/B,OAAyCF,EAAA8wB,IAAU9wB,GACnD+J,EAAA21B,EAAA1/B,KAGA6F,KAAAq4B,eAAAn0B,EAAA80B,eAAAyL,WAAAjL,GAAAt1B,IAQAwiD,aAAA,SAAAtmD,GACA,IAAA6rB,EAAAjsB,KACAm/C,EAAAlzB,EAAAkzB,QAEA,QAAA5H,GAAAO,OAAA7rB,EAAA,eAAA7rB,IAAA,CAKA6rB,EAAAi3B,iBAAA,EACAj3B,EAAAw5B,iBAAA,KACA,IAAAnH,EAAAryB,EAAAg2B,YAAA7hD,GAKA++C,IACAb,EAAAa,EAAA5qB,OAAA4qB,EAAA8C,YAAA7hD,GAAAk+C,EAAAa,EAAA8C,YAAA7hD,IAGAm3C,GAAAO,OAAA7rB,EAAA,cAAA7rB,IACA,IAAAwmD,EAAA36B,EAAAw5B,iBAkBA,OAhBAmB,EAEA36B,EAAA3rB,OAAAsmD,GACOtI,IAAAryB,EAAAuK,YAEPvK,EAAA03B,OAGA13B,EAAA3rB,OAAA,CACAu1B,SAAA5J,EAAA1f,QAAAi1B,MAAAohB,kBACAxsB,MAAA,KAIAnK,EAAAi3B,iBAAA,EACAj3B,EAAAw5B,iBAAA,KACAx5B,IASAg2B,YAAA,SAAA7hD,GACA,IAAA6rB,EAAAjsB,KACAuM,EAAA0f,EAAA1f,SAAA,GACAs6C,EAAAt6C,EAAAi1B,MACA8c,GAAA,EAiCA,OAhCAryB,EAAAu5B,WAAAv5B,EAAAu5B,YAAA,GAEA,aAAAplD,EAAAa,KACAgrB,EAAA3tB,OAAA,GAEA2tB,EAAA3tB,OAAA2tB,EAAAi2B,0BAAA9hD,EAAAymD,EAAAplB,KAAAolB,GAKAhzB,GAAAtJ,SAAAhe,EAAAo2C,SAAAp2C,EAAAi1B,MAAAmhB,QAAA,CAAAviD,EAAA6sC,OAAAhhB,EAAA3tB,QAAA2tB,GAEA,YAAA7rB,EAAAa,MAAA,UAAAb,EAAAa,MACAsL,EAAAnN,SAEAmN,EAAAnN,QAAAW,KAAAksB,EAAA7rB,EAAA6sC,OAAAhhB,EAAA3tB,QAKA2tB,EAAAu5B,WAAAnrD,QACA4xB,EAAA06B,iBAAA16B,EAAAu5B,WAAAqB,EAAAplB,MAAA,GAIAxV,EAAA3tB,OAAAjE,QAAAwsD,EAAAplB,MACAxV,EAAA06B,iBAAA16B,EAAA3tB,OAAAuoD,EAAAplB,MAAA,GAGA6c,GAAAzqB,GAAA/I,YAAAmB,EAAA3tB,OAAA2tB,EAAAu5B,YAEAv5B,EAAAu5B,WAAAv5B,EAAA3tB,OACAggD,KASAyE,GAAAI,UAAA,GACA,IAAA2D,GAAA/D,GAyrBA,SAAAgE,KACA,UAAAt3C,MAAA,6GAqBA,SAAAu3C,GAAAz6C,GACAvM,KAAAuM,WAAA,GAtsBAw2C,GAAAkE,WAAAlE,GASAA,GAAAmE,MAAA,GASArzB,GAAA1lB,YAAAq0C,GASA3uB,GAAAszB,WAAA7E,GA8qBAzuB,GAAAhI,OAAAm7B,GAAA7mD,UAEA,CAMAinD,QAAAL,GASAM,MAAAN,GASAO,OAAAP,GAUA3iD,IAAA2iD,GAUAQ,KAAAR,GAUAS,QAAAT,GAQAU,MAAAV,GAUAW,QAAA,SAAA/tD,GACA,OAAAA,KAIAqtD,GAAAW,SAAA,SAAAC,GACA/zB,GAAAhI,OAAAm7B,GAAA7mD,UAAAynD,IAGA,IACAC,GAAA,CACAC,MAFAd,IASAe,GAAA,CAKAC,WAAA,CAOAj5C,OAAA,SAAApV,GACA,OAAAk6B,GAAAx4B,QAAA1B,KAAA,GAAAA,GAWAizB,OAAA,SAAAq7B,EAAAn/C,EAAAm7B,GAEA,IAAA5sB,EAAA4sB,EAAA5pC,OAAA,EAAA4pC,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAEA9sB,KAAA2nB,IAAAznB,GAAA,GACA4wC,IAAA9wC,KAAAkB,MAAA4vC,KAEA5wC,EAAA4wC,EAAA9wC,KAAAkB,MAAA4vC,IAIA,IAAAC,EAAAr0B,GAAAs0B,MAAAhxC,KAAA2nB,IAAAznB,IACA+wC,EAAA,GAEA,OAAAH,EAAA,CACA,IAAAI,EAAAlxC,KAAAC,IAAAD,KAAA2nB,IAAAmF,EAAA,IAAA9sB,KAAA2nB,IAAAmF,IAAA5pC,OAAA,KAEA,GAAAguD,EAAA,MAEA,IAAAC,EAAAz0B,GAAAs0B,MAAAhxC,KAAA2nB,IAAAmpB,IACAG,EAAAH,EAAAM,cAAApxC,KAAAkB,MAAAiwC,GAAAnxC,KAAAkB,MAAA6vC,QACW,CACX,IAAAM,GAAA,EAAArxC,KAAAkB,MAAA6vC,GACAM,EAAArxC,KAAAC,IAAAD,KAAAD,IAAAsxC,EAAA,OAEAJ,EAAAH,EAAAQ,QAAAD,SAGAJ,EAAA,IAGA,OAAAA,GAEAM,YAAA,SAAAT,EAAAn/C,EAAAm7B,GACA,IAAA0kB,EAAAV,EAAA9wC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAwb,GAAAs0B,MAAAF,KAEA,WAAAA,EACA,IACS,IAAAU,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAA7/C,OAAAm7B,EAAA5pC,OAAA,EACT4tD,EAAAM,gBAGA,MAIAK,GAAA/0B,GAAAzJ,eACAE,GAAAuJ,GAAAvJ,sBAsDA,SAAAu+B,GAAA5kB,GACA,IACA9pC,EAAA8wB,EADAsX,EAAA,GAGA,IAAApoC,EAAA,EAAA8wB,EAAAgZ,EAAA5pC,OAAoCF,EAAA8wB,IAAU9wB,EAC9CooC,EAAArmC,KAAA+nC,EAAA9pC,GAAAwT,OAGA,OAAA40B,EAmBA,SAAAumB,GAAAl1B,EAAAm1B,EAAA31B,GACA,OAAAS,GAAAx4B,QAAA0tD,GAAAl1B,GAAAm1B,YAAAp1B,EAAAR,EAAA21B,GAAAn1B,EAAA8rB,YAAAqJ,GAAAp8C,MAhFAgmB,GAAAT,KAAA,SACAxiB,SAAA,EACAC,SAAA,OACAiyB,QAAA,EAEAC,UAAA,CACAnyB,SAAA,EACA9Q,MAAA,qBACAw+B,UAAA,EACA6rB,YAAA,EACAC,iBAAA,EACAC,WAAA,EACAC,eAAA,GACAC,cAAA,EACAC,cAAA,mBACAC,mBAAA,GACAC,yBAAA,EACA1nB,iBAAA,EACApE,WAAA,GACAC,iBAAA,GAGA8rB,WAAA,CAEA/5C,SAAA,EAEAg6C,YAAA,GAEArqB,QAAA,CACA3P,IAAA,EACAE,OAAA,IAIAqU,MAAA,CACAmH,aAAA,EACAue,YAAA,EACAC,YAAA,GACAC,QAAA,EACAxqB,QAAA,EACAzU,SAAA,EACAlb,SAAA,EACAo6C,UAAA,EACAC,gBAAA,EACAC,YAAA,EAEAz/B,SAAAw9B,GAAAC,WAAAj5C,OACAk7C,MAAA,GACAC,MAAA,MAmCA,IAAAC,GAAA90B,GAAAxJ,OAAA,CAOAklB,WAAA,WAEA,OACAthB,KAFAzvB,KAEAoqD,aAAA,EACA16B,IAHA1vB,KAGAqqD,YAAA,EACA16B,MAJA3vB,KAIAsqD,cAAA,EACA16B,OALA5vB,KAKAuqD,eAAA,IAQArmB,SAAA,WACA,OAAAlkC,KAAAwqD,QAKA3F,kBAAA,WACA,IAAA5gB,EAAAjkC,KAAAuM,QAAA03B,MAcA,QAAAvqC,KAZA,IAAAuqC,EAAAgmB,QACAhmB,EAAAgmB,MAAA,CACAv6C,SAAA,KAIA,IAAAu0B,EAAAimB,QACAjmB,EAAAimB,MAAA,CACAx6C,SAAA,IAIAu0B,EACA,UAAAvqC,GAAA,UAAAA,IACA,qBAAAuqC,EAAAgmB,MAAAvwD,KACAuqC,EAAAgmB,MAAAvwD,GAAAuqC,EAAAvqC,IAGA,qBAAAuqC,EAAAimB,MAAAxwD,KACAuqC,EAAAimB,MAAAxwD,GAAAuqC,EAAAvqC,MAKA+wD,aAAA,WACA52B,GAAAtJ,SAAAvqB,KAAAuM,QAAAk+C,aAAA,CAAAzqD,QAEA6O,OAAA,SAAA67C,EAAAC,EAAAC,GACA,IACAzwD,EAAA8wB,EAAAsX,EAAA50B,EAAAs2B,EAAA8kB,EADA98B,EAAAjsB,KA8CA,IA3CAisB,EAAAw+B,eAEAx+B,EAAAy+B,WACAz+B,EAAA0+B,YACA1+B,EAAA2+B,QAAA/2B,GAAAhI,OAAA,CACA4D,KAAA,EACAE,MAAA,EACAD,IAAA,EACAE,OAAA,GACOg7B,GACP3+B,EAAA4+B,eAAA,EACA5+B,EAAA6+B,kBAAA,EACA7+B,EAAA8+B,iBAAA9+B,EAAA8+B,kBAAA,GAEA9+B,EAAA++B,sBACA/+B,EAAAg/B,gBACAh/B,EAAAi/B,qBAEAj/B,EAAAk/B,mBACAl/B,EAAAm/B,sBACAn/B,EAAAo/B,kBAOAp/B,EAAAq/B,mBAGArnB,EAAAhY,EAAAs/B,cAAA,GAEAtnB,EAAAhY,EAAAu/B,gBAAAvnB,MACAhY,EAAAw/B,8BAIAlpB,EAAAtW,EAAAy/B,qBAAAznB,IAAAhY,EAAAgY,MACAhY,EAAA0/B,6BACA1/B,EAAAgY,MAAA1B,EAIApoC,EAAA,EAAA8wB,EAAAsX,EAAAloC,OAAuCF,EAAA8wB,IAAU9wB,EACjDwT,EAAA40B,EAAApoC,IACA4uD,EAAA9kB,EAAA9pC,IAQA4uD,EAAAp7C,QALAs2B,EAAA/nC,KAAA6sD,EAAA,CACAp7C,QACAu8C,OAAA,IAkBA,OAXAj+B,EAAAu+B,OAAAvmB,EAEAhY,EAAA2/B,8BACA3/B,EAAA4/B,wBACA5/B,EAAA6/B,6BAEA7/B,EAAA8/B,YACA9/B,EAAA+/B,MACA//B,EAAAggC,WAEAhgC,EAAAigC,cACAjgC,EAAAyb,SAEAwkB,YAAA,WACAr4B,GAAAtJ,SAAAvqB,KAAAuM,QAAA2/C,YAAA,CAAAlsD,QAGAgrD,oBAAA,WACAn3B,GAAAtJ,SAAAvqB,KAAAuM,QAAAy+C,oBAAA,CAAAhrD,QAEAirD,cAAA,WACA,IAAAh/B,EAAAjsB,KAEAisB,EAAA0W,gBAEA1W,EAAAtf,MAAAsf,EAAAy+B,SACAz+B,EAAAwD,KAAA,EACAxD,EAAA0D,MAAA1D,EAAAtf,QAEAsf,EAAAvf,OAAAuf,EAAA0+B,UAEA1+B,EAAAyD,IAAA,EACAzD,EAAA2D,OAAA3D,EAAAvf,QAIAuf,EAAAm+B,YAAA,EACAn+B,EAAAo+B,WAAA,EACAp+B,EAAAq+B,aAAA,EACAr+B,EAAAs+B,cAAA,GAEAW,mBAAA,WACAr3B,GAAAtJ,SAAAvqB,KAAAuM,QAAA2+C,mBAAA,CAAAlrD,QAGAmrD,iBAAA,WACAt3B,GAAAtJ,SAAAvqB,KAAAuM,QAAA4+C,iBAAA,CAAAnrD,QAEAorD,oBAAAv3B,GAAAlK,KACA0hC,gBAAA,WACAx3B,GAAAtJ,SAAAvqB,KAAAuM,QAAA8+C,gBAAA,CAAArrD,QAGAsrD,iBAAA,WACAz3B,GAAAtJ,SAAAvqB,KAAAuM,QAAA++C,iBAAA,CAAAtrD,QAEAurD,WAAA13B,GAAAlK,KACA6hC,gBAAA,SAAAvnB,GACA,IAAAhY,EAAAjsB,KAEA,OAAA6zB,GAAAx4B,QAAA4oC,MAAA5pC,OACAw5B,GAAAtJ,SAAA0B,EAAA1f,QAAAi/C,gBAAA,CAAAv/B,EAAAgY,KAIAhY,EAAAgY,MAAApQ,GAAAtJ,SAAA0B,EAAA1f,QAAAi/C,gBAAA,CAAAv/B,IAAAgY,SAAAhY,EAAAgY,MACAA,IAEAwnB,4BAAA,WACA53B,GAAAtJ,SAAAvqB,KAAAuM,QAAAk/C,4BAAA,CAAAzrD,QAEA0rD,qBAAA,WACA,IAEAS,EAFAnsD,KAEAuM,QAAA03B,MAFAjkC,KAGAikC,MAHAjkC,KAGAikC,MAAA16B,IAAA4iD,EAAAC,cAAAD,EAAA5hC,SAAAvqB,OAEA2rD,2BAAA,WACA93B,GAAAtJ,SAAAvqB,KAAAuM,QAAAo/C,2BAAA,CAAA3rD,QAGA4rD,4BAAA,WACA/3B,GAAAtJ,SAAAvqB,KAAAuM,QAAAq/C,4BAAA,CAAA5rD,QAEA6rD,sBAAA,WACA,IAAA5/B,EAAAjsB,KACA4zB,EAAA3H,EAAAoD,IACA88B,EAAAlgC,EAAA1f,QAAA03B,MACA1B,EAAAsmB,GAAA58B,EAAAu+B,QAGA6B,EAAAx4B,GAAAtnB,QAAAymB,WAAAm5B,GAEAv4B,EAAAR,KAAAi5B,EAAA3tD,OACA,IAAA4tD,EAAAH,EAAAxC,aAAA,EAEA,GAAApnB,EAAAloC,QAAA4xB,EAAA1f,QAAAmD,SAAAuc,EAAA0W,eAOA,IANA,IAEA4pB,EAFAC,EAAA34B,GAAAm1B,YAAAp1B,EAAAy4B,EAAA3tD,OAAA6jC,EAAAtW,EAAA8+B,kBACA0B,EAAAD,EAGAE,EAAAzgC,EAAAkY,gBAAA,GAAAlY,EAAAkY,gBAAA,KAEAsoB,EAAAC,GAAAJ,EAAAH,EAAAvC,aAAA,CACA,IAAA+C,EAAA94B,GAAA+4B,UAAAN,GAIA,GAHAC,EAAAp1C,KAAAoC,IAAAozC,GACAx1C,KAAAqC,IAAAmzC,GAEAH,EAAAvgC,EAAA0+B,UAAA,CAEA2B,IACA,MAGAA,IACAG,EAAAF,EAAAC,EAIAvgC,EAAAqgC,iBAEAR,2BAAA,WACAj4B,GAAAtJ,SAAAvqB,KAAAuM,QAAAu/C,2BAAA,CAAA9rD,QAGA+rD,UAAA,WACAl4B,GAAAtJ,SAAAvqB,KAAAuM,QAAAw/C,UAAA,CAAA/rD,QAEAgsD,IAAA,WACA,IAAA//B,EAAAjsB,KAEA0nC,EAAAzb,EAAAyb,QAAA,CACA/6B,MAAA,EACAD,OAAA,GAEA61B,EAAAsmB,GAAA58B,EAAAu+B,QACAjjB,EAAAtb,EAAA1f,QACA4/C,EAAA5kB,EAAAtD,MACA4oB,EAAAtlB,EAAAkiB,WACAqD,EAAAvlB,EAAA1F,UAEAnyB,EAAAuc,EAAA8gC,aAEAp9C,EAAA43B,EAAA53B,SACAgzB,EAAA1W,EAAA0W,eACAqqB,EAAAn5B,GAAAtnB,QAAAymB,WACAq5B,EAAAW,EAAAb,GACA/C,EAAA7hB,EAAA1F,UAAAunB,eAiBA,GAbA1hB,EAAA/6B,MAFAg2B,EAEA1W,EAAAghC,cAAAhhC,EAAAy+B,SAAAz+B,EAAA2+B,QAAAn7B,KAAAxD,EAAA2+B,QAAAj7B,MAAA1D,EAAAy+B,SAEAh7C,GAAAo9C,EAAA3D,UAAAC,EAAA,EAKA1hB,EAAAh7B,OADAi2B,EACAjzB,GAAAo9C,EAAA3D,UAAAC,EAAA,EAEAn9B,EAAA0+B,UAIAkC,EAAAn9C,WAAA,CACA,IAAAw9C,EAAAF,EAAAH,GACAM,EAAAt5B,GAAAtnB,QAAAwmB,UAAA85B,EAAAxtB,SACA+tB,EAAAF,EAAA35B,WAAA45B,EAAAzgD,OAEAi2B,EACA+E,EAAAh7B,QAAA0gD,EAEA1lB,EAAA/6B,OAAAygD,EAKA,GAAAjB,EAAAz8C,WAAA,CACA,IAAA29C,EAAAx5B,GAAAm1B,YAAA/8B,EAAAoD,IAAAg9B,EAAA3tD,OAAA6jC,EAAAtW,EAAA8+B,kBACAuC,EAAAz5B,GAAA05B,mBAAAhrB,GACAirB,EAAA,GAAAnB,EAAAhtD,KACAouD,EAAAxhC,EAAA1f,QAAA03B,MAAA5E,QAKA,GAHApT,EAAA4+B,eAAAyC,EACArhC,EAAA6+B,kBAAAuC,EAEA1qB,EAAA,CACA,IAAAgqB,EAAA94B,GAAA+4B,UAAA3gC,EAAAqgC,eACAC,EAAAp1C,KAAAoC,IAAAozC,GACAe,EAAAv2C,KAAAqC,IAAAmzC,GAEAgB,EAAAD,EAAAL,EAAAhB,EAAA94B,WAAA+5B,EAAAE,EAEA9lB,EAAAh7B,OAAAyK,KAAAD,IAAA+U,EAAA0+B,UAAAjjB,EAAAh7B,OAAAihD,EAAAF,GACAxhC,EAAAoD,IAAA+D,KAAAi5B,EAAA3tD,OACA,IAIA0rD,EAAAE,EAJAsD,EAAA9E,GAAA78B,EAAAoD,IAAAkT,EAAA,GAAA8pB,EAAA3tD,QACAmvD,EAAA/E,GAAA78B,EAAAoD,IAAAkT,IAAAloC,OAAA,GAAAgyD,EAAA3tD,QACAovD,EAAA7hC,EAAAkY,gBAAA,GAAAlY,EAAAwD,KACAs+B,EAAA9hC,EAAA0D,MAAA1D,EAAAkY,gBAAA5B,EAAAloC,OAAA,GAIA,IAAA4xB,EAAAqgC,eACAlC,EAAA,WAAAz6C,EAAA48C,EAAAqB,EAAArB,EAAAiB,EACAlD,EAAA,WAAA36C,EAAA48C,EAAAiB,EAAAjB,EAAAsB,IAEAzD,EAAAwD,EAAA,EACAtD,EAAAuD,EAAA,GAGA5hC,EAAAm+B,YAAAjzC,KAAAC,IAAAgzC,EAAA0D,EAAA,KAEA7hC,EAAAq+B,aAAAnzC,KAAAC,IAAAkzC,EAAAyD,EAAA,UAIA5B,EAAAtC,OACAwD,EAAA,EAIAA,GAAAI,EAAAD,EAGA9lB,EAAA/6B,MAAAwK,KAAAD,IAAA+U,EAAAy+B,SAAAhjB,EAAA/6B,MAAA0gD,GACAphC,EAAAo+B,WAAAgC,EAAAhtD,KAAA,EACA4sB,EAAAs+B,cAAA8B,EAAAhtD,KAAA,EAIA4sB,EAAA+hC,gBACA/hC,EAAAtf,MAAA+6B,EAAA/6B,MACAsf,EAAAvf,OAAAg7B,EAAAh7B,QAOAshD,cAAA,WACA,IAAA/hC,EAAAjsB,KAEAisB,EAAA2+B,UACA3+B,EAAAm+B,YAAAjzC,KAAAC,IAAA6U,EAAAm+B,YAAAn+B,EAAA2+B,QAAAn7B,KAAA,GACAxD,EAAAo+B,WAAAlzC,KAAAC,IAAA6U,EAAAo+B,WAAAp+B,EAAA2+B,QAAAl7B,IAAA,GACAzD,EAAAq+B,aAAAnzC,KAAAC,IAAA6U,EAAAq+B,aAAAr+B,EAAA2+B,QAAAj7B,MAAA,GACA1D,EAAAs+B,cAAApzC,KAAAC,IAAA6U,EAAAs+B,cAAAt+B,EAAA2+B,QAAAh7B,OAAA,KAGAq8B,SAAA,WACAp4B,GAAAtJ,SAAAvqB,KAAAuM,QAAA0/C,SAAA,CAAAjsD,QAGA2iC,aAAA,WACA,cAAA3iC,KAAAuM,QAAAoD,UAAA,WAAA3P,KAAAuM,QAAAoD,UAEAs9C,YAAA,WACA,OAAAjtD,KAAAuM,QAAA8iC,WAGA9K,cAAA,SAAA0pB,GAEA,GAAAp6B,GAAAhK,cAAAokC,GACA,OAAAhoB,IAIA,sBAAAgoB,gBAAA9jC,UAAAH,SAAAikC,GACA,OAAAhoB,IAIA,GAAAgoB,EACA,GAAAjuD,KAAA2iC,gBACA,QAAAhnC,IAAAsyD,EAAAr2C,EACA,OAAA5X,KAAAukC,cAAA0pB,EAAAr2C,QAES,QAAAjc,IAAAsyD,EAAAp2C,EACT,OAAA7X,KAAAukC,cAAA0pB,EAAAp2C,GAKA,OAAAo2C,GAQAjS,iBAAAnoB,GAAAlK,KASAka,iBAAAhQ,GAAAlK,KAOAukC,iBAAAr6B,GAAAlK,KAMAwa,gBAAA,SAAAr7B,GACA,IAAAmjB,EAAAjsB,KACA4hC,EAAA3V,EAAA1f,QAAAq1B,OAEA,GAAA3V,EAAA0W,eAAA,CACA,IAAAwrB,EAAAliC,EAAAtf,OAAAsf,EAAAm+B,YAAAn+B,EAAAq+B,cACAoC,EAAAyB,EAAAh3C,KAAAC,IAAA6U,EAAAu+B,OAAAnwD,QAAAunC,EAAA,QACAwsB,EAAA1B,EAAA5jD,EAAAmjB,EAAAm+B,YAEAxoB,IACAwsB,GAAA1B,EAAA,GAGA,IAAA2B,EAAApiC,EAAAwD,KAAA2+B,EAEA,OADAC,GAAApiC,EAAAghC,cAAAhhC,EAAA2+B,QAAAn7B,KAAA,EAIA,IAAA6+B,EAAAriC,EAAAvf,QAAAuf,EAAAo+B,WAAAp+B,EAAAs+B,eACA,OAAAt+B,EAAAyD,IAAA5mB,GAAAwlD,GAAAriC,EAAAu+B,OAAAnwD,OAAA,KAOA2rC,mBAAA,SAAAuoB,GACA,IAAAtiC,EAAAjsB,KAEA,GAAAisB,EAAA0W,eAAA,CACA,IAAAwrB,EAAAliC,EAAAtf,OAAAsf,EAAAm+B,YAAAn+B,EAAAq+B,cACAkE,EAAAL,EAAAI,EAAAtiC,EAAAm+B,YACAiE,EAAApiC,EAAAwD,KAAA++B,EAEA,OADAH,GAAApiC,EAAAghC,cAAAhhC,EAAA2+B,QAAAn7B,KAAA,EAIA,OAAAxD,EAAAyD,IAAA6+B,EAAAtiC,EAAAvf,QAOAg2B,aAAA,WACA,OAAA1iC,KAAA6jC,iBAAA7jC,KAAAyuD,iBAEAA,aAAA,WACA,IACAv3C,EADAlX,KACAkX,IACAE,EAFApX,KAEAoX,IACA,OAHApX,KAGAorC,YAAA,EAAAl0B,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAA,GAAAE,EAAA,EAAAF,EAAA,GAOAw3C,UAAA,SAAAzqB,GACA,IAYA9pC,EAAA4uD,EAZA98B,EAAAjsB,KACA2iC,EAAA1W,EAAA0W,eACAgsB,EAAA1iC,EAAA1f,QAAA03B,MAAAgmB,MACA2E,EAAA3qB,EAAA5pC,OACAw0D,GAAA,EACAC,EAAAH,EAAAI,cAGAC,EAAA/iC,EAAAgjC,aAAAL,EAAA,GAEAM,EAAAvsB,EAAA1W,EAAAtf,OAAAsf,EAAAm+B,YAAAn+B,EAAAq+B,cAAAr+B,EAAAvf,QAAAuf,EAAAo+B,WAAAp+B,EAAAkjC,eACAvlD,EAAA,GAaA,IAVAolD,EAAAE,IACAL,EAAA,EAAA13C,KAAAkB,MAAA22C,EAAAE,IAKAN,EAAAE,IACAD,EAAA13C,KAAAC,IAAAy3C,EAAA,EAAA13C,KAAAkB,MAAAu2C,EAAAE,KAGA30D,EAAA,EAAiBA,EAAAy0D,EAAez0D,IAChC4uD,EAAA9kB,EAAA9pC,GAEA00D,EAAA,GAAA10D,EAAA00D,EAAA,UAEA9F,EAAAp7C,MAGA/D,EAAA1N,KAAA6sD,GAGA,OAAAn/C,GAMAqlD,UAAA,WACA,IAAAhjC,EAAAjsB,KACA2iC,EAAA1W,EAAA0W,eACAgsB,EAAA1iC,EAAA1f,QAAA03B,MAAAgmB,MAEAmF,EAAAv7B,GAAA+4B,UAAA3gC,EAAAqgC,eACA/yC,EAAApC,KAAA2nB,IAAA3nB,KAAAoC,IAAA61C,IACA51C,EAAArC,KAAA2nB,IAAA3nB,KAAAqC,IAAA41C,IACA/vB,EAAAsvB,EAAA5E,iBAAA,EACAzyC,EAAA2U,EAAA6+B,kBAAAzrB,GAAA,EAEAgtB,EAAAx4B,GAAAtnB,QAAAymB,WAAA27B,GAEAn6C,EAAAyX,EAAA4+B,eAAAwB,EAAA94B,WAAA8L,GAAA,EAEA,OAAAsD,EAAAnuB,EAAA+E,EAAAjC,EAAAkC,EAAAlC,EAAAiC,EAAA/E,EAAAgF,EAAAhF,EAAAgF,EAAAlC,EAAAiC,EAAA/E,EAAA+E,EAAAjC,EAAAkC,GAMAuzC,WAAA,WACA,IAGA5yD,EAAA8wB,EAAA4M,EAFAzI,EADApvB,KACAovB,MACA1f,EAFA1P,KAEAuM,QAAAmD,QAGA,YAAAA,EACA,QAAAA,EAIA,IAAAvV,EAAA,EAAA8wB,EAAAmE,EAAA5lB,KAAAyD,SAAA5S,OAAoDF,EAAA8wB,IAAU9wB,EAC9D,GAAAi1B,EAAAmU,iBAAAppC,MACA09B,EAAAzI,EAAAiJ,eAAAl+B,IAEA69B,UAdAh4B,KAcAkP,IAAA2oB,EAAAM,UAdAn4B,KAcAkP,IACA,SAKA,UAOA4qB,KAAA,SAAAwF,GACA,IAAArT,EAAAjsB,KACAuM,EAAA0f,EAAA1f,QAEA,GAAA0f,EAAA8gC,aAAA,CAIA,IA6BAsC,EAAAC,EAAAC,EA7BAngC,EAAAnD,EAAAmD,MACAwE,EAAA3H,EAAAoD,IACA4D,EAAAN,GAAAO,OACAb,EAAAY,EAAAZ,iBACAs8B,EAAApiD,EAAA03B,MAAAgmB,MACAuF,EAAAjjD,EAAA03B,MAAAimB,OAAAyE,EACA9sB,EAAAt1B,EAAAs1B,UACA4nB,EAAAl9C,EAAAk9C,WACA95C,EAAApD,EAAAoD,SACA8/C,EAAA,IAAAxjC,EAAAqgC,cACAoD,EAAAf,EAAA9E,OACAlnB,EAAA1W,EAAA0W,eACAqqB,EAAAn5B,GAAAtnB,QAAAymB,WACAiR,EAAA0qB,EAAAj/C,SAAAi/C,EAAA7E,SAAA79B,EAAAyiC,UAAAziC,EAAAiY,YAAAjY,EAAAiY,WACAyrB,EAAA/G,GAAA+F,EAAAiB,UAAAv9B,GACAg6B,EAAAW,EAAA2B,GACAp7B,EAAA84B,EAAA94B,WACAs8B,EAAAjH,GAAA4G,EAAAI,UAAAv9B,GACAy9B,EAAA9C,EAAAwC,GACA/B,EAAAkB,EAAAtvB,QACA2qB,EAAA2E,EAAA3E,YACA+F,EAAAluB,EAAAsnB,UAAAtnB,EAAAunB,eAAA,EACA4G,EAAApH,GAAAa,EAAAmG,UAAAv9B,GACA66B,EAAAF,EAAAvD,GACA0D,EAAAt5B,GAAAtnB,QAAAwmB,UAAA02B,EAAApqB,SACA4wB,EAAAp8B,GAAA+4B,UAAA3gC,EAAAqgC,eACA4D,EAAA,GACAC,EAAAtuB,EAAAonB,WAAA3+B,GAAAuX,EAAAzE,UAAA,OACAgzB,EAAAv8B,GAAAw8B,YAoLA,GAjLA,QAAA1gD,GACA0/C,EAAAe,EAAAhhC,EAAAnD,EAAA2D,OAAAugC,GACAb,EAAArjC,EAAA2D,OAAAmgC,EACAR,EAAAF,EAAAc,EAAA,GACO,WAAAxgD,GACP0/C,EAAAe,EAAAhhC,EAAAnD,EAAAyD,IAAAygC,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAAtjC,EAAAyD,IAAAqgC,GACO,SAAApgD,GACP0/C,EAAAe,EAAAhhC,EAAAnD,EAAA0D,MAAAwgC,GACAb,EAAArjC,EAAA0D,MAAAogC,EACAR,EAAAF,EAAAc,EAAA,IAEAd,EAAAe,EAAAhhC,EAAAnD,EAAAwD,KAAA0gC,GACAb,EAAAD,EAAAc,EAAA,EACAZ,EAAAtjC,EAAAwD,KAAAsgC,GAKAl8B,GAAAnJ,KAAAuZ,EAAA,SAAA8kB,EAAAjgD,GAEA,IAAA+qB,GAAAhK,cAAAk/B,EAAAp7C,OAAA,CAIA,IACAyvB,EAAAkzB,EAAA5yB,EAAAC,EAgBA4yB,EAAAC,EAAAC,EAAAC,EAAAhxB,EAAAE,EAAAD,EAAA1mB,EAAA03C,EAAAC,EAAAC,EAAA3P,EAjBAvzC,EAAAo7C,EAAAp7C,MAGA7E,IAAAmjB,EAAA6kC,eAAAvkD,EAAAq1B,SAAAC,EAAAC,iBAEA1E,EAAAyE,EAAAwnB,cACAiH,EAAAzuB,EAAAynB,cACA5rB,EAAAmE,EAAA0nB,oBAAA,GACA5rB,EAAAkE,EAAA2nB,0BAAA,IAEApsB,EAAA9S,GAAAuX,EAAAzE,UAAAt0B,GACAwnD,EAAAhmC,GAAAuX,EAAAjjC,MAAAkK,GACA40B,EAAAmE,EAAAnE,YAAA,GACAC,EAAAkE,EAAAlE,kBAAA,GAKA,IAAA4c,EAAA1mB,GAAAx4B,QAAAsS,KAAAtT,OAAA,EACA02D,EA5qBA,SAAAtrC,EAAA3c,EAAAg5B,GACA,IAAAivB,EAAAtrC,EAAA0e,gBAAAr7B,GAYA,OAVAg5B,IACA,IAAArc,EAAAye,WAAA7pC,OACA02D,GAAAtrC,EAAAkd,eAAAxrB,KAAAC,IAAA25C,EAAAtrC,EAAAgK,KAAAhK,EAAAkK,MAAAohC,GAAA55C,KAAAC,IAAA25C,EAAAtrC,EAAAiK,IAAAjK,EAAAmK,OAAAmhC,GAEAA,GADO,IAAAjoD,GACP2c,EAAA0e,gBAAA,GAAA4sB,GAAA,GAEAA,EAAAtrC,EAAA0e,gBAAAr7B,EAAA,OAIAioD,EA+pBAC,CAAA/kC,EAAAnjB,EAAA+4B,EAAAC,iBAEA,GAAAa,EAAA,CACA,IAAAsuB,EAAAlB,EAAAtC,EAEAsD,EAAA9kC,EAAAwD,KAhCA,OAiCA6gC,EAAA,iBAGAC,EAAAE,EAAA/wB,EAAAC,EAAAywB,EAAAhhC,EAAA2hC,EAAA3zB,GACAozB,EAAAlB,EACAoB,EAAAnB,EACAoB,EAAA1kC,EAAAkY,gBAAAr7B,GAAAkhD,EAEA,QAAAr6C,GACAiwB,EAAAwwB,EAAAhhC,EAAAkQ,EAAA5P,IAAAygC,KAAA,EACAl3C,EAAAqmB,EAAA1P,OACAihC,IAAApB,EAAA,MAAAlV,GAAAhnB,EACA2tB,EAAAuO,EAAA,gBACAmB,EAAA3kC,EAAA2D,OAAAqhC,IAEArxB,EAAAN,EAAA5P,IACAzW,EAAAm3C,EAAAhhC,EAAAkQ,EAAA1P,OAAAugC,KAAA,EACAU,GAAApB,EAAA,MAAAl8B,EACA2tB,EAAAuO,EAAA,iBACAmB,EAAA3kC,EAAAyD,IAAAuhC,OAES,CACT,IAAAC,GAAAxB,EAAA,EAAAK,GAAAtC,EAEAsD,EAAA9kC,EAAAyD,IAzDA,OA0DA4gC,EAAA,iBAGAC,EAAAjB,EACAmB,EAAAlB,EACAiB,EAAAE,EAAA9wB,EAAA3mB,EAAAm3C,EAAAhhC,EAAA2hC,EAAA3zB,GACAwzB,EAAA3kC,EAAAkY,gBAAAr7B,GAAAkhD,EACA6G,GAAA,EAAAtW,GAAAhnB,EAAA,EAEA,SAAA5jB,GACA+vB,EAAA0wB,EAAAhhC,EAAAkQ,EAAA7P,KAAA0gC,KAAA,EACAxwB,EAAAL,EAAA3P,MACAuxB,EAAAwO,EAAA,eACAiB,EAAA1kC,EAAA0D,MAAAuhC,IAEAxxB,EAAAJ,EAAA7P,KACAkQ,EAAAywB,EAAAhhC,EAAAkQ,EAAA3P,MAAAwgC,KAAA,EACAjP,EAAAwO,EAAA,eACAiB,EAAA1kC,EAAAwD,KAAAyhC,GAIAhB,EAAAh0D,KAAA,CACAq0D,MACAC,MACAC,MACAC,MACAhxB,KACAE,KACAD,KACA1mB,KACA03C,SACAC,SACAO,QAAA/zB,EACAg0B,QAAAd,EACAe,aAAA3zB,EACA4zB,mBAAA3zB,EACAxN,UAAA,EAAA8/B,EACAtiD,QACAu8C,MAAAnB,EAAAmB,MACA2G,aACA3P,iBAIArtB,GAAAnJ,KAAAwlC,EAAA,SAAAqB,GACA,IAAAJ,EAAAI,EAAAJ,QACAC,EAAAG,EAAAH,QA4BA,GA1BAvvB,EAAAnyB,SAAAyhD,GAAAC,IACAx9B,EAAA3C,OACA2C,EAAAwJ,UAAA+zB,EACAv9B,EAAA0J,YAAA8zB,EAEAx9B,EAAA2K,cACA3K,EAAA2K,YAAAgzB,EAAAF,cACAz9B,EAAA4K,eAAA+yB,EAAAD,oBAGA19B,EAAApD,YAEAqR,EAAAsnB,YACAv1B,EAAA/D,OAAA0hC,EAAAhB,IAAAgB,EAAAf,KACA58B,EAAAnD,OAAA8gC,EAAAd,IAAAc,EAAAb,MAGA7uB,EAAAqnB,kBACAt1B,EAAA/D,OAAA0hC,EAAA7xB,GAAA6xB,EAAA3xB,IACAhM,EAAAnD,OAAA8gC,EAAA5xB,GAAA4xB,EAAAt4C,KAGA2a,EAAAhD,SACAgD,EAAAxC,WAGAu9B,EAAAj/C,QAAA,CAEAkkB,EAAA3C,OACA2C,EAAA49B,UAAAD,EAAAZ,OAAAY,EAAAX,QACAh9B,EAAApL,OAAA+oC,EAAAphC,UACAyD,EAAAR,KAAAm+B,EAAArH,MAAA4F,EAAApxD,OAAA2tD,EAAA3tD,OACAk1B,EAAAuJ,UAAAo0B,EAAArH,MAAA2F,EAAAF,EACA/7B,EAAAutB,aAAA,SACAvtB,EAAAstB,UAAAqQ,EAAArQ,UACA,IAAAvzC,EAAA4jD,EAAA5jD,MACAkK,EAAA05C,EAAAV,WAEA,GAAAh9B,GAAAx4B,QAAAsS,GACA,QAAAxT,EAAA,EAA2BA,EAAAwT,EAAAtT,SAAkBF,EAE7Cy5B,EAAAwtB,SAAA,GAAAzzC,EAAAxT,GAAA,EAAA0d,GACAA,GAAA0b,OAGAK,EAAAwtB,SAAAzzC,EAAA,EAAAkK,GAGA+b,EAAAxC,aAIAq4B,EAAA/5C,QAAA,CAEA,IAAA+hD,EACAC,EACAvhC,EAAA,EACAwhC,EAAAzE,EAAA35B,WAAA,EAEA,GAAAoP,EACA8uB,EAAAxlC,EAAAwD,MAAAxD,EAAA0D,MAAA1D,EAAAwD,MAAA,EAEAiiC,EAAA,WAAA/hD,EAAAsc,EAAA2D,OAAA+hC,EAAAxE,EAAAv9B,OAAA3D,EAAAyD,IAAAiiC,EAAAxE,EAAAz9B,QACS,CACT,IAAAkiC,EAAA,SAAAjiD,EACA8hD,EAAAG,EAAA3lC,EAAAwD,KAAAkiC,EAAAxE,EAAAz9B,IAAAzD,EAAA0D,MAAAgiC,EAAAxE,EAAAz9B,IACAgiC,EAAAzlC,EAAAyD,KAAAzD,EAAA2D,OAAA3D,EAAAyD,KAAA,EACAS,EAAAyhC,GAAA,GAAAz6C,KAAAiC,GAAA,GAAAjC,KAAAiC,GAGAwa,EAAA3C,OACA2C,EAAA49B,UAAAC,EAAAC,GACA99B,EAAApL,OAAA2H,GACAyD,EAAAstB,UAAA,SACAttB,EAAAutB,aAAA,SACAvtB,EAAAuJ,UAAA6yB,EAEAp8B,EAAAR,KAAA85B,EAAAxuD,OACAk1B,EAAAwtB,SAAAqI,EAAAC,YAAA,KACA91B,EAAAxC,UAGA,GAAA++B,EAAA,CAEA,IAEAzwB,EAAAC,EAAAC,EAAA3mB,EAFA44C,EAAA1B,EACA2B,EAAAxnC,GAAAuX,EAAAzE,UAAA6G,EAAA5pC,OAAA,KAGAsoC,GACAjD,EAAA0wB,EAAAhhC,EAAAnD,EAAAwD,KAAAoiC,KAAA,EACAlyB,EAAAywB,EAAAhhC,EAAAnD,EAAA0D,MAAAmiC,KAAA,EACAlyB,EAAA3mB,EAAAo2C,IAEAzvB,EAAAwwB,EAAAhhC,EAAAnD,EAAAyD,IAAAmiC,KAAA,EACA54C,EAAAm3C,EAAAhhC,EAAAnD,EAAA2D,OAAAkiC,KAAA,EACApyB,EAAAC,EAAA0vB,GAGAz7B,EAAAwJ,UAAA+yB,EACAv8B,EAAA0J,YAAAhT,GAAAuX,EAAAjjC,MAAA,GACAg1B,EAAApD,YACAoD,EAAA/D,OAAA6P,EAAAE,GACAhM,EAAAnD,OAAAkP,EAAA1mB,GACA2a,EAAAhD,cAOAmhC,GAAA5H,GAAAt+B,OAAA,CAMAmmC,UAAA,WACA,IAAAxoD,EAAAxJ,KAAAovB,MAAA5lB,KACA,OAAAxJ,KAAAuM,QAAAg2B,SAAAviC,KAAA2iC,eAAAn5B,EAAAyoD,QAAAzoD,EAAA0oD,UAAA1oD,EAAA+4B,QAEA6oB,oBAAA,WACA,IAIAz0B,EAJA1K,EAAAjsB,KACAuiC,EAAAtW,EAAA+lC,YACA/lC,EAAAkmC,SAAA,EACAlmC,EAAAmmC,SAAA7vB,EAAAloC,OAAA,OAGAsB,IAAAswB,EAAA1f,QAAA03B,MAAA/sB,MAEAyf,EAAA4L,EAAA99B,QAAAwnB,EAAA1f,QAAA03B,MAAA/sB,KACA+U,EAAAkmC,UAAA,IAAAx7B,IAAA1K,EAAAkmC,eAGAx2D,IAAAswB,EAAA1f,QAAA03B,MAAA7sB,MAEAuf,EAAA4L,EAAA99B,QAAAwnB,EAAA1f,QAAA03B,MAAA7sB,KACA6U,EAAAmmC,UAAA,IAAAz7B,IAAA1K,EAAAmmC,UAGAnmC,EAAA/U,IAAAqrB,EAAAtW,EAAAkmC,UACAlmC,EAAA7U,IAAAmrB,EAAAtW,EAAAmmC,WAEA7G,WAAA,WACA,IAAAt/B,EAAAjsB,KACAuiC,EAAAtW,EAAA+lC,YAEA/lC,EAAAgY,MAAA,IAAAhY,EAAAkmC,UAAAlmC,EAAAmmC,WAAA7vB,EAAAloC,OAAA,EAAAkoC,IAAArf,MAAA+I,EAAAkmC,SAAAlmC,EAAAmmC,SAAA,IAEApW,iBAAA,SAAAlzC,EAAAyuB,GACA,IAAAtL,EAAAjsB,KACAovB,EAAAnD,EAAAmD,MAEA,OAAAA,EAAAiJ,eAAAd,GAAAkN,WAAAjM,qBAAAvM,EAAA/c,GACA+c,EAAAsY,cAAAnV,EAAA5lB,KAAAyD,SAAAsqB,GAAA/tB,KAAAV,IAGAmjB,EAAAgY,MAAAn7B,EAAAmjB,EAAAkmC,WAGAtuB,iBAAA,SAAAlqC,EAAAmP,GACA,IAMAupD,EANApmC,EAAAjsB,KACA4hC,EAAA3V,EAAA1f,QAAAq1B,OAEA0wB,EAAAn7C,KAAAC,IAAA6U,EAAAmmC,SAAA,EAAAnmC,EAAAkmC,UAAAvwB,EAAA,QASA,QAJAjmC,IAAAhC,GAAA,OAAAA,IACA04D,EAAApmC,EAAA0W,eAAAhpC,EAAAie,EAAAje,EAAAke,QAGAlc,IAAA02D,QAAA12D,IAAAhC,GAAA+rB,MAAA5c,GAAA,CACA,IAAAy5B,EAAAtW,EAAA+lC,YACAr4D,EAAA04D,GAAA14D,EACA,IAAA2M,EAAAi8B,EAAA99B,QAAA9K,GACAmP,GAAA,IAAAxC,IAAAwC,EAGA,GAAAmjB,EAAA0W,eAAA,CACA,IAAA4vB,EAAAtmC,EAAAtf,MAAA2lD,EACAE,EAAAD,GAAAzpD,EAAAmjB,EAAAkmC,UAMA,OAJAvwB,IACA4wB,GAAAD,EAAA,GAGAtmC,EAAAwD,KAAA+iC,EAGA,IAAAC,EAAAxmC,EAAAvf,OAAA4lD,EACAI,EAAAD,GAAA3pD,EAAAmjB,EAAAkmC,UAMA,OAJAvwB,IACA8wB,GAAAD,EAAA,GAGAxmC,EAAAyD,IAAAgjC,GAEAvuB,gBAAA,SAAAr7B,GACA,OAAA9I,KAAA6jC,iBAAA7jC,KAAAikC,MAAAn7B,KAAA9I,KAAAmyD,SAAA,OAEAjE,iBAAA,SAAAE,GACA,IAAAniC,EAAAjsB,KACA4hC,EAAA3V,EAAA1f,QAAAq1B,OAEA0wB,EAAAn7C,KAAAC,IAAA6U,EAAAu+B,OAAAnwD,QAAAunC,EAAA,QACA+wB,EAAA1mC,EAAA0W,eACAiwB,GAAAD,EAAA1mC,EAAAtf,MAAAsf,EAAAvf,QAAA4lD,EAaA,OAZAlE,GAAAuE,EAAA1mC,EAAAwD,KAAAxD,EAAAyD,IAEAkS,IACAwsB,GAAAwE,EAAA,IAGAxE,GAAA,EACA,EAEAj3C,KAAAoM,MAAA6qC,EAAAwE,IAGA3mC,EAAAkmC,UAEAzvB,aAAA,WACA,OAAA1iC,KAAA4vB,UAIAijC,GAzHA,CACAljD,SAAA,UAyHAoiD,GAAAc,aACA,IAAAlpC,GAAAkK,GAAAlK,KACAE,GAAAgK,GAAAhK,cAgFAipC,GAAA3I,GAAAt+B,OAAA,CACA0Y,cAAA,SAAA5qC,GACA,wBAAAA,GACAA,EAGAwwD,GAAAhqD,UAAAokC,cAAAxkC,KAAAC,KAAArG,IAEAo5D,uBAAA,WACA,IAAA9mC,EAAAjsB,KACAunC,EAAAtb,EAAA1f,QACA4/C,EAAA5kB,EAAAtD,MAIA,GAAAkoB,EAAA/gB,YAAA,CACA,IAAA4nB,EAAAn/B,GAAAo/B,KAAAhnC,EAAA/U,KACAg8C,EAAAr/B,GAAAo/B,KAAAhnC,EAAA7U,KAEA47C,EAAA,GAAAE,EAAA,EAEAjnC,EAAA7U,IAAA,EACS47C,EAAA,GAAAE,EAAA,IAETjnC,EAAA/U,IAAA,GAIA,IAAAi8C,OAAAx3D,IAAAwwD,EAAAj1C,UAAAvb,IAAAwwD,EAAAiH,aACAC,OAAA13D,IAAAwwD,EAAA/0C,UAAAzb,IAAAwwD,EAAAmH,kBAEA33D,IAAAwwD,EAAAj1C,IACA+U,EAAA/U,IAAAi1C,EAAAj1C,SACOvb,IAAAwwD,EAAAiH,eACP,OAAAnnC,EAAA/U,IACA+U,EAAA/U,IAAAi1C,EAAAiH,aAEAnnC,EAAA/U,IAAAC,KAAAD,IAAA+U,EAAA/U,IAAAi1C,EAAAiH,oBAIAz3D,IAAAwwD,EAAA/0C,IACA6U,EAAA7U,IAAA+0C,EAAA/0C,SACOzb,IAAAwwD,EAAAmH,eACP,OAAArnC,EAAA7U,IACA6U,EAAA7U,IAAA+0C,EAAAmH,aAEArnC,EAAA7U,IAAAD,KAAAC,IAAA6U,EAAA7U,IAAA+0C,EAAAmH,eAIAH,IAAAE,GAKApnC,EAAA/U,KAAA+U,EAAA7U,MACA+7C,EACAlnC,EAAA7U,IAAA6U,EAAA/U,IAAA,EAEA+U,EAAA/U,IAAA+U,EAAA7U,IAAA,GAKA6U,EAAA/U,MAAA+U,EAAA7U,MACA6U,EAAA7U,MAEA+0C,EAAA/gB,aACAnf,EAAA/U,QAIAq8C,aAAA,WACA,IAIAzE,EAHA3C,EADAnsD,KACAuM,QAAA03B,MACAuvB,EAAArH,EAAAqH,SACAzE,EAAA5C,EAAA4C,cAcA,OAXAyE,EACA1E,EAAA33C,KAAAs8C,KAPAzzD,KAOAoX,IAAAo8C,GAAAr8C,KAAAkB,MAPArY,KAOAkX,IAAAs8C,GAAA,GAEA1E,EATA9uD,KASA0zD,oBACA3E,KAAA,IAGAA,IACAD,EAAA33C,KAAAD,IAAA63C,EAAAD,IAGAA,GAEA4E,kBAAA,WACA,OAAAvpC,OAAAsjB,mBAEAkmB,yBAAAhqC,GACA4hC,WAAA,WACA,IAAAt/B,EAAAjsB,KACAunC,EAAAtb,EAAA1f,QACA4/C,EAAA5kB,EAAAtD,MAKA6qB,EAAA7iC,EAAAsnC,eAEAK,EAAA,CACA9E,SAFAA,EAAA33C,KAAAC,IAAA,EAAA03C,GAGA53C,IAAAi1C,EAAAj1C,IACAE,IAAA+0C,EAAA/0C,IACAy8C,UAAA1H,EAAA0H,UACAL,SAAA3/B,GAAAzJ,eAAA+hC,EAAA2H,cAAA3H,EAAAqH,WAEAvvB,EAAAhY,EAAAgY,MA1LA,SAAA8vB,EAAAC,GACA,IAcAC,EAAAC,EAAAC,EAAAC,EAdAnwB,EAAA,GAKAuvB,EAAAO,EAAAP,SACAa,EAAAb,GAAA,EACAc,EAAAP,EAAAjF,SAAA,EACA53C,EAAA68C,EAAA78C,IACAE,EAAA28C,EAAA38C,IACAy8C,EAAAE,EAAAF,UACAU,EAAAP,EAAA98C,IACAs9C,EAAAR,EAAA58C,IACAq9C,EAAA5gC,GAAA6gC,SAAAF,EAAAD,GAAAD,EAAAD,KAIA,GAAAI,EAbA,OAaA5qC,GAAA3S,IAAA2S,GAAAzS,GACA,OAAAm9C,EAAAC,IAGAJ,EAAAj9C,KAAAs8C,KAAAe,EAAAC,GAAAt9C,KAAAkB,MAAAk8C,EAAAE,IAEAH,IAEAG,EAAA5gC,GAAA6gC,QAAAN,EAAAK,EAAAH,EAAAD,MAGAb,GAAA3pC,GAAAgqC,GAEAI,EAAA98C,KAAAQ,IAAA,GAAAkc,GAAA8gC,eAAAF,KAGAR,EAAA98C,KAAAQ,IAAA,GAAAk8C,GACAY,EAAAt9C,KAAAs8C,KAAAgB,EAAAR,MAGAC,EAAA/8C,KAAAkB,MAAAk8C,EAAAE,KACAN,EAAAh9C,KAAAs8C,KAAAe,EAAAC,KAEAjB,KAEA3pC,GAAA3S,IAAA2c,GAAA+gC,YAAA19C,EAAAu9C,IAAA,OACAP,EAAAh9C,IAGA2S,GAAAzS,IAAAyc,GAAA+gC,YAAAx9C,EAAAq9C,IAAA,OACAN,EAAA/8C,IAIAg9C,GAAAD,EAAAD,GAAAO,EAGAL,EADAvgC,GAAAghC,aAAAT,EAAAj9C,KAAAoM,MAAA6wC,GAAAK,EAAA,KACAt9C,KAAAoM,MAAA6wC,GAEAj9C,KAAAs8C,KAAAW,GAGAF,EAAA/8C,KAAAoM,MAAA2wC,EAAAD,KACAE,EAAAh9C,KAAAoM,MAAA4wC,EAAAF,KACAhwB,EAAA/nC,KAAA2tB,GAAA3S,GAAAg9C,EAAAh9C,GAEA,QAAAowB,EAAA,EAAmBA,EAAA8sB,IAAe9sB,EAClCrD,EAAA/nC,KAAAib,KAAAoM,OAAA2wC,EAAA5sB,EAAAmtB,GAAAR,MAIA,OADAhwB,EAAA/nC,KAAA2tB,GAAAzS,GAAA+8C,EAAA/8C,GACA6sB,EAqHA6wB,CAAAlB,EAAA3nC,GACAA,EAAA0nC,2BAGA1nC,EAAA7U,IAAAyc,GAAAzc,IAAA6sB,GACAhY,EAAA/U,IAAA2c,GAAA3c,IAAA+sB,GAEAkoB,EAAAvhC,SACAqZ,EAAArZ,UACAqB,EAAA0I,MAAA1I,EAAA7U,IACA6U,EAAA0X,IAAA1X,EAAA/U,MAEA+U,EAAA0I,MAAA1I,EAAA/U,IACA+U,EAAA0X,IAAA1X,EAAA7U,MAGAs0C,qBAAA,WACA,IAAAz/B,EAAAjsB,KACAisB,EAAA8oC,eAAA9oC,EAAAgY,MAAA/gB,QACA+I,EAAA6kC,cAAA7kC,EAAAgY,MAAAx/B,QAAA,GACA0lD,GAAAhqD,UAAAurD,qBAAA3rD,KAAAksB,MAGA+oC,GAAA,CACArlD,SAAA,OACAs0B,MAAA,CACA1Z,SAAAw9B,GAAAC,WAAAp7B,SAGAqoC,GAAAnC,GAAAjnC,OAAA,CACAu/B,oBAAA,WACA,IAAAn/B,EAAAjsB,KACAunC,EAAAtb,EAAA1f,QACA6iB,EAAAnD,EAAAmD,MACA5lB,EAAA4lB,EAAA5lB,KACAyD,EAAAzD,EAAAyD,SACA01B,EAAA1W,EAAA0W,eAIA,SAAAuyB,EAAAr9B,GACA,OAAA8K,EAAA9K,EAAAG,UAAA/L,EAAA/c,GAAA2oB,EAAAM,UAAAlM,EAAA/c,GAIA+c,EAAA/U,IAAA,KACA+U,EAAA7U,IAAA,KACA,IAAA+9C,EAAA5tB,EAAAlE,QAgBA,QAdA1nC,IAAAw5D,GACAthC,GAAAnJ,KAAAzd,EAAA,SAAAS,EAAA6pB,GACA,IAAA49B,EAAA,CAIA,IAAAt9B,EAAAzI,EAAAiJ,eAAAd,GAEAnI,EAAAmU,iBAAAhM,IAAA29B,EAAAr9B,SAAAl8B,IAAAk8B,EAAAplB,QACA0iD,GAAA,MAKA5tB,EAAAlE,SAAA8xB,EAAA,CACA,IAAAC,EAAA,GACAvhC,GAAAnJ,KAAAzd,EAAA,SAAAS,EAAA6pB,GACA,IAAAM,EAAAzI,EAAAiJ,eAAAd,GACA79B,EAAA,CAAAm+B,EAAA52B,UACAtF,IAAA4rC,EAAAlE,cAAA1nC,IAAAk8B,EAAAplB,MAAA8kB,EAAA,GAAAM,EAAAplB,OAAAg0B,KAAA,UAEA9qC,IAAAy5D,EAAA17D,KACA07D,EAAA17D,GAAA,CACA27D,eAAA,GACAC,eAAA,KAKA,IAAAD,EAAAD,EAAA17D,GAAA27D,eACAC,EAAAF,EAAA17D,GAAA47D,eAEAlmC,EAAAmU,iBAAAhM,IAAA29B,EAAAr9B,IACAhE,GAAAnJ,KAAAhd,EAAAlE,KAAA,SAAAykD,EAAAnlD,GACA,IAAAnP,GAAAsyB,EAAAsY,cAAA0pB,GAEAvoC,MAAA/rB,IAAAk+B,EAAAruB,KAAAV,GAAAqrB,SAIAkhC,EAAAvsD,GAAAusD,EAAAvsD,IAAA,EACAwsD,EAAAxsD,GAAAwsD,EAAAxsD,IAAA,EAEAy+B,EAAAguB,eACAF,EAAAvsD,GAAA,IACenP,EAAA,EACf27D,EAAAxsD,IAAAnP,EAEA07D,EAAAvsD,IAAAnP,OAKAk6B,GAAAnJ,KAAA0qC,EAAA,SAAAI,GACA,IAAAzmD,EAAAymD,EAAAH,eAAA36D,OAAA86D,EAAAF,gBACAG,EAAA5hC,GAAA3c,IAAAnI,GACA2mD,EAAA7hC,GAAAzc,IAAArI,GACAkd,EAAA/U,IAAA,OAAA+U,EAAA/U,IAAAu+C,EAAAt+C,KAAAD,IAAA+U,EAAA/U,IAAAu+C,GACAxpC,EAAA7U,IAAA,OAAA6U,EAAA7U,IAAAs+C,EAAAv+C,KAAAC,IAAA6U,EAAA7U,IAAAs+C,UAGA7hC,GAAAnJ,KAAAzd,EAAA,SAAAS,EAAA6pB,GACA,IAAAM,EAAAzI,EAAAiJ,eAAAd,GAEAnI,EAAAmU,iBAAAhM,IAAA29B,EAAAr9B,IACAhE,GAAAnJ,KAAAhd,EAAAlE,KAAA,SAAAykD,EAAAnlD,GACA,IAAAnP,GAAAsyB,EAAAsY,cAAA0pB,GAEAvoC,MAAA/rB,IAAAk+B,EAAAruB,KAAAV,GAAAqrB,SAIA,OAAAlI,EAAA/U,IACA+U,EAAA/U,IAAAvd,EACeA,EAAAsyB,EAAA/U,MACf+U,EAAA/U,IAAAvd,GAGA,OAAAsyB,EAAA7U,IACA6U,EAAA7U,IAAAzd,EACeA,EAAAsyB,EAAA7U,MACf6U,EAAA7U,IAAAzd,QAOAsyB,EAAA/U,IAAA8S,SAAAiC,EAAA/U,OAAAwO,MAAAuG,EAAA/U,KAAA+U,EAAA/U,IApGA,EAqGA+U,EAAA7U,IAAA4S,SAAAiC,EAAA7U,OAAAsO,MAAAuG,EAAA7U,KAAA6U,EAAA7U,IApGA,EAsGApX,KAAA+yD,0BAGAW,kBAAA,WACA,IACArH,EAEA,OAHArsD,KAGA2iC,eACAxrB,KAAAs8C,KAJAzzD,KAIA2M,MAAA,KAGA0/C,EAAAx4B,GAAAtnB,QAAAymB,WAPAhzB,KAOAuM,QAAA03B,OACA9sB,KAAAs8C,KARAzzD,KAQA0M,OAAA2/C,EAAA94B,cAGAogC,yBAAA,WACA3zD,KAAA2iC,gBAEA3iC,KAAAikC,MAAArZ,WAGAoxB,iBAAA,SAAAlzC,EAAAyuB,GACA,OAAAv3B,KAAAukC,cAAAvkC,KAAAovB,MAAA5lB,KAAAyD,SAAAsqB,GAAA/tB,KAAAV,KAGA+6B,iBAAA,SAAAlqC,GAGA,IAAAsyB,EAAAjsB,KACA20B,EAAA1I,EAAA0I,MACA4V,GAAAte,EAAAsY,cAAA5qC,GAEA+qC,EAAAzY,EAAA0X,IAAAhP,EAQA,OANA1I,EAAA0W,eACA1W,EAAAwD,KAAAxD,EAAAtf,MAAA+3B,GAAA6F,EAAA5V,GAEA1I,EAAA2D,OAAA3D,EAAAvf,OAAAg4B,GAAA6F,EAAA5V,IAKAu5B,iBAAA,SAAAE,GACA,IAAAniC,EAAAjsB,KACA2iC,EAAA1W,EAAA0W,eACAgzB,EAAAhzB,EAAA1W,EAAAtf,MAAAsf,EAAAvf,OACAk1B,GAAAe,EAAAyrB,EAAAniC,EAAAwD,KAAAxD,EAAA2D,OAAAw+B,GAAAuH,EACA,OAAA1pC,EAAA0I,OAAA1I,EAAA0X,IAAA1X,EAAA0I,OAAAiN,GAEAuC,gBAAA,SAAAr7B,GACA,OAAA9I,KAAA6jC,iBAAA7jC,KAAA+0D,eAAAjsD,OAIA8sD,GAAAZ,GACAC,GAAApC,UAAA+C,GACA,IAAAC,GAAAhiC,GAAAzJ,eA6CA0rC,GAAA,CACAnmD,SAAA,OAEAs0B,MAAA,CACA1Z,SAAAw9B,GAAAC,WAAAU,cAIA,SAAAqN,GAAAp8D,EAAA0wB,GACA,OAAAwJ,GAAA7J,SAAArwB,OAAA,EAAAA,EAAA0wB,EAGA,IAAA2rC,GAAA7L,GAAAt+B,OAAA,CACAu/B,oBAAA,WACA,IAAAn/B,EAAAjsB,KACAunC,EAAAtb,EAAA1f,QACA6iB,EAAAnD,EAAAmD,MACA5lB,EAAA4lB,EAAA5lB,KACAyD,EAAAzD,EAAAyD,SACA01B,EAAA1W,EAAA0W,eAEA,SAAAuyB,EAAAr9B,GACA,OAAA8K,EAAA9K,EAAAG,UAAA/L,EAAA/c,GAAA2oB,EAAAM,UAAAlM,EAAA/c,GAIA+c,EAAA/U,IAAA,KACA+U,EAAA7U,IAAA,KACA6U,EAAAgqC,WAAA,KACA,IAAAd,EAAA5tB,EAAAlE,QAgBA,QAdA1nC,IAAAw5D,GACAthC,GAAAnJ,KAAAzd,EAAA,SAAAS,EAAA6pB,GACA,IAAA49B,EAAA,CAIA,IAAAt9B,EAAAzI,EAAAiJ,eAAAd,GAEAnI,EAAAmU,iBAAAhM,IAAA29B,EAAAr9B,SAAAl8B,IAAAk8B,EAAAplB,QACA0iD,GAAA,MAKA5tB,EAAAlE,SAAA8xB,EAAA,CACA,IAAAC,EAAA,GACAvhC,GAAAnJ,KAAAzd,EAAA,SAAAS,EAAA6pB,GACA,IAAAM,EAAAzI,EAAAiJ,eAAAd,GACA79B,EAAA,CAAAm+B,EAAA52B,UACAtF,IAAA4rC,EAAAlE,cAAA1nC,IAAAk8B,EAAAplB,MAAA8kB,EAAA,GAAAM,EAAAplB,OAAAg0B,KAAA,KAEArX,EAAAmU,iBAAAhM,IAAA29B,EAAAr9B,UACAl8B,IAAAy5D,EAAA17D,KACA07D,EAAA17D,GAAA,IAGAm6B,GAAAnJ,KAAAhd,EAAAlE,KAAA,SAAAykD,EAAAnlD,GACA,IAAAiG,EAAAqmD,EAAA17D,GACAC,GAAAsyB,EAAAsY,cAAA0pB,GAEAvoC,MAAA/rB,IAAAk+B,EAAAruB,KAAAV,GAAAqrB,QAAAx6B,EAAA,IAIAoV,EAAAjG,GAAAiG,EAAAjG,IAAA,EACAiG,EAAAjG,IAAAnP,QAIAk6B,GAAAnJ,KAAA0qC,EAAA,SAAAI,GACA,GAAAA,EAAAn7D,OAAA,GACA,IAAAo7D,EAAA5hC,GAAA3c,IAAAs+C,GACAE,EAAA7hC,GAAAzc,IAAAo+C,GACAvpC,EAAA/U,IAAA,OAAA+U,EAAA/U,IAAAu+C,EAAAt+C,KAAAD,IAAA+U,EAAA/U,IAAAu+C,GACAxpC,EAAA7U,IAAA,OAAA6U,EAAA7U,IAAAs+C,EAAAv+C,KAAAC,IAAA6U,EAAA7U,IAAAs+C,WAIA7hC,GAAAnJ,KAAAzd,EAAA,SAAAS,EAAA6pB,GACA,IAAAM,EAAAzI,EAAAiJ,eAAAd,GAEAnI,EAAAmU,iBAAAhM,IAAA29B,EAAAr9B,IACAhE,GAAAnJ,KAAAhd,EAAAlE,KAAA,SAAAykD,EAAAnlD,GACA,IAAAnP,GAAAsyB,EAAAsY,cAAA0pB,GAEAvoC,MAAA/rB,IAAAk+B,EAAAruB,KAAAV,GAAAqrB,QAAAx6B,EAAA,IAIA,OAAAsyB,EAAA/U,IACA+U,EAAA/U,IAAAvd,EACeA,EAAAsyB,EAAA/U,MACf+U,EAAA/U,IAAAvd,GAGA,OAAAsyB,EAAA7U,IACA6U,EAAA7U,IAAAzd,EACeA,EAAAsyB,EAAA7U,MACf6U,EAAA7U,IAAAzd,GAGA,IAAAA,IAAA,OAAAsyB,EAAAgqC,YAAAt8D,EAAAsyB,EAAAgqC,cACAhqC,EAAAgqC,WAAAt8D,QAQAqG,KAAA+yD,0BAEAA,uBAAA,WACA,IAAA9mC,EAAAjsB,KACAmsD,EAAAlgC,EAAA1f,QAAA03B,MAGAhY,EAAA/U,IAAA6+C,GAAA5J,EAAAj1C,IAAA+U,EAAA/U,KACA+U,EAAA7U,IAAA2+C,GAAA5J,EAAA/0C,IAAA6U,EAAA7U,KAEA6U,EAAA/U,MAAA+U,EAAA7U,MACA,IAAA6U,EAAA/U,KAAA,OAAA+U,EAAA/U,KACA+U,EAAA/U,IAAAC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAwb,GAAAs0B,MAAAl8B,EAAA/U,MAAA,GACA+U,EAAA7U,IAAAD,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAwb,GAAAs0B,MAAAl8B,EAAA7U,MAAA,KAEA6U,EAAA/U,IAVA,EAWA+U,EAAA7U,IAVA,KAcA,OAAA6U,EAAA/U,MACA+U,EAAA/U,IAAAC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAwb,GAAAs0B,MAAAl8B,EAAA7U,MAAA,IAGA,OAAA6U,EAAA7U,MACA6U,EAAA7U,IAAA,IAAA6U,EAAA/U,IAAAC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAwb,GAAAs0B,MAAAl8B,EAAA/U,MAAA,GAnBA,IAsBA,OAAA+U,EAAAgqC,aACAhqC,EAAA/U,IAAA,EACA+U,EAAAgqC,WAAAhqC,EAAA/U,IACS+U,EAAA7U,IAAA,EACT6U,EAAAgqC,WAAA9+C,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAwb,GAAAs0B,MAAAl8B,EAAA7U,OAEA6U,EAAAgqC,WA7BA,IAiCA1K,WAAA,WACA,IAAAt/B,EAAAjsB,KACAmsD,EAAAlgC,EAAA1f,QAAA03B,MACArZ,GAAAqB,EAAA0W,eACAoxB,EAAA,CACA78C,IAAA6+C,GAAA5J,EAAAj1C,KACAE,IAAA2+C,GAAA5J,EAAA/0C,MAEA6sB,EAAAhY,EAAAgY,MAlMA,SAAA8vB,EAAAC,GACA,IAIAkC,EAAAC,EAJAlyB,EAAA,GACAmyB,EAAAP,GAAA9B,EAAA78C,IAAAC,KAAAQ,IAAA,GAAAR,KAAAkB,MAAAwb,GAAAs0B,MAAA6L,EAAA98C,QACAm/C,EAAAl/C,KAAAkB,MAAAwb,GAAAs0B,MAAA6L,EAAA58C,MACAk/C,EAAAn/C,KAAAs8C,KAAAO,EAAA58C,IAAAD,KAAAQ,IAAA,GAAA0+C,IAGA,IAAAD,GACAF,EAAA/+C,KAAAkB,MAAAwb,GAAAs0B,MAAA6L,EAAAiC,aACAE,EAAAh/C,KAAAkB,MAAA27C,EAAAiC,WAAA9+C,KAAAQ,IAAA,GAAAu+C,IACAjyB,EAAA/nC,KAAAk6D,GACAA,EAAAD,EAAAh/C,KAAAQ,IAAA,GAAAu+C,KAEAA,EAAA/+C,KAAAkB,MAAAwb,GAAAs0B,MAAAiO,IACAD,EAAAh/C,KAAAkB,MAAA+9C,EAAAj/C,KAAAQ,IAAA,GAAAu+C,KAGA,IAAArC,EAAAqC,EAAA,EAAA/+C,KAAAQ,IAAA,GAAAR,KAAA2nB,IAAAo3B,IAAA,EAEA,GACAjyB,EAAA/nC,KAAAk6D,GAGA,OAFAD,IAGAA,EAAA,EAEAtC,IADAqC,GACA,IAAArC,GAGAuC,EAAAj/C,KAAAoM,MAAA4yC,EAAAh/C,KAAAQ,IAAA,GAAAu+C,GAAArC,WACKqC,EAAAG,GAAAH,IAAAG,GAAAF,EAAAG,GAEL,IAAAC,EAAAV,GAAA9B,EAAA38C,IAAAg/C,GAEA,OADAnyB,EAAA/nC,KAAAq6D,GACAtyB,EAgKAuyB,CAAAzC,EAAA9nC,GAGAA,EAAA7U,IAAAyc,GAAAzc,IAAA6sB,GACAhY,EAAA/U,IAAA2c,GAAA3c,IAAA+sB,GAEAkoB,EAAAvhC,SACAA,KACAqB,EAAA0I,MAAA1I,EAAA7U,IACA6U,EAAA0X,IAAA1X,EAAA/U,MAEA+U,EAAA0I,MAAA1I,EAAA/U,IACA+U,EAAA0X,IAAA1X,EAAA7U,KAGAwT,GACAqZ,EAAArZ,WAGA8gC,qBAAA,WACA1rD,KAAAy2D,WAAAz2D,KAAAikC,MAAA/gB,QACAinC,GAAAhqD,UAAAurD,qBAAA3rD,KAAAC,OAGAg8C,iBAAA,SAAAlzC,EAAAyuB,GACA,OAAAv3B,KAAAukC,cAAAvkC,KAAAovB,MAAA5lB,KAAAyD,SAAAsqB,GAAA/tB,KAAAV,KAEAq7B,gBAAA,SAAAr7B,GACA,OAAA9I,KAAA6jC,iBAAA7jC,KAAAy2D,WAAA3tD,KASA4tD,mBAAA,SAAA/8D,GACA,IAAAu8D,EAAA/+C,KAAAkB,MAAAwb,GAAAs0B,MAAAxuD,IACAw8D,EAAAh/C,KAAAkB,MAAA1e,EAAAwd,KAAAQ,IAAA,GAAAu+C,IACA,OAAAC,EAAAh/C,KAAAQ,IAAA,GAAAu+C,IAEAryB,iBAAA,SAAAlqC,GACA,IAQAg8D,EAAAvH,EAAAz5B,EAAAgP,EAAAsvB,EARAhnC,EAAAjsB,KACAmsD,EAAAlgC,EAAA1f,QAAA03B,MACArZ,EAAAuhC,EAAAvhC,QACAu9B,EAAAt0B,GAAAs0B,MAEAwO,EAAA1qC,EAAAyqC,mBAAAzqC,EAAAgqC,YAEAr0B,EAAA,EAuCA,OArCAjoC,GAAAsyB,EAAAsY,cAAA5qC,GAEAixB,GACA+J,EAAA1I,EAAA0X,IACAA,EAAA1X,EAAA0I,MACAs+B,GAAA,IAEAt+B,EAAA1I,EAAA0I,MACAgP,EAAA1X,EAAA0X,IACAsvB,EAAA,GAGAhnC,EAAA0W,gBACAgzB,EAAA1pC,EAAAtf,MACAyhD,EAAAxjC,EAAAqB,EAAA0D,MAAA1D,EAAAwD,OAEAkmC,EAAA1pC,EAAAvf,OACAumD,IAAA,EAEA7E,EAAAxjC,EAAAqB,EAAAyD,IAAAzD,EAAA2D,QAGAj2B,IAAAg7B,IACA,IAAAA,IAEAiN,EAAAi0B,GAAA1J,EAAAh5B,SAAAR,GAAAO,OAAAX,iBACAojC,GAAA/zB,EACAjN,EAAAgiC,GAGA,IAAAh9D,IACAioC,GAAA+zB,GAAAxN,EAAAxkB,GAAAwkB,EAAAxzB,KAAAwzB,EAAAxuD,GAAAwuD,EAAAxzB,KAGAy5B,GAAA6E,EAAArxB,GAGAwsB,GAEAF,iBAAA,SAAAE,GACA,IAOAuH,EAAAhhC,EAAAgP,EAAAhqC,EAPAsyB,EAAAjsB,KACAmsD,EAAAlgC,EAAA1f,QAAA03B,MACArZ,EAAAuhC,EAAAvhC,QACAu9B,EAAAt0B,GAAAs0B,MAEAwO,EAAA1qC,EAAAyqC,mBAAAzqC,EAAAgqC,YAoBA,GAhBArrC,GACA+J,EAAA1I,EAAA0X,IACAA,EAAA1X,EAAA0I,QAEAA,EAAA1I,EAAA0I,MACAgP,EAAA1X,EAAA0X,KAGA1X,EAAA0W,gBACAgzB,EAAA1pC,EAAAtf,MACAhT,EAAAixB,EAAAqB,EAAA0D,MAAAy+B,IAAAniC,EAAAwD,OAEAkmC,EAAA1pC,EAAAvf,OACA/S,EAAAixB,EAAAwjC,EAAAniC,EAAAyD,IAAAzD,EAAA2D,OAAAw+B,GAGAz0D,IAAAg7B,EAAA,CACA,OAAAA,EAAA,CAEA,IAAAiN,EAAAi0B,GAAA1J,EAAAh5B,SAAAR,GAAAO,OAAAX,iBACA54B,GAAAioC,EACA+zB,GAAA/zB,EACAjN,EAAAgiC,EAGAh9D,GAAAwuD,EAAAxkB,GAAAwkB,EAAAxzB,GACAh7B,GAAAg8D,EACAh8D,EAAAwd,KAAAQ,IAAA,GAAAwwC,EAAAxzB,GAAAh7B,GAGA,OAAAA,KAIAi9D,GAAAd,GACAE,GAAAnD,UAAA+D,GACA,IAAAC,GAAAhjC,GAAAzJ,eACA0sC,GAAAjjC,GAAAvJ,sBACAysC,GAAAljC,GAAAtnB,QAAAmnB,QACAsjC,GAAA,CACAtnD,SAAA,EAEAunD,SAAA,EACAtnD,SAAA,YACAs7B,WAAA,CACAv7B,SAAA,EACA9Q,MAAA,qBACAw+B,UAAA,EACAM,WAAA,GACAC,iBAAA,GAEAkE,UAAA,CACAqJ,UAAA,GAGAjH,MAAA,CAEAizB,mBAAA,EAEAC,cAAA,yBAEAC,iBAAA,EAEAC,iBAAA,EACA9sC,SAAAw9B,GAAAC,WAAAp7B,QAEAue,YAAA,CAEAz7B,SAAA,EAEAyjB,SAAA,GAEA5I,SAAA,SAAA5c,GACA,OAAAA,KAKA,SAAA2pD,GAAA7xC,GACA,IAAA8hB,EAAA9hB,EAAAlZ,QACA,OAAAg7B,EAAA0D,WAAAv7B,SAAA63B,EAAA4D,YAAAz7B,QAAA+V,EAAA2J,MAAA5lB,KAAA+4B,OAAAloC,OAAA,EAGA,SAAAk9D,GAAAhwB,GACA,IAAA4kB,EAAA5kB,EAAAtD,MAEA,OAAAkoB,EAAAz8C,SAAA63B,EAAA73B,QACAmnD,GAAA1K,EAAAh5B,SAAAR,GAAAO,OAAAX,iBAAA,EAAA45B,EAAAiL,iBAGA,EAiBA,SAAAI,GAAAv7B,EAAAib,EAAA73C,EAAA6X,EAAAE,GACA,OAAA6kB,IAAA/kB,GAAA+kB,IAAA7kB,EACA,CACAud,MAAAuiB,EAAA73C,EAAA,EACAskC,IAAAuT,EAAA73C,EAAA,GAEK48B,EAAA/kB,GAAA+kB,EAAA7kB,EACL,CACAud,MAAAuiB,EAAA73C,EACAskC,IAAAuT,GAIA,CACAviB,MAAAuiB,EACAvT,IAAAuT,EAAA73C,GAoFA,SAAAo4D,GAAAx7B,GACA,WAAAA,GAAA,MAAAA,EACA,SACKA,EAAA,IACL,OAGA,QAGA,SAAAmlB,GAAA/xB,EAAAmX,EAAA72B,EAAA4jB,GACA,IACAp5B,EAAA8wB,EADApT,EAAAlI,EAAAkI,EAAA0b,EAAA,EAGA,GAAAM,GAAAx4B,QAAAmrC,GACA,IAAArsC,EAAA,EAAA8wB,EAAAub,EAAAnsC,OAAqCF,EAAA8wB,IAAU9wB,EAC/Ck1B,EAAA+xB,SAAA5a,EAAArsC,GAAAwV,EAAAiI,EAAAC,GACAA,GAAA0b,OAGAlE,EAAA+xB,SAAA5a,EAAA72B,EAAAiI,EAAAC,GAIA,SAAA6/C,GAAAz7B,EAAA07B,EAAAhoD,GACA,KAAAssB,GAAA,MAAAA,EACAtsB,EAAAkI,GAAA8/C,EAAAnjD,EAAA,GACKynB,EAAA,KAAAA,EAAA,MACLtsB,EAAAkI,GAAA8/C,EAAAnjD,GAkGA,SAAAojD,GAAAC,GACA,OAAAhkC,GAAAuB,SAAAyiC,KAAA,EAGA,IAAAC,GAAAhF,GAAAjnC,OAAA,CACAo/B,cAAA,WACA,IAAAh/B,EAAAjsB,KAEAisB,EAAAtf,MAAAsf,EAAAy+B,SACAz+B,EAAAvf,OAAAuf,EAAA0+B,UACA1+B,EAAAo+B,WAAAkN,GAAAtrC,EAAA1f,SAAA,EACA0f,EAAA6f,QAAA30B,KAAAkB,MAAA4T,EAAAtf,MAAA,GACAsf,EAAA8f,QAAA50B,KAAAkB,OAAA4T,EAAAvf,OAAAuf,EAAAo+B,YAAA,GACAp+B,EAAA8rC,YAAA5gD,KAAAD,IAAA+U,EAAAvf,OAAAuf,EAAAo+B,WAAAp+B,EAAAtf,OAAA,GAEAy+C,oBAAA,WACA,IAAAn/B,EAAAjsB,KACAovB,EAAAnD,EAAAmD,MACAlY,EAAAiT,OAAAsjB,kBACAr2B,EAAA+S,OAAA6tC,kBACAnkC,GAAAnJ,KAAA0E,EAAA5lB,KAAAyD,SAAA,SAAAS,EAAA6pB,GACA,GAAAnI,EAAAmU,iBAAAhM,GAAA,CACA,IAAAM,EAAAzI,EAAAiJ,eAAAd,GACA1D,GAAAnJ,KAAAhd,EAAAlE,KAAA,SAAAykD,EAAAnlD,GACA,IAAAnP,GAAAsyB,EAAAsY,cAAA0pB,GAEAvoC,MAAA/rB,IAAAk+B,EAAAruB,KAAAV,GAAAqrB,SAIAjd,EAAAC,KAAAD,IAAAvd,EAAAud,GACAE,EAAAD,KAAAC,IAAAzd,EAAAyd,SAIA6U,EAAA/U,QAAAiT,OAAAsjB,kBAAA,EAAAv2B,EACA+U,EAAA7U,QAAA+S,OAAA6tC,kBAAA,EAAA5gD,EAEA6U,EAAA8mC,0BAGAW,kBAAA,WACA,OAAAv8C,KAAAs8C,KAAAzzD,KAAA+3D,YAAAR,GAAAv3D,KAAAuM,WAEAm/C,qBAAA,WACA,IAAAz/B,EAAAjsB,KACA8yD,GAAA3yD,UAAAurD,qBAAA3rD,KAAAksB,GAEAA,EAAAkf,YAAAlf,EAAAmD,MAAA5lB,KAAA+4B,OAAAh5B,IAAA0iB,EAAA1f,QAAA4+B,YAAA5gB,SAAA0B,IAEA+vB,iBAAA,SAAAlzC,EAAAyuB,GACA,OAAAv3B,KAAAukC,cAAAvkC,KAAAovB,MAAA5lB,KAAAyD,SAAAsqB,GAAA/tB,KAAAV,KAEAkjD,IAAA,WACA,IACAzkB,EADAvnC,KACAuM,QAEAg7B,EAAA73B,SAAA63B,EAAA4D,YAAAz7B,QAnQA,SAAA+V,GA0BA,IAWAtrB,EAAAw9D,EAAAnrB,EAXAyrB,EAAApkC,GAAAtnB,QAAAymB,WAAAvN,EAAAlZ,QAAA4+B,aAIA+sB,EAAA,CACAhmD,EAAA,EACA6E,EAAA0O,EAAA9Y,MACA8L,EAAA,EACAxB,EAAAwO,EAAA/Y,OAAA+Y,EAAA4kC,YAEA8N,EAAA,GAEA1yC,EAAA4J,IAAA+D,KAAA6kC,EAAAv5D,OACA+mB,EAAA2yC,iBAAA,GACA,IA7EA/oC,EAAAkE,EAAA5lB,EA6EA0qD,EAAAf,GAAA7xC,GAEA,IAAAtrB,EAAA,EAAeA,EAAAk+D,EAAgBl+D,IAAA,CAC/BqyC,EAAA/mB,EAAA6yC,iBAAAn+D,EAAAsrB,EAAAsyC,YAAA,GAhFA1oC,EAiFA5J,EAAA4J,IAjFAkE,EAiFA0kC,EAAA1kC,WAjFA5lB,EAiFA8X,EAAA0lB,YAAAhxC,IAAA,GAAAw9D,EAhFA9jC,GAAAx4B,QAAAsS,GACA,CACA2J,EAAAuc,GAAAm1B,YAAA35B,IAAA+D,KAAAzlB,GACA6G,EAAA7G,EAAAtT,OAAAk5B,GAIA,CACAjc,EAAA+X,EAAAqwB,YAAA/xC,GAAAhB,MACA6H,EAAA+e,GAwEA9N,EAAA2yC,iBAAAj+D,GAAAw9D,EAEA,IAAAhL,EAAAlnC,EAAA8yC,cAAAp+D,GACA8hC,EAAApI,GAAA2kC,UAAA7L,GAAA,IACA8L,EAAAjB,GAAAv7B,EAAAuQ,EAAA50B,EAAA+/C,EAAArgD,EAAA,OACAohD,EAAAlB,GAAAv7B,EAAAuQ,EAAA30B,EAAA8/C,EAAAnjD,EAAA,QAEAikD,EAAA9jC,MAAAujC,EAAAhmD,IACAgmD,EAAAhmD,EAAAumD,EAAA9jC,MACAwjC,EAAAjmD,EAAAy6C,GAGA8L,EAAA90B,IAAAu0B,EAAAnhD,IACAmhD,EAAAnhD,EAAA0hD,EAAA90B,IACAw0B,EAAAphD,EAAA41C,GAGA+L,EAAA/jC,MAAAujC,EAAAz/C,IACAy/C,EAAAz/C,EAAAigD,EAAA/jC,MACAwjC,EAAA1/C,EAAAk0C,GAGA+L,EAAA/0B,IAAAu0B,EAAAjhD,IACAihD,EAAAjhD,EAAAyhD,EAAA/0B,IACAw0B,EAAAlhD,EAAA01C,GAIAlnC,EAAAkzC,cAAAlzC,EAAAsyC,YAAAG,EAAAC,GA2LAS,CAJA54D,WAMA64D,eAAA,UAQAF,cAAA,SAAAG,EAAAZ,EAAAC,GACA,IAAAlsC,EAAAjsB,KACA+4D,EAAAb,EAAAhmD,EAAAiF,KAAAqC,IAAA2+C,EAAAjmD,GACA8mD,EAAA7hD,KAAAC,IAAA8gD,EAAAnhD,EAAAkV,EAAAtf,MAAA,GAAAwK,KAAAqC,IAAA2+C,EAAAphD,GACAkiD,GAAAf,EAAAz/C,EAAAtB,KAAAoC,IAAA4+C,EAAA1/C,GACAygD,GAAA/hD,KAAAC,IAAA8gD,EAAAjhD,GAAAgV,EAAAvf,OAAAuf,EAAAo+B,YAAA,GAAAlzC,KAAAoC,IAAA4+C,EAAAlhD,GACA8hD,EAAAnB,GAAAmB,GACAC,EAAApB,GAAAoB,GACAC,EAAArB,GAAAqB,GACAC,EAAAtB,GAAAsB,GACAjtC,EAAA8rC,YAAA5gD,KAAAD,IAAAC,KAAAkB,MAAAygD,GAAAC,EAAAC,GAAA,GAAA7hD,KAAAkB,MAAAygD,GAAAG,EAAAC,GAAA,IACAjtC,EAAA4sC,eAAAE,EAAAC,EAAAC,EAAAC,IAEAL,eAAA,SAAAM,EAAAC,EAAAC,EAAAC,GACA,IAAArtC,EAAAjsB,KACAu5D,EAAAttC,EAAAtf,MAAAysD,EAAAntC,EAAA8rC,YACAyB,EAAAL,EAAAltC,EAAA8rC,YACA0B,EAAAJ,EAAAptC,EAAA8rC,YACA2B,EAAAztC,EAAAvf,OAAAuf,EAAAo+B,WAAAiP,EAAArtC,EAAA8rC,YACA9rC,EAAA6f,QAAA30B,KAAAkB,OAAAmhD,EAAAD,GAAA,EAAAttC,EAAAwD,MACAxD,EAAA8f,QAAA50B,KAAAkB,OAAAohD,EAAAC,GAAA,EAAAztC,EAAAyD,IAAAzD,EAAAo+B,aAEAkO,cAAA,SAAAzvD,GACA,IAAA6wD,EAAA,EAAAxiD,KAAAiC,GAAAk+C,GAAAt3D,MACAm8B,EAAAn8B,KAAAovB,MAAA7iB,SAAAvM,KAAAovB,MAAA7iB,QAAA4vB,WAAAn8B,KAAAovB,MAAA7iB,QAAA4vB,WAAA,EACAy9B,EAAAz9B,EAAAhlB,KAAAiC,GAAA,MAEA,OAAAtQ,EAAA6wD,EAAAC,GAEA3tB,8BAAA,SAAAtyC,GACA,IAAAsyB,EAAAjsB,KAEA,UAAArG,EACA,SAIA,IAAAkgE,EAAA5tC,EAAA8rC,aAAA9rC,EAAA7U,IAAA6U,EAAA/U,KAEA,OAAA+U,EAAA1f,QAAA03B,MAAArZ,SACAqB,EAAA7U,IAAAzd,GAAAkgE,GAGAlgE,EAAAsyB,EAAA/U,KAAA2iD,GAEAvB,iBAAA,SAAAxvD,EAAAgxD,GACA,IACAC,EADA/5D,KACAu4D,cAAAzvD,GAAAqO,KAAAiC,GAAA,EACA,OACAxB,EAAAT,KAAAoC,IAAAwgD,GAAAD,EAHA95D,KAGA8rC,QACAj0B,EAAAV,KAAAqC,IAAAugD,GAAAD,EAJA95D,KAIA+rC,UAGAU,yBAAA,SAAA3jC,EAAAnP,GACA,OAAAqG,KAAAs4D,iBAAAxvD,EAAA9I,KAAAisC,8BAAAtyC,KAEAqgE,gBAAA,WACA,IACA9iD,EADAlX,KACAkX,IACAE,EAFApX,KAEAoX,IACA,OAHApX,KAGAysC,yBAAA,EAHAzsC,KAGAorC,YAAA,EAAAl0B,EAAA,GAAAE,EAAA,EAAAA,EAAAF,EAAA,GAAAE,EAAA,EAAAF,EAAA,IAEA4iB,KAAA,WACA,IAAA7N,EAAAjsB,KACAunC,EAAAtb,EAAA1f,QACAugD,EAAAvlB,EAAA1F,UACAsqB,EAAA5kB,EAAAtD,MAEA,GAAAsD,EAAA73B,QAAA,CACA,IAAA2f,EAAApD,EAAAoD,IACA8M,EAAAn8B,KAAAu4D,cAAA,GAEAlM,EAAAx4B,GAAAtnB,QAAAymB,WAAAm5B,IAEA5kB,EAAA0D,WAAAv7B,SAAA63B,EAAA4D,YAAAz7B,UA5OA,SAAA+V,GACA,IAAA4J,EAAA5J,EAAA4J,IACAkY,EAAA9hB,EAAAlZ,QACA0tD,EAAA1yB,EAAA0D,WACA6hB,EAAAvlB,EAAA1F,UACAq4B,EAAA3yB,EAAA4D,YACA/N,EAAAy5B,GAAAoD,EAAA78B,UAAA0vB,EAAA1vB,WACAkzB,EAAAuG,GAAAoD,EAAAr7D,MAAAkuD,EAAAluD,OACAu7D,EAAA5C,GAAAhwB,GACAlY,EAAA4B,OACA5B,EAAA+N,YACA/N,EAAAiO,YAAAgzB,EAEAjhC,EAAAkP,cACAlP,EAAAkP,YAAAw4B,GAAA,CAAAkD,EAAAv8B,WAAAovB,EAAApvB,WAAA,MACArO,EAAAmP,eAAAu4B,GAAA,CAAAkD,EAAAt8B,iBAAAmvB,EAAAnvB,iBAAA,KAGA,IAAAy8B,EAAA30C,EAAAwmB,8BAAA1E,EAAAtD,MAAArZ,QAAAnF,EAAAvO,IAAAuO,EAAArO,KAEA6gD,EAAApkC,GAAAtnB,QAAAymB,WAAAknC,GAEA7qC,EAAA+D,KAAA6kC,EAAAv5D,OACA2wB,EAAA8xB,aAAA,SAEA,QAAAhnD,EAAAm9D,GAAA7xC,GAAA,EAA0CtrB,GAAA,EAAQA,IAAA,CAClD,GAAA8/D,EAAAvqD,SAAA0tB,GAAAkzB,EAAA,CACA,IAAA+J,EAAA50C,EAAA6yC,iBAAAn+D,EAAAigE,GACA/qC,EAAAmB,YACAnB,EAAAQ,OAAApK,EAAAqmB,QAAArmB,EAAAsmB,SACA1c,EAAAoB,OAAA4pC,EAAAziD,EAAAyiD,EAAAxiD,GACAwX,EAAAuB,SAGA,GAAAspC,EAAAxqD,QAAA,CAEA,IAAA4qD,EAAA,IAAAngE,EAAAggE,EAAA,IACAI,EAAA90C,EAAA6yC,iBAAAn+D,EAAAigE,EAAAE,EAAA,GAEAE,EAAA1D,GAAAoD,EAAAtK,UAAAz1D,EAAAw4B,GAAAO,OAAAb,kBACAhD,EAAA8N,UAAAq9B,EACA,IAAA7N,EAAAlnC,EAAA8yC,cAAAp+D,GACA8hC,EAAApI,GAAA2kC,UAAA7L,GACAt9B,EAAA6xB,UAAAuW,GAAAx7B,GACAy7B,GAAAz7B,EAAAxW,EAAA2yC,iBAAAj+D,GAAAogE,GACAnZ,GAAA/xB,EAAA5J,EAAA0lB,YAAAhxC,IAAA,GAAAogE,EAAAtC,EAAA1kC,aAIAlE,EAAA+B,UA4LAqpC,CAAAxuC,GAGA4H,GAAAnJ,KAAAuB,EAAAgY,MAAA,SAAAt2B,EAAA7E,GAEA,GAAAA,EAAA,GAAAqjD,EAAAvhC,QAAA,CACA,IAAA8vC,EAAAzuC,EAAAggB,8BAAAhgB,EAAA8oC,eAAAjsD,IAMA,GAJAgkD,EAAAp9C,SAAA,IAAA5G,GAjMA,SAAA2c,EAAAqnC,EAAAt9B,EAAA1mB,GACA,IAKA0jC,EALAnd,EAAA5J,EAAA4J,IACA6b,EAAA4hB,EAAA5hB,SACAmtB,EAAAf,GAAA7xC,GACA6qC,EAAAwG,GAAAhK,EAAAluD,MAAAkK,EAAA,GACAs0B,EAAA05B,GAAAhK,EAAA1vB,UAAAt0B,EAAA,GAGA,IAAAoiC,GAAAmtB,IAAA/H,GAAAlzB,EAAA,CAeA,GAXA/N,EAAA4B,OACA5B,EAAAiO,YAAAgzB,EACAjhC,EAAA+N,YAEA/N,EAAAkP,cACAlP,EAAAkP,YAAAuuB,EAAApvB,YAAA,IACArO,EAAAmP,eAAAsuB,EAAAnvB,kBAAA,GAGAtO,EAAAmB,YAEA0a,EAEA7b,EAAAS,IAAArK,EAAAqmB,QAAArmB,EAAAsmB,QAAAvc,EAAA,IAAArY,KAAAiC,QACK,CAELozB,EAAA/mB,EAAA6yC,iBAAA,EAAA9oC,GACAH,EAAAQ,OAAA2c,EAAA50B,EAAA40B,EAAA30B,GAEA,QAAA1d,EAAA,EAAqBA,EAAAk+D,EAAgBl+D,IACrCqyC,EAAA/mB,EAAA6yC,iBAAAn+D,EAAAq1B,GACAH,EAAAoB,OAAA+b,EAAA50B,EAAA40B,EAAA30B,GAIAwX,EAAAU,YACAV,EAAAuB,SACAvB,EAAA+B,WA2JAupC,CAAA1uC,EAAA6gC,EAAA4N,EAAA5xD,GAGAqjD,EAAAz8C,QAAA,CACA,IAAAigD,EAAAkH,GAAA1K,EAAAyD,UAAAj9B,GAAAO,OAAAb,kBAMA,GALAhD,EAAA+D,KAAAi5B,EAAA3tD,OACA2wB,EAAA4B,OACA5B,EAAAmiC,UAAAvlC,EAAA6f,QAAA7f,EAAA8f,SACA1c,EAAA7G,OAAA2T,GAEAgwB,EAAA+K,kBAAA,CACA,IAAAzK,EAAAp9B,EAAAqwB,YAAA/xC,GAAAhB,MACA0iB,EAAA8N,UAAAgvB,EAAAgL,cACA9nC,EAAA8R,UAAAsrB,EAAA,EAAAN,EAAAkL,kBAAAqD,EAAArO,EAAAhtD,KAAA,EAAA8sD,EAAAiL,iBAAA3K,EAAA,EAAAN,EAAAkL,iBAAAhL,EAAAhtD,KAAA,EAAA8sD,EAAAiL,kBAGA/nC,EAAA6xB,UAAA,SACA7xB,EAAA8xB,aAAA,SACA9xB,EAAA8N,UAAAwyB,EACAtgC,EAAA+xB,SAAAzzC,EAAA,GAAA+sD,GACArrC,EAAA+B,kBAQAwpC,GAAA5D,GACAc,GAAAjF,UAAA+H,GACA,IAAAC,GAAAhnC,GAAAzJ,eAEA0wC,GAAA3wC,OAAA4wC,mBAAA,iBACAC,GAAA7wC,OAAA/W,kBAAA,iBACA6nD,GAAA,CACAC,YAAA,CACAC,QAAA,EACA97D,KAAA,EACA+7D,MAAA,8BAEAh0D,OAAA,CACA+zD,QAAA,EACA97D,KAAA,IACA+7D,MAAA,kBAEAC,OAAA,CACAF,QAAA,EACA97D,KAAA,IACA+7D,MAAA,kBAEAE,KAAA,CACAH,QAAA,EACA97D,KAAA,KACA+7D,MAAA,cAEAG,IAAA,CACAJ,QAAA,EACA97D,KAAA,MACA+7D,MAAA,SAEAI,KAAA,CACAL,QAAA,EACA97D,KAAA,OACA+7D,MAAA,WAEAK,MAAA,CACAN,QAAA,EACA97D,KAAA,OACA+7D,MAAA,SAEAM,QAAA,CACAP,QAAA,EACA97D,KAAA,OACA+7D,MAAA,WAEAO,KAAA,CACAR,QAAA,EACA97D,KAAA,SAGAu8D,GAAAhiE,OAAAY,KAAAygE,IAEA,SAAAY,GAAAt9D,EAAA0Y,GACA,OAAA1Y,EAAA0Y,EAGA,SAAA6kD,GAAA3tB,GACA,IAEAh0C,EAAA8wB,EAAAsB,EAFAwvC,EAAA,GACAC,EAAA,GAGA,IAAA7hE,EAAA,EAAA8wB,EAAAkjB,EAAA9zC,OAAoCF,EAAA8wB,IAAU9wB,EAC9CoyB,EAAA4hB,EAAAh0C,GAEA4hE,EAAAxvC,KACAwvC,EAAAxvC,IAAA,EACAyvC,EAAA9/D,KAAAqwB,IAIA,OAAAyvC,EAuGA,SAAAC,GAAAC,EAAAC,EAAA5wC,EAAA6wC,GACA,IAAA13B,EA3CA,SAAAw3B,EAAAxiE,EAAAC,GAKA,IAJA,IAEA0iE,EAAAC,EAAAC,EAFAC,EAAA,EACApkD,EAAA8jD,EAAA7hE,OAAA,EAGAmiE,GAAA,GAAAA,GAAApkD,GAAA,CAKA,GAHAkkD,EAAAJ,GADAG,EAAAG,EAAApkD,GAAA,GACA,SACAmkD,EAAAL,EAAAG,IAEAC,EAEA,OACAE,GAAA,KACApkD,GAAAmkD,GAEO,GAAAA,EAAA7iE,GAAAC,EACP6iE,EAAAH,EAAA,MACO,MAAAC,EAAA5iE,GAAAC,GAGP,OACA6iE,GAAAF,EACAlkD,GAAAmkD,GAJAnkD,EAAAikD,EAAA,GAUA,OACAG,GAAAD,EACAnkD,GAAA,MAYAqkD,CAAAP,EAAAC,EAAA5wC,GAEAwY,EAAAW,EAAA83B,GAAA93B,EAAAtsB,GAAAssB,EAAA83B,GAAAN,IAAA7hE,OAAA,GAAA6hE,EAAA,GACAlgE,EAAA0oC,EAAA83B,GAAA93B,EAAAtsB,GAAAssB,EAAAtsB,GAAA8jD,IAAA7hE,OAAA,GAAA6hE,EAAA,GACAQ,EAAA1gE,EAAAmgE,GAAAp4B,EAAAo4B,GACAtjD,EAAA6jD,GAAAnxC,EAAAwY,EAAAo4B,IAAAO,EAAA,EACA96B,GAAA5lC,EAAAogE,GAAAr4B,EAAAq4B,IAAAvjD,EACA,OAAAkrB,EAAAq4B,GAAAx6B,EAGA,SAAA+6B,GAAAl3C,EAAAm3C,GACA,IAAAC,EAAAp3C,EAAAq3C,SACAvwD,EAAAkZ,EAAAlZ,QAAAwwD,KACAC,EAAAzwD,EAAAywD,OACA1V,EAAA0V,GAAAzwD,EAAA+6C,OACA3tD,EAAAijE,EAWA,MATA,oBAAAI,IACArjE,EAAAqjE,EAAArjE,IAIAk6B,GAAA7J,SAAArwB,KACAA,EAAA,kBAAA2tD,EAAAuV,EAAAxV,MAAA1tD,EAAA2tD,GAAAuV,EAAAxV,MAAA1tD,IAGA,OAAAA,GACAA,GAKAqjE,GAAA,oBAAA1V,IACA3tD,EAAA2tD,EAAAsV,GAEA/oC,GAAA7J,SAAArwB,KACAA,EAAAkjE,EAAAxV,MAAA1tD,KAIAA,GAGA,SAAA0tD,GAAA5hC,EAAAm3C,GACA,GAAA/oC,GAAAhK,cAAA+yC,GACA,YAGA,IAAArwD,EAAAkZ,EAAAlZ,QAAAwwD,KACApjE,EAAAgjE,GAAAl3C,IAAA8e,cAAAq4B,IAEA,cAAAjjE,EACAA,GAGA4S,EAAAgX,QACA5pB,GAAA8rB,EAAAq3C,SAAAtV,QAAA7tD,EAAA4S,EAAAgX,QAGA5pB,GAqEA,SAAAsjE,GAAA5I,GACA,QAAAl6D,EAAAyhE,GAAAn3D,QAAA4vD,GAAA,EAAAppC,EAAA2wC,GAAAvhE,OAA8DF,EAAA8wB,IAAU9wB,EACxE,GAAA8gE,GAAAW,GAAAzhE,IAAAghE,OACA,OAAAS,GAAAzhE,GAYA,SAAA+iE,GAAAz3C,EAAAvO,EAAAE,EAAA+lD,GACA,IAYAJ,EAZAF,EAAAp3C,EAAAq3C,SACAvwD,EAAAkZ,EAAAlZ,QACA6wD,EAAA7wD,EAAAwwD,KACA9S,EAAAmT,EAAA/I,MAtDA,SAAAgJ,EAAAnmD,EAAAE,EAAA+lD,GACA,IACAhjE,EAAAmjE,EAAArJ,EADAhpC,EAAA2wC,GAAAvhE,OAGA,IAAAF,EAAAyhE,GAAAn3D,QAAA44D,GAAoCljE,EAAA8wB,EAAA,IAAc9wB,EAIlD,GAHAmjE,EAAArC,GAAAW,GAAAzhE,IACA85D,EAAAqJ,EAAAlC,MAAAkC,EAAAlC,MAAAkC,EAAAlC,MAAA/gE,OAAA,GAAA2gE,GAEAsC,EAAAnC,QAAAhkD,KAAAs8C,MAAAr8C,EAAAF,IAAA+8C,EAAAqJ,EAAAj+D,QAAA89D,EACA,OAAAvB,GAAAzhE,GAIA,OAAAyhE,GAAA3wC,EAAA,GAyCAsyC,CAAAH,EAAAC,QAAAnmD,EAAAE,EAAA+lD,GACAjT,EAAA+S,GAAAhT,GACAuJ,EAAAqH,GAAAuC,EAAA5J,SAAA4J,EAAAI,cACAC,EAAA,SAAAxT,GAAAmT,EAAAM,WACAC,EAAApxD,EAAA03B,MAAAimB,MAAAjR,QACAqkB,EAAArC,GAAAhR,GACA9iD,EAAA+P,EACAksB,EAAAhsB,EACA6sB,EAAA,GA+BA,IA5BAuvB,IACAA,EA5FA,SAAAt8C,EAAAE,EAAAi9C,EAAA8I,GACA,IAIAhjE,EAAA8wB,EAAAgpC,EAJAvvB,EAAAttB,EAAAF,EACAomD,EAAArC,GAAA5G,GACAuJ,EAAAN,EAAAj+D,KACA+7D,EAAAkC,EAAAlC,MAGA,IAAAA,EACA,OAAAjkD,KAAAs8C,KAAA/uB,GAAAy4B,EAAAS,IAGA,IAAAzjE,EAAA,EAAA8wB,EAAAmwC,EAAA/gE,OAAoCF,EAAA8wB,IACpCgpC,EAAAmH,EAAAjhE,KAEAgd,KAAAs8C,KAAA/uB,GAAAk5B,EAAA3J,KAAAkJ,MAH8ChjE,GAQ9C,OAAA85D,EAyEA4J,CAAA3mD,EAAAE,EAAA6yC,EAAAkT,IAIAM,IACAt2D,GAAA01D,EAAArV,QAAArgD,EAAA,UAAAs2D,GACAr6B,GAAAy5B,EAAArV,QAAApkB,EAAA,UAAAq6B,IAIAt2D,GAAA01D,EAAArV,QAAArgD,EAAAs2D,EAAA,MAAAxT,IACA7mB,GAAAy5B,EAAArV,QAAApkB,EAAAq6B,EAAA,MAAAxT,IAEA7yC,IACAgsB,GAAAy5B,EAAAz4D,IAAAg/B,EAAA,EAAA6mB,IAGA8S,EAAA51D,EAEAw2D,GAAAzT,IAAAuT,IAAAL,EAAA75C,QAIAw5C,GAAAF,EAAArV,QAAAuV,EAAA7S,GACA6S,GAAAF,EAAAz4D,IAAA24D,MAAA51D,EAAA41D,IAAAO,EAAAj+D,KAAAm0D,MAAAvJ,IAGU8S,EAAA35B,EAAa25B,GAAAF,EAAAz4D,IAAA24D,EAAAvJ,EAAAvJ,GACvBhmB,EAAA/nC,MAAA6gE,GAIA,OADA94B,EAAA/nC,MAAA6gE,GACA94B,EA2DA,IAsDA65B,GAAA3T,GAAAt+B,OAAA,CACAqI,WAAA,WACAl0B,KAAA6kD,oBACAsF,GAAAhqD,UAAA+zB,WAAAn0B,KAAAC,OAEA6O,OAAA,WACA,IACAtC,EADAvM,KACAuM,QACAwwD,EAAAxwD,EAAAwwD,OAAAxwD,EAAAwwD,KAAA,IACAF,EAHA78D,KAGA88D,SAAA,IAAAjV,GAAAC,MAAAv7C,EAAAwxD,SAAAC,MAWA,OATAjB,EAAAzV,QACA15C,QAAAqwD,KAAA,0EAOApqC,GAAAnI,QAAAqxC,EAAAmB,eAAArB,EAAAzV,WACA+C,GAAAhqD,UAAA0O,OAAA3M,MAdAlC,KAcA5F,YAMAmqC,cAAA,SAAA0pB,GAKA,OAJAA,QAAAtyD,IAAAsyD,EAAAx1C,IACAw1C,IAAAx1C,GAGA0xC,GAAAhqD,UAAAokC,cAAAxkC,KAAAC,KAAAiuD,IAEA7C,oBAAA,WACA,IAUAjxD,EAAAmtC,EAAArc,EAAAkiB,EAAA3jC,EAAA20D,EAVAlyC,EAAAjsB,KACAovB,EAAAnD,EAAAmD,MACAytC,EAAA5wC,EAAA6wC,SACAM,EAAAnxC,EAAA1f,QAAAwwD,KACA1I,EAAA+I,EAAA/I,MAAA,MACAn9C,EAAA8jD,GACA5jD,EAAA0jD,GACAsD,EAAA,GACAnxD,EAAA,GACAs1B,EAAA,GAEA87B,EAAAjvC,EAAA5lB,KAAA+4B,QAAA,GAEA,IAAApoC,EAAA,EAAA8wB,EAAAozC,EAAAhkE,OAA2CF,EAAA8wB,IAAU9wB,EACrDooC,EAAArmC,KAAAmrD,GAAAp7B,EAAAoyC,EAAAlkE,KAIA,IAAAA,EAAA,EAAA8wB,GAAAmE,EAAA5lB,KAAAyD,UAAA,IAAA5S,OAA4DF,EAAA8wB,IAAU9wB,EACtE,GAAAi1B,EAAAmU,iBAAAppC,GAGA,GAFAqP,EAAA4lB,EAAA5lB,KAAAyD,SAAA9S,GAAAqP,KAEAqqB,GAAA9J,SAAAvgB,EAAA,IAGA,IAFAyD,EAAA9S,GAAA,GAEAmtC,EAAA,EAAA6F,EAAA3jC,EAAAnP,OAA2CitC,EAAA6F,IAAU7F,EACrD62B,EAAA9W,GAAAp7B,EAAAziB,EAAA89B,IACA82B,EAAAliE,KAAAiiE,GACAlxD,EAAA9S,GAAAmtC,GAAA62B,MAEW,CACX,IAAA72B,EAAA,EAAA6F,EAAA5K,EAAAloC,OAA6CitC,EAAA6F,IAAU7F,EACvD82B,EAAAliE,KAAAqmC,EAAA+E,IAGAr6B,EAAA9S,GAAAooC,EAAArf,MAAA,QAGAjW,EAAA9S,GAAA,GAIAooC,EAAAloC,SAEAkoC,EAAAu5B,GAAAv5B,GAAAuM,KAAA+sB,IACA3kD,EAAAC,KAAAD,MAAAqrB,EAAA,IACAnrB,EAAAD,KAAAC,MAAAmrB,IAAAloC,OAAA,KAGA+jE,EAAA/jE,SACA+jE,EAAAtC,GAAAsC,GAAAtvB,KAAA+sB,IACA3kD,EAAAC,KAAAD,MAAAknD,EAAA,IACAhnD,EAAAD,KAAAC,MAAAgnD,IAAA/jE,OAAA,KAGA6c,EAAAmwC,GAAAp7B,EAAAmxC,EAAAlmD,QACAE,EAAAiwC,GAAAp7B,EAAAmxC,EAAAhmD,QAEAF,MAAA8jD,IAAA6B,EAAArV,QAAAlxB,KAAAC,MAAA89B,GAAAn9C,EACAE,MAAA0jD,IAAA+B,EAAApV,MAAAnxB,KAAAC,MAAA89B,GAAA,EAAAj9C,EAEA6U,EAAA/U,IAAAC,KAAAD,MAAAE,GACA6U,EAAA7U,IAAAD,KAAAC,IAAAF,EAAA,EAAAE,GAEA6U,EAAAqyC,YAAAryC,EAAA0W,eACA1W,EAAAsyC,OAAA,GACAtyC,EAAAuyC,YAAA,CACAh1D,KAAA40D,EACAnxD,WACAs1B,WAGAgpB,WAAA,WACA,IAOApxD,EAAA8wB,EAAAkzC,EAPAlyC,EAAAjsB,KACAkX,EAAA+U,EAAA/U,IACAE,EAAA6U,EAAA7U,IACA7K,EAAA0f,EAAA1f,QACA6wD,EAAA7wD,EAAAwwD,KACAqB,EAAA,GACAn6B,EAAA,GAGA,OAAA13B,EAAA03B,MAAA3pC,QACA,WACA8jE,EAAAnyC,EAAAuyC,YAAAh1D,KACA,MAEA,aACA40D,EAAAnyC,EAAAuyC,YAAAj8B,OACA,MAEA,WACA,QACA67B,EAAAlB,GAAAjxC,EAAA/U,EAAAE,EAAA6U,EAAAwyC,iBAAAvnD,IAYA,IATA,UAAA3K,EAAAo0B,QAAAy9B,EAAA/jE,SACA6c,EAAAknD,EAAA,GACAhnD,EAAAgnD,IAAA/jE,OAAA,IAIA6c,EAAAmwC,GAAAp7B,EAAAmxC,EAAAlmD,QACAE,EAAAiwC,GAAAp7B,EAAAmxC,EAAAhmD,QAEAjd,EAAA,EAAA8wB,EAAAmzC,EAAA/jE,OAA2CF,EAAA8wB,IAAU9wB,GACrDgkE,EAAAC,EAAAjkE,KAEA+c,GAAAinD,GAAA/mD,GACA6sB,EAAA/nC,KAAAiiE,GAgBA,OAZAlyC,EAAA/U,MACA+U,EAAA7U,MAEA6U,EAAAyyC,MAAAtB,EAAA/I,MArVA,SAAA5uC,EAAAwe,EAAAo5B,EAAAnmD,EAAAE,GACA,IACAjd,EAAAk6D,EADAppC,EAAA2wC,GAAAvhE,OAGA,IAAAF,EAAA8wB,EAAA,EAAsB9wB,GAAAyhE,GAAAn3D,QAAA44D,GAA6BljE,IAGnD,GAFAk6D,EAAAuH,GAAAzhE,GAEA8gE,GAAA5G,GAAA8G,QAAA11C,EAAAq3C,SAAAvV,KAAAnwC,EAAAF,EAAAm9C,IAAApwB,EAAA5pC,OACA,OAAAg6D,EAIA,OAAAuH,GAAAyB,EAAAzB,GAAAn3D,QAAA44D,GAAA,GAyUAsB,CAAA1yC,EAAAgY,EAAAm5B,EAAAC,QAAApxC,EAAA/U,IAAA+U,EAAA7U,KACA6U,EAAA2yC,WAAA3B,GAAAhxC,EAAAyyC,OACAzyC,EAAAsyC,OA7hBA,SAAAH,EAAAlnD,EAAAE,EAAAynD,GACA,cAAAA,IAAAT,EAAA/jE,OACA,QACA0iE,KAAA7lD,EACAggC,IAAA,GACO,CACP6lB,KAAA3lD,EACA8/B,IAAA,IAIA,IAEA/8C,EAAA8wB,EAAA8Y,EAAAC,EAAAhoC,EAFAkgE,EAAA,GACA/tB,EAAA,CAAAj3B,GAGA,IAAA/c,EAAA,EAAA8wB,EAAAmzC,EAAA/jE,OAAyCF,EAAA8wB,IAAU9wB,GACnD6pC,EAAAo6B,EAAAjkE,IAEA+c,GAAA8sB,EAAA5sB,GACA+2B,EAAAjyC,KAAA8nC,GAMA,IAFAmK,EAAAjyC,KAAAkb,GAEAjd,EAAA,EAAA8wB,EAAAkjB,EAAA9zC,OAAoCF,EAAA8wB,IAAU9wB,EAC9C6B,EAAAmyC,EAAAh0C,EAAA,GACA4pC,EAAAoK,EAAAh0C,EAAA,GACA6pC,EAAAmK,EAAAh0C,QAEAwB,IAAAooC,QAAApoC,IAAAK,GAAAmb,KAAAoM,OAAAvnB,EAAA+nC,GAAA,KAAAC,GACAk4B,EAAAhgE,KAAA,CACA6gE,KAAA/4B,EACAkT,IAAA/8C,GAAA8wB,EAAA,KAKA,OAAAixC,EAufA4C,CAAA7yC,EAAAuyC,YAAAh1D,KAAA0N,EAAAE,EAAA7K,EAAAsyD,cACA5yC,EAAA8yC,SAhQA,SAAA7C,EAAAj4B,EAAA/sB,EAAAE,EAAA7K,GACA,IAEApF,EAAAi8B,EAFAzO,EAAA,EACAgP,EAAA,EAyBA,OAtBAp3B,EAAAq1B,QAAAqC,EAAA5pC,SACAkS,EAAAwwD,KAAA7lD,MACA/P,EAAA80D,GAAAC,EAAA,OAAAj4B,EAAA,UAGAtP,EADA,IAAAsP,EAAA5pC,OACA,EAAA8M,GAEA80D,GAAAC,EAAA,OAAAj4B,EAAA,UAAA98B,GAAA,GAIAoF,EAAAwwD,KAAA3lD,MACAgsB,EAAA64B,GAAAC,EAAA,OAAAj4B,IAAA5pC,OAAA,UAGAspC,EADA,IAAAM,EAAA5pC,OACA+oC,GAEAA,EAAA64B,GAAAC,EAAA,OAAAj4B,IAAA5pC,OAAA,eAKA,CACAs6B,QACAgP,OAmOAq7B,CAAA/yC,EAAAsyC,OAAAt6B,EAAA/sB,EAAAE,EAAA7K,GAEAA,EAAA03B,MAAArZ,SACAqZ,EAAArZ,UAlOA,SAAAnF,EAAA1W,EAAAkwD,GACA,IACA9kE,EAAA8wB,EAAAtxB,EAAAuwD,EADAjmB,EAAA,GAGA,IAAA9pC,EAAA,EAAA8wB,EAAAlc,EAAA1U,OAAqCF,EAAA8wB,IAAU9wB,EAC/CR,EAAAoV,EAAA5U,GACA+vD,IAAA+U,GAAAtlE,KAAA8rB,EAAAq3C,SAAAtV,QAAA7tD,EAAAslE,GACAh7B,EAAA/nC,KAAA,CACAvC,QACAuwD,UAIA,OAAAjmB,EAwNAi7B,CAAAjzC,EAAAgY,EAAAhY,EAAA2yC,aAEA5iB,iBAAA,SAAAlzC,EAAAyuB,GACA,IAAAtL,EAAAjsB,KACA68D,EAAA5wC,EAAA6wC,SACAtzD,EAAAyiB,EAAAmD,MAAA5lB,KACA4zD,EAAAnxC,EAAA1f,QAAAwwD,KACApvD,EAAAnE,EAAA+4B,QAAAz5B,EAAAU,EAAA+4B,OAAAloC,OAAAmP,EAAA+4B,OAAAz5B,GAAA,GACAnP,EAAA6P,EAAAyD,SAAAsqB,GAAA/tB,KAAAV,GAMA,OAJA+qB,GAAA9J,SAAApwB,KACAgU,EAAAse,EAAAsY,cAAA5qC,IAGAyjE,EAAA+B,cACAtC,EAAAvV,OAAAqV,GAAA1wC,EAAAte,GAAAyvD,EAAA+B,eAGA,kBAAAxxD,EACAA,EAGAkvD,EAAAvV,OAAAqV,GAAA1wC,EAAAte,GAAAyvD,EAAAc,eAAAkB,WAOAC,mBAAA,SAAAtC,EAAAj0D,EAAAm7B,EAAAqjB,GACA,IACAuV,EADA78D,KACA88D,SACAvwD,EAFAvM,KAEAuM,QACA66C,EAAA76C,EAAAwwD,KAAAmB,eACAoB,EAAAlY,EAJApnD,KAIA0+D,OACAO,EALAj/D,KAKA4+D,WACAW,EAAAnY,EAAA6X,GACAO,GAAA3C,EAAArV,QAAAuV,EAAAkC,GACAQ,EAAAlzD,EAAA03B,MAAAimB,MACAA,EAAAuV,EAAAxmB,SAAAgmB,GAAAM,GAAAxC,IAAAyC,EACA7xD,EAAAkvD,EAAAvV,OAAAyV,EAAAzV,IAAA4C,EAAAqV,EAAAD,IACAnT,EAAAjC,EAAAuV,EAAAlzD,EAAA03B,MAAAgmB,MACAyV,EAAA7E,GAAA1O,EAAA5hC,SAAA4hC,EAAAC,cACA,OAAAsT,IAAA/xD,EAAA7E,EAAAm7B,GAAAt2B,GAEA+9C,qBAAA,SAAAznB,GACA,IACA9pC,EAAA8wB,EADAsX,EAAA,GAGA,IAAApoC,EAAA,EAAA8wB,EAAAgZ,EAAA5pC,OAAsCF,EAAA8wB,IAAU9wB,EAChDooC,EAAArmC,KAAA8D,KAAAq/D,mBAAAp7B,EAAA9pC,GAAAR,MAAAQ,EAAA8pC,IAGA,OAAA1B,GAMAo9B,kBAAA,SAAA5C,GACA,IAAA9wC,EAAAjsB,KACA4/D,EAAA3zC,EAAA1f,QAAA03B,MAAArZ,QACAvrB,EAAA4sB,EAAAqyC,YAAAryC,EAAAtf,MAAAsf,EAAAvf,OACAioB,EAAA1I,EAAAqyC,YAAAsB,EAAA3zC,EAAA0D,MAAA1D,EAAAwD,KAAAmwC,EAAA3zC,EAAA2D,OAAA3D,EAAAyD,IACAwnB,EAAA+kB,GAAAhwC,EAAAsyC,OAAA,OAAAxB,EAAA,OACAn7B,EAAAviC,GAAA4sB,EAAA8yC,SAAApqC,MAAAuiB,IAAAjrB,EAAA8yC,SAAApqC,MAAA,EAAA1I,EAAA8yC,SAAAp7B,KACA,OAAAi8B,EAAAjrC,EAAAiN,EAAAjN,EAAAiN,GAEAiC,iBAAA,SAAAlqC,EAAAmP,EAAAyuB,GACA,IACAwlC,EAAA,KAUA,QARAphE,IAAAmN,QAAAnN,IAAA47B,IACAwlC,EAJA/8D,KAIAw+D,YAAAvxD,SAAAsqB,GAAAzuB,IAGA,OAAAi0D,IACAA,EAAA1V,GARArnD,KAQArG,IAGA,OAAAojE,EACA,OAZA/8D,KAYA2/D,kBAAA5C,IAGA54B,gBAAA,SAAAr7B,GACA,IAAAm7B,EAAAjkC,KAAAkkC,WACA,OAAAp7B,GAAA,GAAAA,EAAAm7B,EAAA5pC,OAAA2F,KAAA2/D,kBAAA17B,EAAAn7B,GAAAnP,OAAA,MAEAu0D,iBAAA,SAAAE,GACA,IAAAniC,EAAAjsB,KACAX,EAAA4sB,EAAAqyC,YAAAryC,EAAAtf,MAAAsf,EAAAvf,OACAioB,EAAA1I,EAAAqyC,YAAAryC,EAAAwD,KAAAxD,EAAAyD,IACAwnB,GAAA73C,GAAA+uD,EAAAz5B,GAAAt1B,EAAA,IAAA4sB,EAAA8yC,SAAApqC,MAAA,EAAA1I,EAAA8yC,SAAApqC,OAAA1I,EAAA8yC,SAAAp7B,IACAo5B,EAAAd,GAAAhwC,EAAAsyC,OAAA,MAAArnB,EAAA,QAEA,OAAAjrB,EAAA6wC,SAAApV,QAAAqV,IAOA8C,cAAA,SAAAlyD,GACA,IACAmyD,EADA9/D,KACAuM,QAAA03B,MACA87B,EAFA//D,KAEAqvB,IAAAqwB,YAAA/xC,GAAAhB,MACAsvB,EAAApI,GAAA+4B,UAAAkT,EAAAlW,aACA2C,EAAAp1C,KAAAoC,IAAA0iB,GACAyxB,EAAAv2C,KAAAqC,IAAAyiB,GACA+jC,EAAAnF,GAAAiF,EAAA3sC,SAAAR,GAAAO,OAAAX,iBACA,OAAAwtC,EAAAxT,EAAAyT,EAAAtS,GAMA+Q,iBAAA,SAAAwB,GACA,IAAAh0C,EAAAjsB,KAEAsnD,EAAAr7B,EAAA1f,QAAAwwD,KAAAmB,eAAAhD,YACAgF,EAAAj0C,EAAAozC,mBAAAY,EAAA,KAAA3Y,GACAyY,EAAA9zC,EAAA4zC,cAAAK,GACA/R,EAAAliC,EAAA0W,eAAA1W,EAAAtf,MAAAsf,EAAAvf,OACAywD,EAAAhmD,KAAAkB,MAAA81C,EAAA4R,GACA,OAAA5C,EAAA,EAAAA,EAAA,KAIAgD,GArVA,CACAxwD,SAAA,SASAkvD,aAAA,SASAl+B,OAAA,OACAo9B,SAAA,GACAhB,KAAA,CACAC,QAAA,EAEA1V,QAAA,EAEA+M,MAAA,EAEA9wC,OAAA,EAEA68C,eAAA,EAEA1C,YAAA,EAEAL,QAAA,cACAa,eAAA,IAEAj6B,MAAA,CACA6lB,UAAA,EAUAxvD,OAAA,OACA4vD,MAAA,CACAjR,SAAA,KAoSA6kB,GAAAjL,UAAAsN,GACA,IAAAloC,GAAA,CACAooC,SAAAtO,GACAnlC,OAAAqoC,GACAvM,YAAAsN,GACAsK,aAAAxI,GACAiF,KAAAe,IAEAyC,GAAA,CACAnB,SAAA,yBACAlE,YAAA,gBACA9zD,OAAA,YACAi0D,OAAA,SACAC,KAAA,KACAC,IAAA,QACAC,KAAA,KACAC,MAAA,WACAC,QAAA,cACAC,KAAA,QAGA9T,GAAAC,MAAAH,SAAA,oBAAAj0C,EAAA,CACA8sD,IAAA,SAEApZ,QAAA,WACA,OAAAmZ,IAEAlZ,MAAA,SAAA1tD,EAAA2tD,GAOA,MANA,kBAAA3tD,GAAA,kBAAA2tD,EACA3tD,EAAA+Z,EAAA/Z,EAAA2tD,GACO3tD,aAAA+Z,IACP/Z,EAAA+Z,EAAA/Z,IAGAA,EAAAysB,UAAAzsB,EAAA8mE,UAAA,MAEAnZ,OAAA,SAAAyV,EAAA2D,GACA,OAAAhtD,EAAAqpD,GAAAzV,OAAAoZ,IAEAt8D,IAAA,SAAA24D,EAAA4D,EAAAtM,GACA,OAAA3gD,EAAAqpD,GAAA34D,IAAAu8D,EAAAtM,GAAAoM,WAEAlZ,KAAA,SAAAnwC,EAAAF,EAAAm9C,GACA,OAAA3gD,EAAAmiB,SAAAniB,EAAA0D,GAAAmwC,KAAA7zC,EAAAwD,KAAA0pD,GAAAvM,IAEA7M,QAAA,SAAAuV,EAAA1I,EAAAoJ,GAGA,OAFAV,EAAArpD,EAAAqpD,GAEA,YAAA1I,EACA0I,EAAAW,WAAAD,GAAAgD,UAGA1D,EAAAvV,QAAA6M,GAAAoM,WAEAhZ,MAAA,SAAAsV,EAAA1I,GACA,OAAA3gD,EAAAqpD,GAAAtV,MAAA4M,GAAAoM,WAUA/Y,QAAA,SAAAqV,GACA,OAAArpD,EAAAqpD,KAEG,IAEHpqC,GAAAT,KAAA,UACA1lB,QAAA,CACAq0D,OAAA,CACAC,WAAA,MAKA,IAAAC,GAAA,CACArzD,QAAA,SAAApT,GACA,IAAAwO,EAAAxO,EAAAq2B,KACAvB,EAAA90B,EAAA80B,MACAyI,EAAAzI,EAAAiJ,eAAAvvB,GACAk4D,EAAAnpC,GAAAzI,EAAAmU,iBAAAz6B,GACAm1B,EAAA+iC,GAAAnpC,EAAAnqB,QAAAwwB,WAAA,GACA7jC,EAAA4jC,EAAA5jC,QAAA,EACA,OAAAA,EAAA,SAAAoU,EAAAtU,GACA,OAAAA,EAAAE,GAAA4jC,EAAA9jC,GAAAk6B,OAAA,MADA,MAIA4sC,SAAA,SAAA3mE,GACA,IAAA2mE,EAAA3mE,EAAA2mE,SACArpD,EAAAqpD,IAAArpD,EAAA,KACAC,EAAAopD,IAAAppD,EAAA,KACA,gBAAApJ,GACA,OACAmJ,EAAA,OAAAA,EAAAnJ,EAAAmJ,IACAC,EAAA,OAAAA,EAAApJ,EAAAoJ,QAMA,SAAAqpD,GAAAttB,EAAA9qC,EAAA+xB,GACA,IAEA3gC,EAFAw6B,EAAAkf,EAAAtf,QAAA,GACA3D,EAAA+D,EAAA/D,KAOA,QAJAh1B,IAAAg1B,IACAA,IAAA+D,EAAA0F,kBAGA,IAAAzJ,GAAA,OAAAA,EACA,SAGA,QAAAA,EACA,eAKA,GAFAz2B,EAAAsrB,WAAAmL,EAAA,IAEA3G,SAAA9vB,IAAAid,KAAAkB,MAAAne,OAKA,MAJA,MAAAy2B,EAAA,UAAAA,EAAA,KACAz2B,EAAA4O,EAAA5O,KAGAA,IAAA4O,GAAA5O,EAAA,GAAAA,GAAA2gC,IAIA3gC,EAGA,OAAAy2B,GAEA,aACA,cAEA,UACA,YAEA,WACA,eAGA,aACA,YACA,UACA,OAAAA,EAGA,QACA,UAIA,SAAAwwC,GAAA7mE,GACA,IAIAgmC,EAJA5L,EAAAp6B,EAAAs5C,GAAAtf,QAAA,GACA7O,EAAAnrB,EAAAs5C,GAAAjK,QAAA,GACAhZ,EAAAr2B,EAAAq2B,KACAz2B,EAAA,KAGA,GAAA8vB,SAAA2G,GACA,YAkBA,GAZA,UAAAA,EACAz2B,OAAAyB,IAAA+4B,EAAA0sC,YAAA37C,EAAAmK,OAAA8E,EAAA0sC,YACK,QAAAzwC,EACLz2B,OAAAyB,IAAA+4B,EAAA2sC,SAAA57C,EAAAiK,IAAAgF,EAAA2sC,cACK1lE,IAAA+4B,EAAA4sC,UACLpnE,EAAAw6B,EAAA4sC,UACK77C,EAAAu0C,gBACL9/D,EAAAurB,EAAAu0C,kBACKv0C,EAAAid,eACLxoC,EAAAurB,EAAAid,qBAGA/mC,IAAAzB,GAAA,OAAAA,EAAA,CACA,QAAAyB,IAAAzB,EAAA0d,QAAAjc,IAAAzB,EAAA2d,EACA,OAAA3d,EAGA,GAAA25B,GAAA7J,SAAA9vB,GAEA,OACA0d,GAFA0oB,EAAA7a,EAAAkd,gBAEAzoC,EAAA,KACA2d,EAAAyoB,EAAA,KAAApmC,GAKA,YAGA,SAAAqnE,GAAA51C,EAAA7iB,EAAAg4D,GACA,IAGA5mE,EAHAI,EAAAqxB,EAAA7iB,GACA6nB,EAAAr2B,EAAAq2B,KACA6wC,EAAA,CAAA14D,GAGA,IAAAg4D,EACA,OAAAnwC,EAGA,UAAAA,IAAA,IAAA6wC,EAAA/8D,QAAAksB,IAAA,CACA,IAAA3G,SAAA2G,GACA,OAAAA,EAKA,KAFAz2B,EAAAyxB,EAAAgF,IAGA,SAGA,GAAAz2B,EAAA8mE,QACA,OAAArwC,EAGA6wC,EAAAtlE,KAAAy0B,GACAA,EAAAz2B,EAAAy2B,KAGA,SAGA,SAAA8wC,GAAAnnE,GACA,IAAAq2B,EAAAr2B,EAAAq2B,KACA1vB,EAAA,UAEA,WAAA0vB,EACA,MAGA3G,SAAA2G,KACA1vB,EAAA,YAGA8/D,GAAA9/D,GAAA3G,IAGA,SAAAonE,GAAAjzD,GACA,OAAAA,MAAAiwB,KAGA,SAAAijC,GAAAtyC,EAAAuyC,EAAAC,EAAAC,EAAAC,GACA,IAAA5nE,EAEA,GAAA2nE,GAAAC,EAAA,CAOA,IAFA1yC,EAAAQ,OAAA+xC,EAAA,GAAAhqD,EAAAgqD,EAAA,GAAA/pD,GAEA1d,EAAA,EAAeA,EAAA2nE,IAAU3nE,EACzB05B,GAAAE,OAAAtD,OAAApB,EAAAuyC,EAAAznE,EAAA,GAAAynE,EAAAznE,IAMA,IAFAk1B,EAAAoB,OAAAoxC,EAAAE,EAAA,GAAAnqD,EAAAiqD,EAAAE,EAAA,GAAAlqD,GAEA1d,EAAA4nE,EAAA,EAAsB5nE,EAAA,IAAOA,EAC7B05B,GAAAE,OAAAtD,OAAApB,EAAAwyC,EAAA1nE,GAAA0nE,EAAA1nE,EAAA,QAgDA,IAAA6nE,GAAA,CACA9yD,GAAA,SACA+yD,oBAAA,SAAA7yC,EAAA7iB,GACA,IAGAsrB,EAAA19B,EAAAy5C,EAAAt5C,EAHAugC,GAAAzL,EAAA5lB,KAAAyD,UAAA,IAAA5S,OACAymE,EAAAv0D,EAAAu0D,UACAn1C,EAAA,GAGA,IAAAxxB,EAAA,EAAiBA,EAAA0gC,IAAW1gC,EAC5B09B,EAAAzI,EAAAiJ,eAAAl+B,GACAy5C,EAAA/b,EAAAnqB,QACApT,EAAA,KAEAs5C,KAAAtf,QAAAsf,aAAA/Z,GAAA9vB,OACAzP,EAAA,CACA0mE,QAAA5xC,EAAAmU,iBAAAppC,GACAw2B,KAAAuwC,GAAAttB,EAAAz5C,EAAA0gC,GACAzL,QACAwkB,OAIA/b,EAAAqqC,QAAA5nE,EACAqxB,EAAAzvB,KAAA5B,GAGA,IAAAH,EAAA,EAAiBA,EAAA0gC,IAAW1gC,GAC5BG,EAAAqxB,EAAAxxB,MAMAG,EAAAq2B,KAAA4wC,GAAA51C,EAAAxxB,EAAA2mE,GACAxmE,EAAA2mE,SAAAE,GAAA7mE,GACAA,EAAA6nE,OAAAV,GAAAnnE,KAGA8nE,kBAAA,SAAAhzC,EAAA1sB,GACA,IAAAm1B,EAAAn1B,EAAAm1B,KAAAqqC,QAEA,GAAArqC,EAAA,CAIA,IAAAxI,EAAAD,EAAAC,IACAukB,EAAA/b,EAAA+b,GACAhf,EAAAgf,EAAAvf,MACA4J,EAAA2V,EAAA1V,WAAA,GACAikC,EAAAtqC,EAAAsqC,OACAvjE,EAAAg2B,EAAAwF,iBAAAzH,GAAAO,OAAAd,aAEA+vC,GAAAvjE,GAAAq/B,EAAA5jC,SACAw5B,GAAAE,OAAA/C,SAAA3B,EAAAD,EAAAkQ,WAjGA,SAAAjQ,EAAA4O,EAAAkkC,EAAAvtC,EAAAh2B,EAAAyjE,GACA,IAMAloE,EAAA8wB,EAAAniB,EAAAw5D,EAAAC,EAAAC,EAAAC,EANA5nC,EAAAoD,EAAA5jC,OACAqiE,EAAA9nC,EAAAoJ,SACA4jC,EAAA,GACAC,EAAA,GACAC,EAAA,EACAC,EAAA,EAIA,IAFA1yC,EAAAmB,YAEAr2B,EAAA,EAAA8wB,EAAA4P,IAAAwnC,EAAsCloE,EAAA8wB,IAAU9wB,EAEhDmoE,EAAArkC,EADAn1B,EAAA3O,EAAA0gC,GACAxG,MACAkuC,EAAAJ,EAAAG,EAAAx5D,EAAA8rB,GACA4tC,EAAAd,GAAAY,GACAG,EAAAf,GAAAa,GAEAC,GAAAC,GACAX,EAAAF,EAAA1lE,KAAAomE,GACAP,EAAAF,EAAA3lE,KAAAqmE,IACOT,GAAAC,IACPrF,GAMA8F,GACAZ,EAAA1lE,KAAAomE,GAGAG,GACAZ,EAAA3lE,KAAAqmE,KAVAZ,GAAAtyC,EAAAuyC,EAAAC,EAAAC,EAAAC,GACAD,EAAAC,EAAA,EACAH,EAAA,GACAC,EAAA,KAaAF,GAAAtyC,EAAAuyC,EAAAC,EAAAC,EAAAC,GACA1yC,EAAAU,YACAV,EAAA8N,UAAAv+B,EACAywB,EAAAsB,OAyDA+xC,CAAArzC,EAAA4O,EAAAkkC,EAAAvtC,EAAAh2B,EAAAg1C,EAAAvV,OACAxK,GAAAE,OAAA5C,WAAA9B,OAIAszC,GAAA9uC,GAAAlK,KACAi5C,GAAA/uC,GAAAzJ,eAkFA,SAAAy4C,GAAAC,EAAA3vC,GACA,OAAA2vC,EAAAC,eAAAD,EAAAE,SAAA7vC,IAAA2vC,EAAAE,SAjFArwC,GAAAT,KAAA,UACAzlB,OAAA,CACAiD,SAAA,EACAC,SAAA,MACA0/B,WAAA,EACAzkB,SAAA,EACAhC,OAAA,IAEAxpB,QAAA,SAAAgB,EAAA0mC,GACA,IAAAh+B,EAAAg+B,EAAAvP,aACA0rC,EAAAjjE,KAAAovB,MACAyI,EAAAorC,EAAA5qC,eAAAvvB,GAEA+uB,EAAA1D,OAAA,OAAA0D,EAAA1D,QAAA8uC,EAAAz5D,KAAAyD,SAAAnE,GAAAqrB,OAAA,KAEA8uC,EAAAp0D,UAEA8zC,QAAA,KACAugB,QAAA,KACA3gC,OAAA,CACAygC,SAAA,GACA3jC,QAAA,GAYAqH,eAAA,SAAAtX,GACA,IAAA5lB,EAAA4lB,EAAA5lB,KACA,OAAAqqB,GAAAx4B,QAAAmO,EAAAyD,UAAAzD,EAAAyD,SAAA1D,IAAA,SAAAmE,EAAAvT,GACA,OACAqsC,KAAA94B,EAAAC,MACAwvB,UAAAtJ,GAAAx4B,QAAAqS,EAAA0sB,iBAAA1sB,EAAA0sB,gBAAA,GAAA1sB,EAAA0sB,gBACAjG,QAAA/E,EAAAmU,iBAAAppC,GACAmkC,QAAA5wB,EAAA+vB,eACA0lC,SAAAz1D,EAAAgwB,WACAc,eAAA9wB,EAAAiwB,iBACAN,SAAA3vB,EAAAkwB,gBACAR,UAAA1vB,EAAA4sB,YACAgD,YAAA5vB,EAAA2sB,YACA2E,WAAAtxB,EAAAsxB,WAEAzH,aAAAp9B,IAEW6F,MAAA,MAIXumC,eAAA,SAAAnX,GACA,IAAAoX,EAAA,GACAA,EAAAtqC,KAAA,cAAAkzB,EAAAlgB,GAAA,aAEA,QAAA/U,EAAA,EAAqBA,EAAAi1B,EAAA5lB,KAAAyD,SAAA5S,OAAgCF,IACrDqsC,EAAAtqC,KAAA,qCAAAkzB,EAAA5lB,KAAAyD,SAAA9S,GAAAigC,gBAAA,aAEAhL,EAAA5lB,KAAAyD,SAAA9S,GAAAwT,OACA64B,EAAAtqC,KAAAkzB,EAAA5lB,KAAAyD,SAAA9S,GAAAwT,OAGA64B,EAAAtqC,KAAA,SAIA,OADAsqC,EAAAtqC,KAAA,SACAsqC,EAAAC,KAAA,OAmBA,IAAA28B,GAAA/tC,GAAAxJ,OAAA,CACAqI,WAAA,SAAAnmB,GACA8lB,GAAAhI,OAAA7rB,KAAA+N,GAEA/N,KAAAqjE,eAAA,GAKArjE,KAAAsjE,aAAA,KAEAtjE,KAAAujE,cAAA,GAKA9Y,aAAAkY,GACA9zD,OAAA,SAAA67C,EAAAC,EAAAC,GACA,IAAA3+B,EAAAjsB,KAqBA,OAnBAisB,EAAAw+B,eAEAx+B,EAAAy+B,WACAz+B,EAAA0+B,YACA1+B,EAAA2+B,UAEA3+B,EAAA++B,sBACA/+B,EAAAg/B,gBACAh/B,EAAAi/B,qBAEAj/B,EAAAu3C,oBACAv3C,EAAAw3C,cACAx3C,EAAAy3C,mBAEAz3C,EAAA8/B,YACA9/B,EAAA+/B,MACA//B,EAAAggC,WAEAhgC,EAAAigC,cACAjgC,EAAAyb,SAEAwkB,YAAAyW,GAEA3X,oBAAA2X,GACA1X,cAAA,WACA,IAAAh/B,EAAAjsB,KAEAisB,EAAA0W,gBAEA1W,EAAAtf,MAAAsf,EAAAy+B,SACAz+B,EAAAwD,KAAA,EACAxD,EAAA0D,MAAA1D,EAAAtf,QAEAsf,EAAAvf,OAAAuf,EAAA0+B,UAEA1+B,EAAAyD,IAAA,EACAzD,EAAA2D,OAAA3D,EAAAvf,QAIAuf,EAAAm+B,YAAA,EACAn+B,EAAAo+B,WAAA,EACAp+B,EAAAq+B,aAAA,EACAr+B,EAAAs+B,cAAA,EAEAt+B,EAAAyb,QAAA,CACA/6B,MAAA,EACAD,OAAA,IAGAw+C,mBAAAyX,GAEAa,kBAAAb,GACAc,YAAA,WACA,IAAAx3C,EAAAjsB,KACA8iE,EAAA72C,EAAA1f,QAAAg2B,QAAA,GACAohC,EAAA9vC,GAAAtJ,SAAAu4C,EAAAp8B,eAAA,CAAAza,EAAAmD,OAAAnD,IAAA,GAEA62C,EAAAnoE,SACAgpE,IAAAhpE,OAAA,SAAA4xB,GACA,OAAAu2C,EAAAnoE,OAAA4xB,EAAAN,EAAAmD,MAAA5lB,SAIAyiB,EAAA1f,QAAAqe,SACA+4C,EAAA/4C,UAGAqB,EAAA03C,eAEAD,iBAAAf,GAEA5W,UAAA4W,GACA3W,IAAA,WACA,IAAA//B,EAAAjsB,KACAunC,EAAAtb,EAAA1f,QACAu2D,EAAAv7B,EAAAhF,OACA7yB,EAAA63B,EAAA73B,QACA2f,EAAApD,EAAAoD,IAEAu0C,EAAA/vC,GAAAtnB,QAAAymB,WAAA8vC,GAEA3vC,EAAAywC,EAAAvkE,KAEAwkE,EAAA53C,EAAAo3C,eAAA,GACA37B,EAAAzb,EAAAyb,QACA/E,EAAA1W,EAAA0W,eAYA,GAVAA,GACA+E,EAAA/6B,MAAAsf,EAAAy+B,SAEAhjB,EAAAh7B,OAAAgD,EAAA,OAEAg4B,EAAA/6B,MAAA+C,EAAA,KACAg4B,EAAAh7B,OAAAuf,EAAA0+B,WAIAj7C,EAGA,GAFA2f,EAAA+D,KAAAwwC,EAAAllE,OAEAikC,EAAA,CAGA,IAAAmhC,EAAA73C,EAAA63C,WAAA,IACAC,EAAA,EACA10C,EAAA6xB,UAAA,OACA7xB,EAAA8xB,aAAA,MACAttB,GAAAnJ,KAAAuB,EAAA03C,YAAA,SAAA78B,EAAA3sC,GACA,IAAA6oE,EAAAH,GAAAC,EAAA3vC,GACAxmB,EAAAq2D,EAAA7vC,EAAA,EAAA9D,EAAAqwB,YAAA5Y,EAAAN,MAAA75B,OAEA,IAAAxS,GAAA2pE,IAAAzpE,OAAA,GAAAsS,EAAAm2D,EAAAzjC,QAAAqI,EAAA/6B,SACAo3D,GAAA5wC,EAAA2vC,EAAAzjC,QACAykC,IAAAzpE,QAAAF,EAAA,QAAA2oE,EAAAzjC,SAIAwkC,EAAA1pE,GAAA,CACAs1B,KAAA,EACAC,IAAA,EACA/iB,QACAD,OAAAymB,GAEA2wC,IAAAzpE,OAAA,IAAAsS,EAAAm2D,EAAAzjC,UAEAqI,EAAAh7B,QAAAq3D,MACS,CACT,IAAAC,EAAAlB,EAAAzjC,QACA4kC,EAAAh4C,EAAAg4C,aAAA,GACAC,EAAApB,EAAAzjC,QACA8kC,EAAA,EACAC,EAAA,EACAC,EAAAlxC,EAAA6wC,EACAnwC,GAAAnJ,KAAAuB,EAAA03C,YAAA,SAAA78B,EAAA3sC,GACA,IAAA6oE,EAAAH,GAAAC,EAAA3vC,GACAmxC,EAAAtB,EAAA7vC,EAAA,EAAA9D,EAAAqwB,YAAA5Y,EAAAN,MAAA75B,MAEAxS,EAAA,GAAAiqE,EAAAC,EAAA38B,EAAAh7B,OAAAs3D,IACAE,GAAAC,EAAArB,EAAAzjC,QACA4kC,EAAA/nE,KAAAioE,GAEAA,EAAA,EACAC,EAAA,GAIAD,EAAAhtD,KAAAC,IAAA+sD,EAAAG,GACAF,GAAAC,EAEAR,EAAA1pE,GAAA,CACAs1B,KAAA,EACAC,IAAA,EACA/iB,MAAA23D,EACA53D,OAAAymB,KAGA+wC,GAAAC,EACAF,EAAA/nE,KAAAioE,GACAz8B,EAAA/6B,OAAAu3D,EAIAj4C,EAAAtf,MAAA+6B,EAAA/6B,MACAsf,EAAAvf,OAAAg7B,EAAAh7B,QAEAu/C,SAAA0W,GAEAhgC,aAAA,WACA,cAAA3iC,KAAAuM,QAAAoD,UAAA,WAAA3P,KAAAuM,QAAAoD,UAGAmqB,KAAA,WACA,IAAA7N,EAAAjsB,KACAunC,EAAAtb,EAAA1f,QACAu2D,EAAAv7B,EAAAhF,OACAtP,EAAAN,GAAAO,OACAd,EAAAa,EAAAb,aACAmyC,EAAAtxC,EAAA4G,SAAA2D,KACAgnC,EAAAv4C,EAAAtf,MACAm3D,EAAA73C,EAAA63C,WAEA,GAAAv8B,EAAA73B,QAAA,CACA,IAMA+0D,EANAp1C,EAAApD,EAAAoD,IACAugC,EAAAgT,GAAAE,EAAAlT,UAAA38B,EAAAZ,kBAEAuxC,EAAA/vC,GAAAtnB,QAAAymB,WAAA8vC,GAEA3vC,EAAAywC,EAAAvkE,KAGAgwB,EAAA6xB,UAAA,OACA7xB,EAAA8xB,aAAA,SACA9xB,EAAA+N,UAAA,GACA/N,EAAAiO,YAAAsyB,EAEAvgC,EAAA8N,UAAAyyB,EAEAvgC,EAAA+D,KAAAwwC,EAAAllE,OACA,IAAAskE,EAAAH,GAAAC,EAAA3vC,GACA0wC,EAAA53C,EAAAo3C,eA2DA1gC,EAAA1W,EAAA0W,eAGA8hC,EADA9hC,EACA,CACA/qB,EAAAqU,EAAAwD,MAAA+0C,EAAAV,EAAA,MAAAhB,EAAAzjC,QACAxnB,EAAAoU,EAAAyD,IAAAozC,EAAAzjC,QACA7B,KAAA,GAGA,CACA5lB,EAAAqU,EAAAwD,KAAAqzC,EAAAzjC,QACAxnB,EAAAoU,EAAAyD,IAAAozC,EAAAzjC,QACA7B,KAAA,GAIA,IAAA6mC,EAAAlxC,EAAA2vC,EAAAzjC,QACAxL,GAAAnJ,KAAAuB,EAAA03C,YAAA,SAAA78B,EAAA3sC,GACA,IAAAuqE,EAAAr1C,EAAAqwB,YAAA5Y,EAAAN,MAAA75B,MACAA,EAAAq2D,EAAA7vC,EAAA,EAAAuxC,EACA9sD,EAAA6sD,EAAA7sD,EACAC,EAAA4sD,EAAA5sD,EAIA8qB,EACAxoC,EAAA,GAAAyd,EAAAjL,EAAAm2D,EAAAzjC,QAAApT,EAAAwD,KAAAxD,EAAAyb,QAAA/6B,QACAkL,EAAA4sD,EAAA5sD,GAAAwsD,EACAI,EAAAjnC,OACA5lB,EAAA6sD,EAAA7sD,EAAAqU,EAAAwD,MAAA+0C,EAAAV,EAAAW,EAAAjnC,OAAA,EAAAslC,EAAAzjC,SAEWllC,EAAA,GAAA0d,EAAAwsD,EAAAp4C,EAAAyD,IAAAzD,EAAAyb,QAAAh7B,SACXkL,EAAA6sD,EAAA7sD,IAAAqU,EAAAg4C,aAAAQ,EAAAjnC,MAAAslC,EAAAzjC,QACAxnB,EAAA4sD,EAAA5sD,EAAAoU,EAAAyD,IAAAozC,EAAAzjC,QACAolC,EAAAjnC,QA3FA,SAAA5lB,EAAAC,EAAAivB,GACA,KAAAphB,MAAAs9C,OAAA,IAKA3zC,EAAA4B,OACA,IAAAmM,EAAAwlC,GAAA97B,EAAA1J,UAAAmnC,EAAAjqC,aAaA,GAZAjL,EAAA8N,UAAAylC,GAAA97B,EAAA3J,UAAA/K,GACA/C,EAAAiP,QAAAskC,GAAA97B,EAAAxI,QAAAimC,EAAA9mC,gBACApO,EAAAmP,eAAAokC,GAAA97B,EAAAtI,eAAA+lC,EAAA5mC,kBACAtO,EAAAgO,SAAAulC,GAAA97B,EAAAzJ,SAAAknC,EAAA3mC,iBACAvO,EAAA+N,YACA/N,EAAAiO,YAAAslC,GAAA97B,EAAAxJ,YAAAlL,GAEA/C,EAAAkP,aAEAlP,EAAAkP,YAAAqkC,GAAA97B,EAAAq8B,SAAAoB,EAAA7mC,aAGA6J,EAAAhF,QAAAgF,EAAAhF,OAAAwgC,cAAA,CAGA,IAAAvzC,EAAAwzC,EAAA7rD,KAAAwtD,MAAA,EACA/7B,EAAAhxB,EAAAorD,EAAA,EACAn6B,EAAAhxB,EAAAsb,EAAA,EAEAU,GAAAE,OAAA9D,UAAAZ,EAAAyX,EAAA9H,WAAAxP,EAAAoZ,EAAAC,QAGA,IAAAzL,GACA/N,EAAAsyB,WAAA/pC,EAAAC,EAAAmrD,EAAA7vC,GAGA9D,EAAA8R,SAAAvpB,EAAAC,EAAAmrD,EAAA7vC,GAGA9D,EAAA+B,WAyDAwzC,CAAAhtD,EAAAC,EAAAivB,GACA+8B,EAAA1pE,GAAAs1B,KAAA7X,EACAisD,EAAA1pE,GAAAu1B,IAAA7X,EAxDA,SAAAD,EAAAC,EAAAivB,EAAA49B,GACA,IAAAG,EAAA1xC,EAAA,EACA2xC,EAAA9B,EAAA6B,EAAAjtD,EACAmtD,EAAAltD,EAAAgtD,EACAx1C,EAAA+xB,SAAAta,EAAAN,KAAAs+B,EAAAC,GAEAj+B,EAAA3S,SAEA9E,EAAAmB,YACAnB,EAAA+N,UAAA,EACA/N,EAAAQ,OAAAi1C,EAAAC,GACA11C,EAAAoB,OAAAq0C,EAAAJ,EAAAK,GACA11C,EAAAuB,UA8CAwwB,CAAAxpC,EAAAC,EAAAivB,EAAA49B,GAEA/hC,EACA8hC,EAAA7sD,GAAAjL,EAAAm2D,EAAAzjC,QAEAolC,EAAA5sD,GAAAwsD,MASAW,iBAAA,SAAAptD,EAAAC,GACA,IACA1d,EAAA8qE,EAAAC,EADAj5C,EAAAjsB,KAGA,GAAA4X,GAAAqU,EAAAwD,MAAA7X,GAAAqU,EAAA0D,OAAA9X,GAAAoU,EAAAyD,KAAA7X,GAAAoU,EAAA2D,OAIA,IAFAs1C,EAAAj5C,EAAAo3C,eAEAlpE,EAAA,EAAmBA,EAAA+qE,EAAA7qE,SAAeF,EAGlC,GAFA8qE,EAAAC,EAAA/qE,GAEAyd,GAAAqtD,EAAAx1C,MAAA7X,GAAAqtD,EAAAx1C,KAAAw1C,EAAAt4D,OAAAkL,GAAAotD,EAAAv1C,KAAA7X,GAAAotD,EAAAv1C,IAAAu1C,EAAAv4D,OAEA,OAAAuf,EAAA03C,YAAAxpE,GAKA,aAQA8nD,YAAA,SAAA7hD,GACA,IAGA+kE,EAHAl5C,EAAAjsB,KACAunC,EAAAtb,EAAA1f,QACAtL,EAAA,YAAAb,EAAAa,KAAA,QAAAb,EAAAa,KAGA,iBAAAA,GACA,IAAAsmC,EAAAob,UAAApb,EAAA27B,QACA,WAEO,cAAAjiE,EAKP,OAJA,IAAAsmC,EAAAnoC,QACA,OAOA+lE,EAAAl5C,EAAA+4C,iBAAA5kE,EAAAwX,EAAAxX,EAAAyX,GAEA,UAAA5W,EACAkkE,GAAA59B,EAAAnoC,SAEAmoC,EAAAnoC,QAAAW,KAAAksB,EAAA7rB,EAAA6sC,OAAAk4B,IAGA59B,EAAA27B,SAAAiC,IAAAl5C,EAAAq3C,eACAr3C,EAAAq3C,cACA/7B,EAAA27B,QAAAnjE,KAAAksB,EAAA7rB,EAAA6sC,OAAAhhB,EAAAq3C,cAGAr3C,EAAAq3C,aAAA6B,GAGA59B,EAAAob,SAAAwiB,GAEA59B,EAAAob,QAAA5iD,KAAAksB,EAAA7rB,EAAA6sC,OAAAk4B,OAMA,SAAAC,GAAAh2C,EAAAi2C,GACA,IAAA54D,EAAA,IAAA22D,GAAA,CACA/zC,IAAAD,EAAAC,IACA9iB,QAAA84D,EACAj2C,UAEA+f,GAAAK,UAAApgB,EAAA3iB,EAAA44D,GACAl2B,GAAAC,OAAAhgB,EAAA3iB,GACA2iB,EAAA3iB,SAGA,IAAA64D,GAAA,CACAp2D,GAAA,SASAq2D,SAAAnC,GACAoC,WAAA,SAAAp2C,GACA,IAAAi2C,EAAAj2C,EAAA7iB,QAAAE,OAEA44D,GACAD,GAAAh2C,EAAAi2C,IAGA5a,aAAA,SAAAr7B,GACA,IAAAi2C,EAAAj2C,EAAA7iB,QAAAE,OACAA,EAAA2iB,EAAA3iB,OAEA44D,GACAxxC,GAAAnI,QAAA25C,EAAA1yC,GAAAO,OAAAzmB,QAEAA,GACA0iC,GAAAK,UAAApgB,EAAA3iB,EAAA44D,GACA54D,EAAAF,QAAA84D,GAEAD,GAAAh2C,EAAAi2C,IAEO54D,IACP0iC,GAAAG,UAAAlgB,EAAA3iB,UACA2iB,EAAA3iB,SAGAg5D,WAAA,SAAAr2C,EAAAhvB,GACA,IAAAqM,EAAA2iB,EAAA3iB,OAEAA,GACAA,EAAAw1C,YAAA7hD,KAIAslE,GAAA7xC,GAAAlK,KAEAgJ,GAAAT,KAAA,UACAsT,MAAA,CACA91B,SAAA,EACA8jB,UAAA,OACA6b,WAAA,EACAhQ,QAAA,GACA1vB,SAAA,MACA62B,KAAA,GACA5d,OAAA,OASA,IAAA+8C,GAAAtwC,GAAAxJ,OAAA,CACAqI,WAAA,SAAAnmB,GAEA8lB,GAAAhI,OADA7rB,KACA+N,GADA/N,KAGAqjE,eAAA,IAGA5Y,aAAAib,GACA72D,OAAA,SAAA67C,EAAAC,EAAAC,GACA,IAAA3+B,EAAAjsB,KAqBA,OAnBAisB,EAAAw+B,eAEAx+B,EAAAy+B,WACAz+B,EAAA0+B,YACA1+B,EAAA2+B,UAEA3+B,EAAA++B,sBACA/+B,EAAAg/B,gBACAh/B,EAAAi/B,qBAEAj/B,EAAAu3C,oBACAv3C,EAAAw3C,cACAx3C,EAAAy3C,mBAEAz3C,EAAA8/B,YACA9/B,EAAA+/B,MACA//B,EAAAggC,WAEAhgC,EAAAigC,cACAjgC,EAAAyb,SAEAwkB,YAAAwZ,GAEA1a,oBAAA0a,GACAza,cAAA,WACA,IAAAh/B,EAAAjsB,KAEAisB,EAAA0W,gBAEA1W,EAAAtf,MAAAsf,EAAAy+B,SACAz+B,EAAAwD,KAAA,EACAxD,EAAA0D,MAAA1D,EAAAtf,QAEAsf,EAAAvf,OAAAuf,EAAA0+B,UAEA1+B,EAAAyD,IAAA,EACAzD,EAAA2D,OAAA3D,EAAAvf,QAIAuf,EAAAm+B,YAAA,EACAn+B,EAAAo+B,WAAA,EACAp+B,EAAAq+B,aAAA,EACAr+B,EAAAs+B,cAAA,EAEAt+B,EAAAyb,QAAA,CACA/6B,MAAA,EACAD,OAAA,IAGAw+C,mBAAAwa,GAEAlC,kBAAAkC,GACAjC,YAAAiC,GACAhC,iBAAAgC,GAEA3Z,UAAA2Z,GACA1Z,IAAA,WACA,IAAA//B,EAAAjsB,KACAunC,EAAAtb,EAAA1f,QACAmD,EAAA63B,EAAA73B,QACAg4B,EAAAzb,EAAAyb,QACAk+B,EAAA/xC,GAAAx4B,QAAAksC,EAAAf,MAAAe,EAAAf,KAAAnsC,OAAA,EAEAwrE,EAAAhyC,GAAAtnB,QAAAymB,WAAAuU,GAEAowB,EAAAjoD,EAAAk2D,EAAAC,EAAAtyC,WAAA,EAAAgU,EAAAlI,QAAA,EAEApT,EAAA0W,gBACA+E,EAAA/6B,MAAAsf,EAAAy+B,SAEAhjB,EAAAh7B,OAAAirD,IAEAjwB,EAAA/6B,MAAAgrD,EACAjwB,EAAAh7B,OAAAuf,EAAA0+B,WAGA1+B,EAAAtf,MAAA+6B,EAAA/6B,MACAsf,EAAAvf,OAAAg7B,EAAAh7B,QAEAu/C,SAAAyZ,GAEA/iC,aAAA,WACA,IAAAuU,EAAAl3C,KAAAuM,QAAAoD,SACA,cAAAunC,GAAA,WAAAA,GAGApd,KAAA,WACA,IAAA7N,EAAAjsB,KACAqvB,EAAApD,EAAAoD,IACAkY,EAAAtb,EAAA1f,QAEA,GAAAg7B,EAAA73B,QAAA,CACA,IASAg7C,EAAAob,EAAAC,EATAF,EAAAhyC,GAAAtnB,QAAAymB,WAAAuU,GAEAhU,EAAAsyC,EAAAtyC,WACAqO,EAAArO,EAAA,EAAAgU,EAAAlI,QACAlP,EAAA,EACAT,EAAAzD,EAAAyD,IACAD,EAAAxD,EAAAwD,KACAG,EAAA3D,EAAA2D,OACAD,EAAA1D,EAAA0D,MAEAN,EAAA8N,UAAAtJ,GAAAzJ,eAAAmd,EAAAqoB,UAAAj9B,GAAAO,OAAAb,kBAEAhD,EAAA+D,KAAAyyC,EAAAnnE,OAEAutB,EAAA0W,gBACAmjC,EAAAr2C,GAAAE,EAAAF,GAAA,EAEAs2C,EAAAr2C,EAAAkS,EACA8oB,EAAA/6B,EAAAF,IAEAq2C,EAAA,SAAAv+B,EAAA53B,SAAA8f,EAAAmS,EAAAjS,EAAAiS,EACAmkC,EAAAr2C,GAAAE,EAAAF,GAAA,EACAg7B,EAAA96B,EAAAF,EACAS,EAAAhZ,KAAAiC,IAAA,SAAAmuB,EAAA53B,UAAA,QAGA0f,EAAA4B,OACA5B,EAAAmiC,UAAAsU,EAAAC,GACA12C,EAAA7G,OAAA2H,GACAd,EAAA6xB,UAAA,SACA7xB,EAAA8xB,aAAA,SACA,IAAA3a,EAAAe,EAAAf,KAEA,GAAA3S,GAAAx4B,QAAAmrC,GAGA,IAFA,IAAA3uB,EAAA,EAEA1d,EAAA,EAAyBA,EAAAqsC,EAAAnsC,SAAiBF,EAC1Ck1B,EAAA+xB,SAAA5a,EAAArsC,GAAA,EAAA0d,EAAA6yC,GACA7yC,GAAA0b,OAGAlE,EAAA+xB,SAAA5a,EAAA,IAAAkkB,GAGAr7B,EAAA+B,cAKA,SAAA40C,GAAA52C,EAAA62C,GACA,IAAAzgC,EAAA,IAAAmgC,GAAA,CACAt2C,IAAAD,EAAAC,IACA9iB,QAAA05D,EACA72C,UAEA+f,GAAAK,UAAApgB,EAAAoW,EAAAygC,GACA92B,GAAAC,OAAAhgB,EAAAoW,GACApW,EAAA82C,WAAA1gC,EAGA,IAqCAh5B,GAAA,GACAq0D,GAAAmB,GACAv1D,GAAA64D,GACA9/B,GAxCA,CACAt2B,GAAA,QASAq2D,SAAAI,GACAH,WAAA,SAAAp2C,GACA,IAAA62C,EAAA72C,EAAA7iB,QAAAi5B,MAEAygC,GACAD,GAAA52C,EAAA62C,IAGAxb,aAAA,SAAAr7B,GACA,IAAA62C,EAAA72C,EAAA7iB,QAAAi5B,MACA0gC,EAAA92C,EAAA82C,WAEAD,GACApyC,GAAAnI,QAAAu6C,EAAAtzC,GAAAO,OAAAsS,OAEA0gC,GACA/2B,GAAAK,UAAApgB,EAAA82C,EAAAD,GACAC,EAAA35D,QAAA05D,GAEAD,GAAA52C,EAAA62C,IAEOC,IACP/2B,GAAAG,UAAAlgB,EAAA82C,UACA92C,EAAA82C,cAwCA,QAAA3uD,MAhCA/K,GAAAq0D,UACAr0D,GAAAC,UACAD,GAAAg5B,SAKAshB,GAAA54C,QAAA2lB,GA76JA,WAoaA,SAAAsyC,EAAAC,EAAA7mE,EAAA8mE,GACA,IAAAC,EAaA,MAXA,kBAAAF,GACAE,EAAA/gD,SAAA6gD,EAAA,KAEA,IAAAA,EAAA3hE,QAAA,OAEA6hE,IAAA,IAAA/mE,EAAAq1C,WAAAyxB,KAGAC,EAAAF,EAGAE,EAQA,SAAAC,EAAA5sE,GACA,YAAAgC,IAAAhC,GAAA,OAAAA,GAAA,SAAAA,EAWA,SAAA6sE,EAAAC,EAAAC,EAAAC,GACA,IAAA/xC,EAAAif,SAAA+yB,YAEAhyB,EAAA/gB,GAAAgzC,eAAAJ,GAEAK,EAAAlyC,EAAAmyC,iBAAAN,GAAAC,GACAM,EAAApyC,EAAAmyC,iBAAAnyB,GAAA8xB,GACAO,EAAAV,EAAAO,GACAI,EAAAX,EAAAS,GACAG,EAAAh9C,OAAAsjB,kBAEA,OAAAw5B,GAAAC,EACA/vD,KAAAD,IAAA+vD,EAAAd,EAAAW,EAAAL,EAAAE,GAAAQ,EAAAD,EAAAf,EAAAa,EAAApyB,EAAA+xB,GAAAQ,GAGA,OAndAtzC,GAAA8a,MAAA,SAAAy4B,EAAAC,GACA,GAAAxzC,GAAAx4B,QAAA+rE,IAAAhsE,MAAA+E,UAAAxF,OACA,OAAAysE,EAAAzsE,OAAA0sE,GAGA,IAAAC,EAAA,GAMA,OALAzzC,GAAAnJ,KAAA08C,EAAA,SAAA76C,GACA86C,EAAA96C,IACA+6C,EAAAprE,KAAAqwB,KAGA+6C,GAGAzzC,GAAA8C,UAAAv7B,MAAA+E,UAAAw2B,UAAA,SAAAxtB,EAAAohB,EAAA4H,GACA,OAAAhpB,EAAAwtB,UAAApM,EAAA4H,IACK,SAAAhpB,EAAAohB,EAAA4H,GACLA,OAAAx2B,IAAAw2B,EAAAhpB,EAAAgpB,EAEA,QAAAh4B,EAAA,EAAA8wB,EAAA9hB,EAAA9O,OAA0CF,EAAA8wB,IAAU9wB,EACpD,GAAAowB,EAAAxqB,KAAAoyB,EAAAhpB,EAAAhP,KAAAgP,GACA,OAAAhP,EAIA,UAGA05B,GAAAud,cAAA,SAAAm2B,EAAAF,EAAAG,GAEA3zC,GAAAhK,cAAA29C,KACAA,GAAA,GAGA,QAAArtE,EAAAqtE,EAAA,EAAkCrtE,EAAAotE,EAAAltE,OAA0BF,IAAA,CAC5D,IAAAstE,EAAAF,EAAAptE,GAEA,GAAAktE,EAAAI,GACA,OAAAA,IAKA5zC,GAAA6zC,kBAAA,SAAAH,EAAAF,EAAAG,GAEA3zC,GAAAhK,cAAA29C,KACAA,EAAAD,EAAAltE,QAGA,QAAAF,EAAAqtE,EAAA,EAAkCrtE,GAAA,EAAQA,IAAA,CAC1C,IAAAstE,EAAAF,EAAAptE,GAEA,GAAAktE,EAAAI,GACA,OAAAA,IAMA5zC,GAAAuB,SAAA,SAAAr3B,GACA,OAAA2nB,MAAAF,WAAAznB,KAAAisB,SAAAjsB,IAGA81B,GAAAghC,aAAA,SAAAj9C,EAAAC,EAAA8vD,GACA,OAAAxwD,KAAA2nB,IAAAlnB,EAAAC,GAAA8vD,GAGA9zC,GAAA+gC,YAAA,SAAAh9C,EAAA+vD,GACA,IAAAC,EAAAzwD,KAAAoM,MAAA3L,GACA,OAAAgwD,EAAAD,EAAA/vD,GAAAgwD,EAAAD,EAAA/vD,GAGAic,GAAAzc,IAAA,SAAAjO,GACA,OAAAA,EAAAk2C,OAAA,SAAAjoC,EAAAzd,GACA,OAAA+rB,MAAA/rB,GAIAyd,EAHAD,KAAAC,MAAAzd,IAIOwwB,OAAA6tC,oBAGPnkC,GAAA3c,IAAA,SAAA/N,GACA,OAAAA,EAAAk2C,OAAA,SAAAnoC,EAAAvd,GACA,OAAA+rB,MAAA/rB,GAIAud,EAHAC,KAAAD,MAAAvd,IAIOwwB,OAAAsjB,oBAGP5Z,GAAAo/B,KAAA97C,KAAA87C,KAAA,SAAAr7C,GACA,OAAAT,KAAA87C,KAAAr7C,IACK,SAAAA,GAGL,YAFAA,OAEA8N,MAAA9N,GACAA,EAGAA,EAAA,QAEAic,GAAAs0B,MAAAhxC,KAAAgxC,MAAA,SAAAvwC,GACA,OAAAT,KAAAgxC,MAAAvwC,IACK,SAAAA,GACL,IAAAiwD,EAAA1wD,KAAA2wD,IAAAlwD,GAAAT,KAAA4wD,OAIAC,EAAA7wD,KAAAoM,MAAAskD,GACAI,EAAArwD,IAAAT,KAAAQ,IAAA,GAAAqwD,GACA,OAAAC,EAAAD,EAAAH,GAGAh0C,GAAA+4B,UAAA,SAAAnkC,GACA,OAAAA,GAAAtR,KAAAiC,GAAA,MAGAya,GAAA2kC,UAAA,SAAA0P,GACA,OAAAA,GAAA,IAAA/wD,KAAAiC,KAWAya,GAAA8gC,eAAA,SAAA/8C,GACA,GAAAic,GAAA7J,SAAApS,GAAA,CAOA,IAHA,IAAAxX,EAAA,EACAmY,EAAA,EAEApB,KAAAoM,MAAA3L,EAAAxX,OAAAwX,GACAxX,GAAA,GACAmY,IAGA,OAAAA,IAIAsb,GAAAmI,kBAAA,SAAAmsC,EAAAC,GACA,IAAAC,EAAAD,EAAAxwD,EAAAuwD,EAAAvwD,EACA0wD,EAAAF,EAAAvwD,EAAAswD,EAAAtwD,EACA0wD,EAAApxD,KAAAkC,KAAAgvD,IAAAC,KACArsC,EAAA9kB,KAAAgC,MAAAmvD,EAAAD,GAMA,OAJApsC,GAAA,GAAA9kB,KAAAiC,KACA6iB,GAAA,EAAA9kB,KAAAiC,IAGA,CACA6iB,QACAC,SAAAqsC,IAIA10C,GAAA0nB,sBAAA,SAAAzN,EAAAC,GACA,OAAA52B,KAAAkC,KAAAlC,KAAAQ,IAAAo2B,EAAAn2B,EAAAk2B,EAAAl2B,EAAA,GAAAT,KAAAQ,IAAAo2B,EAAAl2B,EAAAi2B,EAAAj2B,EAAA,KAUAgc,GAAA20C,WAAA,SAAAC,GACA,OAAAA,EAAA,YAYA50C,GAAAw8B,YAAA,SAAAjhC,EAAAg/B,EAAAzhD,GACA,IAAA02C,EAAAj0B,EAAAs5C,wBACAC,EAAAh8D,EAAA,EACA,OAAAwK,KAAAoM,OAAA6qC,EAAAua,GAAAtlB,KAAAslB,GAGA90C,GAAAgX,YAAA,SAAA+9B,EAAAC,EAAAC,EAAArwD,GAIA,IAAA4Y,EAAAu3C,EAAAlqC,KAAAmqC,EAAAD,EACAr6D,EAAAs6D,EACA7sE,EAAA8sE,EAAApqC,KAAAmqC,EAAAC,EACAC,EAAA5xD,KAAAkC,KAAAlC,KAAAQ,IAAApJ,EAAAqJ,EAAAyZ,EAAAzZ,EAAA,GAAAT,KAAAQ,IAAApJ,EAAAsJ,EAAAwZ,EAAAxZ,EAAA,IACAmxD,EAAA7xD,KAAAkC,KAAAlC,KAAAQ,IAAA3b,EAAA4b,EAAArJ,EAAAqJ,EAAA,GAAAT,KAAAQ,IAAA3b,EAAA6b,EAAAtJ,EAAAsJ,EAAA,IACAoxD,EAAAF,KAAAC,GACAE,EAAAF,GAAAD,EAAAC,GAEAC,EAAAvjD,MAAAujD,GAAA,EAAAA,EACAC,EAAAxjD,MAAAwjD,GAAA,EAAAA,EACA,IAAAC,EAAA1wD,EAAAwwD,EAEAG,EAAA3wD,EAAAywD,EACA,OACA73C,SAAA,CACAzZ,EAAArJ,EAAAqJ,EAAAuxD,GAAAntE,EAAA4b,EAAAyZ,EAAAzZ,GACAC,EAAAtJ,EAAAsJ,EAAAsxD,GAAAntE,EAAA6b,EAAAwZ,EAAAxZ,IAEA7b,KAAA,CACA4b,EAAArJ,EAAAqJ,EAAAwxD,GAAAptE,EAAA4b,EAAAyZ,EAAAzZ,GACAC,EAAAtJ,EAAAsJ,EAAAuxD,GAAAptE,EAAA6b,EAAAwZ,EAAAxZ,MAKAgc,GAAAw1C,QAAAl/C,OAAAk/C,SAAA,MAEAx1C,GAAA+W,oBAAA,SAAA3M,GAKA,IASA9jC,EAAAmvE,EAAAC,EAAAC,EA8BAC,EAAAC,EAAAC,EAAAC,EA6BA57B,EApEA67B,GAAA5rC,GAAA,IAAA10B,IAAA,SAAAkF,GACA,OACAimB,MAAAjmB,EAAA6lB,OACAw1C,OAAA,EACAC,GAAA,KAIAC,EAAAH,EAAAxvE,OAGA,IAAAF,EAAA,EAAiBA,EAAA6vE,IAAe7vE,EAGhC,KAFAovE,EAAAM,EAAA1vE,IAEAu6B,MAAAgK,KAAA,CAOA,GAHA4qC,EAAAnvE,EAAA,EAAA0vE,EAAA1vE,EAAA,SACAqvE,EAAArvE,EAAA6vE,EAAA,EAAAH,EAAA1vE,EAAA,WAEAqvE,EAAA90C,MAAAgK,KAAA,CACA,IAAAurC,EAAAT,EAAA90C,MAAA9c,EAAA2xD,EAAA70C,MAAA9c,EAEA2xD,EAAAO,OAAA,IAAAG,GAAAT,EAAA90C,MAAA7c,EAAA0xD,EAAA70C,MAAA7c,GAAAoyD,EAAA,GAGAX,KAAA50C,MAAAgK,KACA6qC,EAAAQ,GAAAR,EAAAO,QACSN,KAAA90C,MAAAgK,KACT6qC,EAAAQ,GAAAT,EAAAQ,OACS9pE,KAAAizD,KAAAqW,EAAAQ,UAAA9pE,KAAAizD,KAAAsW,EAAAO,QACTP,EAAAQ,GAAA,EAEAR,EAAAQ,IAAAT,EAAAQ,OAAAP,EAAAO,QAAA,EAOA,IAAA3vE,EAAA,EAAiBA,EAAA6vE,EAAA,IAAmB7vE,EACpCovE,EAAAM,EAAA1vE,GACAqvE,EAAAK,EAAA1vE,EAAA,GAEAovE,EAAA70C,MAAAgK,MAAA8qC,EAAA90C,MAAAgK,OAIA7K,GAAAghC,aAAA0U,EAAAO,OAAA,EAAA9pE,KAAAqpE,SACAE,EAAAQ,GAAAP,EAAAO,GAAA,GAIAN,EAAAF,EAAAQ,GAAAR,EAAAO,OACAJ,EAAAF,EAAAO,GAAAR,EAAAO,QACAF,EAAAzyD,KAAAQ,IAAA8xD,EAAA,GAAAtyD,KAAAQ,IAAA+xD,EAAA,KAEA,IAIAC,EAAA,EAAAxyD,KAAAkC,KAAAuwD,GACAL,EAAAQ,GAAAN,EAAAE,EAAAJ,EAAAO,OACAN,EAAAO,GAAAL,EAAAC,EAAAJ,EAAAO,UAMA,IAAA3vE,EAAA,EAAiBA,EAAA6vE,IAAe7vE,GAChCovE,EAAAM,EAAA1vE,IAEAu6B,MAAAgK,OAIA4qC,EAAAnvE,EAAA,EAAA0vE,EAAA1vE,EAAA,QACAqvE,EAAArvE,EAAA6vE,EAAA,EAAAH,EAAA1vE,EAAA,QAEAmvE,MAAA50C,MAAAgK,OACAsP,GAAAu7B,EAAA70C,MAAA9c,EAAA0xD,EAAA50C,MAAA9c,GAAA,EACA2xD,EAAA70C,MAAA9C,sBAAA23C,EAAA70C,MAAA9c,EAAAo2B,EACAu7B,EAAA70C,MAAA5C,sBAAAy3C,EAAA70C,MAAA7c,EAAAm2B,EAAAu7B,EAAAQ,IAGAP,MAAA90C,MAAAgK,OACAsP,GAAAw7B,EAAA90C,MAAA9c,EAAA2xD,EAAA70C,MAAA9c,GAAA,EACA2xD,EAAA70C,MAAA7C,kBAAA03C,EAAA70C,MAAA9c,EAAAo2B,EACAu7B,EAAA70C,MAAA3C,kBAAAw3C,EAAA70C,MAAA7c,EAAAm2B,EAAAu7B,EAAAQ,MAKAl2C,GAAAiX,SAAA,SAAAs8B,EAAAt+D,EAAAu5D,GACA,OAAAA,EACAv5D,GAAAs+D,EAAA/sE,OAAA,EAAA+sE,EAAA,GAAAA,EAAAt+D,EAAA,GAGAA,GAAAs+D,EAAA/sE,OAAA,EAAA+sE,IAAA/sE,OAAA,GAAA+sE,EAAAt+D,EAAA,IAGA+qB,GAAA4K,aAAA,SAAA2oC,EAAAt+D,EAAAu5D,GACA,OAAAA,EACAv5D,GAAA,EAAAs+D,IAAA/sE,OAAA,GAAA+sE,EAAAt+D,EAAA,GAGAA,GAAA,EAAAs+D,EAAA,GAAAA,EAAAt+D,EAAA,IAIA+qB,GAAA6gC,QAAA,SAAAhwB,EAAAnhB,GACA,IAAAskD,EAAA1wD,KAAAkB,MAAAwb,GAAAs0B,MAAAzjB,IACAwlC,EAAAxlC,EAAAvtB,KAAAQ,IAAA,GAAAkwD,GAuBA,OApBAtkD,EACA2mD,EAAA,IACA,EACSA,EAAA,EACT,EACSA,EAAA,EACT,EAEA,GAEOA,GAAA,EACP,EACOA,GAAA,EACP,EACOA,GAAA,EACP,EAEA,IAGA/yD,KAAAQ,IAAA,GAAAkwD,IAIAh0C,GAAA+C,iBACA,qBAAAnN,OACA,SAAAc,GACAA,KAIAd,OAAAgN,uBAAAhN,OAAA0gD,6BAAA1gD,OAAA2gD,0BAAA3gD,OAAA4gD,wBAAA5gD,OAAA6gD,yBAAA,SAAA//C,GACA,OAAAd,OAAA8gD,WAAAhgD,EAAA,SAKAsJ,GAAAmZ,oBAAA,SAAAw9B,EAAAp7C,GACA,IAAAqM,EAAAyD,EACA9+B,EAAAoqE,EAAAC,eAAAD,EACAz2C,EAAAy2C,EAAAtwE,QAAAswE,EAAAE,WACAC,EAAA52C,EAAA62C,wBACAC,EAAAzqE,EAAAyqE,QAEAA,KAAAxwE,OAAA,GACAohC,EAAAovC,EAAA,GAAAC,QACA5rC,EAAA2rC,EAAA,GAAAE,UAEAtvC,EAAAr7B,EAAA0qE,QACA5rC,EAAA9+B,EAAA2qE,SAMA,IAAA3gB,EAAA5kC,WAAAqO,GAAAmf,SAAAjf,EAAA,iBACAs2B,EAAA7kC,WAAAqO,GAAAmf,SAAAjf,EAAA,gBACAu2B,EAAA9kC,WAAAqO,GAAAmf,SAAAjf,EAAA,kBACAw2B,EAAA/kC,WAAAqO,GAAAmf,SAAAjf,EAAA,mBACApnB,EAAAg+D,EAAAh7C,MAAAg7C,EAAAl7C,KAAA26B,EAAAE,EACA59C,EAAAi+D,EAAA/6C,OAAA+6C,EAAAj7C,IAAA26B,EAAAE,EAKA,OAFA9uB,EAAAtkB,KAAAoM,OAAAkY,EAAAkvC,EAAAl7C,KAAA26B,GAAAz9C,EAAAonB,EAAApnB,MAAAyiB,EAAAs5C,yBACAxpC,EAAA/nB,KAAAoM,OAAA2b,EAAAyrC,EAAAj7C,IAAA26B,GAAA39C,EAAAqnB,EAAArnB,OAAA0iB,EAAAs5C,yBACA,CACA9wD,EAAA6jB,EACA5jB,EAAAqnB,IA0DArL,GAAAm3C,mBAAA,SAAAvE,GACA,OAAAD,EAAAC,EAAA,4BAIA5yC,GAAAo3C,oBAAA,SAAAxE,GACA,OAAAD,EAAAC,EAAA,8BAOA5yC,GAAAq3C,kBAAA,SAAAx2B,EAAArV,EAAA8rC,GAEA,OADA9rC,EAAAxL,GAAAmf,SAAA0B,EAAArV,IACA56B,QAAA,QAAA0mE,EAAA5lD,SAAA8Z,EAAA,QAAA9Z,SAAA8Z,EAAA,KAOAxL,GAAAgzC,eAAA,SAAAJ,GACA,IAAA2E,EAAA3E,EAAA7xB,WAMA,OAJAw2B,GAAA,wBAAAA,EAAAvlD,aACAulD,IAAAC,MAGAD,GAGAv3C,GAAAiwB,gBAAA,SAAA2iB,GACA,IAAA/xB,EAAA7gB,GAAAgzC,eAAAJ,GAEA,IAAA/xB,EACA,OAAA+xB,EAAA5xB,YAGA,IAAAA,EAAAH,EAAAG,YAEAuV,EAAAv2B,GAAAq3C,kBAAAx2B,EAAA,eAAAG,GAEAyV,EAAAz2B,GAAAq3C,kBAAAx2B,EAAA,gBAAAG,GAEAv9B,EAAAu9B,EAAAuV,EAAAE,EACAghB,EAAAz3C,GAAAm3C,mBAAAvE,GACA,OAAA/gD,MAAA4lD,GAAAh0D,EAAAH,KAAAD,IAAAI,EAAAg0D,IAGAz3C,GAAAmwB,iBAAA,SAAAyiB,GACA,IAAA/xB,EAAA7gB,GAAAgzC,eAAAJ,GAEA,IAAA/xB,EACA,OAAA+xB,EAAA8E,aAGA,IAAAA,EAAA72B,EAAA62B,aAEAlhB,EAAAx2B,GAAAq3C,kBAAAx2B,EAAA,cAAA62B,GAEAhhB,EAAA12B,GAAAq3C,kBAAAx2B,EAAA,iBAAA62B,GAEA/2D,EAAA+2D,EAAAlhB,EAAAE,EACAihB,EAAA33C,GAAAo3C,oBAAAxE,GACA,OAAA/gD,MAAA8lD,GAAAh3D,EAAA2C,KAAAD,IAAA1C,EAAAg3D,IAGA33C,GAAAmf,SAAA,SAAAY,EAAAb,GACA,OAAAa,EAAA63B,aAAA73B,EAAA63B,aAAA14B,GAAAc,SAAA+yB,YAAAG,iBAAAnzB,EAAA,MAAA83B,iBAAA34B,IAGAlf,GAAAuvB,YAAA,SAAAh0B,EAAAu8C,GACA,IAAAC,EAAAx8C,EAAAs5C,wBAAAiD,GAAA,qBAAAliD,eAAA45B,kBAAA,EAEA,OAAAuoB,EAAA,CAIA,IAAA73C,EAAA3E,EAAA2E,OACArnB,EAAA0iB,EAAA1iB,OACAC,EAAAyiB,EAAAziB,MACAonB,EAAArnB,SAAAk/D,EACA73C,EAAApnB,QAAAi/D,EACAx8C,EAAAC,IAAA5J,MAAAmmD,KAIA73C,EAAA7D,MAAAxjB,QAAAqnB,EAAA7D,MAAAvjB,QACAonB,EAAA7D,MAAAxjB,SAAA,KACAqnB,EAAA7D,MAAAvjB,QAAA,QAKAknB,GAAA8rB,WAAA,SAAAksB,EAAAr4C,EAAAF,GACA,OAAAE,EAAA,IAAAq4C,EAAA,MAAAv4C,GAGAO,GAAAm1B,YAAA,SAAA35B,EAAA+D,EAAA04C,EAAA3zB,GAEA,IAAA3uC,GADA2uC,KAAA,IACA3uC,KAAA2uC,EAAA3uC,MAAA,GACAuiE,EAAA5zB,EAAA6zB,eAAA7zB,EAAA6zB,gBAAA,GAEA7zB,EAAA/kB,WACA5pB,EAAA2uC,EAAA3uC,KAAA,GACAuiE,EAAA5zB,EAAA6zB,eAAA,GACA7zB,EAAA/kB,QAGA/D,EAAA+D,OACA,IAAA64C,EAAA,EACAp4C,GAAAnJ,KAAAohD,EAAA,SAAAI,QAEAvwE,IAAAuwE,GAAA,OAAAA,IAAA,IAAAr4C,GAAAx4B,QAAA6wE,GACAD,EAAAp4C,GAAA6rB,YAAArwB,EAAA7lB,EAAAuiE,EAAAE,EAAAC,GACSr4C,GAAAx4B,QAAA6wE,IAGTr4C,GAAAnJ,KAAAwhD,EAAA,SAAAC,QAEAxwE,IAAAwwE,GAAA,OAAAA,GAAAt4C,GAAAx4B,QAAA8wE,KACAF,EAAAp4C,GAAA6rB,YAAArwB,EAAA7lB,EAAAuiE,EAAAE,EAAAE,QAKA,IAAAC,EAAAL,EAAA1xE,OAAA,EAEA,GAAA+xE,EAAAN,EAAAzxE,OAAA,CACA,QAAAF,EAAA,EAAuBA,EAAAiyE,EAAWjyE,WAClCqP,EAAAuiE,EAAA5xE,IAGA4xE,EAAAv9D,OAAA,EAAA49D,GAGA,OAAAH,GAGAp4C,GAAA6rB,YAAA,SAAArwB,EAAA7lB,EAAAuiE,EAAAE,EAAAvtE,GACA,IAAAgmE,EAAAl7D,EAAA9K,GAWA,OATAgmE,IACAA,EAAAl7D,EAAA9K,GAAA2wB,EAAAqwB,YAAAhhD,GAAAiO,MACAo/D,EAAA7vE,KAAAwC,IAGAgmE,EAAAuH,IACAA,EAAAvH,GAGAuH,GAGAp4C,GAAA05B,mBAAA,SAAAue,GACA,IAAAO,EAAA,EAQA,OAPAx4C,GAAAnJ,KAAAohD,EAAA,SAAAI,GACAr4C,GAAAx4B,QAAA6wE,IACAA,EAAA7xE,OAAAgyE,IACAA,EAAAH,EAAA7xE,UAIAgyE,GAGAx4C,GAAAj1B,MAAA8qB,EAGK,SAAA/vB,GAML,OAJAA,aAAA2yE,iBACA3yE,EAAAg5B,GAAAO,OAAAd,cAGA1I,EAAA/vB,IATA,SAAAA,GAEA,OADAiU,QAAAC,MAAA,uBACAlU,GAUAk6B,GAAAsG,cAAA,SAAAoyC,GAEA,OAAAA,aAAAC,eAAAD,aAAAD,eAAAC,EAAA14C,GAAAj1B,MAAA2tE,GAAAtkD,SAAA,IAAAD,OAAA,IAAApD,aAiyIA6nD,GACA3lB,GAAA4lB,UAAA7kB,GACAf,GAAA6lB,UAAAh3C,GACAmxB,GAAA8lB,iBAAA52C,GACA8wB,GAAAt3C,eACAs3C,GAAAxvB,kBAAA+D,GACAyrB,GAAAh1C,SAAA6gB,GACAm0B,GAAA9yB,QAAAqB,GACAyxB,GAAAjtB,YACAitB,GAAA+lB,YAAAz+B,GACA0Y,GAAAgmB,QAAA39B,GACA2X,GAAAhR,YACAgR,GAAAt6C,QAAA+qC,GACAuP,GAAAimB,MAAA5iB,GACArD,GAAAkmB,aAAA10B,GACAwO,GAAAmmB,MAAAllB,GACAjB,GAAAomB,QAAA9qB,GAEA0E,GAAA54C,QAAAwc,KAAAuN,GAAA,SAAAxS,EAAAxkB,GACA6lD,GAAAkmB,aAAAx0B,kBAAAv3C,EAAAwkB,IAAAotC,aAIArmD,GACAA,GAAAhL,eAAA+V,KACAuvC,GAAAt6C,QAAAkrC,SAAAlrC,GAAA+K,KAIAuvC,GAAAhR,SAAA5hB,aACA,IAAAi5C,GAAArmB,GA8FA,MA5FA,qBAAAr9B,SACAA,OAAAs5B,MAAA+D,IAYAA,GAAA/D,MAAA+D,GASAA,GAAAsc,OAAA52D,GAAAC,OAAA84D,SASAze,GAAA6e,MAAAn5D,GAAAg5B,MAAA+/B,SASAze,GAAAsmB,cAAAtmB,GAAAt6C,QAUAs6C,GAAAumB,WAAAvmB,GAAA9yB,QAAAnI,OAAA,IASAi7B,GAAAwmB,cAAAxmB,GAAA54C,QAAA6lB,OASA+yB,GAAAymB,cAAAzmB,GAAAgmB,QASAhmB,GAAA0mB,gBAAA1a,GAQAhM,GAAA54C,QAAAwc,KAAA,0EAAA+iD,GACA3mB,GAAA2mB,GAAA,SAAAp+C,EAAAq+C,GACA,WAAA5mB,GAAAz3B,EAAAy3B,GAAA54C,QAAAsd,MAAAkiD,GAAA,GAA6E,CAC7EzsE,KAAAwsE,EAAArkD,OAAA,GAAAukD,cAAAF,EAAAvqD,MAAA,SAIAiqD,GAlxb8DS,CAAA,WAC9D,IACA,OAAa7yE,EAAQ,KAChB,MAAAqF,KAHyD,qBCP9D,IAAAwI,EAAgB7N,EAAQ,KACxB8yE,EAAiB9yE,EAAQ,KACzB+yE,EAAkB/yE,EAAQ,KAC1BgzE,EAAehzE,EAAQ,KACvBizE,EAAejzE,EAAQ,KACvBkzE,EAAelzE,EAAQ,KAUvB,SAAAmzE,EAAArlE,GACA,IAAAW,EAAAxJ,KAAAyJ,SAAA,IAAAb,EAAAC,GACA7I,KAAAX,KAAAmK,EAAAnK,KAIA6uE,EAAA/tE,UAAA4I,MAAA8kE,EACAK,EAAA/tE,UAAA,OAAA2tE,EACAI,EAAA/tE,UAAAuB,IAAAqsE,EACAG,EAAA/tE,UAAA8I,IAAA+kE,EACAE,EAAA/tE,UAAAwB,IAAAssE,EACArxE,EAAAC,QAAAqxE,iBCUAtxE,EAAAC,QAJA,SAAAlD,EAAA2Y,GACA,OAAA3Y,IAAA2Y,GAAA3Y,OAAA2Y,wBCjCA,IAAAkB,EAAiBzY,EAAQ,KACzBgvB,EAAehvB,EAAQ,KAIvBozE,EAAA,yBACAC,EAAA,oBACAC,EAAA,6BACAC,EAAA,iBA8BA1xE,EAAAC,QAXA,SAAAlD,GACA,IAAAowB,EAAApwB,GACA,SAKA,IAAAoF,EAAAyU,EAAA7Z,GACA,OAAAoF,GAAAqvE,GAAArvE,GAAAsvE,GAAAtvE,GAAAovE,GAAApvE,GAAAuvE,qBCnCA,SAAAp7C,GACA,IAAA32B,EAAA,iBAAA22B,QAAAt5B,iBAAAs5B,EACAt2B,EAAAC,QAAAN,oCCDA,IAGAgyE,EAHA5xE,SAAAwD,UAGA0lB,SAuBAjpB,EAAAC,QAdA,SAAAsC,GACA,SAAAA,EAAA,CACA,IACA,OAAAovE,EAAAxuE,KAAAZ,GACK,MAAAiB,IAEL,IACA,OAAAjB,EAAA,GACK,MAAAiB,KAGL,2BCxBA,IAAAouE,EAAezzE,EAAQ,KACvB0zE,EAAgB1zE,EAAQ,KACxB2zE,EAAe3zE,EAAQ,KAIvB4zE,EAAA,EACAC,EAAA,EA2EAhyE,EAAAC,QA5DA,SAAAsM,EAAAmJ,EAAAC,EAAAC,EAAAq8D,EAAAp8D,GACA,IAAAq8D,EAAAv8D,EAAAo8D,EACAI,EAAA5lE,EAAA9O,OACA20E,EAAA18D,EAAAjY,OAEA,GAAA00E,GAAAC,KAAAF,GAAAE,EAAAD,GACA,SAIA,IAAA1rC,EAAA5wB,EAAA/Q,IAAAyH,GAEA,GAAAk6B,GAAA5wB,EAAA/Q,IAAA4Q,GACA,OAAA+wB,GAAA/wB,EAGA,IAAAxJ,GAAA,EACAc,GAAA,EACAqlE,EAAA18D,EAAAq8D,EAAA,IAAAJ,OAAA7yE,EAIA,IAHA8W,EAAA9Q,IAAAwH,EAAAmJ,GACAG,EAAA9Q,IAAA2Q,EAAAnJ,KAEAL,EAAAimE,GAAA,CACA,IAAAG,EAAA/lE,EAAAL,GACAqmE,EAAA78D,EAAAxJ,GAEA,GAAA0J,EACA,IAAA48D,EAAAN,EAAAt8D,EAAA28D,EAAAD,EAAApmE,EAAAwJ,EAAAnJ,EAAAsJ,GAAAD,EAAA08D,EAAAC,EAAArmE,EAAAK,EAAAmJ,EAAAG,GAGA,QAAA9W,IAAAyzE,EAAA,CACA,GAAAA,EACA,SAGAxlE,GAAA,EACA,MAIA,GAAAqlE,GACA,IAAAR,EAAAn8D,EAAA,SAAA68D,EAAAE,GACA,IAAAX,EAAAO,EAAAI,KAAAH,IAAAC,GAAAN,EAAAK,EAAAC,EAAA58D,EAAAC,EAAAC,IACA,OAAAw8D,EAAA/yE,KAAAmzE,KAEO,CACPzlE,GAAA,EACA,YAEK,GAAAslE,IAAAC,IAAAN,EAAAK,EAAAC,EAAA58D,EAAAC,EAAAC,GAAA,CACL7I,GAAA,EACA,OAMA,OAFA6I,EAAA,OAAAtJ,GACAsJ,EAAA,OAAAH,GACA1I,oBC/EA,IAAA0lE,EAAsBv0E,EAAQ,KAC9BqX,EAAmBrX,EAAQ,KAI3Bw0E,EAAA31E,OAAAuG,UAGAqB,EAAA+tE,EAAA/tE,eAGAguE,EAAAD,EAAAC,qBAoBAC,EAAAH,EAAA,WACA,OAAAl1E,UADA,IAECk1E,EAAA,SAAA31E,GACD,OAAAyY,EAAAzY,IAAA6H,EAAAzB,KAAApG,EAAA,YAAA61E,EAAAzvE,KAAApG,EAAA,WAEAiD,EAAAC,QAAA4yE,oBCpCA,SAAA7yE,GAAA,IAAAF,EAAW3B,EAAQ,KACnB20E,EAAgB30E,EAAQ,KAIxB40E,EAA4C9yE,MAAA+yE,UAAA/yE,EAG5CgzE,EAAAF,GAAA,iBAAA/yE,SAAAgzE,UAAAhzE,EAMAkzE,EAHAD,KAAAhzE,UAAA8yE,EAGAjzE,EAAAozE,YAAAn0E,EAsBAo0E,GAnBAD,IAAAC,cAAAp0E,IAmBA+zE,EACA9yE,EAAAC,QAAAkzE,wCCpCA,IAAA38D,EAAA,iBAGA48D,EAAA,mBAgBApzE,EAAAC,QANA,SAAAlD,EAAAU,GACA,IAAA4G,SAAAtH,EAEA,SADAU,EAAA,MAAAA,EAAA+Y,EAAA/Y,KACA,UAAA4G,GAAA,UAAAA,GAAA+uE,EAAAz8D,KAAA5Z,QAAA,GAAAA,EAAA,MAAAA,EAAAU,oBCjBA,IAAA41E,EAAuBl1E,EAAQ,KAC/Bm1E,EAAgBn1E,EAAQ,KACxBo1E,EAAep1E,EAAQ,KAIvBq1E,EAAAD,KAAAE,aAmBAA,EAAAD,EAAAF,EAAAE,GAAAH,EACArzE,EAAAC,QAAAwzE,mBC1BA,IAAAC,EAAiBv1E,EAAQ,KACzBw1E,EAAex1E,EAAQ,KAgCvB6B,EAAAC,QAJA,SAAAlD,GACA,aAAAA,GAAA42E,EAAA52E,EAAAU,UAAAi2E,EAAA32E,qBC9BA,IAAAowB,EAAehvB,EAAQ,KAevB6B,EAAAC,QAJA,SAAAlD,GACA,OAAAA,QAAAowB,EAAApwB,mBCOAiD,EAAAC,QAVA,SAAAnD,EAAA82E,GACA,gBAAAtxE,GACA,aAAAA,GAIAA,EAAAxF,KAAA82E,SAAA70E,IAAA60E,GAAA92E,KAAAE,OAAAsF,uBCfA,IAAAuxE,EAAe11E,EAAQ,KACvB21E,EAAY31E,EAAQ,KAuBpB6B,EAAAC,QAZA,SAAAqC,EAAAyxE,GAKA,IAHA,IAAA7nE,EAAA,EACAzO,GAFAs2E,EAAAF,EAAAE,EAAAzxE,IAEA7E,OAEA,MAAA6E,GAAA4J,EAAAzO,GACA6E,IAAAwxE,EAAAC,EAAA7nE,OAGA,OAAAA,MAAAzO,EAAA6E,OAAAvD,oBCrBA,IAAAN,EAAcN,EAAQ,KACtB61E,EAAY71E,EAAQ,KACpB81E,EAAmB91E,EAAQ,KAC3B8qB,EAAe9qB,EAAQ,KAmBvB6B,EAAAC,QARA,SAAAlD,EAAAuF,GACA,OAAA7D,EAAA1B,GACAA,EAGAi3E,EAAAj3E,EAAAuF,GAAA,CAAAvF,GAAAk3E,EAAAhrD,EAAAlsB,mCCnBA,IAAA8D,EAAA1C,EAAA,GAAA2C,EAAA3C,EAAA,IAAA6M,EAAA7M,EAAA,GAAA8M,EAAA9M,EAAAgD,EAAA6J,GAAAE,EAAA/M,EAAA,GAAAgN,EAAAhN,EAAAgD,EAAA+J,GAAAE,EAAAjN,EAAA,IAAAkN,EAAAlN,EAAAgD,EAAAiK,GAAAE,EAAAnN,EAAA,IAMAsD,EAAA,CACAU,IAAOmJ,EAAA,EACP1I,UAAauI,EAAAxJ,EAASG,OACtBe,UAAasI,EAAAxJ,EAASW,QAMtB4xE,EAAA,SAAAjxE,GACA,IAAAL,EAAAK,EAAAL,UACAC,EAAAI,EAAAJ,UACAgB,EAAAZ,EAAAd,IACA2B,EAAmB9G,OAAA8D,EAAA,EAAA9D,CAA6BiG,EAAA,iCAEhDiB,EAAgBlH,OAAAsO,EAAA,EAAAtO,CAAgBqO,IAAUzI,EAAA,eAAAC,GAC1C,OAASoI,EAAAtJ,EAAKoC,cAAAF,EAAoB7G,OAAA6D,EAAA,EAAA7D,CAAQ,GAAG8G,EAAA,CAC7ClB,UAAAsB,MAIAgwE,EAAAzyE,YACAyyE,EAAA1vE,aAjBA,CACArC,IAAA,OAiBe9D,EAAA,mEC7Bf,SAAA2B,GAI8DA,EAAAC,QAC7D,WACD,aAEA,IAAAk0E,EAmHAC,EAjHA,SAAAC,IACA,OAAAF,EAAA7uE,MAAA,KAAA9H,WASA,SAAAiB,EAAAuhE,GACA,OAAAA,aAAAxhE,OAAA,mBAAAxB,OAAAuG,UAAA0lB,SAAA9lB,KAAA68D,GAGA,SAAA7yC,EAAA6yC,GAGA,aAAAA,GAAA,oBAAAhjE,OAAAuG,UAAA0lB,SAAA9lB,KAAA68D,GAmBA,SAAAsU,EAAAtU,GACA,gBAAAA,EAGA,SAAAxnC,EAAAwnC,GACA,wBAAAA,GAAA,oBAAAhjE,OAAAuG,UAAA0lB,SAAA9lB,KAAA68D,GAGA,SAAAuU,EAAAvU,GACA,OAAAA,aAAAtmC,MAAA,kBAAA18B,OAAAuG,UAAA0lB,SAAA9lB,KAAA68D,GAGA,SAAArzD,EAAApO,EAAAqvB,GACA,IACArwB,EADAu/B,EAAA,GAGA,IAAAv/B,EAAA,EAAeA,EAAAgB,EAAAd,SAAgBF,EAC/Bu/B,EAAAx9B,KAAAsuB,EAAArvB,EAAAhB,OAGA,OAAAu/B,EAGA,SAAA03C,EAAA7yE,EAAA0Y,GACA,OAAArd,OAAAuG,UAAAqB,eAAAzB,KAAAxB,EAAA0Y,GAGA,SAAA4U,EAAAttB,EAAA0Y,GACA,QAAA9c,KAAA8c,EACAm6D,EAAAn6D,EAAA9c,KACAoE,EAAApE,GAAA8c,EAAA9c,IAYA,OARAi3E,EAAAn6D,EAAA,cACA1Y,EAAAsnB,SAAA5O,EAAA4O,UAGAurD,EAAAn6D,EAAA,aACA1Y,EAAAkiE,QAAAxpD,EAAAwpD,SAGAliE,EAGA,SAAA8yE,EAAAzU,EAAAtV,EAAAgqB,EAAAC,GACA,OAAAC,GAAA5U,EAAAtV,EAAAgqB,EAAAC,GAAA,GAAAE,MAuBA,SAAAC,EAAA34D,GAKA,OAJA,MAAAA,EAAA44D,MACA54D,EAAA44D,IApBA,CACAC,OAAA,EACAC,aAAA,GACAC,YAAA,GACAC,UAAA,EACAC,cAAA,EACAC,WAAA,EACAC,aAAA,KACAC,eAAA,EACAC,iBAAA,EACAC,KAAA,EACAC,gBAAA,GACAC,SAAA,KACAC,SAAA,EACAC,iBAAA,IASA15D,EAAA44D,IAsBA,SAAAvrD,EAAArN,GACA,SAAAA,EAAA25D,SAAA,CACA,IAAAC,EAAAjB,EAAA34D,GACA65D,EAAA5B,EAAAjxE,KAAA4yE,EAAAL,gBAAA,SAAAn4E,GACA,aAAAA,IAEA04E,GAAAntD,MAAA3M,EAAAtd,GAAAq3E,YAAAH,EAAAZ,SAAA,IAAAY,EAAAf,QAAAe,EAAAT,eAAAS,EAAAI,iBAAAJ,EAAAF,kBAAAE,EAAAV,YAAAU,EAAAR,gBAAAQ,EAAAP,mBAAAO,EAAAJ,UAAAI,EAAAJ,UAAAK,GAMA,GAJA75D,EAAAi6D,UACAH,KAAA,IAAAF,EAAAX,eAAA,IAAAW,EAAAd,aAAAx3E,aAAAsB,IAAAg3E,EAAAM,SAGA,MAAAr5E,OAAAs5E,UAAAt5E,OAAAs5E,SAAAn6D,GAGA,OAAA85D,EAFA95D,EAAA25D,SAAAG,EAMA,OAAA95D,EAAA25D,SAGA,SAAAS,EAAAR,GACA,IAAA55D,EAAAs4D,EAAAprC,KAQA,OANA,MAAA0sC,EACA9mD,EAAA6lD,EAAA34D,GAAA45D,GAEAjB,EAAA34D,GAAAq5D,iBAAA,EAGAr5D,EA/CAi4D,EADA51E,MAAA+E,UAAA6wE,KACA51E,MAAA+E,UAAA6wE,KAEA,SAAAoC,GAIA,IAHA,IAAA36D,EAAA7e,OAAAoG,MACA6qB,EAAApS,EAAApe,SAAA,EAEAF,EAAA,EAAqBA,EAAA0wB,EAAS1wB,IAC9B,GAAAA,KAAAse,GAAA26D,EAAArzE,KAAAC,KAAAyY,EAAAte,KAAAse,GACA,SAIA,UAwCA,IAAA46D,EAAApC,EAAAoC,iBAAA,GAEA,SAAAC,EAAAhwD,EAAAD,GACA,IAAAlpB,EAAA8uB,EAAA9Q,EA0CA,GAxCA+4D,EAAA7tD,EAAAkwD,oBACAjwD,EAAAiwD,iBAAAlwD,EAAAkwD,kBAGArC,EAAA7tD,EAAAxnB,MACAynB,EAAAznB,GAAAwnB,EAAAxnB,IAGAq1E,EAAA7tD,EAAAmwD,MACAlwD,EAAAkwD,GAAAnwD,EAAAmwD,IAGAtC,EAAA7tD,EAAAowD,MACAnwD,EAAAmwD,GAAApwD,EAAAowD,IAGAvC,EAAA7tD,EAAA2vD,WACA1vD,EAAA0vD,QAAA3vD,EAAA2vD,SAGA9B,EAAA7tD,EAAAqwD,QACApwD,EAAAowD,KAAArwD,EAAAqwD,MAGAxC,EAAA7tD,EAAAswD,UACArwD,EAAAqwD,OAAAtwD,EAAAswD,QAGAzC,EAAA7tD,EAAAuwD,WACAtwD,EAAAswD,QAAAvwD,EAAAuwD,SAGA1C,EAAA7tD,EAAAsuD,OACAruD,EAAAquD,IAAAD,EAAAruD,IAGA6tD,EAAA7tD,EAAAwwD,WACAvwD,EAAAuwD,QAAAxwD,EAAAwwD,SAGAR,EAAAh5E,OAAA,EACA,IAAAF,EAAA,EAAiBA,EAAAk5E,EAAAh5E,OAA6BF,IAC9C8uB,EAAAoqD,EAAAl5E,GAGA+2E,EAFA/4D,EAAAkL,EAAA4F,MAGA3F,EAAA2F,GAAA9Q,GAKA,OAAAmL,EAGA,IAAAwwD,GAAA,EAEA,SAAAC,EAAAhmE,GACAulE,EAAAtzE,KAAA+N,GACA/N,KAAAvE,GAAA,IAAA66B,KAAA,MAAAvoB,EAAAtS,GAAAsS,EAAAtS,GAAAq3E,UAAA7sC,KAEAjmC,KAAAomB,YACApmB,KAAAvE,GAAA,IAAA66B,KAAA2P,OAKA,IAAA6tC,IACAA,GAAA,EACA7C,EAAA+C,aAAAh0E,MACA8zE,GAAA,GAIA,SAAAG,EAAAx6E,GACA,OAAAA,aAAAs6E,GAAA,MAAAt6E,GAAA,MAAAA,EAAA85E,iBAGA,SAAAW,EAAA9kE,GACA,OAAAA,EAAA,EAEA+H,KAAAs8C,KAAArkD,IAAA,EAEA+H,KAAAkB,MAAAjJ,GAIA,SAAA+kE,EAAAC,GACA,IAAAC,GAAAD,EACAz6E,EAAA,EAMA,OAJA,IAAA06E,GAAArqD,SAAAqqD,KACA16E,EAAAu6E,EAAAG,IAGA16E,EAIA,SAAA26E,EAAAC,EAAAC,EAAAC,GACA,IAGAt6E,EAHA0wB,EAAA1T,KAAAD,IAAAq9D,EAAAl6E,OAAAm6E,EAAAn6E,QACAq6E,EAAAv9D,KAAA2nB,IAAAy1C,EAAAl6E,OAAAm6E,EAAAn6E,QACAs6E,EAAA,EAGA,IAAAx6E,EAAA,EAAeA,EAAA0wB,EAAS1wB,KACxBs6E,GAAAF,EAAAp6E,KAAAq6E,EAAAr6E,KAAAs6E,GAAAN,EAAAI,EAAAp6E,MAAAg6E,EAAAK,EAAAr6E,MACAw6E,IAIA,OAAAA,EAAAD,EAGA,SAAAzW,EAAA2W,IACA,IAAA3D,EAAA4D,6BAAA,qBAAAjnE,iBAAAqwD,MACArwD,QAAAqwD,KAAA,wBAAA2W,GAIA,SAAA5iE,EAAA4iE,EAAApqD,GACA,IAAAsqD,GAAA,EACA,OAAAjpD,EAAA,WAKA,GAJA,MAAAolD,EAAA8D,oBACA9D,EAAA8D,mBAAA,KAAAH,GAGAE,EAAA,CAIA,IAHA,IACA7xD,EADAvgB,EAAA,GAGAvI,EAAA,EAAuBA,EAAAC,UAAAC,OAAsBF,IAAA,CAG7C,GAFA8oB,EAAA,GAEA,kBAAA7oB,UAAAD,GAAA,CAGA,QAAAT,KAFAupB,GAAA,MAAA9oB,EAAA,KAEAC,UAAA,GACA6oB,GAAAvpB,EAAA,KAAAU,UAAA,GAAAV,GAAA,KAGAupB,IAAAC,MAAA,WAEAD,EAAA7oB,UAAAD,GAGAuI,EAAAxG,KAAA+mB,GAGAg7C,EAAA2W,EAAA,gBAAAx5E,MAAA+E,UAAA+iB,MAAAnjB,KAAA2C,GAAA+jC,KAAA,cAAAh3B,OAAAgD,OACAqiE,GAAA,EAGA,OAAAtqD,EAAAtoB,MAAAlC,KAAA5F,YACKowB,GAGL,IA0EAhwB,EA1EAw6E,EAAA,GAEA,SAAAC,EAAAlvD,EAAA6uD,GACA,MAAA3D,EAAA8D,oBACA9D,EAAA8D,mBAAAhvD,EAAA6uD,GAGAI,EAAAjvD,KACAk4C,EAAA2W,GACAI,EAAAjvD,IAAA,GAOA,SAAAuqD,EAAA1T,GACA,OAAAA,aAAAjgE,UAAA,sBAAA/C,OAAAuG,UAAA0lB,SAAA9lB,KAAA68D,GAuBA,SAAAsY,EAAAC,EAAAC,GACA,IACAnsD,EADAyQ,EAAA7N,EAAA,GAAuBspD,GAGvB,IAAAlsD,KAAAmsD,EACAhE,EAAAgE,EAAAnsD,KACAc,EAAAorD,EAAAlsD,KAAAc,EAAAqrD,EAAAnsD,KACAyQ,EAAAzQ,GAAA,GACA4C,EAAA6N,EAAAzQ,GAAAksD,EAAAlsD,IACA4C,EAAA6N,EAAAzQ,GAAAmsD,EAAAnsD,KACS,MAAAmsD,EAAAnsD,GACTyQ,EAAAzQ,GAAAmsD,EAAAnsD,UAEAyQ,EAAAzQ,IAKA,IAAAA,KAAAksD,EACA/D,EAAA+D,EAAAlsD,KAAAmoD,EAAAgE,EAAAnsD,IAAAc,EAAAorD,EAAAlsD,MAEAyQ,EAAAzQ,GAAA4C,EAAA,GAA6B6N,EAAAzQ,KAI7B,OAAAyQ,EAGA,SAAA27C,EAAAtnE,GACA,MAAAA,GACA/N,KAAA2B,IAAAoM,GAzDAkjE,EAAA4D,6BAAA,EACA5D,EAAA8D,mBAAA,KA+DAv6E,EADAZ,OAAAY,KACAZ,OAAAY,KAEA,SAAAf,GACA,IAAAU,EACAu/B,EAAA,GAEA,IAAAv/B,KAAAV,EACA23E,EAAA33E,EAAAU,IACAu/B,EAAAx9B,KAAA/B,GAIA,OAAAu/B,GAiFA,IAAA47C,EAAA,GAEA,SAAAC,EAAAlhB,EAAAmhB,GACA,IAAAC,EAAAphB,EAAAsZ,cACA2H,EAAAG,GAAAH,EAAAG,EAAA,KAAAH,EAAAE,GAAAnhB,EAGA,SAAAqhB,EAAAC,GACA,wBAAAA,EAAAL,EAAAK,IAAAL,EAAAK,EAAAhI,oBAAAhyE,EAGA,SAAAi6E,EAAAC,GACA,IACAC,EACA7sD,EAFA8sD,EAAA,GAIA,IAAA9sD,KAAA4sD,EACAzE,EAAAyE,EAAA5sD,KACA6sD,EAAAJ,EAAAzsD,MAGA8sD,EAAAD,GAAAD,EAAA5sD,IAKA,OAAA8sD,EAGA,IAAAC,EAAA,GAEA,SAAAC,EAAA5hB,EAAA6hB,GACAF,EAAA3hB,GAAA6hB,EAmBA,SAAAC,EAAA/mE,EAAAgnE,EAAAC,GACA,IAAAC,EAAA,GAAAn/D,KAAA2nB,IAAA1vB,GACAmnE,EAAAH,EAAAE,EAAAj8E,OACA44D,EAAA7jD,GAAA,EACA,OAAA6jD,EAAAojB,EAAA,YAAAl/D,KAAAQ,IAAA,GAAAR,KAAAC,IAAA,EAAAm/D,IAAA1wD,WAAAiE,OAAA,GAAAwsD,EAGA,IAAAE,EAAA,uLACAC,EAAA,6CACAC,EAAA,GACAC,EAAA,GAKA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAxsD,GACA,IAAAprB,EAAAorB,EAEA,kBAAAA,IACAprB,EAAA,WACA,OAAAa,KAAAuqB,OAIAssD,IACAF,EAAAE,GAAA13E,GAGA23E,IACAH,EAAAG,EAAA,eACA,OAAAX,EAAAh3E,EAAA+C,MAAAlC,KAAA5F,WAAA08E,EAAA,GAAAA,EAAA,MAIAC,IACAJ,EAAAI,GAAA,WACA,OAAA/2E,KAAAg3E,aAAAD,QAAA53E,EAAA+C,MAAAlC,KAAA5F,WAAAy8E,KAuCA,SAAAI,EAAAl+D,EAAAuuC,GACA,OAAAvuC,EAAAqN,WAIAkhC,EAAA4vB,EAAA5vB,EAAAvuC,EAAAi+D,cACAN,EAAApvB,GAAAovB,EAAApvB,IAhCA,SAAAA,GACA,IACAntD,EACAE,EAXAuiE,EASAzzD,EAAAm+C,EAAAjiC,MAAAmxD,GAIA,IAAAr8E,EAAA,EAAAE,EAAA8O,EAAA9O,OAAsCF,EAAAE,EAAYF,IAClDw8E,EAAAxtE,EAAAhP,IACAgP,EAAAhP,GAAAw8E,EAAAxtE,EAAAhP,IAEAgP,EAAAhP,IAjBAyiE,EAiBAzzD,EAAAhP,IAhBAkrB,MAAA,YACAu3C,EAAA/3D,QAAA,eAGA+3D,EAAA/3D,QAAA,UAgBA,gBAAAsyE,GACA,IACAh9E,EADAi9E,EAAA,GAGA,IAAAj9E,EAAA,EAAiBA,EAAAE,EAAYF,IAC7Bi9E,GAAA9G,EAAAnnE,EAAAhP,IAAAgP,EAAAhP,GAAA4F,KAAAo3E,EAAA7vB,GAAAn+C,EAAAhP,GAGA,OAAAi9E,GAWAC,CAAA/vB,GACAovB,EAAApvB,GAAAvuC,IALAA,EAAAi+D,aAAAM,cAQA,SAAAJ,EAAA5vB,EAAAgqB,GACA,IAAAn3E,EAAA,EAEA,SAAAo9E,EAAA3a,GACA,OAAA0U,EAAAkG,eAAA5a,MAKA,IAFA6Z,EAAAgB,UAAA,EAEAt9E,GAAA,GAAAs8E,EAAAljE,KAAA+zC,IACAA,IAAAziD,QAAA4xE,EAAAc,GACAd,EAAAgB,UAAA,EACAt9E,GAAA,EAGA,OAAAmtD,EAGA,IAAAowB,EAAA,KAEAC,EAAA,OAEAC,EAAA,QAEAC,EAAA,QAEAC,EAAA,aAEAC,EAAA,QAEAC,EAAA,YAEAC,EAAA,gBAEAC,GAAA,UAEAC,GAAA,UAEAC,GAAA,eAEAC,GAAA,MAEAC,GAAA,WAEAC,GAAA,qBAEAC,GAAA,0BAMAC,GAAA,wJACAC,GAAA,GAEA,SAAAC,GAAA9B,EAAA+B,EAAAC,GACAH,GAAA7B,GAAAvG,EAAAsI,KAAA,SAAAE,EAAA9B,GACA,OAAA8B,GAAAD,IAAAD,GAIA,SAAAG,GAAAlC,EAAA9oE,GACA,OAAAqjE,EAAAsH,GAAA7B,GAIA6B,GAAA7B,GAAA9oE,EAAAilE,QAAAjlE,EAAA8lE,SAHA,IAAA/uE,OAQAk0E,GARAnC,EAQAhyE,QAAA,SAAAA,QAAA,+CAAAo0E,EAAA1W,EAAA2W,EAAAC,EAAAC,GACA,OAAA7W,GAAA2W,GAAAC,GAAAC,MAIA,SAAAJ,GAAAvkE,GACA,OAAAA,EAAA5P,QAAA,yBAA0C,QAG1C,IAAAw0E,GAAA,GAEA,SAAAC,GAAAzC,EAAAtsD,GACA,IAAApwB,EACAgF,EAAAorB,EAYA,IAVA,kBAAAssD,IACAA,EAAA,CAAAA,IAGAzhD,EAAA7K,KACAprB,EAAA,SAAAy9D,EAAAzzD,GACAA,EAAAohB,GAAA4pD,EAAAvX,KAIAziE,EAAA,EAAeA,EAAA08E,EAAAx8E,OAAkBF,IACjCk/E,GAAAxC,EAAA18E,IAAAgF,EAIA,SAAAo6E,GAAA1C,EAAAtsD,GACA+uD,GAAAzC,EAAA,SAAAja,EAAAzzD,EAAA4E,EAAA8oE,GACA9oE,EAAAyrE,GAAAzrE,EAAAyrE,IAAA,GACAjvD,EAAAqyC,EAAA7uD,EAAAyrE,GAAAzrE,EAAA8oE,KAIA,SAAA4C,GAAA5C,EAAAja,EAAA7uD,GACA,MAAA6uD,GAAAwU,EAAAiI,GAAAxC,IACAwC,GAAAxC,GAAAja,EAAA7uD,EAAA2rE,GAAA3rE,EAAA8oE,GAIA,IAAA8C,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAiCA,SAAAC,GAAAze,GACA,OAAA0e,GAAA1e,GAAA,QAGA,SAAA0e,GAAA1e,GACA,OAAAA,EAAA,OAAAA,EAAA,SAAAA,EAAA,QApCAib,EAAA,mBACA,IAAA/+D,EAAA7X,KAAA27D,OACA,OAAA9jD,GAAA,QAAAA,EAAA,IAAAA,IAEA++D,EAAA,wBACA,OAAA52E,KAAA27D,OAAA,MAEAib,EAAA,uBACAA,EAAA,wBACAA,EAAA,4BAEArB,EAAA,YAEAU,EAAA,UAEA0C,GAAA,IAAAL,IACAK,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,OAAAR,GAAAN,GACAc,GAAA,QAAAP,GAAAN,GACAa,GAAA,SAAAP,GAAAN,GACAwB,GAAA,mBAAAK,IACAL,GAAA,gBAAA1c,EAAAzzD,GACAA,EAAAwwE,IAAA,IAAA/c,EAAAviE,OAAA42E,EAAAqJ,kBAAA1d,GAAAuX,EAAAvX,KAEA0c,GAAA,cAAA1c,EAAAzzD,GACAA,EAAAwwE,IAAA1I,EAAAqJ,kBAAA1d,KAEA0c,GAAA,aAAA1c,EAAAzzD,GACAA,EAAAwwE,IAAAp0D,SAAAq3C,EAAA,MAYAqU,EAAAqJ,kBAAA,SAAA1d,GACA,OAAAuX,EAAAvX,IAAAuX,EAAAvX,GAAA,cAIA,IAkEAn4D,GAlEA81E,GAAAC,GAAA,eAMA,SAAAA,GAAAnmB,EAAAomB,GACA,gBAAA9gF,GACA,aAAAA,GACA+gF,GAAA16E,KAAAq0D,EAAA16D,GACAs3E,EAAA+C,aAAAh0E,KAAAy6E,GACAz6E,MAEA0B,GAAA1B,KAAAq0D,IAKA,SAAA3yD,GAAAy1E,EAAA9iB,GACA,OAAA8iB,EAAA/wD,UAAA+wD,EAAA17E,GAAA,OAAA07E,EAAAxD,OAAA,UAAAtf,KAAApuB,IAGA,SAAAy0C,GAAAvD,EAAA9iB,EAAA16D,GACAw9E,EAAA/wD,YAAAV,MAAA/rB,KACA,aAAA06D,GAAAgmB,GAAAlD,EAAAxb,SAAA,IAAAwb,EAAA1b,SAAA,KAAA0b,EAAAnZ,OACAmZ,EAAA17E,GAAA,OAAA07E,EAAAxD,OAAA,UAAAtf,GAAA16D,EAAAw9E,EAAA1b,QAAAkf,GAAAhhF,EAAAw9E,EAAA1b,UAEA0b,EAAA17E,GAAA,OAAA07E,EAAAxD,OAAA,UAAAtf,GAAA16D,IA0DA,SAAAghF,GAAAhf,EAAAF,GACA,GAAA/1C,MAAAi2C,IAAAj2C,MAAA+1C,GACA,OAAAx1B,IAGA,IA5BAruB,EA4BAgjE,GAAAnf,GA5BA7jD,EA4BA,IA3BAA,KA6BA,OADA+jD,IAAAF,EAAAmf,GAAA,GACA,IAAAA,EAAAP,GAAA1e,GAAA,SAAAif,EAAA,IAvBAn2E,GADArJ,MAAA+E,UAAAsE,QACArJ,MAAA+E,UAAAsE,QAEA,SAAAo2E,GAEA,IAAA1gF,EAEA,IAAAA,EAAA,EAAiBA,EAAA6F,KAAA3F,SAAiBF,EAClC,GAAA6F,KAAA7F,KAAA0gF,EACA,OAAA1gF,EAIA,UAeAy8E,EAAA,6BACA,OAAA52E,KAAAy7D,QAAA,IAEAmb,EAAA,mBAAAtvB,GACA,OAAAtnD,KAAAg3E,aAAA8D,YAAA96E,KAAAsnD,KAEAsvB,EAAA,oBAAAtvB,GACA,OAAAtnD,KAAAg3E,aAAA+D,OAAA/6E,KAAAsnD,KAGAiuB,EAAA,aAEAU,EAAA,WAEA0C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,eAAAG,EAAAxH,GACA,OAAAA,EAAA0J,iBAAAlC,KAEAH,GAAA,gBAAAG,EAAAxH,GACA,OAAAA,EAAA2J,YAAAnC,KAEAQ,GAAA,oBAAA1c,EAAAzzD,GACAA,EAAAywE,IAAAzF,EAAAvX,GAAA,IAEA0c,GAAA,wBAAA1c,EAAAzzD,EAAA4E,EAAA8oE,GACA,IAAApb,EAAA1tD,EAAA8lE,QAAAqH,YAAAte,EAAAia,EAAA9oE,EAAAilE,SAGA,MAAAvX,EACAtyD,EAAAywE,IAAAne,EAEAiW,EAAA3jE,GAAAmkE,aAAAtV,IAIA,IAAAue,GAAA,gCACAC,GAAA,wFAAAh5E,MAAA,KAUAi5E,GAAA,kDAAAj5E,MAAA,KAsGA,SAAAk5E,GAAAnE,EAAAx9E,GACA,IAAA4hF,EAEA,IAAApE,EAAA/wD,UAEA,OAAA+wD,EAGA,qBAAAx9E,EACA,WAAA4Z,KAAA5Z,GACAA,EAAAw6E,EAAAx6E,QAIA,IAAAy7B,EAFAz7B,EAAAw9E,EAAAH,aAAAkE,YAAAvhF,IAGA,OAAAw9E,EASA,OAJAoE,EAAApkE,KAAAD,IAAAigE,EAAAnZ,OAAA2c,GAAAxD,EAAAxb,OAAAhiE,IAEAw9E,EAAA17E,GAAA,OAAA07E,EAAAxD,OAAA,mBAAAh6E,EAAA4hF,GAEApE,EAGA,SAAAqE,GAAA7hF,GACA,aAAAA,GACA2hF,GAAAt7E,KAAArG,GACAs3E,EAAA+C,aAAAh0E,MAAA,GACAA,MAEA0B,GAAA1B,KAAA,SAQA,IAAAy7E,GAAAhD,GAsBAiD,GAAAjD,GAsBA,SAAAkD,KACA,SAAAC,EAAAr9E,EAAA0Y,GACA,OAAAA,EAAA5c,OAAAkE,EAAAlE,OAGA,IAGAF,EACAg9E,EAJA0E,EAAA,GACAC,EAAA,GACAC,EAAA,GAIA,IAAA5hF,EAAA,EAAeA,EAAA,GAAQA,IAEvBg9E,EAAA9F,EAAA,KAAAl3E,IACA0hF,EAAA3/E,KAAA8D,KAAA86E,YAAA3D,EAAA,KACA2E,EAAA5/E,KAAA8D,KAAA+6E,OAAA5D,EAAA,KACA4E,EAAA7/E,KAAA8D,KAAA+6E,OAAA5D,EAAA,KACA4E,EAAA7/E,KAAA8D,KAAA86E,YAAA3D,EAAA,KASA,IAJA0E,EAAA/sC,KAAA8sC,GACAE,EAAAhtC,KAAA8sC,GACAG,EAAAjtC,KAAA8sC,GAEAzhF,EAAA,EAAeA,EAAA,GAAQA,IACvB0hF,EAAA1hF,GAAA6+E,GAAA6C,EAAA1hF,IACA2hF,EAAA3hF,GAAA6+E,GAAA8C,EAAA3hF,IAGA,IAAAA,EAAA,EAAeA,EAAA,GAAQA,IACvB4hF,EAAA5hF,GAAA6+E,GAAA+C,EAAA5hF,IAGA6F,KAAAg8E,aAAA,IAAAl3E,OAAA,KAAAi3E,EAAAt1C,KAAA,cACAzmC,KAAAi8E,kBAAAj8E,KAAAg8E,aACAh8E,KAAAk8E,mBAAA,IAAAp3E,OAAA,KAAAg3E,EAAAr1C,KAAA,cACAzmC,KAAAm8E,wBAAA,IAAAr3E,OAAA,KAAA+2E,EAAAp1C,KAAA,cAsBA,SAAA21C,GAAAvkE,GACA,IAAAmmD,EAEA,GAAAnmD,EAAA,KAAAA,GAAA,GACA,IAAAnV,EAAAtH,MAAA+E,UAAA+iB,MAAAnjB,KAAA3F,WAEAsI,EAAA,GAAAmV,EAAA,IACAmmD,EAAA,IAAA1nC,UAAA+lD,IAAAn6E,MAAA,KAAAQ,IAEAsnB,SAAAg0C,EAAAse,mBACAte,EAAAue,eAAA1kE,QAGAmmD,EAAA,IAAA1nC,UAAA+lD,IAAAn6E,MAAA,KAAA9H,YAGA,OAAA4jE,EAIA,SAAAwe,GAAA7gB,EAAA8gB,EAAAC,GACA,IACAC,EAAA,EAAAF,EAAAC,EAEAE,GAAA,EAAAR,GAAAzgB,EAAA,EAAAghB,GAAAE,YAAAJ,GAAA,EACA,OAAAG,EAAAD,EAAA,EAIA,SAAAG,GAAAnhB,EAAAH,EAAAiC,EAAAgf,EAAAC,GACA,IAGAK,EACAC,EAJAC,GAAA,EAAAxf,EAAAgf,GAAA,EACAS,EAAAV,GAAA7gB,EAAA8gB,EAAAC,GACAS,EAAA,KAAA3hB,EAAA,GAAAyhB,EAAAC,EAeA,OAXAC,GAAA,EAEAH,EAAA5C,GADA2C,EAAAphB,EAAA,GACAwhB,EACKA,EAAA/C,GAAAze,IACLohB,EAAAphB,EAAA,EACAqhB,EAAAG,EAAA/C,GAAAze,KAEAohB,EAAAphB,EACAqhB,EAAAG,GAGA,CACAxhB,KAAAohB,EACAI,UAAAH,GAIA,SAAAI,GAAAjG,EAAAsF,EAAAC,GACA,IAEAW,EACAN,EAHAG,EAAAV,GAAArF,EAAAxb,OAAA8gB,EAAAC,GACAlhB,EAAArkD,KAAAkB,OAAA8+D,EAAAgG,YAAAD,EAAA,QAeA,OAXA1hB,EAAA,GACAuhB,EAAA5F,EAAAxb,OAAA,EACA0hB,EAAA7hB,EAAA8hB,GAAAP,EAAAN,EAAAC,IACKlhB,EAAA8hB,GAAAnG,EAAAxb,OAAA8gB,EAAAC,IACLW,EAAA7hB,EAAA8hB,GAAAnG,EAAAxb,OAAA8gB,EAAAC,GACAK,EAAA5F,EAAAxb,OAAA,IAEAohB,EAAA5F,EAAAxb,OACA0hB,EAAA7hB,GAGA,CACAA,KAAA6hB,EACA1hB,KAAAohB,GAIA,SAAAO,GAAA3hB,EAAA8gB,EAAAC,GACA,IAAAQ,EAAAV,GAAA7gB,EAAA8gB,EAAAC,GACAa,EAAAf,GAAA7gB,EAAA,EAAA8gB,EAAAC,GACA,OAAAtC,GAAAze,GAAAuhB,EAAAK,GAAA,EA+HA,SAAAC,GAAAC,EAAA1/E,GACA,OAAA0/E,EAAAv6D,MAAAnlB,EAAA,GAAArD,OAAA+iF,EAAAv6D,MAAA,EAAAnlB,IA5HA64E,EAAA,0BACAA,EAAA,6BAEArB,EAAA,YACAA,EAAA,eAEAU,EAAA,UACAA,EAAA,aAEA0C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACA4B,GAAA,6BAAA3c,EAAApB,EAAAztD,EAAA8oE,GACArb,EAAAqb,EAAA/sD,OAAA,MAAAqqD,EAAAvX,KAmCAga,EAAA,kBACAA,EAAA,kBAAAtvB,GACA,OAAAtnD,KAAAg3E,aAAA0G,YAAA19E,KAAAsnD,KAEAsvB,EAAA,mBAAAtvB,GACA,OAAAtnD,KAAAg3E,aAAA2G,cAAA39E,KAAAsnD,KAEAsvB,EAAA,oBAAAtvB,GACA,OAAAtnD,KAAAg3E,aAAA4G,SAAA59E,KAAAsnD,KAEAsvB,EAAA,mBACAA,EAAA,sBAEArB,EAAA,WACAA,EAAA,eACAA,EAAA,kBAEAU,EAAA,UACAA,EAAA,cACAA,EAAA,iBAEA0C,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,cAAAG,EAAAxH,GACA,OAAAA,EAAAuM,iBAAA/E,KAEAH,GAAA,eAAAG,EAAAxH,GACA,OAAAA,EAAAwM,mBAAAhF,KAEAH,GAAA,gBAAAG,EAAAxH,GACA,OAAAA,EAAAyM,cAAAjF,KAEAS,GAAA,6BAAA3c,EAAApB,EAAAztD,EAAA8oE,GACA,IAAApZ,EAAA1vD,EAAA8lE,QAAAmK,cAAAphB,EAAAia,EAAA9oE,EAAAilE,SAGA,MAAAvV,EACAjC,EAAAxgE,EAAAyiE,EAEAiU,EAAA3jE,GAAAglE,eAAAnW,IAGA2c,GAAA,uBAAA3c,EAAApB,EAAAztD,EAAA8oE,GACArb,EAAAqb,GAAA1C,EAAAvX,KAkCA,IAAAqhB,GAAA,2DAAA77E,MAAA,KAOA87E,GAAA,8BAAA97E,MAAA,KAMA+7E,GAAA,uBAAA/7E,MAAA,KAyKAg8E,GAAA3F,GAsBA4F,GAAA5F,GAsBA6F,GAAA7F,GAsBA,SAAA8F,KACA,SAAA3C,EAAAr9E,EAAA0Y,GACA,OAAAA,EAAA5c,OAAAkE,EAAAlE,OAGA,IAIAF,EACAg9E,EACAqH,EACAC,EACAC,EARAC,EAAA,GACA9C,EAAA,GACAC,EAAA,GACAC,EAAA,GAOA,IAAA5hF,EAAA,EAAeA,EAAA,EAAOA,IAEtBg9E,EAAA9F,EAAA,SAAA9V,IAAAphE,GACAqkF,EAAAx+E,KAAA09E,YAAAvG,EAAA,IACAsH,EAAAz+E,KAAA29E,cAAAxG,EAAA,IACAuH,EAAA1+E,KAAA49E,SAAAzG,EAAA,IACAwH,EAAAziF,KAAAsiF,GACA3C,EAAA3/E,KAAAuiF,GACA3C,EAAA5/E,KAAAwiF,GACA3C,EAAA7/E,KAAAsiF,GACAzC,EAAA7/E,KAAAuiF,GACA1C,EAAA7/E,KAAAwiF,GAUA,IALAC,EAAA7vC,KAAA8sC,GACAC,EAAA/sC,KAAA8sC,GACAE,EAAAhtC,KAAA8sC,GACAG,EAAAjtC,KAAA8sC,GAEAzhF,EAAA,EAAeA,EAAA,EAAOA,IACtB0hF,EAAA1hF,GAAA6+E,GAAA6C,EAAA1hF,IACA2hF,EAAA3hF,GAAA6+E,GAAA8C,EAAA3hF,IACA4hF,EAAA5hF,GAAA6+E,GAAA+C,EAAA5hF,IAGA6F,KAAA4+E,eAAA,IAAA95E,OAAA,KAAAi3E,EAAAt1C,KAAA,cACAzmC,KAAA6+E,oBAAA7+E,KAAA4+E,eACA5+E,KAAA8+E,kBAAA9+E,KAAA4+E,eACA5+E,KAAA++E,qBAAA,IAAAj6E,OAAA,KAAAg3E,EAAAr1C,KAAA,cACAzmC,KAAAg/E,0BAAA,IAAAl6E,OAAA,KAAA+2E,EAAAp1C,KAAA,cACAzmC,KAAAi/E,wBAAA,IAAAn6E,OAAA,KAAA65E,EAAAl4C,KAAA,cAIA,SAAAy4C,KACA,OAAAl/E,KAAAm/E,QAAA,OAuBA,SAAA5M,GAAAsE,EAAAuI,GACAxI,EAAAC,EAAA,eACA,OAAA72E,KAAAg3E,aAAAzE,SAAAvyE,KAAAm/E,QAAAn/E,KAAAq/E,UAAAD,KAWA,SAAAE,GAAAxG,EAAAxH,GACA,OAAAA,EAAAiO,eA9BA3I,EAAA,uBACAA,EAAA,eAAAsI,IACAtI,EAAA,eANA,WACA,OAAA52E,KAAAm/E,SAAA,KAMAvI,EAAA,qBACA,SAAAsI,GAAAh9E,MAAAlC,MAAAm2E,EAAAn2E,KAAAq/E,UAAA,KAEAzI,EAAA,uBACA,SAAAsI,GAAAh9E,MAAAlC,MAAAm2E,EAAAn2E,KAAAq/E,UAAA,GAAAlJ,EAAAn2E,KAAAw/E,UAAA,KAEA5I,EAAA,qBACA,SAAA52E,KAAAm/E,QAAAhJ,EAAAn2E,KAAAq/E,UAAA,KAEAzI,EAAA,uBACA,SAAA52E,KAAAm/E,QAAAhJ,EAAAn2E,KAAAq/E,UAAA,GAAAlJ,EAAAn2E,KAAAw/E,UAAA,KASAjN,GAAA,QACAA,GAAA,QAEAgD,EAAA,YAEAU,EAAA,WAMA0C,GAAA,IAAA2G,IACA3G,GAAA,IAAA2G,IACA3G,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,MAAAX,GACAW,GAAA,QAAAV,GACAU,GAAA,MAAAX,GACAW,GAAA,QAAAV,GACAqB,GAAA,WAAAQ,IACAR,GAAA,oBAAA1c,EAAAzzD,EAAA4E,GACA,IAAA0xE,EAAAtL,EAAAvX,GACAzzD,EAAA2wE,IAAA,KAAA2F,EAAA,EAAAA,IAEAnG,GAAA,mBAAA1c,EAAAzzD,EAAA4E,GACAA,EAAA2xE,MAAA3xE,EAAA8lE,QAAA8L,KAAA/iB,GACA7uD,EAAA6xE,UAAAhjB,IAEA0c,GAAA,oBAAA1c,EAAAzzD,EAAA4E,GACA5E,EAAA2wE,IAAA3F,EAAAvX,GACA8U,EAAA3jE,GAAAklE,SAAA,IAEAqG,GAAA,eAAA1c,EAAAzzD,EAAA4E,GACA,IAAAmpC,EAAA0lB,EAAAviE,OAAA,EACA8O,EAAA2wE,IAAA3F,EAAAvX,EAAA9yC,OAAA,EAAAotB,IACA/tC,EAAA4wE,IAAA5F,EAAAvX,EAAA9yC,OAAAotB,IACAw6B,EAAA3jE,GAAAklE,SAAA,IAEAqG,GAAA,iBAAA1c,EAAAzzD,EAAA4E,GACA,IAAA8xE,EAAAjjB,EAAAviE,OAAA,EACAylF,EAAAljB,EAAAviE,OAAA,EACA8O,EAAA2wE,IAAA3F,EAAAvX,EAAA9yC,OAAA,EAAA+1D,IACA12E,EAAA4wE,IAAA5F,EAAAvX,EAAA9yC,OAAA+1D,EAAA,IACA12E,EAAA6wE,IAAA7F,EAAAvX,EAAA9yC,OAAAg2D,IACApO,EAAA3jE,GAAAklE,SAAA,IAEAqG,GAAA,eAAA1c,EAAAzzD,EAAA4E,GACA,IAAAmpC,EAAA0lB,EAAAviE,OAAA,EACA8O,EAAA2wE,IAAA3F,EAAAvX,EAAA9yC,OAAA,EAAAotB,IACA/tC,EAAA4wE,IAAA5F,EAAAvX,EAAA9yC,OAAAotB,MAEAoiC,GAAA,iBAAA1c,EAAAzzD,EAAA4E,GACA,IAAA8xE,EAAAjjB,EAAAviE,OAAA,EACAylF,EAAAljB,EAAAviE,OAAA,EACA8O,EAAA2wE,IAAA3F,EAAAvX,EAAA9yC,OAAA,EAAA+1D,IACA12E,EAAA4wE,IAAA5F,EAAAvX,EAAA9yC,OAAA+1D,EAAA,IACA12E,EAAA6wE,IAAA7F,EAAAvX,EAAA9yC,OAAAg2D,MAwBA,IAmBAC,GAnBAC,GAAAxF,GAAA,YACAyF,GAAA,CACAC,SAr3CA,CACAC,QAAA,gBACAC,QAAA,mBACAC,SAAA,eACAC,QAAA,oBACAC,SAAA,sBACAC,SAAA,KAg3CAhJ,eAx2CA,CACAiJ,IAAA,YACAC,GAAA,SACAC,EAAA,aACAC,GAAA,eACAC,IAAA,sBACAC,KAAA,6BAm2CAxJ,YAl1CA,eAm1CAP,QA70CA,KA80CAgK,uBA70CA,UA80CAC,aAx0CA,CACAC,OAAA,QACAC,KAAA,SACAzsE,EAAA,gBACA0sE,GAAA,aACApoE,EAAA,WACAqoE,GAAA,aACA5sE,EAAA,UACA6sE,GAAA,WACArmF,EAAA,QACAsmF,GAAA,UACAC,EAAA,UACAC,GAAA,YACA3pE,EAAA,SACA4pE,GAAA,YA2zCA1G,OAAAK,GACAN,YAAAO,GACA7f,KAhhBA,CACAihB,IAAA,EAEAC,IAAA,GA8gBAkB,SAAAK,GACAP,YAAAS,GACAR,cAAAO,GACAwD,cA7BA,iBAgCAC,GAAA,GACAC,GAAA,GAGA,SAAAC,GAAAnoF,GACA,OAAAA,IAAAi0E,cAAA9oE,QAAA,SAAAnL,EAwCA,SAAAooF,GAAA/7D,GACA,IAAAg8D,EAAA,KAEA,IAAAJ,GAAA57D,IAAA,qBAAAnpB,QAAAC,QACA,IACAklF,EAAAhC,GAAAiC,OAEQ,eAAA5hF,EAAA,IAAAqP,MAAA,wCAAArP,EAAA6hF,KAAA,mBAAA7hF,EAAA,GACR8hF,GAAAH,GACO,MAAA3hF,IAGP,OAAAuhF,GAAA57D,GAMA,SAAAm8D,GAAAxoF,EAAAqV,GACA,IAAAvF,EAoBA,OAlBA9P,KAEA8P,EADA0nE,EAAAniE,GACAozE,GAAAzoF,GAEA0oF,GAAA1oF,EAAAqV,IAKAgxE,GAAAv2E,EAEA,qBAAAoE,iBAAAqwD,MAEArwD,QAAAqwD,KAAA,UAAAvkE,EAAA,2CAKAqmF,GAAAiC,MAGA,SAAAI,GAAAr8D,EAAAhY,GACA,UAAAA,EAAA,CACA,IAAAujE,EACA6D,EAAA8K,GAGA,GAFAlyE,EAAAs0E,KAAAt8D,EAEA,MAAA47D,GAAA57D,GACAkvD,EAAA,kQACAE,EAAAwM,GAAA57D,GAAAu8D,aACO,SAAAv0E,EAAAw0E,aACP,SAAAZ,GAAA5zE,EAAAw0E,cACApN,EAAAwM,GAAA5zE,EAAAw0E,cAAAD,YACS,CAGT,UAFAhR,EAAAwQ,GAAA/zE,EAAAw0E,eAaA,OARAX,GAAA7zE,EAAAw0E,gBACAX,GAAA7zE,EAAAw0E,cAAA,IAGAX,GAAA7zE,EAAAw0E,cAAArmF,KAAA,CACA6pB,OACAhY,WAEA,KAVAonE,EAAA7D,EAAAgR,QA2BA,OAZAX,GAAA57D,GAAA,IAAAsvD,EAAAH,EAAAC,EAAApnE,IAEA6zE,GAAA77D,IACA67D,GAAA77D,GAAAjrB,QAAA,SAAA8c,GACAwqE,GAAAxqE,EAAAmO,KAAAnO,EAAA7J,UAOAm0E,GAAAn8D,GACA47D,GAAA57D,GAIA,cADA47D,GAAA57D,GACA,KAqCA,SAAAo8D,GAAAzoF,GACA,IAAA43E,EAMA,GAJA53E,KAAAm6E,SAAAn6E,EAAAm6E,QAAAmO,QACAtoF,IAAAm6E,QAAAmO,QAGAtoF,EACA,OAAAqmF,GAGA,IAAA1kF,EAAA3B,GAAA,CAIA,GAFA43E,EAAAwQ,GAAApoF,GAGA,OAAA43E,EAGA53E,EAAA,CAAAA,GAGA,OAtLA,SAAA8oF,GAOA,IANA,IACAl7C,EACAtrC,EACAs1E,EACAlvE,EAJAjI,EAAA,EAMAA,EAAAqoF,EAAAnoF,QAAA,CAMA,IALA+H,EAAAy/E,GAAAW,EAAAroF,IAAAiI,MAAA,KACAklC,EAAAllC,EAAA/H,OAEA2B,GADAA,EAAA6lF,GAAAW,EAAAroF,EAAA,KACA6B,EAAAoG,MAAA,UAEAklC,EAAA,IAGA,GAFAgqC,EAAAwQ,GAAA1/E,EAAA8gB,MAAA,EAAAokB,GAAAb,KAAA,MAGA,OAAA6qC,EAGA,GAAAt1E,KAAA3B,QAAAitC,GAAAgtC,EAAAlyE,EAAApG,GAAA,IAAAsrC,EAAA,EAEA,MAGAA,IAGAntC,IAGA,OAAA4lF,GAuJA0C,CAAA/oF,GAOA,SAAAgpF,GAAA3pE,GACA,IAAAg5D,EACAxzE,EAAAwa,EAAA2gE,GAoBA,OAlBAn7E,IAAA,IAAAmzE,EAAA34D,GAAAg5D,WACAA,EAAAxzE,EAAAq7E,IAAA,GAAAr7E,EAAAq7E,IAAA,GAAAA,GAAAr7E,EAAAs7E,IAAA,GAAAt7E,EAAAs7E,IAAAc,GAAAp8E,EAAAo7E,IAAAp7E,EAAAq7E,KAAAC,GAAAt7E,EAAAu7E,IAAA,GAAAv7E,EAAAu7E,IAAA,SAAAv7E,EAAAu7E,MAAA,IAAAv7E,EAAAw7E,KAAA,IAAAx7E,EAAAy7E,KAAA,IAAAz7E,EAAA07E,KAAAH,GAAAv7E,EAAAw7E,IAAA,GAAAx7E,EAAAw7E,IAAA,GAAAA,GAAAx7E,EAAAy7E,IAAA,GAAAz7E,EAAAy7E,IAAA,GAAAA,GAAAz7E,EAAA07E,IAAA,GAAA17E,EAAA07E,IAAA,IAAAA,IAAA,EAEAvI,EAAA34D,GAAA4pE,qBAAA5Q,EAAA4H,IAAA5H,EAAA8H,MACA9H,EAAA8H,IAGAnI,EAAA34D,GAAA6pE,iBAAA,IAAA7Q,IACAA,EAAAmI,IAGAxI,EAAA34D,GAAA8pE,mBAAA,IAAA9Q,IACAA,EAAAoI,IAGAzI,EAAA34D,GAAAg5D,YAGAh5D,EAIA,SAAAjH,GAAAvT,EAAA0Y,EAAA5U,GACA,aAAA9D,EACAA,EAGA,MAAA0Y,EACAA,EAGA5U,EAkBA,SAAAygF,GAAA/0E,GACA,IAAA5T,EACA6jE,EAEA+kB,EACAC,EACAC,EAHArmB,EAAA,GAKA,IAAA7uD,EAAAtS,GAAA,CA4BA,IAxBAsnF,EA3BA,SAAAh1E,GAEA,IAAAm1E,EAAA,IAAA5sD,KAAA26C,EAAA16C,OAEA,OAAAxoB,EAAAo1E,QACA,CAAAD,EAAA5G,iBAAA4G,EAAAE,cAAAF,EAAAG,cAGA,CAAAH,EAAAI,cAAAJ,EAAAK,WAAAL,EAAAM,WAmBAC,CAAA11E,GAEAA,EAAAyrE,IAAA,MAAAzrE,EAAA2rE,GAAAG,KAAA,MAAA9rE,EAAA2rE,GAAAE,KAuDA,SAAA7rE,GACA,IAAAuJ,EAAAosE,EAAAloB,EAAAiC,EAAAgf,EAAAC,EAAAiH,EAAAC,EAGA,UAFAtsE,EAAAvJ,EAAAyrE,IAEAqK,IAAA,MAAAvsE,EAAAwsE,GAAA,MAAAxsE,EAAAysE,EACAtH,EAAA,EACAC,EAAA,EAKAgH,EAAA5xE,GAAAwF,EAAAusE,GAAA91E,EAAA2rE,GAAAC,IAAAyD,GAAA4G,KAAA,KAAAroB,MACAH,EAAA1pD,GAAAwF,EAAAwsE,EAAA,KACArmB,EAAA3rD,GAAAwF,EAAAysE,EAAA,IAEA,GAAAtmB,EAAA,KACAmmB,GAAA,OAEK,CACLnH,EAAA1uE,EAAA8lE,QAAAoQ,MAAAxH,IACAC,EAAA3uE,EAAA8lE,QAAAoQ,MAAAvH,IACA,IAAAwH,EAAA9G,GAAA4G,KAAAvH,EAAAC,GACAgH,EAAA5xE,GAAAwF,EAAA6sE,GAAAp2E,EAAA2rE,GAAAC,IAAAuK,EAAAvoB,MAEAH,EAAA1pD,GAAAwF,IAAA4sE,EAAA1oB,MAEA,MAAAlkD,EAAAtc,IAEAyiE,EAAAnmD,EAAAtc,GAEA,GAAAyiE,EAAA,KACAmmB,GAAA,GAEO,MAAAtsE,EAAAlX,GAEPq9D,EAAAnmD,EAAAlX,EAAAq8E,GAEAnlE,EAAAlX,EAAA,GAAAkX,EAAAlX,EAAA,KACAwjF,GAAA,IAIAnmB,EAAAgf,EAIAjhB,EAAA,GAAAA,EAAA8hB,GAAAoG,EAAAjH,EAAAC,GACAhL,EAAA3jE,GAAA60E,gBAAA,EACK,MAAAgB,EACLlS,EAAA3jE,GAAA80E,kBAAA,GAEAc,EAAA7G,GAAA4G,EAAAloB,EAAAiC,EAAAgf,EAAAC,GACA3uE,EAAA2rE,GAAAC,IAAAgK,EAAAhoB,KACA5tD,EAAAq2E,WAAAT,EAAAxG,WA3GAkH,CAAAt2E,GAIA,MAAAA,EAAAq2E,aACAnB,EAAAnxE,GAAA/D,EAAA2rE,GAAAC,IAAAoJ,EAAApJ,MAEA5rE,EAAAq2E,WAAAhK,GAAA6I,IAAA,IAAAl1E,EAAAq2E,cACA1S,EAAA3jE,GAAA40E,oBAAA,GAGA3kB,EAAAoe,GAAA6G,EAAA,EAAAl1E,EAAAq2E,YACAr2E,EAAA2rE,GAAAE,IAAA5b,EAAAolB,cACAr1E,EAAA2rE,GAAAG,IAAA7b,EAAAqlB,cAQAlpF,EAAA,EAAeA,EAAA,SAAA4T,EAAA2rE,GAAAv/E,KAA+BA,EAC9C4T,EAAA2rE,GAAAv/E,GAAAyiE,EAAAziE,GAAA4oF,EAAA5oF,GAIA,KAAUA,EAAA,EAAOA,IACjB4T,EAAA2rE,GAAAv/E,GAAAyiE,EAAAziE,GAAA,MAAA4T,EAAA2rE,GAAAv/E,GAAA,IAAAA,EAAA,IAAA4T,EAAA2rE,GAAAv/E,GAIA,KAAA4T,EAAA2rE,GAAAI,KAAA,IAAA/rE,EAAA2rE,GAAAK,KAAA,IAAAhsE,EAAA2rE,GAAAM,KAAA,IAAAjsE,EAAA2rE,GAAAO,MACAlsE,EAAAu2E,UAAA,EACAv2E,EAAA2rE,GAAAI,IAAA,GAGA/rE,EAAAtS,IAAAsS,EAAAo1E,QAAA/G,GAn8BA,SAAAvkE,EAAAkB,EAAA/d,EAAAwZ,EAAA+sE,EAAA9sE,EAAA8vE,GAGA,IAAAvmB,EAaA,OAXAnmD,EAAA,KAAAA,GAAA,GAEAmmD,EAAA,IAAA1nC,KAAAze,EAAA,IAAAkB,EAAA/d,EAAAwZ,EAAA+sE,EAAA9sE,EAAA8vE,GAEAv6D,SAAAg0C,EAAAslB,gBACAtlB,EAAAwmB,YAAA3sE,IAGAmmD,EAAA,IAAA1nC,KAAAze,EAAAkB,EAAA/d,EAAAwZ,EAAA+sE,EAAA9sE,EAAA8vE,GAGAvmB,IAm7BA97D,MAAA,KAAA06D,GACAomB,EAAAj1E,EAAAo1E,QAAAp1E,EAAAtS,GAAAohF,YAAA9uE,EAAAtS,GAAAgpF,SAGA,MAAA12E,EAAA2lE,MACA3lE,EAAAtS,GAAAipF,cAAA32E,EAAAtS,GAAAkpF,gBAAA52E,EAAA2lE,MAGA3lE,EAAAu2E,WACAv2E,EAAA2rE,GAAAI,IAAA,IAIA/rE,EAAAyrE,IAAA,qBAAAzrE,EAAAyrE,GAAAx+E,GAAA+S,EAAAyrE,GAAAx+E,IAAAgoF,IACAtR,EAAA3jE,GAAA0kE,iBAAA,IA+DA,IAAAmS,GAAA,mJACAC,GAAA,8IACAC,GAAA,wBACAC,GAAA,wCAA6C,iCAAmC,kCAAqC,6BAAkC,8BAA0C,yBAAsB,+BAA0C,qBACjQ,6BAA6B,4BAA8B,wBAE3DC,GAAA,wQACAC,GAAA,sBAEA,SAAAC,GAAAn3E,GACA,IAAA5T,EACA+X,EAGAizE,EACAC,EACAC,EACAC,EALA5mF,EAAAqP,EAAAlS,GACAwpB,EAAAu/D,GAAAxhE,KAAA1kB,IAAAmmF,GAAAzhE,KAAA1kB,GAMA,GAAA2mB,EAAA,CAGA,IAFAqsD,EAAA3jE,GAAAskE,KAAA,EAEAl4E,EAAA,EAAA+X,EAAA6yE,GAAA1qF,OAAsCF,EAAA+X,EAAO/X,IAC7C,GAAA4qF,GAAA5qF,GAAA,GAAAipB,KAAAiC,EAAA,KACA+/D,EAAAL,GAAA5qF,GAAA,GACAgrF,GAAA,IAAAJ,GAAA5qF,GAAA,GACA,MAIA,SAAAirF,EAEA,YADAr3E,EAAA2kE,UAAA,GAIA,GAAArtD,EAAA,IACA,IAAAlrB,EAAA,EAAA+X,EAAA8yE,GAAA3qF,OAAwCF,EAAA+X,EAAO/X,IAC/C,GAAA6qF,GAAA7qF,GAAA,GAAAipB,KAAAiC,EAAA,KAEAggE,GAAAhgE,EAAA,SAAA2/D,GAAA7qF,GAAA,GACA,MAIA,SAAAkrF,EAEA,YADAt3E,EAAA2kE,UAAA,GAKA,IAAAyS,GAAA,MAAAE,EAEA,YADAt3E,EAAA2kE,UAAA,GAIA,GAAArtD,EAAA,IACA,IAAAy/D,GAAA1hE,KAAAiC,EAAA,IAIA,YADAtX,EAAA2kE,UAAA,GAFA4S,EAAA,IAOAv3E,EAAAylE,GAAA4R,GAAAC,GAAA,KAAAC,GAAA,IACAC,GAAAx3E,QAEAA,EAAA2kE,UAAA,EAKA,IAAAF,GAAA,0LAYA,SAAAgT,GAAAC,GACA,IAAA9pB,EAAAp2C,SAAAkgE,EAAA,IAEA,OAAA9pB,GAAA,GACA,IAAAA,EACKA,GAAA,IACL,KAAAA,EAGAA,EAwBA,IAAA+pB,GAAA,CACAC,GAAA,EACAC,IAAA,EACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,IACAC,KAAA,KAkBA,SAAAC,GAAAt4E,GACA,IAAAsX,EAAAmtD,GAAApvD,KAAArV,EAAAlS,GAhDAgJ,QAAA,yBAAAA,QAAA,gBAAAA,QAAA,aAAAA,QAAA,cAkDA,GAAAwgB,EAAA,CACA,IAAAihE,EA3EA,SAAAb,EAAAc,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAA/8E,EAAA,CAAA47E,GAAAC,GAAApK,GAAA52E,QAAA8hF,GAAAhhE,SAAAihE,EAAA,IAAAjhE,SAAAkhE,EAAA,IAAAlhE,SAAAmhE,EAAA,KAMA,OAJAC,GACA/8E,EAAA1N,KAAAqpB,SAAAohE,EAAA,KAGA/8E,EAoEAg9E,CAAAvhE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,IAlDA,SAAAwhE,EAAAC,EAAA/4E,GACA,GAAA84E,EAAA,CAEA,IAAAE,EAAA7I,GAAAz5E,QAAAoiF,GACAG,EAAA,IAAA1wD,KAAAwwD,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAArC,SAEA,GAAAsC,IAAAC,EAGA,OAFAtV,EAAA3jE,GAAA0kE,iBAAA,EACA1kE,EAAA2kE,UAAA,GACA,EAIA,SAqCAuU,CAAA5hE,EAAA,GAAAihE,EAAAv4E,GACA,OAGAA,EAAA2rE,GAAA4M,EACAv4E,EAAA2lE,KA1BA,SAAAwT,EAAAC,EAAAC,GACA,GAAAF,EACA,OAAAxB,GAAAwB,GACK,GAAAC,EAEL,SAEA,IAAAE,EAAA9hE,SAAA6hE,EAAA,IACAruE,EAAAsuE,EAAA,IACA7yE,GAAA6yE,EAAAtuE,GAAA,IACA,UAAAvE,EAAAuE,EAgBAuuE,CAAAjiE,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACAtX,EAAAtS,GAAA2gF,GAAAl6E,MAAA,KAAA6L,EAAA2rE,IAEA3rE,EAAAtS,GAAAipF,cAAA32E,EAAAtS,GAAAkpF,gBAAA52E,EAAA2lE,MAEAhC,EAAA3jE,GAAAykE,SAAA,OAEAzkE,EAAA2kE,UAAA,EA2CA,SAAA6S,GAAAx3E,GAEA,GAAAA,EAAAylE,KAAAvC,EAAAsW,SAKA,GAAAx5E,EAAAylE,KAAAvC,EAAAuW,SAAA,CAKAz5E,EAAA2rE,GAAA,GACAhI,EAAA3jE,GAAA6jE,OAAA,EAEA,IACAz3E,EACA2sF,EACAzN,EACAxC,EACA4Q,EALA/oF,EAAA,GAAAqP,EAAAlS,GAMA6rF,EAAAhpF,EAAArE,OACAstF,EAAA,EAGA,IAFAtO,EAAAnC,EAAAnpE,EAAAylE,GAAAzlE,EAAA8lE,SAAAxuD,MAAAmxD,IAAA,GAEAr8E,EAAA,EAAeA,EAAAk/E,EAAAh/E,OAAmBF,IAClC08E,EAAAwC,EAAAl/E,IACA2sF,GAAApoF,EAAA2mB,MAAA0zD,GAAAlC,EAAA9oE,KAAA,WAIA05E,EAAA/oF,EAAAorB,OAAA,EAAAprB,EAAA+F,QAAAqiF,KAEAzsF,OAAA,GACAq3E,EAAA3jE,GAAA+jE,YAAA51E,KAAAurF,GAGA/oF,IAAAwkB,MAAAxkB,EAAA+F,QAAAqiF,KAAAzsF,QACAstF,GAAAb,EAAAzsF,QAIAs8E,EAAAE,IACAiQ,EACApV,EAAA3jE,GAAA6jE,OAAA,EAEAF,EAAA3jE,GAAA8jE,aAAA31E,KAAA26E,GAGA4C,GAAA5C,EAAAiQ,EAAA/4E,IACOA,EAAAilE,UAAA8T,GACPpV,EAAA3jE,GAAA8jE,aAAA31E,KAAA26E,GAKAnF,EAAA3jE,GAAAikE,cAAA0V,EAAAC,EAEAjpF,EAAArE,OAAA,GACAq3E,EAAA3jE,GAAA+jE,YAAA51E,KAAAwC,GAIAqP,EAAA2rE,GAAAI,KAAA,SAAApI,EAAA3jE,GAAAklE,SAAAllE,EAAA2rE,GAAAI,IAAA,IACApI,EAAA3jE,GAAAklE,aAAAt3E,GAGA+1E,EAAA3jE,GAAAukE,gBAAAvkE,EAAA2rE,GAAAx2D,MAAA,GACAwuD,EAAA3jE,GAAAwkE,SAAAxkE,EAAA6xE,UAEA7xE,EAAA2rE,GAAAI,IAKA,SAAAxI,EAAAhW,EAAAiX,GACA,IAAAqV,EAEA,aAAArV,EAEAjX,EAGA,MAAAgW,EAAAuW,aACAvW,EAAAuW,aAAAvsB,EAAAiX,GACK,MAAAjB,EAAAqO,OAELiI,EAAAtW,EAAAqO,KAAApN,KAEAjX,EAAA,KACAA,GAAA,IAGAssB,GAAA,KAAAtsB,IACAA,EAAA,GAGAA,GAGAA,EA9BAwsB,CAAA/5E,EAAA8lE,QAAA9lE,EAAA2rE,GAAAI,IAAA/rE,EAAA6xE,WACAkD,GAAA/0E,GACA20E,GAAA30E,QAhEAs4E,GAAAt4E,QALAm3E,GAAAn3E,GAqKA,SAAAg6E,GAAAh6E,GACA,IAAA6uD,EAAA7uD,EAAAlS,GACAyrD,EAAAv5C,EAAAylE,GAGA,OAFAzlE,EAAA8lE,QAAA9lE,EAAA8lE,SAAAsO,GAAAp0E,EAAA0lE,IAEA,OAAA7W,QAAAjhE,IAAA2rD,GAAA,KAAAsV,EACAuW,EAAA,CACAlB,WAAA,KAIA,kBAAArV,IACA7uD,EAAAlS,GAAA+gE,EAAA7uD,EAAA8lE,QAAAmU,SAAAprB,IAGAqX,EAAArX,GACA,IAAAmX,EAAA2O,GAAA9lB,KACKuU,EAAAvU,GACL7uD,EAAAtS,GAAAmhE,EACKvhE,EAAAisD,GAlFL,SAAAv5C,GACA,IAAAk6E,EAAAC,EAAAC,EAAAhuF,EAAAiuF,EAEA,OAAAr6E,EAAAylE,GAAAn5E,OAGA,OAFAq3E,EAAA3jE,GAAAokE,eAAA,OACApkE,EAAAtS,GAAA,IAAA66B,KAAA2P,MAIA,IAAA9rC,EAAA,EAAeA,EAAA4T,EAAAylE,GAAAn5E,OAAsBF,IACrCiuF,EAAA,EACAH,EAAA3U,EAAA,GAAgCvlE,GAEhC,MAAAA,EAAAo1E,UACA8E,EAAA9E,QAAAp1E,EAAAo1E,SAGA8E,EAAAzU,GAAAzlE,EAAAylE,GAAAr5E,GACAorF,GAAA0C,GAEA7hE,EAAA6hE,KAKAG,GAAA1W,EAAAuW,GAAAjW,cAEAoW,GAAA,GAAA1W,EAAAuW,GAAApW,aAAAx3E,OACAq3E,EAAAuW,GAAAI,MAAAD,GAEA,MAAAD,GAAAC,EAAAD,KACAA,EAAAC,EACAF,EAAAD,IAIAp8D,EAAA9d,EAAAm6E,GAAAD,GA+CAK,CAAAv6E,GACKu5C,EACLi+B,GAAAx3E,GAYA,SAAAA,GACA,IAAA6uD,EAAA7uD,EAAAlS,GAEAq1E,EAAAtU,GACA7uD,EAAAtS,GAAA,IAAA66B,KAAA26C,EAAA16C,OACK46C,EAAAvU,GACL7uD,EAAAtS,GAAA,IAAA66B,KAAAsmC,EAAA6D,WACK,kBAAA7D,EAvPL,SAAA7uD,GACA,IAAAkrE,EAAAgM,GAAA7hE,KAAArV,EAAAlS,IAEA,OAAAo9E,GAKAiM,GAAAn3E,IAEA,IAAAA,EAAA2kE,kBACA3kE,EAAA2kE,SAKA2T,GAAAt4E,IAEA,IAAAA,EAAA2kE,kBACA3kE,EAAA2kE,SAMAzB,EAAAsX,wBAAAx6E,MArBAA,EAAAtS,GAAA,IAAA66B,MAAA2iD,EAAA,IAoPAuP,CAAAz6E,GACK1S,EAAAuhE,IACL7uD,EAAA2rE,GAAAnwE,EAAAqzD,EAAA15C,MAAA,YAAAzpB,GACA,OAAA8rB,SAAA9rB,EAAA,MAEAqpF,GAAA/0E,IACKgc,EAAA6yC,GAxEL,SAAA7uD,GACA,IAAAA,EAAAtS,GAAA,CAIA,IAAAtB,EAAAy7E,EAAA7nE,EAAAlS,IACAkS,EAAA2rE,GAAAnwE,EAAA,CAAApP,EAAAwhE,KAAAxhE,EAAAshE,MAAAthE,EAAAohE,KAAAphE,EAAA6jE,KAAA7jE,EAAAmhE,KAAAnhE,EAAAkhE,OAAAlhE,EAAAiN,OAAAjN,EAAA+gE,aAAA,SAAAzhE,GACA,OAAAA,GAAA8rB,SAAA9rB,EAAA,MAEAqpF,GAAA/0E,IAgEA06E,CAAA16E,GACKqnB,EAAAwnC,GAEL7uD,EAAAtS,GAAA,IAAA66B,KAAAsmC,GAEAqU,EAAAsX,wBAAAx6E,GA9BA26E,CAAA36E,GAGAqY,EAAArY,KACAA,EAAAtS,GAAA,MAGAsS,IA2BA,SAAAyjE,GAAA5U,EAAAtV,EAAAgqB,EAAAC,EAAAoX,GACA,IAAAtmF,EAAA,GAmBA,OAjBA,IAAAivE,IAAA,IAAAA,IACAC,EAAAD,EACAA,OAAA31E,IAGAouB,EAAA6yC,IA3kFA,SAAAnjE,GACA,GAAAG,OAAAgvF,oBACA,WAAAhvF,OAAAgvF,oBAAAnvF,GAAAY,OAEA,IAAAkd,EAEA,IAAAA,KAAA9d,EACA,GAAAA,EAAA+H,eAAA+V,GACA,SAIA,SA+jFAsxE,CAAAjsB,IAAAvhE,EAAAuhE,IAAA,IAAAA,EAAAviE,UACAuiE,OAAAjhE,GAKA0G,EAAAkxE,kBAAA,EACAlxE,EAAA8gF,QAAA9gF,EAAAsxE,OAAAgV,EACAtmF,EAAAoxE,GAAAnC,EACAjvE,EAAAxG,GAAA+gE,EACAv6D,EAAAmxE,GAAAlsB,EACAjlD,EAAA2wE,QAAAzB,EAzFA,SAAAxjE,GACA,IAAA2rB,EAAA,IAAAq6C,EAAA2O,GAAAqF,GAAAh6E,KAQA,OANA2rB,EAAA4qD,WAEA5qD,EAAAt1B,IAAA,OACAs1B,EAAA4qD,cAAA3oF,GAGA+9B,EAiFAovD,CAAAzmF,GAGA,SAAA2hF,GAAApnB,EAAAtV,EAAAgqB,EAAAC,GACA,OAAAC,GAAA5U,EAAAtV,EAAAgqB,EAAAC,GAAA,GApQAN,EAAAsX,wBAAAv2E,EAAA,0VAAAjE,GACAA,EAAAtS,GAAA,IAAA66B,KAAAvoB,EAAAlS,IAAAkS,EAAAo1E,QAAA,cAGAlS,EAAAsW,SAAA,aAGAtW,EAAAuW,SAAA,aAgQA,IAAAuB,GAAA/2E,EAAA,gHACA,IAAAM,EAAA0xE,GAAA9hF,MAAA,KAAA9H,WAEA,OAAA4F,KAAAomB,WAAA9T,EAAA8T,UACA9T,EAAAtS,UAAAsS,EAEA6gE,MAGA6V,GAAAh3E,EAAA,gHACA,IAAAM,EAAA0xE,GAAA9hF,MAAA,KAAA9H,WAEA,OAAA4F,KAAAomB,WAAA9T,EAAA8T,UACA9T,EAAAtS,UAAAsS,EAEA6gE,MAQA,SAAA8V,GAAAz+D,EAAA0+D,GACA,IAAAxvD,EAAAv/B,EAMA,GAJA,IAAA+uF,EAAA7uF,QAAAgB,EAAA6tF,EAAA,MACAA,IAAA,KAGAA,EAAA7uF,OACA,OAAA2pF,KAKA,IAFAtqD,EAAAwvD,EAAA,GAEA/uF,EAAA,EAAeA,EAAA+uF,EAAA7uF,SAAoBF,EACnC+uF,EAAA/uF,GAAAisB,YAAA8iE,EAAA/uF,GAAAqwB,GAAAkP,KACAA,EAAAwvD,EAAA/uF,IAIA,OAAAu/B,EAcA,IAIAyvD,GAAA,+EAkCA,SAAAC,GAAAvzD,GACA,IAAAkgD,EAAAH,EAAA//C,GACAwzD,EAAAtT,EAAApa,MAAA,EACA2tB,EAAAvT,EAAAra,SAAA,EACAqf,EAAAhF,EAAAta,OAAA,EACA8tB,EAAAxT,EAAAva,MAAAua,EAAAyT,SAAA,EACAC,EAAA1T,EAAAxa,KAAA,EACA4jB,EAAApJ,EAAAza,MAAA,EACA+jB,EAAAtJ,EAAA1a,QAAA,EACAmkB,EAAAzJ,EAAA3uE,QAAA,EACAw2D,EAAAmY,EAAA7a,aAAA,EACAl7D,KAAA0yE,SA3CA,SAAA35D,GACA,QAAArf,KAAAqf,EACA,QAAAtU,GAAA1E,KAAAopF,GAAAzvF,IAAA,MAAAqf,EAAArf,IAAAgsB,MAAA3M,EAAArf,IACA,SAMA,IAFA,IAAAgwF,GAAA,EAEAvvF,EAAA,EAAmBA,EAAAgvF,GAAA9uF,SAAqBF,EACxC,GAAA4e,EAAAowE,GAAAhvF,IAAA,CACA,GAAAuvF,EACA,SAGAlkE,WAAAzM,EAAAowE,GAAAhvF,OAAAg6E,EAAAp7D,EAAAowE,GAAAhvF,OACAuvF,GAAA,GAKA,SAsBAC,CAAA5T,GAEA/1E,KAAA4pF,eAAAhsB,EAAA,IAAA4hB,EACA,IAAAH,EACA,IAAAF,EAAA,MAIAn/E,KAAA6pF,OAAAJ,EAAA,EAAAF,EAIAvpF,KAAA8pF,SAAA/O,EAAA,EAAAuO,EAAA,GAAAD,EACArpF,KAAA64B,MAAA,GACA74B,KAAA6zE,QAAAsO,KAEAniF,KAAA+pF,UAGA,SAAAC,GAAAvwF,GACA,OAAAA,aAAA2vF,GAGA,SAAAa,GAAA76E,GACA,OAAAA,EAAA,GACA,EAAA+H,KAAAoM,OAAA,EAAAnU,GAEA+H,KAAAoM,MAAAnU,GAKA,SAAAwyB,GAAAi1C,EAAAqT,GACAtT,EAAAC,EAAA,eACA,IAAAj1C,EAAA5hC,KAAAmqF,YACAl3B,EAAA,IAOA,OALArxB,EAAA,IACAA,KACAqxB,EAAA,KAGAA,EAAAkjB,KAAAv0C,EAAA,OAAAsoD,EAAA/T,IAAAv0C,EAAA,QAIAA,GAAA,SACAA,GAAA,SAEA+2C,GAAA,IAAAH,IACAG,GAAA,KAAAH,IACAc,GAAA,oBAAA1c,EAAAzzD,EAAA4E,GACAA,EAAAo1E,SAAA,EACAp1E,EAAA2lE,KAAA0W,GAAA5R,GAAA5b,KAMA,IAAAytB,GAAA,kBAEA,SAAAD,GAAAE,EAAA5rF,GACA,IAAAo0B,GAAAp0B,GAAA,IAAA2mB,MAAAilE,GAEA,UAAAx3D,EACA,YAGA,IAAA8R,EAAA9R,IAAAz4B,OAAA,OACAkwF,GAAA3lD,EAAA,IAAAvf,MAAAglE,KAAA,UACAhL,EAAA,GAAAkL,EAAA,GAAApW,EAAAoW,EAAA,IACA,WAAAlL,EAAA,QAAAkL,EAAA,GAAAlL,KAIA,SAAAmL,GAAA5tB,EAAAloC,GACA,IAAAgF,EAAA6tB,EAEA,OAAA7yB,EAAAi/C,QACAj6C,EAAAhF,EAAA1L,QACAu+B,GAAA0sB,EAAArX,IAAAuU,EAAAvU,KAAA6D,UAAAujB,GAAApnB,GAAA6D,WAAA/mC,EAAA+mC,UAEA/mC,EAAAj+B,GAAAgvF,QAAA/wD,EAAAj+B,GAAAglE,UAAAlZ,GAEA0pB,EAAA+C,aAAAt6C,GAAA,GACAA,GAEAsqD,GAAApnB,GAAA8tB,QAIA,SAAAC,GAAA5xE,GAGA,WAAA5B,KAAAoM,MAAAxK,EAAAtd,GAAAmvF,oBAAA,IAuJA,SAAAC,KACA,QAAA7qF,KAAAomB,WAAApmB,KAAA2zE,QAAA,IAAA3zE,KAAA4zE,QAlJA3C,EAAA+C,aAAA,aAsJA,IAAA8W,GAAA,2DAIAC,GAAA,sKAEA,SAAAC,GAAApuB,EAAAljE,GACA,IAGAu5D,EACAg4B,EACAC,EALAr1D,EAAA+mC,EAEAv3C,EAAA,KAyDA,OApDA2kE,GAAAptB,GACA/mC,EAAA,CACA0uD,GAAA3nB,EAAAgtB,cACA5uF,EAAA4hE,EAAAitB,MACAtI,EAAA3kB,EAAAktB,SAEK10D,EAAAwnC,IACL/mC,EAAA,GAEAn8B,EACAm8B,EAAAn8B,GAAAkjE,EAEA/mC,EAAA+nC,aAAAhB,IAEKv3C,EAAAylE,GAAA1nE,KAAAw5C,KACL3J,EAAA,MAAA5tC,EAAA,QACAwQ,EAAA,CACAhe,EAAA,EACA7c,EAAAm5E,EAAA9uD,EAAAw0D,KAAA5mB,EACAz+C,EAAA2/D,EAAA9uD,EAAAy0D,KAAA7mB,EACAl6C,EAAAo7D,EAAA9uD,EAAA00D,KAAA9mB,EACAx+C,EAAA0/D,EAAA9uD,EAAA20D,KAAA/mB,EACAsxB,GAAApQ,EAAA8V,GAAA,IAAA5kE,EAAA40D,MAAAhnB,KAGK5tC,EAAA0lE,GAAA3nE,KAAAw5C,KACL3J,EAAA,MAAA5tC,EAAA,QACAwQ,EAAA,CACAhe,EAAAszE,GAAA9lE,EAAA,GAAA4tC,GACAsuB,EAAA4J,GAAA9lE,EAAA,GAAA4tC,GACA37C,EAAA6zE,GAAA9lE,EAAA,GAAA4tC,GACAj4D,EAAAmwF,GAAA9lE,EAAA,GAAA4tC,GACAz+C,EAAA22E,GAAA9lE,EAAA,GAAA4tC,GACAl6C,EAAAoyE,GAAA9lE,EAAA,GAAA4tC,GACAx+C,EAAA02E,GAAA9lE,EAAA,GAAA4tC,KAEK,MAAAp9B,EAELA,EAAA,GACK,kBAAAA,IAAA,SAAAA,GAAA,OAAAA,KACLq1D,EAuCA,SAAAzxD,EAAAnnB,GACA,IAAAonB,EAEA,OAAAD,EAAArT,WAAA9T,EAAA8T,WAOA9T,EAAAk4E,GAAAl4E,EAAAmnB,GAEAA,EAAA2xD,SAAA94E,GACAonB,EAAA2xD,GAAA5xD,EAAAnnB,KAEAonB,EAAA2xD,GAAA/4E,EAAAmnB,IACAmkC,cAAAlkC,EAAAkkC,aACAlkC,EAAAqhD,QAAArhD,EAAAqhD,QAGArhD,GAhBA,CACAkkC,aAAA,EACAmd,OAAA,GA7CAuQ,CAAAtH,GAAAnuD,EAAAxS,MAAA2gE,GAAAnuD,EAAAvS,MACAuS,EAAA,IACA0uD,GAAA2G,EAAAttB,aACA/nC,EAAA0rD,EAAA2J,EAAAnQ,QAGAkQ,EAAA,IAAA7B,GAAAvzD,GAEAm0D,GAAAptB,IAAAwU,EAAAxU,EAAA,aACAquB,EAAApX,QAAAjX,EAAAiX,SAGAoX,EAMA,SAAAE,GAAAI,EAAAt4B,GAIA,IAAAv5B,EAAA6xD,GAAA/lE,WAAA+lE,EAAA1mF,QAAA,UAEA,OAAA6gB,MAAAgU,GAAA,EAAAA,GAAAu5B,EAGA,SAAAo4B,GAAA5xD,EAAAnnB,GACA,IAAAonB,EAAA,GAQA,OAPAA,EAAAqhD,OAAAzoE,EAAAmpD,QAAAhiC,EAAAgiC,QAAA,IAAAnpD,EAAAqpD,OAAAliC,EAAAkiC,QAEAliC,EAAAzQ,QAAA5kB,IAAAs1B,EAAAqhD,OAAA,KAAAyQ,QAAAl5E,MACAonB,EAAAqhD,OAGArhD,EAAAkkC,cAAAtrD,GAAAmnB,EAAAzQ,QAAA5kB,IAAAs1B,EAAAqhD,OAAA,KACArhD,EA2BA,SAAA+xD,GAAAC,EAAA3lE,GACA,gBAAA5N,EAAAwzE,GACA,IAAA3qC,EAYA,OAVA,OAAA2qC,GAAAjmE,OAAAimE,KACA1W,EAAAlvD,EAAA,YAAAA,EAAA,uDAAAA,EAAA,kGACAi7B,EAAA7oC,EACAA,EAAAwzE,EACAA,EAAA3qC,GAKA4qC,GAAA5rF,KADAgrF,GADA7yE,EAAA,kBAAAA,OACAwzE,GACAD,GACA1rF,MAIA,SAAA4rF,GAAAzU,EAAAthD,EAAAg2D,EAAA7X,GACA,IAAApW,EAAA/nC,EAAA+zD,cACAH,EAAAQ,GAAAp0D,EAAAg0D,OACA9O,EAAAkP,GAAAp0D,EAAAi0D,SAEA3S,EAAA/wD,YAKA4tD,EAAA,MAAAA,KAEA+G,GACAO,GAAAnE,EAAAz1E,GAAAy1E,EAAA,SAAA4D,EAAA8Q,GAGApC,GACA/O,GAAAvD,EAAA,OAAAz1E,GAAAy1E,EAAA,QAAAsS,EAAAoC,GAGAjuB,GACAuZ,EAAA17E,GAAAgvF,QAAAtT,EAAA17E,GAAAglE,UAAA7C,EAAAiuB,GAGA7X,GACA/C,EAAA+C,aAAAmD,EAAAsS,GAAA1O,IA3FAiQ,GAAAxgE,GAAA4+D,GAAAjpF,UACA6qF,GAAAc,QA/UA,WACA,OAAAd,GAAA/kD,MA4aA,IAAA7hC,GAAAqnF,GAAA,SACAM,GAAAN,IAAA,cAwJA,SAAAO,GAAAztF,EAAA0Y,GAEA,IAGAg1E,EACAC,EAJAC,EAAA,IAAAl1E,EAAA0kD,OAAAp9D,EAAAo9D,SAAA1kD,EAAAwkD,QAAAl9D,EAAAk9D,SAEA2wB,EAAA7tF,EAAAyqB,QAAA5kB,IAAA+nF,EAAA,UAeA,OAXAl1E,EAAAm1E,EAAA,GACAH,EAAA1tF,EAAAyqB,QAAA5kB,IAAA+nF,EAAA,YAEAD,GAAAj1E,EAAAm1E,MAAAH,KAEAA,EAAA1tF,EAAAyqB,QAAA5kB,IAAA+nF,EAAA,YAEAD,GAAAj1E,EAAAm1E,IAAAH,EAAAG,MAIAD,EAAAD,IAAA,EAuGA,SAAA5a,GAAA53E,GACA,IAAA2yF,EAEA,YAAA1wF,IAAAjC,EACAsG,KAAA6zE,QAAAmO,OAIA,OAFAqK,EAAAlK,GAAAzoF,MAGAsG,KAAA6zE,QAAAwY,GAGArsF,MAhHAixE,EAAAqb,cAAA,uBACArb,EAAAsb,iBAAA,yBAmHA,IAAAC,GAAAx6E,EAAA,2JAAAtY,GACA,YAAAiC,IAAAjC,EACAsG,KAAAg3E,aAEAh3E,KAAAsxE,OAAA53E,KAIA,SAAAs9E,KACA,OAAAh3E,KAAA6zE,QAGA,IAAA4Y,GAAA,IACAC,GAAA,GAAAD,GACAE,GAAA,GAAAD,GACAE,GAAA,QAAAD,GAEA,SAAAE,GAAAC,EAAAC,GACA,OAAAD,EAAAC,OAGA,SAAAC,GAAAn1E,EAAAkB,EAAA/d,GAEA,OAAA6c,EAAA,KAAAA,GAAA,EAEA,IAAAye,KAAAze,EAAA,IAAAkB,EAAA/d,GAAA4xF,GAEA,IAAAt2D,KAAAze,EAAAkB,EAAA/d,GAAAylE,UAIA,SAAAwsB,GAAAp1E,EAAAkB,EAAA/d,GAEA,OAAA6c,EAAA,KAAAA,GAAA,EAEAye,KAAA+lD,IAAAxkE,EAAA,IAAAkB,EAAA/d,GAAA4xF,GAEAt2D,KAAA+lD,IAAAxkE,EAAAkB,EAAA/d,GAyLA,SAAAkyF,GAAArW,EAAAsW,GACAvW,EAAA,GAAAC,IAAAx8E,QAAA,EAAA8yF,GA+CA,SAAAC,GAAAxwB,EAAApB,EAAAiC,EAAAgf,EAAAC,GACA,IAAA2Q,EAEA,aAAAzwB,EACAwgB,GAAAp9E,KAAAy8E,EAAAC,GAAA/gB,MAEA0xB,EAAA/P,GAAA1gB,EAAA6f,EAAAC,GAEAlhB,EAAA6xB,IACA7xB,EAAA6xB,GAOA,SAAA3J,EAAAloB,EAAAiC,EAAAgf,EAAAC,GACA,IAAA4Q,EAAAxQ,GAAA4G,EAAAloB,EAAAiC,EAAAgf,EAAAC,GACA1e,EAAAoe,GAAAkR,EAAA3xB,KAAA,EAAA2xB,EAAAnQ,WAIA,OAHAn9E,KAAA27D,KAAAqC,EAAAse,kBACAt8E,KAAAy7D,MAAAuC,EAAAolB,eACApjF,KAAAg+D,OAAAqlB,cACArjF,MAVAD,KAAAC,KAAA48D,EAAApB,EAAAiC,EAAAgf,EAAAC,IAnEA9F,EAAA,wBACA,OAAA52E,KAAA0jF,WAAA,MAEA9M,EAAA,wBACA,OAAA52E,KAAAutF,cAAA,MAOAL,GAAA,mBACAA,GAAA,oBACAA,GAAA,sBACAA,GAAA,uBAEA3X,EAAA,iBACAA,EAAA,oBAEAU,EAAA,cACAA,EAAA,iBAEA0C,GAAA,IAAAL,IACAK,GAAA,IAAAL,IACAK,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,OAAAR,GAAAN,GACAc,GAAA,OAAAR,GAAAN,GACAc,GAAA,QAAAP,GAAAN,GACAa,GAAA,QAAAP,GAAAN,GACAyB,GAAA,yCAAA3c,EAAApB,EAAAztD,EAAA8oE,GACArb,EAAAqb,EAAA/sD,OAAA,MAAAqqD,EAAAvX,KAEA2c,GAAA,qBAAA3c,EAAApB,EAAAztD,EAAA8oE,GACArb,EAAAqb,GAAA5F,EAAAqJ,kBAAA1d,KA+CAga,EAAA,sBAEArB,EAAA,eAEAU,EAAA,aAEA0C,GAAA,IAAAjB,GACA4B,GAAA,aAAA1c,EAAAzzD,GACAA,EAAAywE,IAAA,GAAAzF,EAAAvX,GAAA,KAQAga,EAAA,0BAEArB,EAAA,YAEAU,EAAA,UAEA0C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACAgB,GAAA,cAAAG,EAAAxH,GAEA,OAAAwH,EAAAxH,EAAAkc,yBAAAlc,EAAAmc,cAAAnc,EAAAoc,iCAEApU,GAAA,WAAAO,IACAP,GAAA,cAAA1c,EAAAzzD,GACAA,EAAA0wE,IAAA1F,EAAAvX,EAAAv3C,MAAA0yD,GAAA,MAGA,IAAA4V,GAAAnT,GAAA,WAEA5D,EAAA,qCAEArB,EAAA,mBAEAU,EAAA,eAEA0C,GAAA,MAAAT,IACAS,GAAA,OAAAf,GACA0B,GAAA,wBAAA1c,EAAAzzD,EAAA4E,GACAA,EAAAq2E,WAAAjQ,EAAAvX,KAUAga,EAAA,yBAEArB,EAAA,cAEAU,EAAA,aAEA0C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACA2B,GAAA,WAAAS,IAEA,IAAA6T,GAAApT,GAAA,cAEA5D,EAAA,yBAEArB,EAAA,cAEAU,EAAA,aAEA0C,GAAA,IAAAZ,GACAY,GAAA,KAAAZ,EAAAJ,GACA2B,GAAA,WAAAU,IAEA,IAmCAnD,GAnCAgX,GAAArT,GAAA,cAqCA,IAnCA5D,EAAA,mBACA,SAAA52E,KAAAk7D,cAAA,OAEA0b,EAAA,wBACA,SAAA52E,KAAAk7D,cAAA,MAEA0b,EAAA,6BACAA,EAAA,0BACA,UAAA52E,KAAAk7D,gBAEA0b,EAAA,2BACA,WAAA52E,KAAAk7D,gBAEA0b,EAAA,4BACA,WAAA52E,KAAAk7D,gBAEA0b,EAAA,6BACA,WAAA52E,KAAAk7D,gBAEA0b,EAAA,8BACA,WAAA52E,KAAAk7D,gBAEA0b,EAAA,+BACA,WAAA52E,KAAAk7D,gBAGAqa,EAAA,oBAEAU,EAAA,kBAEA0C,GAAA,IAAAT,GAAAR,GACAiB,GAAA,KAAAT,GAAAP,GACAgB,GAAA,MAAAT,GAAAN,GAGAf,GAAA,OAAsBA,GAAAx8E,QAAA,EAAmBw8E,IAAA,IACzC8B,GAAA9B,GAAAwB,IAGA,SAAAyV,GAAAlxB,EAAAzzD,GACAA,EAAA8wE,IAAA9F,EAAA,UAAAvX,IAGA,IAAAia,GAAA,IAAmBA,GAAAx8E,QAAA,EAAmBw8E,IAAA,IACtCyC,GAAAzC,GAAAiX,IAIA,IAAAC,GAAAvT,GAAA,mBAEA5D,EAAA,oBACAA,EAAA,qBAUA,IAAAoX,GAAAja,EAAA5zE,UAqFA,SAAA8tF,GAAAvvF,GACA,OAAAA,EArFAsvF,GAAA5pF,OACA4pF,GAAA9N,SAhtBA,SAAAnjB,EAAA3V,GAGA,IAAA7wB,EAAAwmC,GAAAinB,KACAkK,EAAA1D,GAAAj0D,EAAAv2B,MAAAwnD,QAAA,OACAF,EAAA2pB,EAAAkd,eAAAnuF,KAAAkuF,IAAA,WACA9W,EAAAhwB,IAAAkpB,EAAAlpB,EAAAE,IAAAF,EAAAE,GAAAvnD,KAAAC,KAAAu2B,GAAA6wB,EAAAE,IACA,OAAAtnD,KAAAsnD,OAAA8vB,GAAAp3E,KAAAg3E,aAAAkJ,SAAA54B,EAAAtnD,KAAAgkF,GAAAztD,MA0sBAy3D,GAAAhlE,MAvsBA,WACA,WAAA+qD,EAAA/zE,OAusBAguF,GAAAzmC,KA9nBA,SAAAqV,EAAA+Y,EAAAyY,GACA,IAAAC,EAAAC,EAAAlX,EAEA,IAAAp3E,KAAAomB,UACA,OAAA6f,IAKA,KAFAooD,EAAA7D,GAAA5tB,EAAA58D,OAEAomB,UACA,OAAA6f,IAMA,OAHAqoD,EAAA,KAAAD,EAAAlE,YAAAnqF,KAAAmqF,aACAxU,EAAAD,EAAAC,IAGA,WACAyB,EAAA4U,GAAAhsF,KAAAquF,GAAA,GACA,MAEA,YACAjX,EAAA4U,GAAAhsF,KAAAquF,GACA,MAEA,cACAjX,EAAA4U,GAAAhsF,KAAAquF,GAAA,EACA,MAEA,aACAjX,GAAAp3E,KAAAquF,GAAA,IACA,MAGA,aACAjX,GAAAp3E,KAAAquF,GAAA,IACA,MAGA,WACAjX,GAAAp3E,KAAAquF,GAAA,KACA,MAGA,UACAjX,GAAAp3E,KAAAquF,EAAAC,GAAA,MACA,MAGA,WACAlX,GAAAp3E,KAAAquF,EAAAC,GAAA,OACA,MAGA,QACAlX,EAAAp3E,KAAAquF,EAGA,OAAAD,EAAAhX,EAAAlD,EAAAkD,IAqkBA4W,GAAAvmC,MArVA,SAAAkuB,GACA,IAAA5Y,EAGA,QAAAphE,KAFAg6E,EAAAD,EAAAC,KAEA,gBAAAA,IAAA31E,KAAAomB,UACA,OAAApmB,KAGA,IAAAuuF,EAAAvuF,KAAA2zE,OAAAsZ,GAAAD,GAEA,OAAArX,GACA,WACA5Y,EAAAwxB,EAAAvuF,KAAA27D,OAAA,SACA,MAEA,cACAoB,EAAAwxB,EAAAvuF,KAAA27D,OAAA37D,KAAAy7D,QAAAz7D,KAAAy7D,QAAA,SACA,MAEA,YACAsB,EAAAwxB,EAAAvuF,KAAA27D,OAAA37D,KAAAy7D,QAAA,OACA,MAEA,WACAsB,EAAAwxB,EAAAvuF,KAAA27D,OAAA37D,KAAAy7D,QAAAz7D,KAAAg+D,OAAAh+D,KAAAy9D,UAAA,KACA,MAEA,cACAV,EAAAwxB,EAAAvuF,KAAA27D,OAAA37D,KAAAy7D,QAAAz7D,KAAAg+D,QAAAh+D,KAAA09D,aAAA,QACA,MAEA,UACA,WACAX,EAAAwxB,EAAAvuF,KAAA27D,OAAA37D,KAAAy7D,QAAAz7D,KAAAg+D,OAAA,KACA,MAEA,WACAjB,EAAA/8D,KAAAvE,GAAAglE,UACA1D,GAAA4vB,GAAAE,GAAA9vB,GAAA/8D,KAAA2zE,OAAA,EAAA3zE,KAAAmqF,YAAAuC,IAAAC,IAAA,EACA,MAEA,aACA5vB,EAAA/8D,KAAAvE,GAAAglE,UACA1D,GAAA2vB,GAAAG,GAAA9vB,EAAA2vB,IAAA,EACA,MAEA,aACA3vB,EAAA/8D,KAAAvE,GAAAglE,UACA1D,GAAA0vB,GAAAI,GAAA9vB,EAAA0vB,IAAA,EAOA,OAHAzsF,KAAAvE,GAAAgvF,QAAA1tB,GAEAkU,EAAA+C,aAAAh0E,MAAA,GACAA,MA+RAguF,GAAA1mC,OAnfA,SAAAknC,GACAA,IACAA,EAAAxuF,KAAA6qF,QAAA5Z,EAAAsb,iBAAAtb,EAAAqb,eAGA,IAAAlV,EAAAH,EAAAj3E,KAAAwuF,GACA,OAAAxuF,KAAAg3E,aAAAyX,WAAArX,IA8eA4W,GAAA3qE,KA3eA,SAAA05C,EAAA2xB,GACA,OAAA1uF,KAAAomB,YAAA6tD,EAAAlX,MAAA32C,WAAA49D,GAAAjnB,GAAA32C,WACA4kE,GAAA,CACA1nE,GAAAtjB,KACAqjB,KAAA05C,IACOuU,OAAAtxE,KAAAsxE,UAAAqd,UAAAD,GAEP1uF,KAAAg3E,aAAAM,eAqeA0W,GAAAY,QAjeA,SAAAF,GACA,OAAA1uF,KAAAqjB,KAAA2gE,KAAA0K,IAieAV,GAAA1qE,GA9dA,SAAAy5C,EAAA2xB,GACA,OAAA1uF,KAAAomB,YAAA6tD,EAAAlX,MAAA32C,WAAA49D,GAAAjnB,GAAA32C,WACA4kE,GAAA,CACA3nE,KAAArjB,KACAsjB,GAAAy5C,IACOuU,OAAAtxE,KAAAsxE,UAAAqd,UAAAD,GAEP1uF,KAAAg3E,aAAAM,eAwdA0W,GAAAa,MApdA,SAAAH,GACA,OAAA1uF,KAAAsjB,GAAA0gE,KAAA0K,IAodAV,GAAAtsF,IArhGA,SAAAi0E,GAGA,OAAArF,EAAAtwE,KAFA21E,EAAAD,EAAAC,KAGA31E,KAAA21E,KAGA31E,MA+gGAguF,GAAAc,UAvPA,WACA,OAAApd,EAAA1xE,MAAA+xE,UAuPAic,GAAAxC,QA7sBA,SAAA5uB,EAAA+Y,GACA,IAAAoZ,EAAA9a,EAAArX,KAAAonB,GAAApnB,GAEA,SAAA58D,KAAAomB,YAAA2oE,EAAA3oE,aAMA,iBAFAuvD,EAAAD,EAAAC,IAAA,eAGA31E,KAAAygE,UAAAsuB,EAAAtuB,UAEAsuB,EAAAtuB,UAAAzgE,KAAAgpB,QAAAw+B,QAAAmuB,GAAAlV,YAksBAutB,GAAA5C,SA9rBA,SAAAxuB,EAAA+Y,GACA,IAAAoZ,EAAA9a,EAAArX,KAAAonB,GAAApnB,GAEA,SAAA58D,KAAAomB,YAAA2oE,EAAA3oE,aAMA,iBAFAuvD,EAAAD,EAAAC,IAAA,eAGA31E,KAAAygE,UAAAsuB,EAAAtuB,UAEAzgE,KAAAgpB,QAAAy+B,MAAAkuB,GAAAlV,UAAAsuB,EAAAtuB,YAmrBAutB,GAAAgB,UA/qBA,SAAA3rE,EAAAC,EAAAqyD,EAAAsZ,GACA,IAAAC,EAAAjb,EAAA5wD,KAAA2gE,GAAA3gE,GACA8rE,EAAAlb,EAAA3wD,KAAA0gE,GAAA1gE,GAEA,SAAAtjB,KAAAomB,WAAA8oE,EAAA9oE,WAAA+oE,EAAA/oE,cAKA,OADA6oE,KAAA,MACA,GAAAjvF,KAAAwrF,QAAA0D,EAAAvZ,IAAA31E,KAAAorF,SAAA8D,EAAAvZ,MAAA,MAAAsZ,EAAA,GAAAjvF,KAAAorF,SAAA+D,EAAAxZ,IAAA31E,KAAAwrF,QAAA2D,EAAAxZ,MAuqBAqY,GAAAoB,OApqBA,SAAAxyB,EAAA+Y,GACA,IACA0Z,EADAN,EAAA9a,EAAArX,KAAAonB,GAAApnB,GAGA,SAAA58D,KAAAomB,YAAA2oE,EAAA3oE,aAMA,iBAFAuvD,EAAAD,EAAAC,IAAA,eAGA31E,KAAAygE,YAAAsuB,EAAAtuB,WAEA4uB,EAAAN,EAAAtuB,UACAzgE,KAAAgpB,QAAAw+B,QAAAmuB,GAAAlV,WAAA4uB,MAAArvF,KAAAgpB,QAAAy+B,MAAAkuB,GAAAlV,aAupBAutB,GAAAsB,cAnpBA,SAAA1yB,EAAA+Y,GACA,OAAA31E,KAAAovF,OAAAxyB,EAAA+Y,IAAA31E,KAAAwrF,QAAA5uB,EAAA+Y,IAmpBAqY,GAAAuB,eAhpBA,SAAA3yB,EAAA+Y,GACA,OAAA31E,KAAAovF,OAAAxyB,EAAA+Y,IAAA31E,KAAAorF,SAAAxuB,EAAA+Y,IAgpBAqY,GAAA5nE,QAtQA,WACA,OAAAA,EAAApmB,OAsQAguF,GAAAxB,QACAwB,GAAA1c,UACA0c,GAAAhX,cACAgX,GAAA52E,IAAA4xE,GACAgF,GAAA92E,IAAA6xE,GACAiF,GAAAwB,aAxQA,WACA,OAAA3jE,EAAA,GAAoB6lD,EAAA1xE,QAwQpBguF,GAAArsF,IA1hGA,SAAAg0E,EAAAh8E,GACA,qBAAAg8E,EAIA,IAFA,IAAA8Z,EA5TA,SAAAC,GACA,IAAA/Z,EAAA,GAEA,QAAAga,KAAAD,EACA/Z,EAAAz5E,KAAA,CACAm4D,KAAAs7B,EACAzZ,SAAAF,EAAA2Z,KAOA,OAHAha,EAAA7mC,KAAA,SAAAvwC,EAAA0Y,GACA,OAAA1Y,EAAA23E,SAAAj/D,EAAAi/D,WAEAP,EA+SAia,CADAja,EAAAC,EAAAD,IAGAx7E,EAAA,EAAqBA,EAAAs1F,EAAAp1F,OAAwBF,IAC7C6F,KAAAyvF,EAAAt1F,GAAAk6D,MAAAshB,EAAA8Z,EAAAt1F,GAAAk6D,YAKA,GAAAic,EAAAtwE,KAFA21E,EAAAD,EAAAC,KAGA,OAAA31E,KAAA21E,GAAAh8E,GAIA,OAAAqG,MA2gGAguF,GAAAxmC,QAraA,SAAAmuB,GACA,IAAA5Y,EAGA,QAAAphE,KAFAg6E,EAAAD,EAAAC,KAEA,gBAAAA,IAAA31E,KAAAomB,UACA,OAAApmB,KAGA,IAAAuuF,EAAAvuF,KAAA2zE,OAAAsZ,GAAAD,GAEA,OAAArX,GACA,WACA5Y,EAAAwxB,EAAAvuF,KAAA27D,OAAA,KACA,MAEA,cACAoB,EAAAwxB,EAAAvuF,KAAA27D,OAAA37D,KAAAy7D,QAAAz7D,KAAAy7D,QAAA,KACA,MAEA,YACAsB,EAAAwxB,EAAAvuF,KAAA27D,OAAA37D,KAAAy7D,QAAA,GACA,MAEA,WACAsB,EAAAwxB,EAAAvuF,KAAA27D,OAAA37D,KAAAy7D,QAAAz7D,KAAAg+D,OAAAh+D,KAAAy9D,WACA,MAEA,cACAV,EAAAwxB,EAAAvuF,KAAA27D,OAAA37D,KAAAy7D,QAAAz7D,KAAAg+D,QAAAh+D,KAAA09D,aAAA,IACA,MAEA,UACA,WACAX,EAAAwxB,EAAAvuF,KAAA27D,OAAA37D,KAAAy7D,QAAAz7D,KAAAg+D,QACA,MAEA,WACAjB,EAAA/8D,KAAAvE,GAAAglE,UACA1D,GAAA8vB,GAAA9vB,GAAA/8D,KAAA2zE,OAAA,EAAA3zE,KAAAmqF,YAAAuC,IAAAC,IACA,MAEA,aACA5vB,EAAA/8D,KAAAvE,GAAAglE,UACA1D,GAAA8vB,GAAA9vB,EAAA2vB,IACA,MAEA,aACA3vB,EAAA/8D,KAAAvE,GAAAglE,UACA1D,GAAA8vB,GAAA9vB,EAAA0vB,IAOA,OAHAzsF,KAAAvE,GAAAgvF,QAAA1tB,GAEAkU,EAAA+C,aAAAh0E,MAAA,GACAA,MA+WAguF,GAAAjC,YACAiC,GAAArnF,QAvSA,WACA,IAAAoS,EAAA/Y,KACA,OAAA+Y,EAAA4iD,OAAA5iD,EAAA0iD,QAAA1iD,EAAAilD,OAAAjlD,EAAAuiD,OAAAviD,EAAAsiD,SAAAtiD,EAAA3R,SAAA2R,EAAAmiD,gBAsSA8yB,GAAA6B,SAnSA,WACA,IAAA92E,EAAA/Y,KACA,OACAqpF,MAAAtwE,EAAA4iD,OACAof,OAAAhiE,EAAA0iD,QACAuC,KAAAjlD,EAAAilD,OACAmhB,MAAApmE,EAAAomE,QACAE,QAAAtmE,EAAAsmE,UACAG,QAAAzmE,EAAAymE,UACA5hB,aAAA7kD,EAAA6kD,iBA2RAowB,GAAA8B,OA7SA,WACA,WAAAx5D,KAAAt2B,KAAAygE,YA6SAutB,GAAA+B,YAhkBA,SAAAC,GACA,IAAAhwF,KAAAomB,UACA,YAGA,IAAAqrD,GAAA,IAAAue,EACAj3E,EAAA04D,EAAAzxE,KAAAgpB,QAAAyoD,MAAAzxE,KAEA,OAAA+Y,EAAA4iD,OAAA,GAAA5iD,EAAA4iD,OAAA,KACAsb,EAAAl+D,EAAA04D,EAAA,iEAGAnB,EAAAh6C,KAAAn2B,UAAA4vF,aAEAte,EACAzxE,KAAA8vF,SAAAC,cAEA,IAAAz5D,KAAAt2B,KAAAygE,UAAA,GAAAzgE,KAAAmqF,YAAA,KAAA4F,cAAAlrF,QAAA,IAAAoyE,EAAAl+D,EAAA,MAIAk+D,EAAAl+D,EAAA04D,EAAA,8DA4iBAuc,GAAAiC,QAliBA,WACA,IAAAjwF,KAAAomB,UACA,2BAAApmB,KAAAnE,GAAA,OAGA,IAAAsD,EAAA,SACA+wF,EAAA,GAEAlwF,KAAAmwF,YACAhxF,EAAA,IAAAa,KAAAmqF,YAAA,gCACA+F,EAAA,KAGA,IAAAE,EAAA,IAAAjxF,EAAA,MACAw8D,EAAA,GAAA37D,KAAA27D,QAAA37D,KAAA27D,QAAA,qBAEA00B,EAAAH,EAAA,OACA,OAAAlwF,KAAAsnD,OAAA8oC,EAAAz0B,EAFA,wBAEA00B,IAkhBArC,GAAAjlE,OA1RA,WAEA,OAAA/oB,KAAAomB,UAAApmB,KAAA+vF,cAAA,MAyRA/B,GAAAnoE,SAvkBA,WACA,OAAA7lB,KAAAgpB,QAAAsoD,OAAA,MAAAhqB,OAAA,qCAukBA0mC,GAAAsC,KAtTA,WACA,OAAAn5E,KAAAkB,MAAArY,KAAAygE,UAAA,MAsTAutB,GAAAvtB,QA3TA,WACA,OAAAzgE,KAAAvE,GAAAglE,UAAA,KAAAzgE,KAAA4zE,SAAA,IA2TAoa,GAAAuC,aA7QA,WACA,OACA3zB,MAAA58D,KAAAnE,GACAyrD,OAAAtnD,KAAAwzE,GACAlC,OAAAtxE,KAAA6zE,QACA8U,MAAA3oF,KAAA2zE,OACApC,OAAAvxE,KAAAgzE,UAwQAgb,GAAAryB,KAAA4e,GACAyT,GAAA3T,WAjlGA,WACA,OAAAA,GAAAr6E,KAAA27D,SAilGAqyB,GAAAtK,SAhOA,SAAA9mB,GACA,OAAAwwB,GAAArtF,KAAAC,KAAA48D,EAAA58D,KAAAw7D,OAAAx7D,KAAAy9D,UAAAz9D,KAAAg3E,aAAAiN,MAAAxH,IAAAz8E,KAAAg3E,aAAAiN,MAAAvH,MAgOAsR,GAAAT,YA7NA,SAAA3wB,GACA,OAAAwwB,GAAArtF,KAAAC,KAAA48D,EAAA58D,KAAAwpF,UAAAxpF,KAAA09D,aAAA,MA6NAswB,GAAAtyB,QAAAsyB,GAAA1E,SA3KA,SAAA1sB,GACA,aAAAA,EAAAzlD,KAAAs8C,MAAAzzD,KAAAy7D,QAAA,MAAAz7D,KAAAy7D,MAAA,GAAAmB,EAAA,GAAA58D,KAAAy7D,QAAA,IA2KAuyB,GAAAvyB,MAAA+f,GACAwS,GAAArT,YA9zFA,WACA,OAAAA,GAAA36E,KAAA27D,OAAA37D,KAAAy7D,UA8zFAuyB,GAAAxyB,KAAAwyB,GAAAzE,MA1lFA,SAAA3sB,GACA,IAAApB,EAAAx7D,KAAAg3E,aAAAxb,KAAAx7D,MACA,aAAA48D,EAAApB,EAAAx7D,KAAAoE,IAAA,GAAAw4D,EAAApB,GAAA,MAylFAwyB,GAAAxE,QAAAwE,GAAAwC,SAtlFA,SAAA5zB,GACA,IAAApB,EAAA4hB,GAAAp9E,KAAA,KAAAw7D,KACA,aAAAoB,EAAApB,EAAAx7D,KAAAoE,IAAA,GAAAw4D,EAAApB,GAAA,MAqlFAwyB,GAAA1Q,YA3NA,WACA,IAAAmT,EAAAzwF,KAAAg3E,aAAAiN,MAEA,OAAA3G,GAAAt9E,KAAA27D,OAAA80B,EAAAhU,IAAAgU,EAAA/T,MAyNAsR,GAAA0C,eAhOA,WACA,OAAApT,GAAAt9E,KAAA27D,OAAA,MAgOAqyB,GAAAhwB,KAAA2vB,GACAK,GAAAzyB,IAAAyyB,GAAAvE,KAx3EA,SAAA7sB,GACA,IAAA58D,KAAAomB,UACA,aAAAw2C,EAAA58D,KAAAimC,IAGA,IAAAs1B,EAAAv7D,KAAA2zE,OAAA3zE,KAAAvE,GAAAohF,YAAA78E,KAAAvE,GAAAgpF,SAEA,aAAA7nB,GACAA,EArLA,SAAAA,EAAA0U,GACA,wBAAA1U,EACAA,EAGAl3C,MAAAk3C,GAMA,kBAFAA,EAAA0U,EAAA0M,cAAAphB,IAGAA,EAGA,KATAr3C,SAAAq3C,EAAA,IA+KA+zB,CAAA/zB,EAAA58D,KAAAg3E,cACAh3E,KAAAoE,IAAAw4D,EAAArB,EAAA,MAEAA,GA82EAyyB,GAAAvwB,QA12EA,SAAAb,GACA,IAAA58D,KAAAomB,UACA,aAAAw2C,EAAA58D,KAAAimC,IAGA,IAAAw3B,GAAAz9D,KAAAu7D,MAAA,EAAAv7D,KAAAg3E,aAAAiN,MAAAxH,KAAA,EACA,aAAA7f,EAAAa,EAAAz9D,KAAAoE,IAAAw4D,EAAAa,EAAA,MAq2EAuwB,GAAAtwB,WAl2EA,SAAAd,GACA,IAAA58D,KAAAomB,UACA,aAAAw2C,EAAA58D,KAAAimC,IAMA,SAAA22B,EAAA,CACA,IAAAa,EA5LA,SAAAb,EAAA0U,GACA,wBAAA1U,EACA0U,EAAA0M,cAAAphB,GAAA,KAGAl3C,MAAAk3C,GAAA,KAAAA,EAuLAg0B,CAAAh0B,EAAA58D,KAAAg3E,cACA,OAAAh3E,KAAAu7D,IAAAv7D,KAAAu7D,MAAA,EAAAkC,IAAA,GAEA,OAAAz9D,KAAAu7D,OAAA,GAu1EAyyB,GAAA7Q,UAjJA,SAAAvgB,GACA,IAAAugB,EAAAhmE,KAAAoM,OAAAvjB,KAAAgpB,QAAAw+B,QAAA,OAAAxnD,KAAAgpB,QAAAw+B,QAAA,kBACA,aAAAoV,EAAAugB,EAAAn9E,KAAAoE,IAAAw4D,EAAAugB,EAAA,MAgJA6Q,GAAA1yB,KAAA0yB,GAAA7O,MAAAa,GACAgO,GAAA3yB,OAAA2yB,GAAA3O,QAAAuO,GACAI,GAAA5mF,OAAA4mF,GAAAxO,QAAAqO,GACAG,GAAA9yB,YAAA8yB,GAAApwB,aAAAmwB,GACAC,GAAA7D,UA9jCA,SAAAvtB,EAAAi0B,EAAAC,GACA,IACAC,EADAnvD,EAAA5hC,KAAA4zE,SAAA,EAGA,IAAA5zE,KAAAomB,UACA,aAAAw2C,EAAA58D,KAAAimC,IAGA,SAAA22B,EAAA,CACA,qBAAAA,GAGA,WAFAA,EAAAwtB,GAAA5R,GAAA5b,IAGA,OAAA58D,UAEOmX,KAAA2nB,IAAA89B,GAAA,KAAAk0B,IACPl0B,GAAA,IAwBA,OArBA58D,KAAA2zE,QAAAkd,IACAE,EAAApG,GAAA3qF,OAGAA,KAAA4zE,QAAAhX,EACA58D,KAAA2zE,QAAA,EAEA,MAAAod,GACA/wF,KAAAoE,IAAA2sF,EAAA,KAGAnvD,IAAAg7B,KACAi0B,GAAA7wF,KAAAgxF,kBACApF,GAAA5rF,KAAAgrF,GAAApuB,EAAAh7B,EAAA,WACS5hC,KAAAgxF,oBACThxF,KAAAgxF,mBAAA,EACA/f,EAAA+C,aAAAh0E,MAAA,GACAA,KAAAgxF,kBAAA,OAIAhxF,KAEA,OAAAA,KAAA2zE,OAAA/xC,EAAA+oD,GAAA3qF,OAqhCAguF,GAAAvc,IApgCA,SAAAof,GACA,OAAA7wF,KAAAmqF,UAAA,EAAA0G,IAogCA7C,GAAAtD,MAjgCA,SAAAmG,GAUA,OATA7wF,KAAA2zE,SACA3zE,KAAAmqF,UAAA,EAAA0G,GACA7wF,KAAA2zE,QAAA,EAEAkd,GACA7wF,KAAA+rF,SAAApB,GAAA3qF,MAAA,MAIAA,MAw/BAguF,GAAAiD,UAr/BA,WACA,SAAAjxF,KAAA0zE,KACA1zE,KAAAmqF,UAAAnqF,KAAA0zE,MAAA,WACK,qBAAA1zE,KAAAnE,GAAA,CACL,IAAAq1F,EAAA9G,GAAA7R,GAAAv4E,KAAAnE,IAEA,MAAAq1F,EACAlxF,KAAAmqF,UAAA+G,GAEAlxF,KAAAmqF,UAAA,MAIA,OAAAnqF,MAy+BAguF,GAAAmD,qBAt+BA,SAAAv0B,GACA,QAAA58D,KAAAomB,YAIAw2C,IAAAonB,GAAApnB,GAAAutB,YAAA,GACAnqF,KAAAmqF,YAAAvtB,GAAA,SAi+BAoxB,GAAAoD,MA99BA,WACA,OAAApxF,KAAAmqF,YAAAnqF,KAAAgpB,QAAAyyC,MAAA,GAAA0uB,aAAAnqF,KAAAmqF,YAAAnqF,KAAAgpB,QAAAyyC,MAAA,GAAA0uB,aA89BA6D,GAAAmC,QAx8BA,WACA,QAAAnwF,KAAAomB,YAAApmB,KAAA2zE,QAw8BAqa,GAAAqD,YAr8BA,WACA,QAAArxF,KAAAomB,WAAApmB,KAAA2zE,QAq8BAqa,GAAAnD,SACAmD,GAAArF,MAAAkC,GACAmD,GAAAsD,SA7EA,WACA,OAAAtxF,KAAA2zE,OAAA,UA6EAqa,GAAAuD,SA1EA,WACA,OAAAvxF,KAAA2zE,OAAA,iCA0EAqa,GAAAwD,MAAAx/E,EAAA,kDAAA27E,IACAK,GAAAjT,OAAA/oE,EAAA,mDAAAwpE,IACAwS,GAAA3E,MAAAr3E,EAAA,iDAAAuoE,IACAyT,GAAAkC,KAAAl+E,EAAA,2GA/hCA,SAAA4qD,EAAAi0B,GACA,aAAAj0B,GACA,kBAAAA,IACAA,MAGA58D,KAAAmqF,UAAAvtB,EAAAi0B,GACA7wF,OAEAA,KAAAmqF,cAuhCA6D,GAAAyD,aAAAz/E,EAAA,0GAr+BA,WACA,IAAAk/D,EAAAlxE,KAAA0xF,eACA,OAAA1xF,KAAA0xF,cAGA,IAAArvF,EAAA,GAIA,GAHAixE,EAAAjxE,EAAArC,OACAqC,EAAA0lF,GAAA1lF,IAEAq3E,GAAA,CACA,IAAApnE,EAAAjQ,EAAAsxE,OAAAtC,EAAAhvE,EAAAq3E,IAAAsK,GAAA3hF,EAAAq3E,IACA15E,KAAA0xF,cAAA1xF,KAAAomB,WAAAkuD,EAAAjyE,EAAAq3E,GAAApnE,EAAA3L,WAAA,OAEA3G,KAAA0xF,eAAA,EAGA,OAAA1xF,KAAA0xF,gBAm+BA,IAAAC,GAAAtc,EAAAl1E,UA4BA,SAAAyxF,GAAAtqC,EAAAx+C,EAAA+oF,EAAAC,GACA,IAAAxgB,EAAA6Q,KACA1Q,EAAAJ,IAAA1vE,IAAAmwF,EAAAhpF,GACA,OAAAwoE,EAAAugB,GAAApgB,EAAAnqB,GAGA,SAAAyqC,GAAAzqC,EAAAx+C,EAAA+oF,GAQA,GAPAz8D,EAAAkyB,KACAx+C,EAAAw+C,EACAA,OAAA3rD,GAGA2rD,KAAA,GAEA,MAAAx+C,EACA,OAAA8oF,GAAAtqC,EAAAx+C,EAAA+oF,EAAA,SAGA,IAAA13F,EACA6hE,EAAA,GAEA,IAAA7hE,EAAA,EAAeA,EAAA,GAAQA,IACvB6hE,EAAA7hE,GAAAy3F,GAAAtqC,EAAAntD,EAAA03F,EAAA,SAGA,OAAA71B,EAWA,SAAAg2B,GAAAC,EAAA3qC,EAAAx+C,EAAA+oF,GACA,mBAAAI,GACA78D,EAAAkyB,KACAx+C,EAAAw+C,EACAA,OAAA3rD,GAGA2rD,KAAA,KAGAx+C,EADAw+C,EAAA2qC,EAEAA,GAAA,EAEA78D,EAAAkyB,KACAx+C,EAAAw+C,EACAA,OAAA3rD,GAGA2rD,KAAA,IAGA,IAOAntD,EAPAm3E,EAAA6Q,KACAjnD,EAAA+2D,EAAA3gB,EAAA2S,MAAAxH,IAAA,EAEA,SAAA3zE,EACA,OAAA8oF,GAAAtqC,GAAAx+C,EAAAoyB,GAAA,EAAA22D,EAAA,OAIA,IAAA71B,EAAA,GAEA,IAAA7hE,EAAA,EAAeA,EAAA,EAAOA,IACtB6hE,EAAA7hE,GAAAy3F,GAAAtqC,GAAAntD,EAAA+gC,GAAA,EAAA22D,EAAA,OAGA,OAAA71B,EAlGA21B,GAAAzR,SA1/GA,SAAAxmF,EAAAy9E,EAAA5gD,GACA,IAAA6gD,EAAAp3E,KAAAkyF,UAAAx4F,IAAAsG,KAAAkyF,UAAA,SACA,OAAA5hB,EAAA8G,KAAAr3E,KAAAo3E,EAAA5gD,GAAA6gD,GAy/GAua,GAAAna,eA7+GA,SAAA99E,GACA,IAAA4tD,EAAAtnD,KAAAmyF,gBAAAz4F,GACA04F,EAAApyF,KAAAmyF,gBAAAz4F,EAAAosB,eAEA,OAAAwhC,IAAA8qC,EACA9qC,GAGAtnD,KAAAmyF,gBAAAz4F,GAAA04F,EAAAvtF,QAAA,4BAAAsT,GACA,OAAAA,EAAA+K,MAAA,KAEAljB,KAAAmyF,gBAAAz4F,KAm+GAi4F,GAAAra,YA99GA,WACA,OAAAt3E,KAAAqyF,cA89GAV,GAAA5a,QAx9GA,SAAA3nE,GACA,OAAApP,KAAAsyF,SAAAztF,QAAA,KAAAuK,IAw9GAuiF,GAAA3J,SAAAiG,GACA0D,GAAAlD,WAAAR,GACA0D,GAAA3Q,aAt8GA,SAAA5xE,EAAAs/E,EAAAhwF,EAAA6zF,GACA,IAAAnb,EAAAp3E,KAAAwyF,cAAA9zF,GACA,OAAA4xE,EAAA8G,KAAAhoE,EAAAs/E,EAAAhwF,EAAA6zF,GAAAnb,EAAAvyE,QAAA,MAAAuK,IAq8GAuiF,GAAAc,WAl8GA,SAAAlrC,EAAA6vB,GACA,IAAA9vB,EAAAtnD,KAAAwyF,cAAAjrC,EAAA,mBACA,OAAA+oB,EAAAhpB,KAAA8vB,GAAA9vB,EAAAziD,QAAA,MAAAuyE,IAi8GAua,GAAAhwF,IAplHA,SAAAoM,GACA,IAAAkb,EAAA9uB,EAEA,IAAAA,KAAA4T,EAGAuiE,EAFArnD,EAAAlb,EAAA5T,IAGA6F,KAAA7F,GAAA8uB,EAEAjpB,KAAA,IAAA7F,GAAA8uB,EAIAjpB,KAAAsiF,QAAAv0E,EAIA/N,KAAA0tF,+BAAA,IAAA5oF,QAAA9E,KAAAwtF,wBAAAlzF,QAAA0F,KAAAytF,cAAAnzF,QAAA,cAAwIA,SAokHxIq3F,GAAA5W,OAvgGA,SAAAhiE,EAAAuuC,GACA,OAAAvuC,EAIA1d,EAAA2E,KAAA8pF,SAAA9pF,KAAA8pF,QAAA/wE,EAAA0iD,SAAAz7D,KAAA8pF,SAAA9pF,KAAA8pF,QAAA4I,UAAAvX,IAAA5nE,KAAA+zC,GAAA,uBAAAvuC,EAAA0iD,SAHApgE,EAAA2E,KAAA8pF,SAAA9pF,KAAA8pF,QAAA9pF,KAAA8pF,QAAA,YAsgGA6H,GAAA7W,YA9/FA,SAAA/hE,EAAAuuC,GACA,OAAAvuC,EAIA1d,EAAA2E,KAAA2yF,cAAA3yF,KAAA2yF,aAAA55E,EAAA0iD,SAAAz7D,KAAA2yF,aAAAxX,GAAA5nE,KAAA+zC,GAAA,uBAAAvuC,EAAA0iD,SAHApgE,EAAA2E,KAAA2yF,cAAA3yF,KAAA2yF,aAAA3yF,KAAA2yF,aAAA,YA6/FAhB,GAAAzW,YAr8FA,SAAA0X,EAAAtrC,EAAAiqB,GACA,IAAAp3E,EAAAg9E,EAAAyB,EAEA,GAAA54E,KAAA6yF,kBACA,OAtDA,SAAAD,EAAAtrC,EAAAiqB,GACA,IAAAp3E,EACA24F,EACA3b,EACA4b,EAAAH,EAAAI,oBAEA,IAAAhzF,KAAAizF,aAMA,IAJAjzF,KAAAizF,aAAA,GACAjzF,KAAAkzF,iBAAA,GACAlzF,KAAAmzF,kBAAA,GAEAh5F,EAAA,EAAiBA,EAAA,KAAQA,EACzBg9E,EAAA9F,EAAA,KAAAl3E,IACA6F,KAAAmzF,kBAAAh5F,GAAA6F,KAAA86E,YAAA3D,EAAA,IAAA6b,oBACAhzF,KAAAkzF,iBAAA/4F,GAAA6F,KAAA+6E,OAAA5D,EAAA,IAAA6b,oBAIA,OAAAzhB,EACA,QAAAjqB,GAEA,KADAwrC,EAAAruF,GAAA1E,KAAAC,KAAAmzF,kBAAAJ,IACAD,EAAA,MAGA,KADAA,EAAAruF,GAAA1E,KAAAC,KAAAkzF,iBAAAH,IACAD,EAAA,KAGA,QAAAxrC,GAGA,KAFAwrC,EAAAruF,GAAA1E,KAAAC,KAAAmzF,kBAAAJ,IAGAD,GAIA,KADAA,EAAAruF,GAAA1E,KAAAC,KAAAkzF,iBAAAH,IACAD,EAAA,MAIA,KAFAA,EAAAruF,GAAA1E,KAAAC,KAAAkzF,iBAAAH,IAGAD,GAIA,KADAA,EAAAruF,GAAA1E,KAAAC,KAAAmzF,kBAAAJ,IACAD,EAAA,MASA/yF,KAAAC,KAAA4yF,EAAAtrC,EAAAiqB,GAYA,IATAvxE,KAAAizF,eACAjzF,KAAAizF,aAAA,GACAjzF,KAAAkzF,iBAAA,GACAlzF,KAAAmzF,kBAAA,IAMAh5F,EAAA,EAAeA,EAAA,GAAQA,IAAA,CAevB,GAbAg9E,EAAA9F,EAAA,KAAAl3E,IAEAo3E,IAAAvxE,KAAAkzF,iBAAA/4F,KACA6F,KAAAkzF,iBAAA/4F,GAAA,IAAA2K,OAAA,IAAA9E,KAAA+6E,OAAA5D,EAAA,IAAAtyE,QAAA,iBACA7E,KAAAmzF,kBAAAh5F,GAAA,IAAA2K,OAAA,IAAA9E,KAAA86E,YAAA3D,EAAA,IAAAtyE,QAAA,kBAGA0sE,GAAAvxE,KAAAizF,aAAA94F,KACAy+E,EAAA,IAAA54E,KAAA+6E,OAAA5D,EAAA,SAAAn3E,KAAA86E,YAAA3D,EAAA,IACAn3E,KAAAizF,aAAA94F,GAAA,IAAA2K,OAAA8zE,EAAA/zE,QAAA,cAIA0sE,GAAA,SAAAjqB,GAAAtnD,KAAAkzF,iBAAA/4F,GAAAoZ,KAAAq/E,GACA,OAAAz4F,EACO,GAAAo3E,GAAA,QAAAjqB,GAAAtnD,KAAAmzF,kBAAAh5F,GAAAoZ,KAAAq/E,GACP,OAAAz4F,EACO,IAAAo3E,GAAAvxE,KAAAizF,aAAA94F,GAAAoZ,KAAAq/E,GACP,OAAAz4F,IAk6FAw3F,GAAA1W,YA31FA,SAAAnC,GACA,OAAA94E,KAAA6yF,mBACAzhB,EAAApxE,KAAA,iBACA27E,GAAA57E,KAAAC,MAGA84E,EACA94E,KAAAk8E,mBAEAl8E,KAAAg8E,eAGA5K,EAAApxE,KAAA,kBACAA,KAAAg8E,aAAAN,IAGA17E,KAAAk8E,oBAAApD,EAAA94E,KAAAk8E,mBAAAl8E,KAAAg8E,eA40FA2V,GAAA3W,iBAl3FA,SAAAlC,GACA,OAAA94E,KAAA6yF,mBACAzhB,EAAApxE,KAAA,iBACA27E,GAAA57E,KAAAC,MAGA84E,EACA94E,KAAAm8E,wBAEAn8E,KAAAi8E,oBAGA7K,EAAApxE,KAAA,uBACAA,KAAAi8E,kBAAAR,IAGAz7E,KAAAm8E,yBAAArD,EAAA94E,KAAAm8E,wBAAAn8E,KAAAi8E,oBAm2FA0V,GAAAn2B,KAxqFA,SAAA2b,GACA,OAAAiG,GAAAjG,EAAAn3E,KAAAikF,MAAAxH,IAAAz8E,KAAAikF,MAAAvH,KAAAlhB,MAwqFAm2B,GAAAyB,eA1pFA,WACA,OAAApzF,KAAAikF,MAAAvH,KA0pFAiV,GAAA0B,eA/pFA,WACA,OAAArzF,KAAAikF,MAAAxH,KA+pFAkV,GAAA/T,SA5jFA,SAAA7kE,EAAAuuC,GACA,IAAAs2B,EAAAviF,EAAA2E,KAAAszF,WAAAtzF,KAAAszF,UAAAtzF,KAAAszF,UAAAv6E,IAAA,IAAAA,GAAA/Y,KAAAszF,UAAAZ,SAAAn/E,KAAA+zC,GAAA,uBACA,WAAAvuC,EAAAykE,GAAAI,EAAA59E,KAAAikF,MAAAxH,KAAA1jE,EAAA6kE,EAAA7kE,EAAAwiD,OAAAqiB,GA2jFA+T,GAAAjU,YAhjFA,SAAA3kE,GACA,WAAAA,EAAAykE,GAAAx9E,KAAAuzF,aAAAvzF,KAAAikF,MAAAxH,KAAA1jE,EAAA/Y,KAAAuzF,aAAAx6E,EAAAwiD,OAAAv7D,KAAAuzF,cAgjFA5B,GAAAhU,cAvjFA,SAAA5kE,GACA,WAAAA,EAAAykE,GAAAx9E,KAAAwzF,eAAAxzF,KAAAikF,MAAAxH,KAAA1jE,EAAA/Y,KAAAwzF,eAAAz6E,EAAAwiD,OAAAv7D,KAAAwzF,gBAujFA7B,GAAA3T,cA99EA,SAAAyV,EAAAnsC,EAAAiqB,GACA,IAAAp3E,EAAAg9E,EAAAyB,EAEA,GAAA54E,KAAA0zF,oBACA,OApFA,SAAAD,EAAAnsC,EAAAiqB,GACA,IAAAp3E,EACA24F,EACA3b,EACA4b,EAAAU,EAAAT,oBAEA,IAAAhzF,KAAA2zF,eAKA,IAJA3zF,KAAA2zF,eAAA,GACA3zF,KAAA4zF,oBAAA,GACA5zF,KAAA6zF,kBAAA,GAEA15F,EAAA,EAAiBA,EAAA,IAAOA,EACxBg9E,EAAA9F,EAAA,SAAA9V,IAAAphE,GACA6F,KAAA6zF,kBAAA15F,GAAA6F,KAAA09E,YAAAvG,EAAA,IAAA6b,oBACAhzF,KAAA4zF,oBAAAz5F,GAAA6F,KAAA29E,cAAAxG,EAAA,IAAA6b,oBACAhzF,KAAA2zF,eAAAx5F,GAAA6F,KAAA49E,SAAAzG,EAAA,IAAA6b,oBAIA,OAAAzhB,EACA,SAAAjqB,GAEA,KADAwrC,EAAAruF,GAAA1E,KAAAC,KAAA2zF,eAAAZ,IACAD,EAAA,KACO,QAAAxrC,GAEP,KADAwrC,EAAAruF,GAAA1E,KAAAC,KAAA4zF,oBAAAb,IACAD,EAAA,MAGA,KADAA,EAAAruF,GAAA1E,KAAAC,KAAA6zF,kBAAAd,IACAD,EAAA,KAGA,SAAAxrC,GAGA,KAFAwrC,EAAAruF,GAAA1E,KAAAC,KAAA2zF,eAAAZ,IAGAD,GAKA,KAFAA,EAAAruF,GAAA1E,KAAAC,KAAA4zF,oBAAAb,IAGAD,GAIA,KADAA,EAAAruF,GAAA1E,KAAAC,KAAA6zF,kBAAAd,IACAD,EAAA,KACO,QAAAxrC,GAGP,KAFAwrC,EAAAruF,GAAA1E,KAAAC,KAAA4zF,oBAAAb,IAGAD,GAKA,KAFAA,EAAAruF,GAAA1E,KAAAC,KAAA2zF,eAAAZ,IAGAD,GAIA,KADAA,EAAAruF,GAAA1E,KAAAC,KAAA6zF,kBAAAd,IACAD,EAAA,MAIA,KAFAA,EAAAruF,GAAA1E,KAAAC,KAAA6zF,kBAAAd,IAGAD,GAKA,KAFAA,EAAAruF,GAAA1E,KAAAC,KAAA2zF,eAAAZ,IAGAD,GAIA,KADAA,EAAAruF,GAAA1E,KAAAC,KAAA4zF,oBAAAb,IACAD,EAAA,MASA/yF,KAAAC,KAAAyzF,EAAAnsC,EAAAiqB,GAUA,IAPAvxE,KAAA2zF,iBACA3zF,KAAA2zF,eAAA,GACA3zF,KAAA6zF,kBAAA,GACA7zF,KAAA4zF,oBAAA,GACA5zF,KAAA8zF,mBAAA,IAGA35F,EAAA,EAAeA,EAAA,EAAOA,IAAA,CAgBtB,GAdAg9E,EAAA9F,EAAA,SAAA9V,IAAAphE,GAEAo3E,IAAAvxE,KAAA8zF,mBAAA35F,KACA6F,KAAA8zF,mBAAA35F,GAAA,IAAA2K,OAAA,IAAA9E,KAAA49E,SAAAzG,EAAA,IAAAtyE,QAAA,qBACA7E,KAAA4zF,oBAAAz5F,GAAA,IAAA2K,OAAA,IAAA9E,KAAA29E,cAAAxG,EAAA,IAAAtyE,QAAA,qBACA7E,KAAA6zF,kBAAA15F,GAAA,IAAA2K,OAAA,IAAA9E,KAAA09E,YAAAvG,EAAA,IAAAtyE,QAAA,sBAGA7E,KAAA2zF,eAAAx5F,KACAy+E,EAAA,IAAA54E,KAAA49E,SAAAzG,EAAA,SAAAn3E,KAAA29E,cAAAxG,EAAA,SAAAn3E,KAAA09E,YAAAvG,EAAA,IACAn3E,KAAA2zF,eAAAx5F,GAAA,IAAA2K,OAAA8zE,EAAA/zE,QAAA,cAIA0sE,GAAA,SAAAjqB,GAAAtnD,KAAA8zF,mBAAA35F,GAAAoZ,KAAAkgF,GACA,OAAAt5F,EACO,GAAAo3E,GAAA,QAAAjqB,GAAAtnD,KAAA4zF,oBAAAz5F,GAAAoZ,KAAAkgF,GACP,OAAAt5F,EACO,GAAAo3E,GAAA,OAAAjqB,GAAAtnD,KAAA6zF,kBAAA15F,GAAAoZ,KAAAkgF,GACP,OAAAt5F,EACO,IAAAo3E,GAAAvxE,KAAA2zF,eAAAx5F,GAAAoZ,KAAAkgF,GACP,OAAAt5F,IA07EAw3F,GAAA5T,cA14EA,SAAAjF,GACA,OAAA94E,KAAA0zF,qBACAtiB,EAAApxE,KAAA,mBACAu+E,GAAAx+E,KAAAC,MAGA84E,EACA94E,KAAA++E,qBAEA/+E,KAAA4+E,iBAGAxN,EAAApxE,KAAA,oBACAA,KAAA4+E,eAAAR,IAGAp+E,KAAA++E,sBAAAjG,EAAA94E,KAAA++E,qBAAA/+E,KAAA4+E,iBA23EA+S,GAAA7T,mBAr3EA,SAAAhF,GACA,OAAA94E,KAAA0zF,qBACAtiB,EAAApxE,KAAA,mBACAu+E,GAAAx+E,KAAAC,MAGA84E,EACA94E,KAAAg/E,0BAEAh/E,KAAA6+E,sBAGAzN,EAAApxE,KAAA,yBACAA,KAAA6+E,oBAAAR,IAGAr+E,KAAAg/E,2BAAAlG,EAAA94E,KAAAg/E,0BAAAh/E,KAAA6+E,sBAs2EA8S,GAAA9T,iBAh2EA,SAAA/E,GACA,OAAA94E,KAAA0zF,qBACAtiB,EAAApxE,KAAA,mBACAu+E,GAAAx+E,KAAAC,MAGA84E,EACA94E,KAAAi/E,wBAEAj/E,KAAA8+E,oBAGA1N,EAAApxE,KAAA,uBACAA,KAAA8+E,kBAAAR,IAGAt+E,KAAAi/E,yBAAAnG,EAAA94E,KAAAi/E,wBAAAj/E,KAAA8+E,oBAi1EA6S,GAAAhS,KA7rEA,SAAA/iB,GAGA,aAAAA,EAAA,IAAA+Q,cAAAvkD,OAAA,IA2rEAuoE,GAAApf,SAtrEA,SAAA4M,EAAAE,EAAA0U,GACA,OAAA5U,EAAA,GACA4U,EAAA,UAEAA,EAAA,WAkxEA7R,GAAA,MACAnB,uBAAA,uBACAhK,QAAA,SAAA3nE,GACA,IAAA6H,EAAA7H,EAAA,GACAgoE,EAAA,IAAAjD,EAAA/kE,EAAA,iBAAA6H,EAAA,SAAAA,EAAA,SAAAA,EAAA,UACA,OAAA7H,EAAAgoE,KAIAnG,EAAAub,KAAAx6E,EAAA,wDAAAkwE,IACAjR,EAAA+iB,SAAAhiF,EAAA,gEAAAmwE,IACA,IAAA8R,GAAA98E,KAAA2nB,IAgBA,SAAAo1D,GAAAr+D,EAAA+mC,EAAAjjE,EAAA+xF,GACA,IAAAp5E,EAAA04E,GAAApuB,EAAAjjE,GAIA,OAHAk8B,EAAA+zD,eAAA8B,EAAAp5E,EAAAs3E,cACA/zD,EAAAg0D,OAAA6B,EAAAp5E,EAAAu3E,MACAh0D,EAAAi0D,SAAA4B,EAAAp5E,EAAAw3E,QACAj0D,EAAAk0D,UAaA,SAAAoK,GAAA/kF,GACA,OAAAA,EAAA,EACA+H,KAAAkB,MAAAjJ,GAEA+H,KAAAs8C,KAAArkD,GAyCA,SAAAglF,GAAA3K,GAGA,YAAAA,EAAA,OAGA,SAAA4K,GAAAtZ,GAEA,cAAAA,EAAA,KAkEA,SAAAuZ,GAAAC,GACA,kBACA,OAAAv0F,KAAA4gE,GAAA2zB,IAIA,IAAAC,GAAAF,GAAA,MACAG,GAAAH,GAAA,KACAI,GAAAJ,GAAA,KACAK,GAAAL,GAAA,KACAM,GAAAN,GAAA,KACAO,GAAAP,GAAA,KACAQ,GAAAR,GAAA,KACAS,GAAAT,GAAA,KACAU,GAAAV,GAAA,KAWA,SAAAW,GAAAlvE,GACA,kBACA,OAAA/lB,KAAAomB,UAAApmB,KAAA64B,MAAA9S,GAAAkgB,KAIA,IAAA23B,GAAAq3B,GAAA,gBACAzV,GAAAyV,GAAA,WACA5V,GAAA4V,GAAA,WACA9V,GAAA8V,GAAA,SACAxL,GAAAwL,GAAA,QACAla,GAAAka,GAAA,UACA5L,GAAA4L,GAAA,SAMA1xE,GAAApM,KAAAoM,MACA2xE,GAAA,CACA/T,GAAA,GAEA1sE,EAAA,GAEAsE,EAAA,GAEAvE,EAAA,GAEAxZ,EAAA,GAEAumF,EAAA,IAuEA4T,GAAAh+E,KAAA2nB,IAEA,SAAAm0B,GAAAr7C,GACA,OAAAA,EAAA,IAAAA,EAAA,KAAAA,EAGA,SAAAw9E,KAQA,IAAAp1F,KAAAomB,UACA,OAAApmB,KAAAg3E,aAAAM,cAGA,IAGA+H,EAAAF,EAHAK,EAAA2V,GAAAn1F,KAAA4pF,eAAA,IACAH,EAAA0L,GAAAn1F,KAAA6pF,OACA9O,EAAAoa,GAAAn1F,KAAA8pF,SAGAzK,EAAAnL,EAAAsL,EAAA,IACAL,EAAAjL,EAAAmL,EAAA,IACAG,GAAA,GACAH,GAAA,GAKA,IAAAgW,EAHAnhB,EAAA6G,EAAA,IAIAwG,EAHAxG,GAAA,GAIAua,EAAA7L,EACAj1E,EAAA2qE,EACApmE,EAAAsmE,EACA5qE,EAAA+qE,IAAA/2B,QAAA,GAAA5jD,QAAA,gBACA2jC,EAAAxoC,KAAAy0F,YAEA,IAAAjsD,EAGA,YAGA,IAAA+sD,EAAA/sD,EAAA,SACAgtD,EAAAviC,GAAAjzD,KAAA8pF,WAAA72B,GAAAzqB,GAAA,OACAitD,EAAAxiC,GAAAjzD,KAAA6pF,SAAA52B,GAAAzqB,GAAA,OACAktD,EAAAziC,GAAAjzD,KAAA4pF,iBAAA32B,GAAAzqB,GAAA,OACA,OAAA+sD,EAAA,KAAAF,EAAAG,EAAAH,EAAA,SAAA9T,EAAAiU,EAAAjU,EAAA,SAAA+T,EAAAG,EAAAH,EAAA,SAAA9gF,GAAAuE,GAAAtE,EAAA,SAAAD,EAAAkhF,EAAAlhF,EAAA,SAAAuE,EAAA28E,EAAA38E,EAAA,SAAAtE,EAAAihF,EAAAjhF,EAAA,QAGA,IAAAkhF,GAAAvM,GAAAjpF,UAmGA,OAlGAw1F,GAAAvvE,QAjrDA,WACA,OAAApmB,KAAA0yE,UAirDAijB,GAAA72D,IA3UA,WACA,IAAAt1B,EAAAxJ,KAAA64B,MAUA,OATA74B,KAAA4pF,cAAAqK,GAAAj0F,KAAA4pF,eACA5pF,KAAA6pF,MAAAoK,GAAAj0F,KAAA6pF,OACA7pF,KAAA8pF,QAAAmK,GAAAj0F,KAAA8pF,SACAtgF,EAAAo0D,aAAAq2B,GAAAzqF,EAAAo0D,cACAp0D,EAAAg2E,QAAAyU,GAAAzqF,EAAAg2E,SACAh2E,EAAA61E,QAAA4U,GAAAzqF,EAAA61E,SACA71E,EAAA21E,MAAA8U,GAAAzqF,EAAA21E,OACA31E,EAAAuxE,OAAAkZ,GAAAzqF,EAAAuxE,QACAvxE,EAAA6/E,MAAA4K,GAAAzqF,EAAA6/E,OACArpF,MAiUA21F,GAAAvxF,IArTA,SAAAw4D,EAAAjjE,GACA,OAAAu6F,GAAAl0F,KAAA48D,EAAAjjE,EAAA,IAqTAg8F,GAAA5J,SAjTA,SAAAnvB,EAAAjjE,GACA,OAAAu6F,GAAAl0F,KAAA48D,EAAAjjE,GAAA,IAiTAg8F,GAAA/0B,GAtPA,SAAA+U,GACA,IAAA31E,KAAAomB,UACA,OAAA6f,IAGA,IAAAwjD,EACA1O,EACAnd,EAAA59D,KAAA4pF,cAGA,cAFAjU,EAAAD,EAAAC,KAEA,YAAAA,GAAA,SAAAA,EAIA,OAHA8T,EAAAzpF,KAAA6pF,MAAAjsB,EAAA,MACAmd,EAAA/6E,KAAA8pF,QAAAsK,GAAA3K,GAEA9T,GACA,YACA,OAAAoF,EAEA,cACA,OAAAA,EAAA,EAEA,WACA,OAAAA,EAAA,QAMA,OAFA0O,EAAAzpF,KAAA6pF,MAAA1yE,KAAAoM,MAAA8wE,GAAAr0F,KAAA8pF,UAEAnU,GACA,WACA,OAAA8T,EAAA,EAAA7rB,EAAA,OAEA,UACA,OAAA6rB,EAAA7rB,EAAA,MAEA,WACA,UAAA6rB,EAAA7rB,EAAA,KAEA,aACA,YAAA6rB,EAAA7rB,EAAA,IAEA,aACA,aAAA6rB,EAAA7rB,EAAA,IAGA,kBACA,OAAAzmD,KAAAkB,MAAA,MAAAoxE,GAAA7rB,EAEA,QACA,UAAAnuD,MAAA,gBAAAkmE,KAsMAggB,GAAAnB,kBACAmB,GAAAlB,aACAkB,GAAAjB,aACAiB,GAAAhB,WACAgB,GAAAf,UACAe,GAAAd,WACAc,GAAAb,YACAa,GAAAZ,cACAY,GAAAX,WACAW,GAAAl1B,QAzMA,WACA,OAAAzgE,KAAAomB,UAIApmB,KAAA4pF,cAAA,MAAA5pF,KAAA6pF,MAAA7pF,KAAA8pF,QAAA,kBAAA3V,EAAAn0E,KAAA8pF,QAAA,IAHA7jD,KAwMA0vD,GAAA5L,QAjTA,WACA,IAIAvK,EAAAH,EAAAF,EAAAkK,EAAAuM,EAJAh4B,EAAA59D,KAAA4pF,cACAH,EAAAzpF,KAAA6pF,MACA9O,EAAA/6E,KAAA8pF,QACAtgF,EAAAxJ,KAAA64B,MA8BA,OA1BA+kC,GAAA,GAAA6rB,GAAA,GAAA1O,GAAA,GAAAnd,GAAA,GAAA6rB,GAAA,GAAA1O,GAAA,IACAnd,GAAA,MAAAu2B,GAAAE,GAAAtZ,GAAA0O,GACAA,EAAA,EACA1O,EAAA,GAKAvxE,EAAAo0D,eAAA,IACA4hB,EAAAtL,EAAAtW,EAAA,KACAp0D,EAAAg2E,UAAA,GACAH,EAAAnL,EAAAsL,EAAA,IACAh2E,EAAA61E,UAAA,GACAF,EAAAjL,EAAAmL,EAAA,IACA71E,EAAA21E,QAAA,GACAsK,GAAAvV,EAAAiL,EAAA,IAEAyW,EAAA1hB,EAAAkgB,GAAA3K,IACA1O,GAAA6a,EACAnM,GAAA0K,GAAAE,GAAAuB,IAEAvM,EAAAnV,EAAA6G,EAAA,IACAA,GAAA,GACAvxE,EAAAigF,OACAjgF,EAAAuxE,SACAvxE,EAAA6/E,QACArpF,MAgRA21F,GAAA3sE,MAnLA,WACA,OAAAgiE,GAAAhrF,OAmLA21F,GAAAj0F,IAhLA,SAAAi0E,GAEA,OADAA,EAAAD,EAAAC,GACA31E,KAAAomB,UAAApmB,KAAA21E,EAAA,OAAA1vC,KA+KA0vD,GAAA/3B,gBACA+3B,GAAAnW,WACAmW,GAAAtW,WACAsW,GAAAxW,SACAwW,GAAAlM,QACAkM,GAAApM,MAnKA,WACA,OAAArV,EAAAl0E,KAAAypF,OAAA,IAmKAkM,GAAA5a,UACA4a,GAAAtM,SACAsM,GAAAhH,SA9FA,SAAAkH,GACA,IAAA71F,KAAAomB,UACA,OAAApmB,KAAAg3E,aAAAM,cAGA,IAAAhG,EAAAtxE,KAAAg3E,aACAI,EAtDA,SAAA0e,EAAApH,EAAApd,GACA,IAAAz7C,EAAAm1D,GAAA8K,GAAAh3D,MACA0gD,EAAAj8D,GAAAsS,EAAA+qC,GAAA,MACAye,EAAA97D,GAAAsS,EAAA+qC,GAAA,MACAue,EAAA57D,GAAAsS,EAAA+qC,GAAA,MACA6oB,EAAAlmE,GAAAsS,EAAA+qC,GAAA,MACAma,EAAAx3D,GAAAsS,EAAA+qC,GAAA,MACAyoB,EAAA9lE,GAAAsS,EAAA+qC,GAAA,MACAriE,EAAAihF,GAAA0V,GAAA/T,IAAA,KAAA3B,MAAA0V,GAAAzgF,GAAA,MAAA+qE,IAAAH,GAAA,UAAAA,EAAA6V,GAAAn8E,GAAA,MAAAsmE,IAAAF,GAAA,UAAAA,EAAA+V,GAAA1gF,GAAA,MAAA2qE,IAAAsK,GAAA,UAAAA,EAAAyL,GAAAl6F,GAAA,MAAAyuF,IAAA1O,GAAA,UAAAA,EAAAma,GAAA3T,GAAA,MAAAxG,IAAAsO,GAAA,gBAAAA,GAIA,OAHA9qF,EAAA,GAAAmwF,EACAnwF,EAAA,IAAAu3F,EAAA,EACAv3F,EAAA,GAAA+yE,EAfA,SAAA5yE,EAAA0Q,EAAAs/E,EAAA6D,EAAAjhB,GACA,OAAAA,EAAA0P,aAAA5xE,GAAA,IAAAs/E,EAAAhwF,EAAA6zF,IAeArwF,MAAA,KAAA3D,GA0CAw3F,CAAA/1F,MAAA61F,EAAAvkB,GAMA,OAJAukB,IACAze,EAAA9F,EAAAmhB,YAAAzyF,KAAAo3E,IAGA9F,EAAAmd,WAAArX,IAmFAue,GAAA5F,YAAAqF,GACAO,GAAA9vE,SAAAuvE,GACAO,GAAA5sE,OAAAqsE,GACAO,GAAArkB,UACAqkB,GAAA3e,cACA2e,GAAAK,YAAAhkF,EAAA,sFAAAojF,IACAO,GAAAnJ,QAGA5V,EAAA,gBACAA,EAAA,mBAEA+B,GAAA,IAAAL,IACAK,GAAA,IAtvHA,wBAuvHAW,GAAA,aAAA1c,EAAAzzD,EAAA4E,GACAA,EAAAtS,GAAA,IAAA66B,KAAA,IAAA9Q,WAAAo3C,EAAA,OAEA0c,GAAA,aAAA1c,EAAAzzD,EAAA4E,GACAA,EAAAtS,GAAA,IAAA66B,KAAA69C,EAAAvX,MAGAqU,EAAAglB,QAAA,SAl6IAllB,EAm6IAiT,GACA/S,EAAAzmD,GAAAwjE,GACA/c,EAAA/5D,IA5wDA,WAEA,OAAA+xE,GAAA,WADA,GAAA/lE,MAAAnjB,KAAA3F,UAAA,KA4wDA62E,EAAA75D,IAxwDA,WAEA,OAAA6xE,GAAA,UADA,GAAA/lE,MAAAnjB,KAAA3F,UAAA,KAwwDA62E,EAAA16C,IApwDA,WACA,OAAAD,KAAAC,IAAAD,KAAAC,OAAA,IAAAD,MAowDA26C,EAAAQ,IAAAJ,EACAJ,EAAAqf,KAphBA,SAAA1zB,GACA,OAAAonB,GAAA,IAAApnB,IAohBAqU,EAAA8J,OAnaA,SAAAzzB,EAAAx+C,GACA,OAAAipF,GAAAzqC,EAAAx+C,EAAA,WAmaAmoE,EAAAE,SACAF,EAAAK,OAAA4Q,GACAjR,EAAA6a,QAAA3Y,EACAlC,EAAAp7C,SAAAm1D,GACA/Z,EAAAgD,WACAhD,EAAA2M,SAjaA,SAAAqU,EAAA3qC,EAAAx+C,GACA,OAAAkpF,GAAAC,EAAA3qC,EAAAx+C,EAAA,aAiaAmoE,EAAAggB,UAxhBA,WACA,OAAAjN,GAAA9hF,MAAA,KAAA9H,WAAA62F,aAwhBAhgB,EAAA+F,WAAAmL,GACAlR,EAAA+Y,cACA/Y,EAAA6J,YAzaA,SAAAxzB,EAAAx+C,GACA,OAAAipF,GAAAzqC,EAAAx+C,EAAA,gBAyaAmoE,EAAAyM,YA9ZA,SAAAuU,EAAA3qC,EAAAx+C,GACA,OAAAkpF,GAAAC,EAAA3qC,EAAAx+C,EAAA,gBA8ZAmoE,EAAAmR,gBACAnR,EAAAilB,aA1gFA,SAAAnwE,EAAAhY,GACA,SAAAA,EAAA,CACA,IAAAujE,EACA6kB,EACAhhB,EAAA8K,GAIA,OAFAkW,EAAArU,GAAA/7D,MAGAovD,EAAAghB,EAAA7T,SAGAv0E,EAAAmnE,EAAAC,EAAApnE,IACAujE,EAAA,IAAA+D,EAAAtnE,IACAw0E,aAAAZ,GAAA57D,GACA47D,GAAA57D,GAAAurD,EAEA4Q,GAAAn8D,QAGA,MAAA47D,GAAA57D,KACA,MAAA47D,GAAA57D,GAAAw8D,aACAZ,GAAA57D,GAAA47D,GAAA57D,GAAAw8D,aACS,MAAAZ,GAAA57D,WACT47D,GAAA57D,IAKA,OAAA47D,GAAA57D,IA8+EAkrD,EAAA0Q,QAj9EA,WACA,OAAAnnF,EAAAmnF,KAi9EA1Q,EAAA0M,cAtaA,SAAAsU,EAAA3qC,EAAAx+C,GACA,OAAAkpF,GAAAC,EAAA3qC,EAAAx+C,EAAA,kBAsaAmoE,EAAAyE,iBACAzE,EAAAmlB,qBA7KA,SAAAC,GACA,YAAA16F,IAAA06F,EACA9yE,GAGA,oBAAA8yE,IACA9yE,GAAA8yE,GACA,IAuKAplB,EAAAqlB,sBAhKA,SAAAC,EAAAC,GACA,YAAA76F,IAAAu5F,GAAAqB,UAIA56F,IAAA66F,EACAtB,GAAAqB,IAGArB,GAAAqB,GAAAC,EAEA,MAAAD,IACArB,GAAA/T,GAAAqV,EAAA,IAGA,KAkJAvlB,EAAAkd,eAx0CA,SAAAsI,EAAAlgE,GACA,IAAAgxB,EAAAkvC,EAAAlvC,KAAAhxB,EAAA,WACA,OAAAgxB,GAAA,aAAAA,GAAA,aAAAA,EAAA,YAAAA,EAAA,YAAAA,EAAA,YAAAA,EAAA,yBAu0CA0pB,EAAA9wE,UAAA6tF,GAEA/c,EAAAylB,UAAA,CACAC,eAAA,mBAEAC,uBAAA,sBAEAC,kBAAA,0BAEAhd,KAAA,aAEAid,KAAA,QAEAC,aAAA,WAEAC,QAAA,eAEA9c,KAAA,aAEAN,MAAA,WAGA3I,EAj+I8DrD,2CCJ9D,IAAAv7D,EAAkBtX,EAAQ,KAmC1B6B,EAAAC,QAJA,SAAAlD,EAAA2Y,GACA,OAAAD,EAAA1Y,EAAA2Y,qBChCA,IAAA47D,EAAYnzE,EAAQ,KACpBk8F,EAAkBl8F,EAAQ,KAC1Bm8F,EAAiBn8F,EAAQ,KACzBo8F,EAAmBp8F,EAAQ,KAC3Bq8F,EAAar8F,EAAQ,KACrBM,EAAcN,EAAQ,KACtBg1E,EAAeh1E,EAAQ,KACvBs1E,EAAmBt1E,EAAQ,KAI3B4zE,EAAA,EAGA0oB,EAAA,qBACAC,EAAA,iBACAC,EAAA,kBAMA/1F,EAHA5H,OAAAuG,UAGAqB,eA6DA5E,EAAAC,QA7CA,SAAAqC,EAAAoT,EAAAC,EAAAC,EAAAq8D,EAAAp8D,GACA,IAAA+kF,EAAAn8F,EAAA6D,GACAu4F,EAAAp8F,EAAAiX,GACAolF,EAAAF,EAAAF,EAAAF,EAAAl4F,GACAy4F,EAAAF,EAAAH,EAAAF,EAAA9kF,GAGAslF,GAFAF,KAAAL,EAAAE,EAAAG,IAEAH,EACAM,GAFAF,KAAAN,EAAAE,EAAAI,IAEAJ,EACAO,EAAAJ,GAAAC,EAEA,GAAAG,GAAA/nB,EAAA7wE,GAAA,CACA,IAAA6wE,EAAAz9D,GACA,SAGAklF,GAAA,EACAI,GAAA,EAGA,GAAAE,IAAAF,EAEA,OADAnlF,MAAA,IAAAy7D,GACAspB,GAAAnnB,EAAAnxE,GAAA+3F,EAAA/3F,EAAAoT,EAAAC,EAAAC,EAAAq8D,EAAAp8D,GAAAykF,EAAAh4F,EAAAoT,EAAAolF,EAAAnlF,EAAAC,EAAAq8D,EAAAp8D,GAGA,KAAAF,EAAAo8D,GAAA,CACA,IAAAopB,EAAAH,GAAAp2F,EAAAzB,KAAAb,EAAA,eACA84F,EAAAH,GAAAr2F,EAAAzB,KAAAuS,EAAA,eAEA,GAAAylF,GAAAC,EAAA,CACA,IAAAC,EAAAF,EAAA74F,EAAAvF,QAAAuF,EACAg5F,EAAAF,EAAA1lF,EAAA3Y,QAAA2Y,EAEA,OADAG,MAAA,IAAAy7D,GACAW,EAAAopB,EAAAC,EAAA3lF,EAAAC,EAAAC,IAIA,QAAAqlF,IAIArlF,MAAA,IAAAy7D,GACAipB,EAAAj4F,EAAAoT,EAAAC,EAAAC,EAAAq8D,EAAAp8D,oBCpEA7V,EAAAC,QALA,WACAmD,KAAAyJ,SAAA,GACAzJ,KAAAX,KAAA,oBCTA,IAAA84F,EAAmBp9F,EAAQ,KAO3ByT,EAHApT,MAAA+E,UAGAqO,OA+BA5R,EAAAC,QApBA,SAAAnD,GACA,IAAA8P,EAAAxJ,KAAAyJ,SACAX,EAAAqvF,EAAA3uF,EAAA9P,GAEA,QAAAoP,EAAA,KAMAA,GAFAU,EAAAnP,OAAA,EAGAmP,EAAAwxB,MAEAxsB,EAAAzO,KAAAyJ,EAAAV,EAAA,KAGA9I,KAAAX,MACA,qBCnCA,IAAA84F,EAAmBp9F,EAAQ,KAkB3B6B,EAAAC,QANA,SAAAnD,GACA,IAAA8P,EAAAxJ,KAAAyJ,SACAX,EAAAqvF,EAAA3uF,EAAA9P,GACA,OAAAoP,EAAA,OAAAnN,EAAA6N,EAAAV,GAAA,qBCfA,IAAAqvF,EAAmBp9F,EAAQ,KAgB3B6B,EAAAC,QAJA,SAAAnD,GACA,OAAAy+F,EAAAn4F,KAAAyJ,SAAA/P,IAAA,oBCbA,IAAAy+F,EAAmBp9F,EAAQ,KA2B3B6B,EAAAC,QAdA,SAAAnD,EAAAC,GACA,IAAA6P,EAAAxJ,KAAAyJ,SACAX,EAAAqvF,EAAA3uF,EAAA9P,GASA,OAPAoP,EAAA,KACA9I,KAAAX,KACAmK,EAAAtN,KAAA,CAAAxC,EAAAC,KAEA6P,EAAAV,GAAA,GAAAnP,EAGAqG,uBCxBA,IAAA4I,EAAgB7N,EAAQ,KAexB6B,EAAAC,QALA,WACAmD,KAAAyJ,SAAA,IAAAb,EACA5I,KAAAX,KAAA,kBCIAzC,EAAAC,QAPA,SAAAnD,GACA,IAAA8P,EAAAxJ,KAAAyJ,SACAG,EAAAJ,EAAA,OAAA9P,GAEA,OADAsG,KAAAX,KAAAmK,EAAAnK,KACAuK,kBCAAhN,EAAAC,QAJA,SAAAnD,GACA,OAAAsG,KAAAyJ,SAAA/H,IAAAhI,mBCGAkD,EAAAC,QAJA,SAAAnD,GACA,OAAAsG,KAAAyJ,SAAAR,IAAAvP,qBCVA,IAAAkP,EAAgB7N,EAAQ,KACxB2X,EAAU3X,EAAQ,KAClBiY,EAAejY,EAAQ,KAIvBq9F,EAAA,IAgCAx7F,EAAAC,QApBA,SAAAnD,EAAAC,GACA,IAAA6P,EAAAxJ,KAAAyJ,SAEA,GAAAD,aAAAZ,EAAA,CACA,IAAAyvF,EAAA7uF,EAAAC,SAEA,IAAAiJ,GAAA2lF,EAAAh+F,OAAA+9F,EAAA,EAGA,OAFAC,EAAAn8F,KAAA,CAAAxC,EAAAC,IACAqG,KAAAX,OAAAmK,EAAAnK,KACAW,KAGAwJ,EAAAxJ,KAAAyJ,SAAA,IAAAuJ,EAAAqlF,GAKA,OAFA7uF,EAAA7H,IAAAjI,EAAAC,GACAqG,KAAAX,KAAAmK,EAAAnK,KACAW,uBCnCA,IAAAswE,EAAiBv1E,EAAQ,KACzBu9F,EAAev9F,EAAQ,KACvBgvB,EAAehvB,EAAQ,KACvBw9F,EAAex9F,EAAQ,KAUvBy9F,EAAA,8BAGAC,EAAA97F,SAAAwD,UACAovE,EAAA31E,OAAAuG,UAGAouE,EAAAkqB,EAAA5yE,SAGArkB,EAAA+tE,EAAA/tE,eAGAk3F,EAAA5zF,OAAA,IAAAypE,EAAAxuE,KAAAyB,GAAAqD,QAhBA,sBAgBA,QAAAA,QAAA,uEAmBAjI,EAAAC,QATA,SAAAlD,GACA,SAAAowB,EAAApwB,IAAA2+F,EAAA3+F,MAIA22E,EAAA32E,GAAA++F,EAAAF,GACAjlF,KAAAglF,EAAA5+F,sBC1CA,IAAAmC,EAAaf,EAAQ,KAIrBw0E,EAAA31E,OAAAuG,UAGAqB,EAAA+tE,EAAA/tE,eAOAm3F,EAAAppB,EAAA1pD,SAGAne,EAAA5L,IAAA6L,iBAAAhM,EA+BAiB,EAAAC,QAtBA,SAAAlD,GACA,IAAAi/F,EAAAp3F,EAAAzB,KAAApG,EAAA+N,GACA3I,EAAApF,EAAA+N,GAEA,IACA/N,EAAA+N,QAAA/L,EACA,IAAAk9F,GAAA,EACG,MAAAz4F,IAEH,IAAAwJ,EAAA+uF,EAAA54F,KAAApG,GAUA,OARAk/F,IACAD,EACAj/F,EAAA+N,GAAA3I,SAEApF,EAAA+N,IAIAkC,kBC5CA,IAOA+uF,EAPA/+F,OAAAuG,UAOA0lB,SAaAjpB,EAAAC,QAJA,SAAAlD,GACA,OAAAg/F,EAAA54F,KAAApG,qBClBA,IAAAm/F,EAAiB/9F,EAAQ,KAIzBg+F,EAAA,WACA,IAAAnvE,EAAA,SAAAxG,KAAA01E,KAAAt+F,MAAAs+F,EAAAt+F,KAAAw+F,UAAA,IACA,OAAApvE,EAAA,iBAAAA,EAAA,GAFA,GAiBAhtB,EAAAC,QAJA,SAAAsC,GACA,QAAA45F,QAAA55F,oBClBA,IAIA25F,EAJW/9F,EAAQ,KAInB,sBACA6B,EAAAC,QAAAi8F,iBCOAl8F,EAAAC,QAJA,SAAAqC,EAAAxF,GACA,aAAAwF,OAAAvD,EAAAuD,EAAAxF,qBCTA,IAAAu/F,EAAWl+F,EAAQ,KACnB6N,EAAgB7N,EAAQ,KACxB2X,EAAU3X,EAAQ,KAmBlB6B,EAAAC,QATA,WACAmD,KAAAX,KAAA,EACAW,KAAAyJ,SAAA,CACAsyD,KAAA,IAAAk9B,EACA1vF,IAAA,IAAAmJ,GAAA9J,GACAlK,OAAA,IAAAu6F,qBCjBA,IAAAC,EAAgBn+F,EAAQ,KACxBo+F,EAAiBp+F,EAAQ,KACzBq+F,EAAcr+F,EAAQ,KACtBs+F,EAAct+F,EAAQ,KACtBu+F,EAAcv+F,EAAQ,KAUtB,SAAAk+F,EAAApwF,GACA,IAAAC,GAAA,EACAzO,EAAA,MAAAwO,EAAA,EAAAA,EAAAxO,OAGA,IAFA2F,KAAA+I,UAEAD,EAAAzO,GAAA,CACA,IAAA2O,EAAAH,EAAAC,GACA9I,KAAA2B,IAAAqH,EAAA,GAAAA,EAAA,KAKAiwF,EAAA94F,UAAA4I,MAAAmwF,EACAD,EAAA94F,UAAA,OAAAg5F,EACAF,EAAA94F,UAAAuB,IAAA03F,EACAH,EAAA94F,UAAA8I,IAAAowF,EACAJ,EAAA94F,UAAAwB,IAAA23F,EACA18F,EAAAC,QAAAo8F,mBC/BA,IAAA7vF,EAAmBrO,EAAQ,KAe3B6B,EAAAC,QALA,WACAmD,KAAAyJ,SAAAL,IAAA,SACApJ,KAAAX,KAAA,kBCIAzC,EAAAC,QANA,SAAAnD,GACA,IAAAkQ,EAAA5J,KAAAiJ,IAAAvP,WAAAsG,KAAAyJ,SAAA/P,GAEA,OADAsG,KAAAX,MAAAuK,EAAA,IACAA,oBCbA,IAAAR,EAAmBrO,EAAQ,KAI3Bw+F,EAAA,4BAMA/3F,EAHA5H,OAAAuG,UAGAqB,eAsBA5E,EAAAC,QAXA,SAAAnD,GACA,IAAA8P,EAAAxJ,KAAAyJ,SAEA,GAAAL,EAAA,CACA,IAAAQ,EAAAJ,EAAA9P,GACA,OAAAkQ,IAAA2vF,OAAA59F,EAAAiO,EAGA,OAAApI,EAAAzB,KAAAyJ,EAAA9P,GAAA8P,EAAA9P,QAAAiC,oBC7BA,IAAAyN,EAAmBrO,EAAQ,KAO3ByG,EAHA5H,OAAAuG,UAGAqB,eAgBA5E,EAAAC,QALA,SAAAnD,GACA,IAAA8P,EAAAxJ,KAAAyJ,SACA,OAAAL,OAAAzN,IAAA6N,EAAA9P,GAAA8H,EAAAzB,KAAAyJ,EAAA9P,qBCpBA,IAAA0P,EAAmBrO,EAAQ,KAI3Bw+F,EAAA,4BAmBA38F,EAAAC,QAPA,SAAAnD,EAAAC,GACA,IAAA6P,EAAAxJ,KAAAyJ,SAGA,OAFAzJ,KAAAX,MAAAW,KAAAiJ,IAAAvP,GAAA,IACA8P,EAAA9P,GAAA0P,QAAAzN,IAAAhC,EAAA4/F,EAAA5/F,EACAqG,uBCpBA,IAAAw5F,EAAiBz+F,EAAQ,KAkBzB6B,EAAAC,QANA,SAAAnD,GACA,IAAAkQ,EAAA4vF,EAAAx5F,KAAAtG,GAAA,OAAAA,GAEA,OADAsG,KAAAX,MAAAuK,EAAA,IACAA,kBCHAhN,EAAAC,QALA,SAAAlD,GACA,IAAAsH,SAAAtH,EACA,gBAAAsH,GAAA,UAAAA,GAAA,UAAAA,GAAA,WAAAA,EAAA,cAAAtH,EAAA,OAAAA,oBCTA,IAAA6/F,EAAiBz+F,EAAQ,KAgBzB6B,EAAAC,QAJA,SAAAnD,GACA,OAAA8/F,EAAAx5F,KAAAtG,GAAAgI,IAAAhI,qBCbA,IAAA8/F,EAAiBz+F,EAAQ,KAgBzB6B,EAAAC,QAJA,SAAAnD,GACA,OAAA8/F,EAAAx5F,KAAAtG,GAAAuP,IAAAvP,qBCbA,IAAA8/F,EAAiBz+F,EAAQ,KAqBzB6B,EAAAC,QARA,SAAAnD,EAAAC,GACA,IAAA6P,EAAAgwF,EAAAx5F,KAAAtG,GACA2F,EAAAmK,EAAAnK,KAGA,OAFAmK,EAAA7H,IAAAjI,EAAAC,GACAqG,KAAAX,MAAAmK,EAAAnK,QAAA,IACAW,uBClBA,IAAAgT,EAAejY,EAAQ,KACvB0+F,EAAkB1+F,EAAQ,KAC1B2+F,EAAkB3+F,EAAQ,KAW1B,SAAAyzE,EAAAz/D,GACA,IAAAjG,GAAA,EACAzO,EAAA,MAAA0U,EAAA,EAAAA,EAAA1U,OAGA,IAFA2F,KAAAyJ,SAAA,IAAAuJ,IAEAlK,EAAAzO,GACA2F,KAAAoE,IAAA2K,EAAAjG,IAKA0lE,EAAAruE,UAAAiE,IAAAoqE,EAAAruE,UAAAjE,KAAAu9F,EACAjrB,EAAAruE,UAAA8I,IAAAywF,EACA98F,EAAAC,QAAA2xE,iBCzBA,IAAA+qB,EAAA,4BAkBA38F,EAAAC,QANA,SAAAlD,GAGA,OAFAqG,KAAAyJ,SAAA9H,IAAAhI,EAAA4/F,GAEAv5F,qBCHApD,EAAAC,QAJA,SAAAlD,GACA,OAAAqG,KAAAyJ,SAAAR,IAAAtP,mBCaAiD,EAAAC,QAbA,SAAAsM,EAAAwwF,GAIA,IAHA,IAAA7wF,GAAA,EACAzO,EAAA,MAAA8O,EAAA,EAAAA,EAAA9O,SAEAyO,EAAAzO,GACA,GAAAs/F,EAAAxwF,EAAAL,KAAAK,GACA,SAIA,yBCRAvM,EAAAC,QAJA,SAAAs7C,EAAAz+C,GACA,OAAAy+C,EAAAlvC,IAAAvP,qBCTA,IAAAoC,EAAaf,EAAQ,KACrB6+F,EAAiB7+F,EAAQ,KACzBmO,EAASnO,EAAQ,KACjBk8F,EAAkBl8F,EAAQ,KAC1B8+F,EAAiB9+F,EAAQ,KACzB++F,EAAiB/+F,EAAQ,KAIzB4zE,EAAA,EACAC,EAAA,EAGAmrB,EAAA,mBACAC,EAAA,gBACAC,EAAA,iBACAC,EAAA,eACAC,EAAA,kBACAC,EAAA,kBACAC,EAAA,eACAC,EAAA,kBACA7mF,EAAA,kBACA8mF,EAAA,uBACAC,EAAA,oBAGAC,EAAA3+F,IAAAqE,eAAAxE,EACA++F,EAAAD,IAAAh6B,aAAA9kE,EAwFAiB,EAAAC,QArEA,SAAAqC,EAAAoT,EAAAvT,EAAAwT,EAAAC,EAAAq8D,EAAAp8D,GACA,OAAA1T,GACA,KAAAy7F,EACA,GAAAt7F,EAAAy7F,YAAAroF,EAAAqoF,YAAAz7F,EAAA07F,YAAAtoF,EAAAsoF,WACA,SAGA17F,IAAA27F,OACAvoF,IAAAuoF,OAEA,KAAAN,EACA,QAAAr7F,EAAAy7F,YAAAroF,EAAAqoF,aAAA9rB,EAAA,IAAA+qB,EAAA16F,GAAA,IAAA06F,EAAAtnF,KAMA,KAAAynF,EACA,KAAAC,EACA,KAAAG,EAGA,OAAAjxF,GAAAhK,GAAAoT,GAEA,KAAA2nF,EACA,OAAA/6F,EAAA6mB,MAAAzT,EAAAyT,MAAA7mB,EAAA47F,SAAAxoF,EAAAwoF,QAEA,KAAAV,EACA,KAAAE,EAIA,OAAAp7F,GAAAoT,EAAA,GAEA,KAAA4nF,EACA,IAAAn3E,EAAA82E,EAEA,KAAAQ,EACA,IAAAvrB,EAAAv8D,EAAAo8D,EAGA,GAFA5rD,MAAA+2E,GAEA56F,EAAAG,MAAAiT,EAAAjT,OAAAyvE,EACA,SAIA,IAAAzrC,EAAA5wB,EAAA/Q,IAAAxC,GAEA,GAAAmkC,EACA,OAAAA,GAAA/wB,EAGAC,GAAAq8D,EAEAn8D,EAAA9Q,IAAAzC,EAAAoT,GACA,IAAA1I,EAAAqtF,EAAAl0E,EAAA7jB,GAAA6jB,EAAAzQ,GAAAC,EAAAC,EAAAq8D,EAAAp8D,GAEA,OADAA,EAAA,OAAAvT,GACA0K,EAEA,KAAA6J,EACA,GAAAinF,EACA,OAAAA,EAAA36F,KAAAb,IAAAw7F,EAAA36F,KAAAuS,GAKA,2BChHA,IAIAsnF,EAJW7+F,EAAQ,KAInB6+F,WACAh9F,EAAAC,QAAA+8F,iBCWAh9F,EAAAC,QATA,SAAA0M,GACA,IAAAT,GAAA,EACAc,EAAAxO,MAAAmO,EAAAlK,MAIA,OAHAkK,EAAAzO,QAAA,SAAAnB,EAAAD,GACAkQ,IAAAd,GAAA,CAAApP,EAAAC,KAEAiQ,kBCGAhN,EAAAC,QATA,SAAA8E,GACA,IAAAmH,GAAA,EACAc,EAAAxO,MAAAuG,EAAAtC,MAIA,OAHAsC,EAAA7G,QAAA,SAAAnB,GACAiQ,IAAAd,GAAAnP,IAEAiQ,oBCbA,IAAAmxF,EAAiBhgG,EAAQ,KAIzB4zE,EAAA,EAMAntE,EAHA5H,OAAAuG,UAGAqB,eAgFA5E,EAAAC,QAjEA,SAAAqC,EAAAoT,EAAAC,EAAAC,EAAAq8D,EAAAp8D,GACA,IAAAq8D,EAAAv8D,EAAAo8D,EACAqsB,EAAAD,EAAA77F,GACA+7F,EAAAD,EAAA3gG,OAIA,GAAA4gG,GAHAF,EAAAzoF,GACAjY,SAEAy0E,EACA,SAKA,IAFA,IAAAhmE,EAAAmyF,EAEAnyF,KAAA,CACA,IAAApP,EAAAshG,EAAAlyF,GAEA,KAAAgmE,EAAAp1E,KAAA4Y,EAAA9Q,EAAAzB,KAAAuS,EAAA5Y,IACA,SAKA,IAAA2pC,EAAA5wB,EAAA/Q,IAAAxC,GAEA,GAAAmkC,GAAA5wB,EAAA/Q,IAAA4Q,GACA,OAAA+wB,GAAA/wB,EAGA,IAAA1I,GAAA,EACA6I,EAAA9Q,IAAAzC,EAAAoT,GACAG,EAAA9Q,IAAA2Q,EAAApT,GAGA,IAFA,IAAAg8F,EAAApsB,IAEAhmE,EAAAmyF,GAAA,CAEA,IAAAE,EAAAj8F,EADAxF,EAAAshG,EAAAlyF,IAEAqmE,EAAA78D,EAAA5Y,GAEA,GAAA8Y,EACA,IAAA48D,EAAAN,EAAAt8D,EAAA28D,EAAAgsB,EAAAzhG,EAAA4Y,EAAApT,EAAAuT,GAAAD,EAAA2oF,EAAAhsB,EAAAz1E,EAAAwF,EAAAoT,EAAAG,GAIA,UAAA9W,IAAAyzE,EAAA+rB,IAAAhsB,GAAAN,EAAAssB,EAAAhsB,EAAA58D,EAAAC,EAAAC,GAAA28D,GAAA,CACAxlE,GAAA,EACA,MAGAsxF,MAAA,eAAAxhG,GAGA,GAAAkQ,IAAAsxF,EAAA,CACA,IAAAE,EAAAl8F,EAAA2E,YACAw3F,EAAA/oF,EAAAzO,YAEAu3F,GAAAC,GAAA,gBAAAn8F,GAAA,gBAAAoT,KAAA,mBAAA8oF,mBAAA,mBAAAC,qBACAzxF,GAAA,GAMA,OAFA6I,EAAA,OAAAvT,GACAuT,EAAA,OAAAH,GACA1I,oBCvFA,IAAA0xF,EAAqBvgG,EAAQ,KAC7BwgG,EAAiBxgG,EAAQ,KACzBP,EAAWO,EAAQ,KAcnB6B,EAAAC,QAJA,SAAAqC,GACA,OAAAo8F,EAAAp8F,EAAA1E,EAAA+gG,qBCbA,IAAAC,EAAgBzgG,EAAQ,KACxBM,EAAcN,EAAQ,KAmBtB6B,EAAAC,QALA,SAAAqC,EAAAu8F,EAAAC,GACA,IAAA9xF,EAAA6xF,EAAAv8F,GACA,OAAA7D,EAAA6D,GAAA0K,EAAA4xF,EAAA5xF,EAAA8xF,EAAAx8F,oBCGAtC,EAAAC,QAZA,SAAAsM,EAAA4F,GAKA,IAJA,IAAAjG,GAAA,EACAzO,EAAA0U,EAAA1U,OACAunC,EAAAz4B,EAAA9O,SAEAyO,EAAAzO,GACA8O,EAAAy4B,EAAA94B,GAAAiG,EAAAjG,GAGA,OAAAK,oBCjBA,IAAAwyF,EAAkB5gG,EAAQ,KAC1B6gG,EAAgB7gG,EAAQ,KAOxBy0E,EAHA51E,OAAAuG,UAGAqvE,qBAGAqsB,EAAAjiG,OAAAa,sBASA8gG,EAAAM,EAAA,SAAA38F,GACA,aAAAA,EACA,IAGAA,EAAAtF,OAAAsF,GACAy8F,EAAAE,EAAA38F,GAAA,SAAA48F,GACA,OAAAtsB,EAAAzvE,KAAAb,EAAA48F,OAPAF,EAUAh/F,EAAAC,QAAA0+F,iBCJA3+F,EAAAC,QAjBA,SAAAsM,EAAAwwF,GAMA,IALA,IAAA7wF,GAAA,EACAzO,EAAA,MAAA8O,EAAA,EAAAA,EAAA9O,OACA0hG,EAAA,EACAnyF,EAAA,KAEAd,EAAAzO,GAAA,CACA,IAAAV,EAAAwP,EAAAL,GAEA6wF,EAAAhgG,EAAAmP,EAAAK,KACAS,EAAAmyF,KAAApiG,GAIA,OAAAiQ,kBCDAhN,EAAAC,QAJA,WACA,2BCnBA,IAAAm/F,EAAgBjhG,EAAQ,KACxB00E,EAAkB10E,EAAQ,KAC1BM,EAAcN,EAAQ,KACtBg1E,EAAeh1E,EAAQ,KACvBkhG,EAAclhG,EAAQ,KACtBs1E,EAAmBt1E,EAAQ,KAO3ByG,EAHA5H,OAAAuG,UAGAqB,eAgCA5E,EAAAC,QAtBA,SAAAlD,EAAAuiG,GACA,IAAAC,EAAA9gG,EAAA1B,GACAyiG,GAAAD,GAAA1sB,EAAA91E,GACA0iG,GAAAF,IAAAC,GAAArsB,EAAAp2E,GACA2iG,GAAAH,IAAAC,IAAAC,GAAAhsB,EAAA12E,GACA4iG,EAAAJ,GAAAC,GAAAC,GAAAC,EACA1yF,EAAA2yF,EAAAP,EAAAriG,EAAAU,OAAAuhD,QAAA,GACAvhD,EAAAuP,EAAAvP,OAEA,QAAAX,KAAAC,GACAuiG,IAAA16F,EAAAzB,KAAApG,EAAAD,IAAA6iG,IACA,UAAA7iG,GACA2iG,IAAA,UAAA3iG,GAAA,UAAAA,IACA4iG,IAAA,UAAA5iG,GAAA,cAAAA,GAAA,cAAAA,IACAuiG,EAAAviG,EAAAW,KACAuP,EAAA1N,KAAAxC,GAIA,OAAAkQ,kBCrBAhN,EAAAC,QAXA,SAAAkB,EAAAy+F,GAIA,IAHA,IAAA1zF,GAAA,EACAc,EAAAxO,MAAA2C,KAEA+K,EAAA/K,GACA6L,EAAAd,GAAA0zF,EAAA1zF,GAGA,OAAAc,oBCjBA,IAAA4J,EAAiBzY,EAAQ,KACzBqX,EAAmBrX,EAAQ,KAI3Bs8F,EAAA,qBAaAz6F,EAAAC,QAJA,SAAAlD,GACA,OAAAyY,EAAAzY,IAAA6Z,EAAA7Z,IAAA09F,kBCEAz6F,EAAAC,QAJA,WACA,2BCdA,IAAA2W,EAAiBzY,EAAQ,KACzBw1E,EAAex1E,EAAQ,KACvBqX,EAAmBrX,EAAQ,KA8B3B0hG,EAAA,GACAA,EAZA,yBAYAA,EAXA,yBAWAA,EAVA,sBAUAA,EATA,uBASAA,EARA,uBAQAA,EAPA,uBAOAA,EANA,8BAMAA,EALA,wBAKAA,EAJA,yBAIA,EACAA,EA5BA,sBA4BAA,EA3BA,kBA2BAA,EAfA,wBAeAA,EA1BA,oBA0BAA,EAdA,qBAcAA,EAzBA,iBAyBAA,EAxBA,kBAwBAA,EAvBA,qBAuBAA,EAtBA,gBAsBAA,EArBA,mBAqBAA,EApBA,mBAoBAA,EAnBA,mBAmBAA,EAlBA,gBAkBAA,EAjBA,mBAiBAA,EAhBA,qBAgBA,EAaA7/F,EAAAC,QAJA,SAAAlD,GACA,OAAAyY,EAAAzY,IAAA42E,EAAA52E,EAAAU,WAAAoiG,EAAAjpF,EAAA7Z,oBC/BAiD,EAAAC,QANA,SAAAsC,GACA,gBAAAxF,GACA,OAAAwF,EAAAxF,uBCTA,SAAAiD,GAAA,IAAAL,EAAiBxB,EAAQ,KAIzB40E,EAA4C9yE,MAAA+yE,UAAA/yE,EAG5CgzE,EAAAF,GAAA,iBAAA/yE,SAAAgzE,UAAAhzE,EAMA8/F,EAHA7sB,KAAAhzE,UAAA8yE,GAGApzE,EAAAsN,QAGAsmE,EAAA,WACA,IAEA,IAAAjpB,EAAA2oB,KAAA8sB,SAAA9sB,EAAA8sB,QAAA,QAAAz1C,MAEA,OAAAA,GAKAw1C,KAAAE,SAAAF,EAAAE,QAAA,QACG,MAAAx8F,KAXH,GAcAxD,EAAAC,QAAAszE,0CC9BA,IAAA0sB,EAAkB9hG,EAAQ,KAC1B+hG,EAAiB/hG,EAAQ,KAOzByG,EAHA5H,OAAAuG,UAGAqB,eAyBA5E,EAAAC,QAhBA,SAAAqC,GACA,IAAA29F,EAAA39F,GACA,OAAA49F,EAAA59F,GAGA,IAAA0K,EAAA,GAEA,QAAAlQ,KAAAE,OAAAsF,GACAsC,EAAAzB,KAAAb,EAAAxF,IAAA,eAAAA,GACAkQ,EAAA1N,KAAAxC,GAIA,OAAAkQ,kBC7BA,IAAA2lE,EAAA31E,OAAAuG,UAeAvD,EAAAC,QANA,SAAAlD,GACA,IAAAojG,EAAApjG,KAAAkK,YAEA,OAAAlK,KADA,mBAAAojG,KAAA58F,WAAAovE,qBCZA,IAIAutB,EAJc/hG,EAAQ,IAItBiiG,CAAApjG,OAAAY,KAAAZ,QACAgD,EAAAC,QAAAigG,iBCSAlgG,EAAAC,QANA,SAAAsC,EAAA89F,GACA,gBAAAh6E,GACA,OAAA9jB,EAAA89F,EAAAh6E,uBCVA,IAAAi6E,EAAeniG,EAAQ,KACvB2X,EAAU3X,EAAQ,KAClBoiG,EAAcpiG,EAAQ,KACtBqiG,EAAUriG,EAAQ,KAClBsiG,EAActiG,EAAQ,KACtByY,EAAiBzY,EAAQ,KACzBw9F,EAAex9F,EAAQ,KAYvBuiG,EAAA/E,EAAA2E,GACAK,EAAAhF,EAAA7lF,GACA8qF,EAAAjF,EAAA4E,GACAM,EAAAlF,EAAA6E,GACAM,EAAAnF,EAAA8E,GASAjG,EAAA5jF,GAEA0pF,GAlBA,qBAkBA9F,EAAA,IAAA8F,EAAA,IAAAS,YAAA,MAAAjrF,GAvBA,gBAuBA0kF,EAAA,IAAA1kF,IAAAyqF,GArBA,oBAqBA/F,EAAA+F,EAAAzpE,YAAA0pE,GApBA,gBAoBAhG,EAAA,IAAAgG,IAAAC,GAnBA,oBAmBAjG,EAAA,IAAAiG,MACAjG,EAAA,SAAAz9F,GACA,IAAAiQ,EAAA4J,EAAA7Z,GACAojG,EAzBA,mBAyBAnzF,EAAAjQ,EAAAkK,iBAAAlI,EACAiiG,EAAAb,EAAAxE,EAAAwE,GAAA,GAEA,GAAAa,EACA,OAAAA,GACA,KAAAN,EACA,MA3BA,oBA6BA,KAAAC,EACA,MAnCA,eAqCA,KAAAC,EACA,MApCA,mBAsCA,KAAAC,EACA,MAtCA,eAwCA,KAAAC,EACA,MAxCA,mBA4CA,OAAA9zF,IAIAhN,EAAAC,QAAAu6F,mBC9DA,IAKA8F,EALgBniG,EAAQ,IAKxBsO,CAJWtO,EAAQ,KAInB,YACA6B,EAAAC,QAAAqgG,mBCNA,IAKAC,EALgBpiG,EAAQ,IAKxBsO,CAJWtO,EAAQ,KAInB,WACA6B,EAAAC,QAAAsgG,mBCNA,IAKAC,EALgBriG,EAAQ,IAKxBsO,CAJWtO,EAAQ,KAInB,OACA6B,EAAAC,QAAAugG,mBCNA,IAKAC,EALgBtiG,EAAQ,IAKxBsO,CAJWtO,EAAQ,KAInB,WACA6B,EAAAC,QAAAwgG,mBCNA,IAAAQ,EAAsB9iG,EAAQ,KAgC9B+iG,EA/BuB/iG,EAAQ,IA+B/BgjG,CAAA,SAAAn0F,EAAAjQ,EAAAD,GACAmkG,EAAAj0F,EAAAlQ,EAAAC,KAEAiD,EAAAC,QAAAihG,mBCnCA,IAAAjkG,EAAqBkB,EAAQ,KAyB7B6B,EAAAC,QAbA,SAAAqC,EAAAxF,EAAAC,GACA,aAAAD,GAAAG,EACAA,EAAAqF,EAAAxF,EAAA,CACAK,cAAA,EACAD,YAAA,EACAH,QACAK,UAAA,IAGAkF,EAAAxF,GAAAC,oBCrBA,IAAA0P,EAAgBtO,EAAQ,KAExBlB,EAAA,WACA,IACA,IAAAsF,EAAAkK,EAAAzP,OAAA,kBAEA,OADAuF,EAAA,GAAW,OACXA,EACG,MAAAiB,KALH,GAQAxD,EAAAC,QAAAhD,mBCVA,IAAAmkG,EAAsBjjG,EAAQ,KAC9BkjG,EAAqBljG,EAAQ,KAC7BmjG,EAAmBnjG,EAAQ,KAC3BM,EAAcN,EAAQ,KAmBtB6B,EAAAC,QARA,SAAAi1F,EAAAqM,GACA,gBAAA/2B,EAAAo1B,GACA,IAAAr9F,EAAA9D,EAAA+rE,GAAA42B,EAAAC,EACAG,EAAAD,MAAA,GACA,OAAAh/F,EAAAioE,EAAA0qB,EAAAoM,EAAA1B,EAAA,GAAA4B,oBCIAxhG,EAAAC,QAZA,SAAAsM,EAAA2oF,EAAA0K,EAAA4B,GAIA,IAHA,IAAAt1F,GAAA,EACAzO,EAAA,MAAA8O,EAAA,EAAAA,EAAA9O,SAEAyO,EAAAzO,GAAA,CACA,IAAAV,EAAAwP,EAAAL,GACAgpF,EAAAsM,EAAAzkG,EAAA6iG,EAAA7iG,GAAAwP,GAGA,OAAAi1F,oBCnBA,IAAAC,EAAetjG,EAAQ,KAqBvB6B,EAAAC,QAPA,SAAAuqE,EAAA0qB,EAAA0K,EAAA4B,GAIA,OAHAC,EAAAj3B,EAAA,SAAAztE,EAAAD,EAAA0tE,GACA0qB,EAAAsM,EAAAzkG,EAAA6iG,EAAA7iG,GAAAytE,KAEAg3B,oBClBA,IAAAE,EAAiBvjG,EAAQ,KAYzBsjG,EAXqBtjG,EAAQ,IAW7BwjG,CAAAD,GACA1hG,EAAAC,QAAAwhG,mBCbA,IAAAG,EAAczjG,EAAQ,KACtBP,EAAWO,EAAQ,KAenB6B,EAAAC,QAJA,SAAAqC,EAAAs9F,GACA,OAAAt9F,GAAAs/F,EAAAt/F,EAAAs9F,EAAAhiG,qBCbA,IAcAgkG,EAdoBzjG,EAAQ,IAc5B0jG,GACA7hG,EAAAC,QAAA2hG,iBCWA5hG,EAAAC,QAnBA,SAAA6hG,GACA,gBAAAx/F,EAAAs9F,EAAAf,GAMA,IALA,IAAA3yF,GAAA,EACA61F,EAAA/kG,OAAAsF,GACAW,EAAA47F,EAAAv8F,GACA7E,EAAAwF,EAAAxF,OAEAA,KAAA,CACA,IAAAX,EAAAmG,EAAA6+F,EAAArkG,IAAAyO,GAEA,QAAA0zF,EAAAmC,EAAAjlG,KAAAilG,GACA,MAIA,OAAAz/F,qBCtBA,IAAAiU,EAAkBpY,EAAQ,KAmC1B6B,EAAAC,QAxBA,SAAA+hG,EAAAF,GACA,gBAAAt3B,EAAAo1B,GACA,SAAAp1B,EACA,OAAAA,EAGA,IAAAj0D,EAAAi0D,GACA,OAAAw3B,EAAAx3B,EAAAo1B,GAOA,IAJA,IAAAniG,EAAA+sE,EAAA/sE,OACAyO,EAAA41F,EAAArkG,GAAA,EACAskG,EAAA/kG,OAAAwtE,IAEAs3B,EAAA51F,QAAAzO,KACA,IAAAmiG,EAAAmC,EAAA71F,KAAA61F,KAKA,OAAAv3B,qBC/BA,IAAAy3B,EAAkB9jG,EAAQ,KAC1B+jG,EAA0B/jG,EAAQ,KAClCgkG,EAAehkG,EAAQ,KACvBM,EAAcN,EAAQ,KACtBg4C,EAAeh4C,EAAQ,KA4BvB6B,EAAAC,QAlBA,SAAAlD,GAGA,yBAAAA,EACAA,EAGA,MAAAA,EACAolG,EAGA,iBAAAplG,EACA0B,EAAA1B,GAAAmlG,EAAAnlG,EAAA,GAAAA,EAAA,IAAAklG,EAAAllG,GAGAo5C,EAAAp5C,qBC7BA,IAAAqlG,EAAkBjkG,EAAQ,KAC1BkkG,EAAmBlkG,EAAQ,KAC3BmkG,EAA8BnkG,EAAQ,KAsBtC6B,EAAAC,QAZA,SAAAvC,GACA,IAAA6kG,EAAAF,EAAA3kG,GAEA,UAAA6kG,EAAA9kG,QAAA8kG,EAAA,MACAD,EAAAC,EAAA,MAAAA,EAAA,OAGA,SAAAjgG,GACA,OAAAA,IAAA5E,GAAA0kG,EAAA9/F,EAAA5E,EAAA6kG,sBCpBA,IAAAjxB,EAAYnzE,EAAQ,KACpBsX,EAAkBtX,EAAQ,KAI1B4zE,EAAA,EACAC,EAAA,EAyDAhyE,EAAAC,QA7CA,SAAAqC,EAAA5E,EAAA6kG,EAAA3sF,GACA,IAAA1J,EAAAq2F,EAAA9kG,OACAA,EAAAyO,EACAs2F,GAAA5sF,EAEA,SAAAtT,EACA,OAAA7E,EAKA,IAFA6E,EAAAtF,OAAAsF,GAEA4J,KAAA,CACA,IAAAU,EAAA21F,EAAAr2F,GAEA,GAAAs2F,GAAA51F,EAAA,GAAAA,EAAA,KAAAtK,EAAAsK,EAAA,MAAAA,EAAA,KAAAtK,GACA,SAIA,OAAA4J,EAAAzO,GAAA,CAEA,IAAAX,GADA8P,EAAA21F,EAAAr2F,IACA,GACAqyF,EAAAj8F,EAAAxF,GACA82E,EAAAhnE,EAAA,GAEA,GAAA41F,GAAA51F,EAAA,IACA,QAAA7N,IAAAw/F,KAAAzhG,KAAAwF,GACA,aAEK,CACL,IAAAuT,EAAA,IAAAy7D,EAEA,GAAA17D,EACA,IAAA5I,EAAA4I,EAAA2oF,EAAA3qB,EAAA92E,EAAAwF,EAAA5E,EAAAmY,GAGA,UAAA9W,IAAAiO,EAAAyI,EAAAm+D,EAAA2qB,EAAAxsB,EAAAC,EAAAp8D,EAAAC,GAAA7I,GACA,UAKA,2BC5DA,IAAAy1F,EAAyBtkG,EAAQ,KACjCP,EAAWO,EAAQ,KAuBnB6B,EAAAC,QAbA,SAAAqC,GAIA,IAHA,IAAA0K,EAAApP,EAAA0E,GACA7E,EAAAuP,EAAAvP,OAEAA,KAAA,CACA,IAAAX,EAAAkQ,EAAAvP,GACAV,EAAAuF,EAAAxF,GACAkQ,EAAAvP,GAAA,CAAAX,EAAAC,EAAA0lG,EAAA1lG,IAGA,OAAAiQ,oBCrBA,IAAAyI,EAAkBtX,EAAQ,KAC1B2G,EAAU3G,EAAQ,KAClBukG,EAAYvkG,EAAQ,KACpB61E,EAAY71E,EAAQ,KACpBskG,EAAyBtkG,EAAQ,KACjCmkG,EAA8BnkG,EAAQ,KACtC21E,EAAY31E,EAAQ,KAIpB4zE,EAAA,EACAC,EAAA,EAqBAhyE,EAAAC,QAXA,SAAA8zE,EAAAH,GACA,OAAAI,EAAAD,IAAA0uB,EAAA7uB,GACA0uB,EAAAxuB,EAAAC,GAAAH,GAGA,SAAAtxE,GACA,IAAAi8F,EAAAz5F,EAAAxC,EAAAyxE,GACA,YAAAh1E,IAAAw/F,OAAA3qB,EAAA8uB,EAAApgG,EAAAyxE,GAAAt+D,EAAAm+D,EAAA2qB,EAAAxsB,EAAAC,sBC5BA,IAAA2wB,EAAcxkG,EAAQ,KAiCtB6B,EAAAC,QALA,SAAAqC,EAAAyxE,EAAAtmD,GACA,IAAAzgB,EAAA,MAAA1K,OAAAvD,EAAA4jG,EAAArgG,EAAAyxE,GACA,YAAAh1E,IAAAiO,EAAAygB,EAAAzgB,oBC9BA,IAAA41F,EAAoBzkG,EAAQ,KAI5B0kG,EAAA,mGAGAC,EAAA,WASA7uB,EAAA2uB,EAAA,SAAA9gG,GACA,IAAAkL,EAAA,GAWA,OATA,KAAAlL,EAAAihG,WAAA,IAGA/1F,EAAA1N,KAAA,IAGAwC,EAAAmG,QAAA46F,EAAA,SAAAp6E,EAAAjW,EAAAwwF,EAAAC,GACAj2F,EAAA1N,KAAA0jG,EAAAC,EAAAh7F,QAAA66F,EAAA,MAAAtwF,GAAAiW,KAEAzb,IAEAhN,EAAAC,QAAAg0E,mBC9BA,IAAAivB,EAAc/kG,EAAQ,KAItBglG,EAAA,IAsBAnjG,EAAAC,QAZA,SAAAsC,GACA,IAAAyK,EAAAk2F,EAAA3gG,EAAA,SAAAzF,GAKA,OAJAy+C,EAAA94C,OAAA0gG,GACA5nD,EAAApvC,QAGArP,IAEAy+C,EAAAvuC,EAAAuuC,MACA,OAAAvuC,oBCvBA,IAAAoJ,EAAejY,EAAQ,KAIvBilG,EAAA,sBA8CA,SAAAF,EAAA3gG,EAAA8gG,GACA,sBAAA9gG,GAAA,MAAA8gG,GAAA,mBAAAA,EACA,UAAA5jG,UAAA2jG,GAGA,IAAAE,EAAA,SAAAA,IACA,IAAAx9F,EAAAtI,UACAV,EAAAumG,IAAA/9F,MAAAlC,KAAA0C,KAAA,GACAy1C,EAAA+nD,EAAA/nD,MAEA,GAAAA,EAAAlvC,IAAAvP,GACA,OAAAy+C,EAAAz2C,IAAAhI,GAGA,IAAAkQ,EAAAzK,EAAA+C,MAAAlC,KAAA0C,GAEA,OADAw9F,EAAA/nD,QAAAx2C,IAAAjI,EAAAkQ,IAAAuuC,EACAvuC,GAIA,OADAs2F,EAAA/nD,MAAA,IAAA2nD,EAAAK,OAAAntF,GACAktF,EAIAJ,EAAAK,MAAAntF,EACApW,EAAAC,QAAAijG,mBC3EA,IAAAM,EAAmBrlG,EAAQ,KA4B3B6B,EAAAC,QAJA,SAAAlD,GACA,aAAAA,EAAA,GAAAymG,EAAAzmG,qBCzBA,IAAAmC,EAAaf,EAAQ,KACrBslG,EAAetlG,EAAQ,KACvBM,EAAcN,EAAQ,KACtB2O,EAAe3O,EAAQ,KAIvB4O,EAAA,IAGA8wF,EAAA3+F,IAAAqE,eAAAxE,EACA2kG,EAAA7F,IAAA50E,cAAAlqB,EA6BAiB,EAAAC,QAnBA,SAAAujG,EAAAzmG,GAEA,oBAAAA,EACA,OAAAA,EAGA,GAAA0B,EAAA1B,GAEA,OAAA0mG,EAAA1mG,EAAAymG,GAAA,GAGA,GAAA12F,EAAA/P,GACA,OAAA2mG,IAAAvgG,KAAApG,GAAA,GAGA,IAAAiQ,EAAAjQ,EAAA,GACA,WAAAiQ,GAAA,EAAAjQ,IAAAgQ,EAAA,KAAAC,kBChBAhN,EAAAC,QAZA,SAAAsM,EAAAqzF,GAKA,IAJA,IAAA1zF,GAAA,EACAzO,EAAA,MAAA8O,EAAA,EAAAA,EAAA9O,OACAuP,EAAAxO,MAAAf,KAEAyO,EAAAzO,GACAuP,EAAAd,GAAA0zF,EAAArzF,EAAAL,KAAAK,GAGA,OAAAS,oBClBA,IAAA22F,EAAgBxlG,EAAQ,KACxBylG,EAAczlG,EAAQ,KAiCtB6B,EAAAC,QAJA,SAAAqC,EAAAyxE,GACA,aAAAzxE,GAAAshG,EAAAthG,EAAAyxE,EAAA4vB,mBCnBA3jG,EAAAC,QAJA,SAAAqC,EAAAxF,GACA,aAAAwF,GAAAxF,KAAAE,OAAAsF,qBCTA,IAAAuxE,EAAe11E,EAAQ,KACvB00E,EAAkB10E,EAAQ,KAC1BM,EAAcN,EAAQ,KACtBkhG,EAAclhG,EAAQ,KACtBw1E,EAAex1E,EAAQ,KACvB21E,EAAY31E,EAAQ,KAoCpB6B,EAAAC,QAxBA,SAAAqC,EAAAyxE,EAAA8vB,GAMA,IAJA,IAAA33F,GAAA,EACAzO,GAFAs2E,EAAAF,EAAAE,EAAAzxE,IAEA7E,OACAuP,GAAA,IAEAd,EAAAzO,GAAA,CACA,IAAAX,EAAAg3E,EAAAC,EAAA7nE,IAEA,KAAAc,EAAA,MAAA1K,GAAAuhG,EAAAvhG,EAAAxF,IACA,MAGAwF,IAAAxF,GAGA,OAAAkQ,KAAAd,GAAAzO,EACAuP,KAGAvP,EAAA,MAAA6E,EAAA,EAAAA,EAAA7E,SACAk2E,EAAAl2E,IAAA4hG,EAAAviG,EAAAW,KAAAgB,EAAA6D,IAAAuwE,EAAAvwE,oBClBAtC,EAAAC,QAJA,SAAAlD,GACA,OAAAA,oBCjBA,IAAA+mG,EAAmB3lG,EAAQ,KAC3B4lG,EAAuB5lG,EAAQ,KAC/B61E,EAAY71E,EAAQ,KACpB21E,EAAY31E,EAAQ,KA6BpB6B,EAAAC,QAJA,SAAA8zE,GACA,OAAAC,EAAAD,GAAA+vB,EAAAhwB,EAAAC,IAAAgwB,EAAAhwB,mBChBA/zE,EAAAC,QANA,SAAAnD,GACA,gBAAAwF,GACA,aAAAA,OAAAvD,EAAAuD,EAAAxF,sBCTA,IAAA6lG,EAAcxkG,EAAQ,KAgBtB6B,EAAAC,QANA,SAAA8zE,GACA,gBAAAzxE,GACA,OAAAqgG,EAAArgG,EAAAyxE","file":"static/js/0.63e3d203.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n}","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","\"use strict\";\n\nvar _CSSTransition = _interopRequireDefault(require(\"./CSSTransition\"));\n\nvar _ReplaceTransition = _interopRequireDefault(require(\"./ReplaceTransition\"));\n\nvar _TransitionGroup = _interopRequireDefault(require(\"./TransitionGroup\"));\n\nvar _Transition = _interopRequireDefault(require(\"./Transition\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nmodule.exports = {\n  Transition: _Transition.default,\n  TransitionGroup: _TransitionGroup.default,\n  ReplaceTransition: _ReplaceTransition.default,\n  CSSTransition: _CSSTransition.default\n};","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","function _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nmodule.exports = _interopRequireDefault;","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar PropTypes = _interopRequireWildcard(require(\"prop-types\"));\n\nvar _addClass = _interopRequireDefault(require(\"dom-helpers/class/addClass\"));\n\nvar _removeClass = _interopRequireDefault(require(\"dom-helpers/class/removeClass\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _Transition = _interopRequireDefault(require(\"./Transition\"));\n\nvar _PropTypes = require(\"./utils/PropTypes\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _interopRequireWildcard(obj) {\n  if (obj && obj.__esModule) {\n    return obj;\n  } else {\n    var newObj = {};\n\n    if (obj != null) {\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key)) {\n          var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {};\n\n          if (desc.get || desc.set) {\n            Object.defineProperty(newObj, key, desc);\n          } else {\n            newObj[key] = obj[key];\n          }\n        }\n      }\n    }\n\n    newObj.default = obj;\n    return newObj;\n  }\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar addClass = function addClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _addClass.default)(node, c);\n  });\n};\n\nvar removeClass = function removeClass(node, classes) {\n  return node && classes && classes.split(' ').forEach(function (c) {\n    return (0, _removeClass.default)(node, c);\n  });\n};\n/**\n * A transition component inspired by the excellent\n * [ng-animate](http://www.nganimate.org/) library, you should use it if you're\n * using CSS transitions or animations. It's built upon the\n * [`Transition`](https://reactcommunity.org/react-transition-group/transition)\n * component, so it inherits all of its props.\n *\n * `CSSTransition` applies a pair of class names during the `appear`, `enter`,\n * and `exit` states of the transition. The first class is applied and then a\n * second `*-active` class in order to activate the CSSS transition. After the\n * transition, matching `*-done` class names are applied to persist the\n * transition state.\n *\n * ```jsx\n * function App() {\n *   const [inProp, setInProp] = useState(false);\n *   return (\n *     <div>\n *       <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\n *         <div>\n *           {\"I'll receive my-node-* classes\"}\n *         </div>\n *       </CSSTransition>\n *       <button type=\"button\" onClick={() => setInProp(true)}>\n *         Click to Enter\n *       </button>\n *     </div>\n *   );\n * }\n * ```\n *\n * When the `in` prop is set to `true`, the child component will first receive\n * the class `example-enter`, then the `example-enter-active` will be added in\n * the next tick. `CSSTransition` [forces a\n * reflow](https://github.com/reactjs/react-transition-group/blob/5007303e729a74be66a21c3e2205e4916821524b/src/CSSTransition.js#L208-L215)\n * between before adding the `example-enter-active`. This is an important trick\n * because it allows us to transition between `example-enter` and\n * `example-enter-active` even though they were added immediately one after\n * another. Most notably, this is what makes it possible for us to animate\n * _appearance_.\n *\n * ```css\n * .my-node-enter {\n *   opacity: 0;\n * }\n * .my-node-enter-active {\n *   opacity: 1;\n *   transition: opacity 200ms;\n * }\n * .my-node-exit {\n *   opacity: 1;\n * }\n * .my-node-exit-active {\n *   opacity: 0;\n *   transition: opacity: 200ms;\n * }\n * ```\n *\n * `*-active` classes represent which styles you want to animate **to**.\n */\n\n\nvar CSSTransition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(CSSTransition, _React$Component);\n\n  function CSSTransition() {\n    var _this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(args)) || this;\n\n    _this.onEnter = function (node, appearing) {\n      var _this$getClassNames = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          className = _this$getClassNames.className;\n\n      _this.removeClasses(node, 'exit');\n\n      addClass(node, className);\n\n      if (_this.props.onEnter) {\n        _this.props.onEnter(node, appearing);\n      }\n    };\n\n    _this.onEntering = function (node, appearing) {\n      var _this$getClassNames2 = _this.getClassNames(appearing ? 'appear' : 'enter'),\n          activeClassName = _this$getClassNames2.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onEntering) {\n        _this.props.onEntering(node, appearing);\n      }\n    };\n\n    _this.onEntered = function (node, appearing) {\n      var appearClassName = _this.getClassNames('appear').doneClassName;\n\n      var enterClassName = _this.getClassNames('enter').doneClassName;\n\n      var doneClassName = appearing ? appearClassName + \" \" + enterClassName : enterClassName;\n\n      _this.removeClasses(node, appearing ? 'appear' : 'enter');\n\n      addClass(node, doneClassName);\n\n      if (_this.props.onEntered) {\n        _this.props.onEntered(node, appearing);\n      }\n    };\n\n    _this.onExit = function (node) {\n      var _this$getClassNames3 = _this.getClassNames('exit'),\n          className = _this$getClassNames3.className;\n\n      _this.removeClasses(node, 'appear');\n\n      _this.removeClasses(node, 'enter');\n\n      addClass(node, className);\n\n      if (_this.props.onExit) {\n        _this.props.onExit(node);\n      }\n    };\n\n    _this.onExiting = function (node) {\n      var _this$getClassNames4 = _this.getClassNames('exit'),\n          activeClassName = _this$getClassNames4.activeClassName;\n\n      _this.reflowAndAddClass(node, activeClassName);\n\n      if (_this.props.onExiting) {\n        _this.props.onExiting(node);\n      }\n    };\n\n    _this.onExited = function (node) {\n      var _this$getClassNames5 = _this.getClassNames('exit'),\n          doneClassName = _this$getClassNames5.doneClassName;\n\n      _this.removeClasses(node, 'exit');\n\n      addClass(node, doneClassName);\n\n      if (_this.props.onExited) {\n        _this.props.onExited(node);\n      }\n    };\n\n    _this.getClassNames = function (type) {\n      var classNames = _this.props.classNames;\n      var isStringClassNames = typeof classNames === 'string';\n      var prefix = isStringClassNames && classNames ? classNames + '-' : '';\n      var className = isStringClassNames ? prefix + type : classNames[type];\n      var activeClassName = isStringClassNames ? className + '-active' : classNames[type + 'Active'];\n      var doneClassName = isStringClassNames ? className + '-done' : classNames[type + 'Done'];\n      return {\n        className: className,\n        activeClassName: activeClassName,\n        doneClassName: doneClassName\n      };\n    };\n\n    return _this;\n  }\n\n  var _proto = CSSTransition.prototype;\n\n  _proto.removeClasses = function removeClasses(node, type) {\n    var _this$getClassNames6 = this.getClassNames(type),\n        className = _this$getClassNames6.className,\n        activeClassName = _this$getClassNames6.activeClassName,\n        doneClassName = _this$getClassNames6.doneClassName;\n\n    className && removeClass(node, className);\n    activeClassName && removeClass(node, activeClassName);\n    doneClassName && removeClass(node, doneClassName);\n  };\n\n  _proto.reflowAndAddClass = function reflowAndAddClass(node, className) {\n    // This is for to force a repaint,\n    // which is necessary in order to transition styles when adding a class name.\n    if (className) {\n      /* eslint-disable no-unused-expressions */\n      node && node.scrollTop;\n      /* eslint-enable no-unused-expressions */\n\n      addClass(node, className);\n    }\n  };\n\n  _proto.render = function render() {\n    var props = _extends({}, this.props);\n\n    delete props.classNames;\n    return _react.default.createElement(_Transition.default, _extends({}, props, {\n      onEnter: this.onEnter,\n      onEntered: this.onEntered,\n      onEntering: this.onEntering,\n      onExit: this.onExit,\n      onExiting: this.onExiting,\n      onExited: this.onExited\n    }));\n  };\n\n  return CSSTransition;\n}(_react.default.Component);\n\nCSSTransition.defaultProps = {\n  classNames: ''\n};\nCSSTransition.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, _Transition.default.propTypes, {\n  /**\n   * The animation classNames applied to the component as it enters, exits or\n   * has finished the transition. A single name can be provided and it will be\n   * suffixed for each stage: e.g.\n   *\n   * `classNames=\"fade\"` applies `fade-enter`, `fade-enter-active`,\n   * `fade-enter-done`, `fade-exit`, `fade-exit-active`, `fade-exit-done`,\n   * `fade-appear`, `fade-appear-active`, and `fade-appear-done`.\n   *\n   * **Note**: `fade-appear-done` and `fade-enter-done` will _both_ be applied.\n   * This allows you to define different behavior for when appearing is done and\n   * when regular entering is done, using selectors like\n   * `.fade-enter-done:not(.fade-appear-done)`. For example, you could apply an\n   * epic entrance animation when element first appears in the DOM using\n   * [Animate.css](https://daneden.github.io/animate.css/). Otherwise you can\n   * simply use `fade-enter-done` for defining both cases.\n   *\n   * Each individual classNames can also be specified independently like:\n   *\n   * ```js\n   * classNames={{\n   *  appear: 'my-appear',\n   *  appearActive: 'my-active-appear',\n   *  appearDone: 'my-done-appear',\n   *  enter: 'my-enter',\n   *  enterActive: 'my-active-enter',\n   *  enterDone: 'my-done-enter',\n   *  exit: 'my-exit',\n   *  exitActive: 'my-active-exit',\n   *  exitDone: 'my-done-exit',\n   * }}\n   * ```\n   *\n   * If you want to set these classes using CSS Modules:\n   *\n   * ```js\n   * import styles from './styles.css';\n   * ```\n   *\n   * you might want to use camelCase in your CSS file, that way could simply\n   * spread them instead of listing them one by one:\n   *\n   * ```js\n   * classNames={{ ...styles }}\n   * ```\n   *\n   * @type {string | {\n   *  appear?: string,\n   *  appearActive?: string,\n   *  appearDone?: string,\n   *  enter?: string,\n   *  enterActive?: string,\n   *  enterDone?: string,\n   *  exit?: string,\n   *  exitActive?: string,\n   *  exitDone?: string,\n   * }}\n   */\n  classNames: _PropTypes.classNamesShape,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or 'appear' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEnter: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter-active' or\n   * 'appear-active' class is applied.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntering: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'enter' or\n   * 'appear' classes are **removed** and the `done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement, isAppearing: bool)\n   */\n  onEntered: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' class is\n   * applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExit: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit-active' is applied.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExiting: PropTypes.func,\n\n  /**\n   * A `<Transition>` callback fired immediately after the 'exit' classes\n   * are **removed** and the `exit-done` class is added to the DOM node.\n   *\n   * @type Function(node: HtmlElement)\n   */\n  onExited: PropTypes.func\n}) : {};\nvar _default = CSSTransition;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = addClass;\n\nvar _hasClass = _interopRequireDefault(require(\"./hasClass\"));\n\nfunction addClass(element, className) {\n  if (element.classList) element.classList.add(className);else if (!(0, _hasClass.default)(element, className)) if (typeof element.className === 'string') element.className = element.className + ' ' + className;else element.setAttribute('class', (element.className && element.className.baseVal || '') + ' ' + className);\n}\n\nmodule.exports = exports[\"default\"];","\"use strict\";\n\nexports.__esModule = true;\nexports.default = hasClass;\n\nfunction hasClass(element, className) {\n  if (element.classList) return !!className && element.classList.contains(className);else return (\" \" + (element.className.baseVal || element.className) + \" \").indexOf(\" \" + className + \" \") !== -1;\n}\n\nmodule.exports = exports[\"default\"];","'use strict';\n\nfunction replaceClassName(origClass, classToRemove) {\n  return origClass.replace(new RegExp('(^|\\\\s)' + classToRemove + '(?:\\\\s|$)', 'g'), '$1').replace(/\\s+/g, ' ').replace(/^\\s*|\\s*$/g, '');\n}\n\nmodule.exports = function removeClass(element, className) {\n  if (element.classList) element.classList.remove(className);else if (typeof element.className === 'string') element.className = replaceClassName(element.className, className);else element.setAttribute('class', replaceClassName(element.className && element.className.baseVal || '', className));\n};","\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = require(\"react-dom\");\n\nvar _TransitionGroup = _interopRequireDefault(require(\"./TransitionGroup\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n/**\n * The `<ReplaceTransition>` component is a specialized `Transition` component\n * that animates between two children.\n *\n * ```jsx\n * <ReplaceTransition in>\n *   <Fade><div>I appear first</div></Fade>\n *   <Fade><div>I replace the above</div></Fade>\n * </ReplaceTransition>\n * ```\n */\n\n\nvar ReplaceTransition =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inheritsLoose(ReplaceTransition, _React$Component);\n\n  function ReplaceTransition() {\n    var _this;\n\n    for (var _len = arguments.length, _args = new Array(_len), _key = 0; _key < _len; _key++) {\n      _args[_key] = arguments[_key];\n    }\n\n    _this = _React$Component.call.apply(_React$Component, [this].concat(_args)) || this;\n\n    _this.handleEnter = function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      return _this.handleLifecycle('onEnter', 0, args);\n    };\n\n    _this.handleEntering = function () {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      return _this.handleLifecycle('onEntering', 0, args);\n    };\n\n    _this.handleEntered = function () {\n      for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      return _this.handleLifecycle('onEntered', 0, args);\n    };\n\n    _this.handleExit = function () {\n      for (var _len5 = arguments.length, args = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n        args[_key5] = arguments[_key5];\n      }\n\n      return _this.handleLifecycle('onExit', 1, args);\n    };\n\n    _this.handleExiting = function () {\n      for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n        args[_key6] = arguments[_key6];\n      }\n\n      return _this.handleLifecycle('onExiting', 1, args);\n    };\n\n    _this.handleExited = function () {\n      for (var _len7 = arguments.length, args = new Array(_len7), _key7 = 0; _key7 < _len7; _key7++) {\n        args[_key7] = arguments[_key7];\n      }\n\n      return _this.handleLifecycle('onExited', 1, args);\n    };\n\n    return _this;\n  }\n\n  var _proto = ReplaceTransition.prototype;\n\n  _proto.handleLifecycle = function handleLifecycle(handler, idx, originalArgs) {\n    var _child$props;\n\n    var children = this.props.children;\n\n    var child = _react.default.Children.toArray(children)[idx];\n\n    if (child.props[handler]) (_child$props = child.props)[handler].apply(_child$props, originalArgs);\n    if (this.props[handler]) this.props[handler]((0, _reactDom.findDOMNode)(this));\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        children = _this$props.children,\n        inProp = _this$props.in,\n        props = _objectWithoutPropertiesLoose(_this$props, [\"children\", \"in\"]);\n\n    var _React$Children$toArr = _react.default.Children.toArray(children),\n        first = _React$Children$toArr[0],\n        second = _React$Children$toArr[1];\n\n    delete props.onEnter;\n    delete props.onEntering;\n    delete props.onEntered;\n    delete props.onExit;\n    delete props.onExiting;\n    delete props.onExited;\n    return _react.default.createElement(_TransitionGroup.default, props, inProp ? _react.default.cloneElement(first, {\n      key: 'first',\n      onEnter: this.handleEnter,\n      onEntering: this.handleEntering,\n      onEntered: this.handleEntered\n    }) : _react.default.cloneElement(second, {\n      key: 'second',\n      onEnter: this.handleExit,\n      onEntering: this.handleExiting,\n      onEntered: this.handleExited\n    }));\n  };\n\n  return ReplaceTransition;\n}(_react.default.Component);\n\nReplaceTransition.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  in: _propTypes.default.bool.isRequired,\n  children: function children(props, propName) {\n    if (_react.default.Children.count(props[propName]) !== 2) return new Error(\"\\\"\" + propName + \"\\\" must be exactly two transition components.\");\n    return null;\n  }\n} : {};\nvar _default = ReplaceTransition;\nexports.default = _default;\nmodule.exports = exports[\"default\"];","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Chart from 'chart.js';\nimport isEqual from 'lodash/isEqual';\nimport keyBy from 'lodash/keyBy';\nvar NODE_ENV = typeof process !== 'undefined' && process.env && process.env.NODE_ENV;\n\nvar ChartComponent = function (_React$Component) {\n  _inherits(ChartComponent, _React$Component);\n\n  function ChartComponent() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, ChartComponent);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _React$Component.call.apply(_React$Component, [this].concat(args))), _this), _this.handleOnClick = function (event) {\n      var instance = _this.chartInstance;\n      var _this$props = _this.props,\n          getDatasetAtEvent = _this$props.getDatasetAtEvent,\n          getElementAtEvent = _this$props.getElementAtEvent,\n          getElementsAtEvent = _this$props.getElementsAtEvent,\n          onElementsClick = _this$props.onElementsClick;\n      getDatasetAtEvent && getDatasetAtEvent(instance.getDatasetAtEvent(event), event);\n      getElementAtEvent && getElementAtEvent(instance.getElementAtEvent(event), event);\n      getElementsAtEvent && getElementsAtEvent(instance.getElementsAtEvent(event), event);\n      onElementsClick && onElementsClick(instance.getElementsAtEvent(event), event); // Backward compatibility\n    }, _this.ref = function (element) {\n      _this.element = element;\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  ChartComponent.prototype.componentWillMount = function componentWillMount() {\n    this.chartInstance = undefined;\n  };\n\n  ChartComponent.prototype.componentDidMount = function componentDidMount() {\n    this.renderChart();\n  };\n\n  ChartComponent.prototype.componentDidUpdate = function componentDidUpdate() {\n    if (this.props.redraw) {\n      this.destroyChart();\n      this.renderChart();\n      return;\n    }\n\n    this.updateChart();\n  };\n\n  ChartComponent.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var _props = this.props,\n        redraw = _props.redraw,\n        type = _props.type,\n        options = _props.options,\n        plugins = _props.plugins,\n        legend = _props.legend,\n        height = _props.height,\n        width = _props.width;\n\n    if (nextProps.redraw === true) {\n      return true;\n    }\n\n    if (height !== nextProps.height || width !== nextProps.width) {\n      return true;\n    }\n\n    if (type !== nextProps.type) {\n      return true;\n    }\n\n    if (!isEqual(legend, nextProps.legend)) {\n      return true;\n    }\n\n    if (!isEqual(options, nextProps.options)) {\n      return true;\n    }\n\n    var nextData = this.transformDataProp(nextProps);\n\n    if (!isEqual(this.shadowDataProp, nextData)) {\n      return true;\n    }\n\n    return !isEqual(plugins, nextProps.plugins);\n  };\n\n  ChartComponent.prototype.componentWillUnmount = function componentWillUnmount() {\n    this.destroyChart();\n  };\n\n  ChartComponent.prototype.transformDataProp = function transformDataProp(props) {\n    var data = props.data;\n\n    if (typeof data == 'function') {\n      var node = this.element;\n      return data(node);\n    } else {\n      return data;\n    }\n  }; // Chart.js directly mutates the data.dataset objects by adding _meta proprerty\n  // this makes impossible to compare the current and next data changes\n  // therefore we memoize the data prop while sending a fake to Chart.js for mutation.\n  // see https://github.com/chartjs/Chart.js/blob/master/src/core/core.controller.js#L615-L617\n\n\n  ChartComponent.prototype.memoizeDataProps = function memoizeDataProps() {\n    if (!this.props.data) {\n      return;\n    }\n\n    var data = this.transformDataProp(this.props);\n    this.shadowDataProp = _extends({}, data, {\n      datasets: data.datasets && data.datasets.map(function (set) {\n        return _extends({}, set);\n      })\n    });\n    this.saveCurrentDatasets(); // to remove the dataset metadata from this chart when the chart is destroyed\n\n    return data;\n  };\n\n  ChartComponent.prototype.checkDatasets = function checkDatasets(datasets) {\n    var isDev = NODE_ENV !== 'production' && NODE_ENV !== 'prod';\n    var usingCustomKeyProvider = this.props.datasetKeyProvider !== ChartComponent.getLabelAsKey;\n    var multipleDatasets = datasets.length > 1;\n\n    if (isDev && multipleDatasets && !usingCustomKeyProvider) {\n      var shouldWarn = false;\n      datasets.forEach(function (dataset) {\n        if (!dataset.label) {\n          shouldWarn = true;\n        }\n      });\n\n      if (shouldWarn) {\n        console.error('[react-chartjs-2] Warning: Each dataset needs a unique key. By default, the \"label\" property on each dataset is used. Alternatively, you may provide a \"datasetKeyProvider\" as a prop that returns a unique key.');\n      }\n    }\n  };\n\n  ChartComponent.prototype.getCurrentDatasets = function getCurrentDatasets() {\n    return this.chartInstance && this.chartInstance.config.data && this.chartInstance.config.data.datasets || [];\n  };\n\n  ChartComponent.prototype.saveCurrentDatasets = function saveCurrentDatasets() {\n    var _this2 = this;\n\n    this.datasets = this.datasets || {};\n    var currentDatasets = this.getCurrentDatasets();\n    currentDatasets.forEach(function (d) {\n      _this2.datasets[_this2.props.datasetKeyProvider(d)] = d;\n    });\n  };\n\n  ChartComponent.prototype.updateChart = function updateChart() {\n    var _this3 = this;\n\n    var options = this.props.options;\n    var data = this.memoizeDataProps(this.props);\n    if (!this.chartInstance) return;\n\n    if (options) {\n      this.chartInstance.options = Chart.helpers.configMerge(this.chartInstance.options, options);\n    } // Pipe datasets to chart instance datasets enabling\n    // seamless transitions\n\n\n    var currentDatasets = this.getCurrentDatasets();\n    var nextDatasets = data.datasets || [];\n    this.checkDatasets(currentDatasets);\n    var currentDatasetsIndexed = keyBy(currentDatasets, this.props.datasetKeyProvider); // We can safely replace the dataset array, as long as we retain the _meta property\n    // on each dataset.\n\n    this.chartInstance.config.data.datasets = nextDatasets.map(function (next) {\n      var current = currentDatasetsIndexed[_this3.props.datasetKeyProvider(next)];\n\n      if (current && current.type === next.type) {\n        // The data array must be edited in place. As chart.js adds listeners to it.\n        current.data.splice(next.data.length);\n        next.data.forEach(function (point, pid) {\n          current.data[pid] = next.data[pid];\n        });\n\n        var _data = next.data,\n            otherProps = _objectWithoutProperties(next, ['data']); // Merge properties. Notice a weakness here. If a property is removed\n        // from next, it will be retained by current and never disappears.\n        // Workaround is to set value to null or undefined in next.\n\n\n        return _extends({}, current, otherProps);\n      } else {\n        return next;\n      }\n    });\n\n    var datasets = data.datasets,\n        rest = _objectWithoutProperties(data, ['datasets']);\n\n    this.chartInstance.config.data = _extends({}, this.chartInstance.config.data, rest);\n    this.chartInstance.update();\n  };\n\n  ChartComponent.prototype.renderChart = function renderChart() {\n    var _props2 = this.props,\n        options = _props2.options,\n        legend = _props2.legend,\n        type = _props2.type,\n        plugins = _props2.plugins;\n    var node = this.element;\n    var data = this.memoizeDataProps();\n\n    if (typeof legend !== 'undefined' && !isEqual(ChartComponent.defaultProps.legend, legend)) {\n      options.legend = legend;\n    }\n\n    this.chartInstance = new Chart(node, {\n      type: type,\n      data: data,\n      options: options,\n      plugins: plugins\n    });\n  };\n\n  ChartComponent.prototype.destroyChart = function destroyChart() {\n    // Put all of the datasets that have existed in the chart back on the chart\n    // so that the metadata associated with this chart get destroyed.\n    // This allows the datasets to be used in another chart. This can happen,\n    // for example, in a tabbed UI where the chart gets created each time the\n    // tab gets switched to the chart and uses the same data).\n    this.saveCurrentDatasets();\n    var datasets = Object.values(this.datasets);\n    this.chartInstance.config.data.datasets = datasets;\n    this.chartInstance.destroy();\n  };\n\n  ChartComponent.prototype.render = function render() {\n    var _props3 = this.props,\n        height = _props3.height,\n        width = _props3.width,\n        id = _props3.id;\n    return React.createElement('canvas', {\n      ref: this.ref,\n      height: height,\n      width: width,\n      id: id,\n      onClick: this.handleOnClick\n    });\n  };\n\n  return ChartComponent;\n}(React.Component);\n\nChartComponent.getLabelAsKey = function (d) {\n  return d.label;\n};\n\nChartComponent.propTypes = {\n  data: PropTypes.oneOfType([PropTypes.object, PropTypes.func]).isRequired,\n  getDatasetAtEvent: PropTypes.func,\n  getElementAtEvent: PropTypes.func,\n  getElementsAtEvent: PropTypes.func,\n  height: PropTypes.number,\n  legend: PropTypes.object,\n  onElementsClick: PropTypes.func,\n  options: PropTypes.object,\n  plugins: PropTypes.arrayOf(PropTypes.object),\n  redraw: PropTypes.bool,\n  type: function type(props, propName, componentName) {\n    if (!Chart.controllers[props[propName]]) {\n      return new Error('Invalid chart type `' + props[propName] + '` supplied to' + ' `' + componentName + '`.');\n    }\n  },\n  width: PropTypes.number,\n  datasetKeyProvider: PropTypes.func\n};\nChartComponent.defaultProps = {\n  legend: {\n    display: true,\n    position: 'bottom'\n  },\n  type: 'doughnut',\n  height: 150,\n  width: 300,\n  redraw: false,\n  options: {},\n  datasetKeyProvider: ChartComponent.getLabelAsKey\n};\nexport default ChartComponent;\nexport var Doughnut = function (_React$Component2) {\n  _inherits(Doughnut, _React$Component2);\n\n  function Doughnut() {\n    _classCallCheck(this, Doughnut);\n\n    return _possibleConstructorReturn(this, _React$Component2.apply(this, arguments));\n  }\n\n  Doughnut.prototype.render = function render() {\n    var _this5 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        return _this5.chartInstance = _ref && _ref.chartInstance;\n      },\n      type: 'doughnut'\n    }));\n  };\n\n  return Doughnut;\n}(React.Component);\nexport var Pie = function (_React$Component3) {\n  _inherits(Pie, _React$Component3);\n\n  function Pie() {\n    _classCallCheck(this, Pie);\n\n    return _possibleConstructorReturn(this, _React$Component3.apply(this, arguments));\n  }\n\n  Pie.prototype.render = function render() {\n    var _this7 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref2) {\n        return _this7.chartInstance = _ref2 && _ref2.chartInstance;\n      },\n      type: 'pie'\n    }));\n  };\n\n  return Pie;\n}(React.Component);\nexport var Line = function (_React$Component4) {\n  _inherits(Line, _React$Component4);\n\n  function Line() {\n    _classCallCheck(this, Line);\n\n    return _possibleConstructorReturn(this, _React$Component4.apply(this, arguments));\n  }\n\n  Line.prototype.render = function render() {\n    var _this9 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref3) {\n        return _this9.chartInstance = _ref3 && _ref3.chartInstance;\n      },\n      type: 'line'\n    }));\n  };\n\n  return Line;\n}(React.Component);\nexport var Bar = function (_React$Component5) {\n  _inherits(Bar, _React$Component5);\n\n  function Bar() {\n    _classCallCheck(this, Bar);\n\n    return _possibleConstructorReturn(this, _React$Component5.apply(this, arguments));\n  }\n\n  Bar.prototype.render = function render() {\n    var _this11 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref4) {\n        return _this11.chartInstance = _ref4 && _ref4.chartInstance;\n      },\n      type: 'bar'\n    }));\n  };\n\n  return Bar;\n}(React.Component);\nexport var HorizontalBar = function (_React$Component6) {\n  _inherits(HorizontalBar, _React$Component6);\n\n  function HorizontalBar() {\n    _classCallCheck(this, HorizontalBar);\n\n    return _possibleConstructorReturn(this, _React$Component6.apply(this, arguments));\n  }\n\n  HorizontalBar.prototype.render = function render() {\n    var _this13 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref5) {\n        return _this13.chartInstance = _ref5 && _ref5.chartInstance;\n      },\n      type: 'horizontalBar'\n    }));\n  };\n\n  return HorizontalBar;\n}(React.Component);\nexport var Radar = function (_React$Component7) {\n  _inherits(Radar, _React$Component7);\n\n  function Radar() {\n    _classCallCheck(this, Radar);\n\n    return _possibleConstructorReturn(this, _React$Component7.apply(this, arguments));\n  }\n\n  Radar.prototype.render = function render() {\n    var _this15 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref6) {\n        return _this15.chartInstance = _ref6 && _ref6.chartInstance;\n      },\n      type: 'radar'\n    }));\n  };\n\n  return Radar;\n}(React.Component);\nexport var Polar = function (_React$Component8) {\n  _inherits(Polar, _React$Component8);\n\n  function Polar() {\n    _classCallCheck(this, Polar);\n\n    return _possibleConstructorReturn(this, _React$Component8.apply(this, arguments));\n  }\n\n  Polar.prototype.render = function render() {\n    var _this17 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref7) {\n        return _this17.chartInstance = _ref7 && _ref7.chartInstance;\n      },\n      type: 'polarArea'\n    }));\n  };\n\n  return Polar;\n}(React.Component);\nexport var Bubble = function (_React$Component9) {\n  _inherits(Bubble, _React$Component9);\n\n  function Bubble() {\n    _classCallCheck(this, Bubble);\n\n    return _possibleConstructorReturn(this, _React$Component9.apply(this, arguments));\n  }\n\n  Bubble.prototype.render = function render() {\n    var _this19 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref8) {\n        return _this19.chartInstance = _ref8 && _ref8.chartInstance;\n      },\n      type: 'bubble'\n    }));\n  };\n\n  return Bubble;\n}(React.Component);\nexport var Scatter = function (_React$Component10) {\n  _inherits(Scatter, _React$Component10);\n\n  function Scatter() {\n    _classCallCheck(this, Scatter);\n\n    return _possibleConstructorReturn(this, _React$Component10.apply(this, arguments));\n  }\n\n  Scatter.prototype.render = function render() {\n    var _this21 = this;\n\n    return React.createElement(ChartComponent, _extends({}, this.props, {\n      ref: function ref(_ref9) {\n        return _this21.chartInstance = _ref9 && _ref9.chartInstance;\n      },\n      type: 'scatter'\n    }));\n  };\n\n  return Scatter;\n}(React.Component);\nexport var defaults = Chart.defaults;\nexport { Chart };","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","/*!\n * Chart.js v2.8.0\n * https://www.chartjs.org\n * (c) 2019 Chart.js Contributors\n * Released under the MIT License\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(function () {\n    try {\n      return require('moment');\n    } catch (e) {}\n  }()) : typeof define === 'function' && define.amd ? define(['require'], function (require) {\n    return factory(function () {\n      try {\n        return require('moment');\n      } catch (e) {}\n    }());\n  }) : global.Chart = factory(global.moment);\n})(this, function (moment) {\n  'use strict';\n\n  moment = moment && moment.hasOwnProperty('default') ? moment['default'] : moment;\n  /* MIT license */\n\n  var conversions = {\n    rgb2hsl: rgb2hsl,\n    rgb2hsv: rgb2hsv,\n    rgb2hwb: rgb2hwb,\n    rgb2cmyk: rgb2cmyk,\n    rgb2keyword: rgb2keyword,\n    rgb2xyz: rgb2xyz,\n    rgb2lab: rgb2lab,\n    rgb2lch: rgb2lch,\n    hsl2rgb: hsl2rgb,\n    hsl2hsv: hsl2hsv,\n    hsl2hwb: hsl2hwb,\n    hsl2cmyk: hsl2cmyk,\n    hsl2keyword: hsl2keyword,\n    hsv2rgb: hsv2rgb,\n    hsv2hsl: hsv2hsl,\n    hsv2hwb: hsv2hwb,\n    hsv2cmyk: hsv2cmyk,\n    hsv2keyword: hsv2keyword,\n    hwb2rgb: hwb2rgb,\n    hwb2hsl: hwb2hsl,\n    hwb2hsv: hwb2hsv,\n    hwb2cmyk: hwb2cmyk,\n    hwb2keyword: hwb2keyword,\n    cmyk2rgb: cmyk2rgb,\n    cmyk2hsl: cmyk2hsl,\n    cmyk2hsv: cmyk2hsv,\n    cmyk2hwb: cmyk2hwb,\n    cmyk2keyword: cmyk2keyword,\n    keyword2rgb: keyword2rgb,\n    keyword2hsl: keyword2hsl,\n    keyword2hsv: keyword2hsv,\n    keyword2hwb: keyword2hwb,\n    keyword2cmyk: keyword2cmyk,\n    keyword2lab: keyword2lab,\n    keyword2xyz: keyword2xyz,\n    xyz2rgb: xyz2rgb,\n    xyz2lab: xyz2lab,\n    xyz2lch: xyz2lch,\n    lab2xyz: lab2xyz,\n    lab2rgb: lab2rgb,\n    lab2lch: lab2lch,\n    lch2lab: lch2lab,\n    lch2xyz: lch2xyz,\n    lch2rgb: lch2rgb\n  };\n\n  function rgb2hsl(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        l;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    l = (min + max) / 2;\n    if (max == min) s = 0;else if (l <= 0.5) s = delta / (max + min);else s = delta / (2 - max - min);\n    return [h, s * 100, l * 100];\n  }\n\n  function rgb2hsv(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        min = Math.min(r, g, b),\n        max = Math.max(r, g, b),\n        delta = max - min,\n        h,\n        s,\n        v;\n    if (max == 0) s = 0;else s = delta / max * 1000 / 10;\n    if (max == min) h = 0;else if (r == max) h = (g - b) / delta;else if (g == max) h = 2 + (b - r) / delta;else if (b == max) h = 4 + (r - g) / delta;\n    h = Math.min(h * 60, 360);\n    if (h < 0) h += 360;\n    v = max / 255 * 1000 / 10;\n    return [h, s, v];\n  }\n\n  function rgb2hwb(rgb) {\n    var r = rgb[0],\n        g = rgb[1],\n        b = rgb[2],\n        h = rgb2hsl(rgb)[0],\n        w = 1 / 255 * Math.min(r, Math.min(g, b)),\n        b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n    return [h, w * 100, b * 100];\n  }\n\n  function rgb2cmyk(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255,\n        c,\n        m,\n        y,\n        k;\n    k = Math.min(1 - r, 1 - g, 1 - b);\n    c = (1 - r - k) / (1 - k) || 0;\n    m = (1 - g - k) / (1 - k) || 0;\n    y = (1 - b - k) / (1 - k) || 0;\n    return [c * 100, m * 100, y * 100, k * 100];\n  }\n\n  function rgb2keyword(rgb) {\n    return reverseKeywords[JSON.stringify(rgb)];\n  }\n\n  function rgb2xyz(rgb) {\n    var r = rgb[0] / 255,\n        g = rgb[1] / 255,\n        b = rgb[2] / 255; // assume sRGB\n\n    r = r > 0.04045 ? Math.pow((r + 0.055) / 1.055, 2.4) : r / 12.92;\n    g = g > 0.04045 ? Math.pow((g + 0.055) / 1.055, 2.4) : g / 12.92;\n    b = b > 0.04045 ? Math.pow((b + 0.055) / 1.055, 2.4) : b / 12.92;\n    var x = r * 0.4124 + g * 0.3576 + b * 0.1805;\n    var y = r * 0.2126 + g * 0.7152 + b * 0.0722;\n    var z = r * 0.0193 + g * 0.1192 + b * 0.9505;\n    return [x * 100, y * 100, z * 100];\n  }\n\n  function rgb2lab(rgb) {\n    var xyz = rgb2xyz(rgb),\n        x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function rgb2lch(args) {\n    return lab2lch(rgb2lab(args));\n  }\n\n  function hsl2rgb(hsl) {\n    var h = hsl[0] / 360,\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        t1,\n        t2,\n        t3,\n        rgb,\n        val;\n\n    if (s == 0) {\n      val = l * 255;\n      return [val, val, val];\n    }\n\n    if (l < 0.5) t2 = l * (1 + s);else t2 = l + s - l * s;\n    t1 = 2 * l - t2;\n    rgb = [0, 0, 0];\n\n    for (var i = 0; i < 3; i++) {\n      t3 = h + 1 / 3 * -(i - 1);\n      t3 < 0 && t3++;\n      t3 > 1 && t3--;\n      if (6 * t3 < 1) val = t1 + (t2 - t1) * 6 * t3;else if (2 * t3 < 1) val = t2;else if (3 * t3 < 2) val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;else val = t1;\n      rgb[i] = val * 255;\n    }\n\n    return rgb;\n  }\n\n  function hsl2hsv(hsl) {\n    var h = hsl[0],\n        s = hsl[1] / 100,\n        l = hsl[2] / 100,\n        sv,\n        v;\n\n    if (l === 0) {\n      // no need to do calc on black\n      // also avoids divide by 0 error\n      return [0, 0, 0];\n    }\n\n    l *= 2;\n    s *= l <= 1 ? l : 2 - l;\n    v = (l + s) / 2;\n    sv = 2 * s / (l + s);\n    return [h, sv * 100, v * 100];\n  }\n\n  function hsl2hwb(args) {\n    return rgb2hwb(hsl2rgb(args));\n  }\n\n  function hsl2cmyk(args) {\n    return rgb2cmyk(hsl2rgb(args));\n  }\n\n  function hsl2keyword(args) {\n    return rgb2keyword(hsl2rgb(args));\n  }\n\n  function hsv2rgb(hsv) {\n    var h = hsv[0] / 60,\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        hi = Math.floor(h) % 6;\n    var f = h - Math.floor(h),\n        p = 255 * v * (1 - s),\n        q = 255 * v * (1 - s * f),\n        t = 255 * v * (1 - s * (1 - f)),\n        v = 255 * v;\n\n    switch (hi) {\n      case 0:\n        return [v, t, p];\n\n      case 1:\n        return [q, v, p];\n\n      case 2:\n        return [p, v, t];\n\n      case 3:\n        return [p, q, v];\n\n      case 4:\n        return [t, p, v];\n\n      case 5:\n        return [v, p, q];\n    }\n  }\n\n  function hsv2hsl(hsv) {\n    var h = hsv[0],\n        s = hsv[1] / 100,\n        v = hsv[2] / 100,\n        sl,\n        l;\n    l = (2 - s) * v;\n    sl = s * v;\n    sl /= l <= 1 ? l : 2 - l;\n    sl = sl || 0;\n    l /= 2;\n    return [h, sl * 100, l * 100];\n  }\n\n  function hsv2hwb(args) {\n    return rgb2hwb(hsv2rgb(args));\n  }\n\n  function hsv2cmyk(args) {\n    return rgb2cmyk(hsv2rgb(args));\n  }\n\n  function hsv2keyword(args) {\n    return rgb2keyword(hsv2rgb(args));\n  } // http://dev.w3.org/csswg/css-color/#hwb-to-rgb\n\n\n  function hwb2rgb(hwb) {\n    var h = hwb[0] / 360,\n        wh = hwb[1] / 100,\n        bl = hwb[2] / 100,\n        ratio = wh + bl,\n        i,\n        v,\n        f,\n        n; // wh + bl cant be > 1\n\n    if (ratio > 1) {\n      wh /= ratio;\n      bl /= ratio;\n    }\n\n    i = Math.floor(6 * h);\n    v = 1 - bl;\n    f = 6 * h - i;\n\n    if ((i & 0x01) != 0) {\n      f = 1 - f;\n    }\n\n    n = wh + f * (v - wh); // linear interpolation\n\n    switch (i) {\n      default:\n      case 6:\n      case 0:\n        r = v;\n        g = n;\n        b = wh;\n        break;\n\n      case 1:\n        r = n;\n        g = v;\n        b = wh;\n        break;\n\n      case 2:\n        r = wh;\n        g = v;\n        b = n;\n        break;\n\n      case 3:\n        r = wh;\n        g = n;\n        b = v;\n        break;\n\n      case 4:\n        r = n;\n        g = wh;\n        b = v;\n        break;\n\n      case 5:\n        r = v;\n        g = wh;\n        b = n;\n        break;\n    }\n\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function hwb2hsl(args) {\n    return rgb2hsl(hwb2rgb(args));\n  }\n\n  function hwb2hsv(args) {\n    return rgb2hsv(hwb2rgb(args));\n  }\n\n  function hwb2cmyk(args) {\n    return rgb2cmyk(hwb2rgb(args));\n  }\n\n  function hwb2keyword(args) {\n    return rgb2keyword(hwb2rgb(args));\n  }\n\n  function cmyk2rgb(cmyk) {\n    var c = cmyk[0] / 100,\n        m = cmyk[1] / 100,\n        y = cmyk[2] / 100,\n        k = cmyk[3] / 100,\n        r,\n        g,\n        b;\n    r = 1 - Math.min(1, c * (1 - k) + k);\n    g = 1 - Math.min(1, m * (1 - k) + k);\n    b = 1 - Math.min(1, y * (1 - k) + k);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function cmyk2hsl(args) {\n    return rgb2hsl(cmyk2rgb(args));\n  }\n\n  function cmyk2hsv(args) {\n    return rgb2hsv(cmyk2rgb(args));\n  }\n\n  function cmyk2hwb(args) {\n    return rgb2hwb(cmyk2rgb(args));\n  }\n\n  function cmyk2keyword(args) {\n    return rgb2keyword(cmyk2rgb(args));\n  }\n\n  function xyz2rgb(xyz) {\n    var x = xyz[0] / 100,\n        y = xyz[1] / 100,\n        z = xyz[2] / 100,\n        r,\n        g,\n        b;\n    r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n    g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n    b = x * 0.0557 + y * -0.2040 + z * 1.0570; // assume sRGB\n\n    r = r > 0.0031308 ? 1.055 * Math.pow(r, 1.0 / 2.4) - 0.055 : r = r * 12.92;\n    g = g > 0.0031308 ? 1.055 * Math.pow(g, 1.0 / 2.4) - 0.055 : g = g * 12.92;\n    b = b > 0.0031308 ? 1.055 * Math.pow(b, 1.0 / 2.4) - 0.055 : b = b * 12.92;\n    r = Math.min(Math.max(0, r), 1);\n    g = Math.min(Math.max(0, g), 1);\n    b = Math.min(Math.max(0, b), 1);\n    return [r * 255, g * 255, b * 255];\n  }\n\n  function xyz2lab(xyz) {\n    var x = xyz[0],\n        y = xyz[1],\n        z = xyz[2],\n        l,\n        a,\n        b;\n    x /= 95.047;\n    y /= 100;\n    z /= 108.883;\n    x = x > 0.008856 ? Math.pow(x, 1 / 3) : 7.787 * x + 16 / 116;\n    y = y > 0.008856 ? Math.pow(y, 1 / 3) : 7.787 * y + 16 / 116;\n    z = z > 0.008856 ? Math.pow(z, 1 / 3) : 7.787 * z + 16 / 116;\n    l = 116 * y - 16;\n    a = 500 * (x - y);\n    b = 200 * (y - z);\n    return [l, a, b];\n  }\n\n  function xyz2lch(args) {\n    return lab2lch(xyz2lab(args));\n  }\n\n  function lab2xyz(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        x,\n        y,\n        z,\n        y2;\n\n    if (l <= 8) {\n      y = l * 100 / 903.3;\n      y2 = 7.787 * (y / 100) + 16 / 116;\n    } else {\n      y = 100 * Math.pow((l + 16) / 116, 3);\n      y2 = Math.pow(y / 100, 1 / 3);\n    }\n\n    x = x / 95.047 <= 0.008856 ? x = 95.047 * (a / 500 + y2 - 16 / 116) / 7.787 : 95.047 * Math.pow(a / 500 + y2, 3);\n    z = z / 108.883 <= 0.008859 ? z = 108.883 * (y2 - b / 200 - 16 / 116) / 7.787 : 108.883 * Math.pow(y2 - b / 200, 3);\n    return [x, y, z];\n  }\n\n  function lab2lch(lab) {\n    var l = lab[0],\n        a = lab[1],\n        b = lab[2],\n        hr,\n        h,\n        c;\n    hr = Math.atan2(b, a);\n    h = hr * 360 / 2 / Math.PI;\n\n    if (h < 0) {\n      h += 360;\n    }\n\n    c = Math.sqrt(a * a + b * b);\n    return [l, c, h];\n  }\n\n  function lab2rgb(args) {\n    return xyz2rgb(lab2xyz(args));\n  }\n\n  function lch2lab(lch) {\n    var l = lch[0],\n        c = lch[1],\n        h = lch[2],\n        a,\n        b,\n        hr;\n    hr = h / 360 * 2 * Math.PI;\n    a = c * Math.cos(hr);\n    b = c * Math.sin(hr);\n    return [l, a, b];\n  }\n\n  function lch2xyz(args) {\n    return lab2xyz(lch2lab(args));\n  }\n\n  function lch2rgb(args) {\n    return lab2rgb(lch2lab(args));\n  }\n\n  function keyword2rgb(keyword) {\n    return cssKeywords[keyword];\n  }\n\n  function keyword2hsl(args) {\n    return rgb2hsl(keyword2rgb(args));\n  }\n\n  function keyword2hsv(args) {\n    return rgb2hsv(keyword2rgb(args));\n  }\n\n  function keyword2hwb(args) {\n    return rgb2hwb(keyword2rgb(args));\n  }\n\n  function keyword2cmyk(args) {\n    return rgb2cmyk(keyword2rgb(args));\n  }\n\n  function keyword2lab(args) {\n    return rgb2lab(keyword2rgb(args));\n  }\n\n  function keyword2xyz(args) {\n    return rgb2xyz(keyword2rgb(args));\n  }\n\n  var cssKeywords = {\n    aliceblue: [240, 248, 255],\n    antiquewhite: [250, 235, 215],\n    aqua: [0, 255, 255],\n    aquamarine: [127, 255, 212],\n    azure: [240, 255, 255],\n    beige: [245, 245, 220],\n    bisque: [255, 228, 196],\n    black: [0, 0, 0],\n    blanchedalmond: [255, 235, 205],\n    blue: [0, 0, 255],\n    blueviolet: [138, 43, 226],\n    brown: [165, 42, 42],\n    burlywood: [222, 184, 135],\n    cadetblue: [95, 158, 160],\n    chartreuse: [127, 255, 0],\n    chocolate: [210, 105, 30],\n    coral: [255, 127, 80],\n    cornflowerblue: [100, 149, 237],\n    cornsilk: [255, 248, 220],\n    crimson: [220, 20, 60],\n    cyan: [0, 255, 255],\n    darkblue: [0, 0, 139],\n    darkcyan: [0, 139, 139],\n    darkgoldenrod: [184, 134, 11],\n    darkgray: [169, 169, 169],\n    darkgreen: [0, 100, 0],\n    darkgrey: [169, 169, 169],\n    darkkhaki: [189, 183, 107],\n    darkmagenta: [139, 0, 139],\n    darkolivegreen: [85, 107, 47],\n    darkorange: [255, 140, 0],\n    darkorchid: [153, 50, 204],\n    darkred: [139, 0, 0],\n    darksalmon: [233, 150, 122],\n    darkseagreen: [143, 188, 143],\n    darkslateblue: [72, 61, 139],\n    darkslategray: [47, 79, 79],\n    darkslategrey: [47, 79, 79],\n    darkturquoise: [0, 206, 209],\n    darkviolet: [148, 0, 211],\n    deeppink: [255, 20, 147],\n    deepskyblue: [0, 191, 255],\n    dimgray: [105, 105, 105],\n    dimgrey: [105, 105, 105],\n    dodgerblue: [30, 144, 255],\n    firebrick: [178, 34, 34],\n    floralwhite: [255, 250, 240],\n    forestgreen: [34, 139, 34],\n    fuchsia: [255, 0, 255],\n    gainsboro: [220, 220, 220],\n    ghostwhite: [248, 248, 255],\n    gold: [255, 215, 0],\n    goldenrod: [218, 165, 32],\n    gray: [128, 128, 128],\n    green: [0, 128, 0],\n    greenyellow: [173, 255, 47],\n    grey: [128, 128, 128],\n    honeydew: [240, 255, 240],\n    hotpink: [255, 105, 180],\n    indianred: [205, 92, 92],\n    indigo: [75, 0, 130],\n    ivory: [255, 255, 240],\n    khaki: [240, 230, 140],\n    lavender: [230, 230, 250],\n    lavenderblush: [255, 240, 245],\n    lawngreen: [124, 252, 0],\n    lemonchiffon: [255, 250, 205],\n    lightblue: [173, 216, 230],\n    lightcoral: [240, 128, 128],\n    lightcyan: [224, 255, 255],\n    lightgoldenrodyellow: [250, 250, 210],\n    lightgray: [211, 211, 211],\n    lightgreen: [144, 238, 144],\n    lightgrey: [211, 211, 211],\n    lightpink: [255, 182, 193],\n    lightsalmon: [255, 160, 122],\n    lightseagreen: [32, 178, 170],\n    lightskyblue: [135, 206, 250],\n    lightslategray: [119, 136, 153],\n    lightslategrey: [119, 136, 153],\n    lightsteelblue: [176, 196, 222],\n    lightyellow: [255, 255, 224],\n    lime: [0, 255, 0],\n    limegreen: [50, 205, 50],\n    linen: [250, 240, 230],\n    magenta: [255, 0, 255],\n    maroon: [128, 0, 0],\n    mediumaquamarine: [102, 205, 170],\n    mediumblue: [0, 0, 205],\n    mediumorchid: [186, 85, 211],\n    mediumpurple: [147, 112, 219],\n    mediumseagreen: [60, 179, 113],\n    mediumslateblue: [123, 104, 238],\n    mediumspringgreen: [0, 250, 154],\n    mediumturquoise: [72, 209, 204],\n    mediumvioletred: [199, 21, 133],\n    midnightblue: [25, 25, 112],\n    mintcream: [245, 255, 250],\n    mistyrose: [255, 228, 225],\n    moccasin: [255, 228, 181],\n    navajowhite: [255, 222, 173],\n    navy: [0, 0, 128],\n    oldlace: [253, 245, 230],\n    olive: [128, 128, 0],\n    olivedrab: [107, 142, 35],\n    orange: [255, 165, 0],\n    orangered: [255, 69, 0],\n    orchid: [218, 112, 214],\n    palegoldenrod: [238, 232, 170],\n    palegreen: [152, 251, 152],\n    paleturquoise: [175, 238, 238],\n    palevioletred: [219, 112, 147],\n    papayawhip: [255, 239, 213],\n    peachpuff: [255, 218, 185],\n    peru: [205, 133, 63],\n    pink: [255, 192, 203],\n    plum: [221, 160, 221],\n    powderblue: [176, 224, 230],\n    purple: [128, 0, 128],\n    rebeccapurple: [102, 51, 153],\n    red: [255, 0, 0],\n    rosybrown: [188, 143, 143],\n    royalblue: [65, 105, 225],\n    saddlebrown: [139, 69, 19],\n    salmon: [250, 128, 114],\n    sandybrown: [244, 164, 96],\n    seagreen: [46, 139, 87],\n    seashell: [255, 245, 238],\n    sienna: [160, 82, 45],\n    silver: [192, 192, 192],\n    skyblue: [135, 206, 235],\n    slateblue: [106, 90, 205],\n    slategray: [112, 128, 144],\n    slategrey: [112, 128, 144],\n    snow: [255, 250, 250],\n    springgreen: [0, 255, 127],\n    steelblue: [70, 130, 180],\n    tan: [210, 180, 140],\n    teal: [0, 128, 128],\n    thistle: [216, 191, 216],\n    tomato: [255, 99, 71],\n    turquoise: [64, 224, 208],\n    violet: [238, 130, 238],\n    wheat: [245, 222, 179],\n    white: [255, 255, 255],\n    whitesmoke: [245, 245, 245],\n    yellow: [255, 255, 0],\n    yellowgreen: [154, 205, 50]\n  };\n  var reverseKeywords = {};\n\n  for (var key in cssKeywords) {\n    reverseKeywords[JSON.stringify(cssKeywords[key])] = key;\n  }\n\n  var convert = function convert() {\n    return new Converter();\n  };\n\n  for (var func in conversions) {\n    // export Raw versions\n    convert[func + \"Raw\"] = function (func) {\n      // accept array or plain args\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        return conversions[func](arg);\n      };\n    }(func);\n\n    var pair = /(\\w+)2(\\w+)/.exec(func),\n        from = pair[1],\n        to = pair[2]; // export rgb2hsl and [\"rgb\"][\"hsl\"]\n\n    convert[from] = convert[from] || {};\n\n    convert[from][to] = convert[func] = function (func) {\n      return function (arg) {\n        if (typeof arg == \"number\") arg = Array.prototype.slice.call(arguments);\n        var val = conversions[func](arg);\n        if (typeof val == \"string\" || val === undefined) return val; // keyword\n\n        for (var i = 0; i < val.length; i++) {\n          val[i] = Math.round(val[i]);\n        }\n\n        return val;\n      };\n    }(func);\n  }\n  /* Converter does lazy conversion and caching */\n\n\n  var Converter = function Converter() {\n    this.convs = {};\n  };\n  /* Either get the values for a space or\n    set the values for a space, depending on args */\n\n\n  Converter.prototype.routeSpace = function (space, args) {\n    var values = args[0];\n\n    if (values === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof values == \"number\") {\n      values = Array.prototype.slice.call(args);\n    }\n\n    return this.setValues(space, values);\n  };\n  /* Set the values for a space, invalidating cache */\n\n\n  Converter.prototype.setValues = function (space, values) {\n    this.space = space;\n    this.convs = {};\n    this.convs[space] = values;\n    return this;\n  };\n  /* Get the values for a space. If there's already\n    a conversion for the space, fetch it, otherwise\n    compute it */\n\n\n  Converter.prototype.getValues = function (space) {\n    var vals = this.convs[space];\n\n    if (!vals) {\n      var fspace = this.space,\n          from = this.convs[fspace];\n      vals = convert[fspace][space](from);\n      this.convs[space] = vals;\n    }\n\n    return vals;\n  };\n\n  [\"rgb\", \"hsl\", \"hsv\", \"cmyk\", \"keyword\"].forEach(function (space) {\n    Converter.prototype[space] = function (vals) {\n      return this.routeSpace(space, arguments);\n    };\n  });\n  var colorConvert = convert;\n  var colorName = {\n    \"aliceblue\": [240, 248, 255],\n    \"antiquewhite\": [250, 235, 215],\n    \"aqua\": [0, 255, 255],\n    \"aquamarine\": [127, 255, 212],\n    \"azure\": [240, 255, 255],\n    \"beige\": [245, 245, 220],\n    \"bisque\": [255, 228, 196],\n    \"black\": [0, 0, 0],\n    \"blanchedalmond\": [255, 235, 205],\n    \"blue\": [0, 0, 255],\n    \"blueviolet\": [138, 43, 226],\n    \"brown\": [165, 42, 42],\n    \"burlywood\": [222, 184, 135],\n    \"cadetblue\": [95, 158, 160],\n    \"chartreuse\": [127, 255, 0],\n    \"chocolate\": [210, 105, 30],\n    \"coral\": [255, 127, 80],\n    \"cornflowerblue\": [100, 149, 237],\n    \"cornsilk\": [255, 248, 220],\n    \"crimson\": [220, 20, 60],\n    \"cyan\": [0, 255, 255],\n    \"darkblue\": [0, 0, 139],\n    \"darkcyan\": [0, 139, 139],\n    \"darkgoldenrod\": [184, 134, 11],\n    \"darkgray\": [169, 169, 169],\n    \"darkgreen\": [0, 100, 0],\n    \"darkgrey\": [169, 169, 169],\n    \"darkkhaki\": [189, 183, 107],\n    \"darkmagenta\": [139, 0, 139],\n    \"darkolivegreen\": [85, 107, 47],\n    \"darkorange\": [255, 140, 0],\n    \"darkorchid\": [153, 50, 204],\n    \"darkred\": [139, 0, 0],\n    \"darksalmon\": [233, 150, 122],\n    \"darkseagreen\": [143, 188, 143],\n    \"darkslateblue\": [72, 61, 139],\n    \"darkslategray\": [47, 79, 79],\n    \"darkslategrey\": [47, 79, 79],\n    \"darkturquoise\": [0, 206, 209],\n    \"darkviolet\": [148, 0, 211],\n    \"deeppink\": [255, 20, 147],\n    \"deepskyblue\": [0, 191, 255],\n    \"dimgray\": [105, 105, 105],\n    \"dimgrey\": [105, 105, 105],\n    \"dodgerblue\": [30, 144, 255],\n    \"firebrick\": [178, 34, 34],\n    \"floralwhite\": [255, 250, 240],\n    \"forestgreen\": [34, 139, 34],\n    \"fuchsia\": [255, 0, 255],\n    \"gainsboro\": [220, 220, 220],\n    \"ghostwhite\": [248, 248, 255],\n    \"gold\": [255, 215, 0],\n    \"goldenrod\": [218, 165, 32],\n    \"gray\": [128, 128, 128],\n    \"green\": [0, 128, 0],\n    \"greenyellow\": [173, 255, 47],\n    \"grey\": [128, 128, 128],\n    \"honeydew\": [240, 255, 240],\n    \"hotpink\": [255, 105, 180],\n    \"indianred\": [205, 92, 92],\n    \"indigo\": [75, 0, 130],\n    \"ivory\": [255, 255, 240],\n    \"khaki\": [240, 230, 140],\n    \"lavender\": [230, 230, 250],\n    \"lavenderblush\": [255, 240, 245],\n    \"lawngreen\": [124, 252, 0],\n    \"lemonchiffon\": [255, 250, 205],\n    \"lightblue\": [173, 216, 230],\n    \"lightcoral\": [240, 128, 128],\n    \"lightcyan\": [224, 255, 255],\n    \"lightgoldenrodyellow\": [250, 250, 210],\n    \"lightgray\": [211, 211, 211],\n    \"lightgreen\": [144, 238, 144],\n    \"lightgrey\": [211, 211, 211],\n    \"lightpink\": [255, 182, 193],\n    \"lightsalmon\": [255, 160, 122],\n    \"lightseagreen\": [32, 178, 170],\n    \"lightskyblue\": [135, 206, 250],\n    \"lightslategray\": [119, 136, 153],\n    \"lightslategrey\": [119, 136, 153],\n    \"lightsteelblue\": [176, 196, 222],\n    \"lightyellow\": [255, 255, 224],\n    \"lime\": [0, 255, 0],\n    \"limegreen\": [50, 205, 50],\n    \"linen\": [250, 240, 230],\n    \"magenta\": [255, 0, 255],\n    \"maroon\": [128, 0, 0],\n    \"mediumaquamarine\": [102, 205, 170],\n    \"mediumblue\": [0, 0, 205],\n    \"mediumorchid\": [186, 85, 211],\n    \"mediumpurple\": [147, 112, 219],\n    \"mediumseagreen\": [60, 179, 113],\n    \"mediumslateblue\": [123, 104, 238],\n    \"mediumspringgreen\": [0, 250, 154],\n    \"mediumturquoise\": [72, 209, 204],\n    \"mediumvioletred\": [199, 21, 133],\n    \"midnightblue\": [25, 25, 112],\n    \"mintcream\": [245, 255, 250],\n    \"mistyrose\": [255, 228, 225],\n    \"moccasin\": [255, 228, 181],\n    \"navajowhite\": [255, 222, 173],\n    \"navy\": [0, 0, 128],\n    \"oldlace\": [253, 245, 230],\n    \"olive\": [128, 128, 0],\n    \"olivedrab\": [107, 142, 35],\n    \"orange\": [255, 165, 0],\n    \"orangered\": [255, 69, 0],\n    \"orchid\": [218, 112, 214],\n    \"palegoldenrod\": [238, 232, 170],\n    \"palegreen\": [152, 251, 152],\n    \"paleturquoise\": [175, 238, 238],\n    \"palevioletred\": [219, 112, 147],\n    \"papayawhip\": [255, 239, 213],\n    \"peachpuff\": [255, 218, 185],\n    \"peru\": [205, 133, 63],\n    \"pink\": [255, 192, 203],\n    \"plum\": [221, 160, 221],\n    \"powderblue\": [176, 224, 230],\n    \"purple\": [128, 0, 128],\n    \"rebeccapurple\": [102, 51, 153],\n    \"red\": [255, 0, 0],\n    \"rosybrown\": [188, 143, 143],\n    \"royalblue\": [65, 105, 225],\n    \"saddlebrown\": [139, 69, 19],\n    \"salmon\": [250, 128, 114],\n    \"sandybrown\": [244, 164, 96],\n    \"seagreen\": [46, 139, 87],\n    \"seashell\": [255, 245, 238],\n    \"sienna\": [160, 82, 45],\n    \"silver\": [192, 192, 192],\n    \"skyblue\": [135, 206, 235],\n    \"slateblue\": [106, 90, 205],\n    \"slategray\": [112, 128, 144],\n    \"slategrey\": [112, 128, 144],\n    \"snow\": [255, 250, 250],\n    \"springgreen\": [0, 255, 127],\n    \"steelblue\": [70, 130, 180],\n    \"tan\": [210, 180, 140],\n    \"teal\": [0, 128, 128],\n    \"thistle\": [216, 191, 216],\n    \"tomato\": [255, 99, 71],\n    \"turquoise\": [64, 224, 208],\n    \"violet\": [238, 130, 238],\n    \"wheat\": [245, 222, 179],\n    \"white\": [255, 255, 255],\n    \"whitesmoke\": [245, 245, 245],\n    \"yellow\": [255, 255, 0],\n    \"yellowgreen\": [154, 205, 50]\n  };\n  /* MIT license */\n\n  var colorString = {\n    getRgba: getRgba,\n    getHsla: getHsla,\n    getRgb: getRgb,\n    getHsl: getHsl,\n    getHwb: getHwb,\n    getAlpha: getAlpha,\n    hexString: hexString,\n    rgbString: rgbString,\n    rgbaString: rgbaString,\n    percentString: percentString,\n    percentaString: percentaString,\n    hslString: hslString,\n    hslaString: hslaString,\n    hwbString: hwbString,\n    keyword: keyword\n  };\n\n  function getRgba(string) {\n    if (!string) {\n      return;\n    }\n\n    var abbr = /^#([a-fA-F0-9]{3,4})$/i,\n        hex = /^#([a-fA-F0-9]{6}([a-fA-F0-9]{2})?)$/i,\n        rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/i,\n        keyword = /(\\w+)/;\n    var rgb = [0, 0, 0],\n        a = 1,\n        match = string.match(abbr),\n        hexAlpha = \"\";\n\n    if (match) {\n      match = match[1];\n      hexAlpha = match[3];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i] + match[i], 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha + hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(hex)) {\n      hexAlpha = match[2];\n      match = match[1];\n\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match.slice(i * 2, i * 2 + 2), 16);\n      }\n\n      if (hexAlpha) {\n        a = Math.round(parseInt(hexAlpha, 16) / 255 * 100) / 100;\n      }\n    } else if (match = string.match(rgba)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = parseInt(match[i + 1]);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(per)) {\n      for (var i = 0; i < rgb.length; i++) {\n        rgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n      }\n\n      a = parseFloat(match[4]);\n    } else if (match = string.match(keyword)) {\n      if (match[1] == \"transparent\") {\n        return [0, 0, 0, 0];\n      }\n\n      rgb = colorName[match[1]];\n\n      if (!rgb) {\n        return;\n      }\n    }\n\n    for (var i = 0; i < rgb.length; i++) {\n      rgb[i] = scale(rgb[i], 0, 255);\n    }\n\n    if (!a && a != 0) {\n      a = 1;\n    } else {\n      a = scale(a, 0, 1);\n    }\n\n    rgb[3] = a;\n    return rgb;\n  }\n\n  function getHsla(string) {\n    if (!string) {\n      return;\n    }\n\n    var hsl = /^hsla?\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hsl);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          s = scale(parseFloat(match[2]), 0, 100),\n          l = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, s, l, a];\n    }\n  }\n\n  function getHwb(string) {\n    if (!string) {\n      return;\n    }\n\n    var hwb = /^hwb\\(\\s*([+-]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)/;\n    var match = string.match(hwb);\n\n    if (match) {\n      var alpha = parseFloat(match[4]);\n      var h = scale(parseInt(match[1]), 0, 360),\n          w = scale(parseFloat(match[2]), 0, 100),\n          b = scale(parseFloat(match[3]), 0, 100),\n          a = scale(isNaN(alpha) ? 1 : alpha, 0, 1);\n      return [h, w, b, a];\n    }\n  }\n\n  function getRgb(string) {\n    var rgba = getRgba(string);\n    return rgba && rgba.slice(0, 3);\n  }\n\n  function getHsl(string) {\n    var hsla = getHsla(string);\n    return hsla && hsla.slice(0, 3);\n  }\n\n  function getAlpha(string) {\n    var vals = getRgba(string);\n\n    if (vals) {\n      return vals[3];\n    } else if (vals = getHsla(string)) {\n      return vals[3];\n    } else if (vals = getHwb(string)) {\n      return vals[3];\n    }\n  } // generators\n\n\n  function hexString(rgba, a) {\n    var a = a !== undefined && rgba.length === 3 ? a : rgba[3];\n    return \"#\" + hexDouble(rgba[0]) + hexDouble(rgba[1]) + hexDouble(rgba[2]) + (a >= 0 && a < 1 ? hexDouble(Math.round(a * 255)) : \"\");\n  }\n\n  function rgbString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return rgbaString(rgba, alpha);\n    }\n\n    return \"rgb(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \")\";\n  }\n\n  function rgbaString(rgba, alpha) {\n    if (alpha === undefined) {\n      alpha = rgba[3] !== undefined ? rgba[3] : 1;\n    }\n\n    return \"rgba(\" + rgba[0] + \", \" + rgba[1] + \", \" + rgba[2] + \", \" + alpha + \")\";\n  }\n\n  function percentString(rgba, alpha) {\n    if (alpha < 1 || rgba[3] && rgba[3] < 1) {\n      return percentaString(rgba, alpha);\n    }\n\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgb(\" + r + \"%, \" + g + \"%, \" + b + \"%)\";\n  }\n\n  function percentaString(rgba, alpha) {\n    var r = Math.round(rgba[0] / 255 * 100),\n        g = Math.round(rgba[1] / 255 * 100),\n        b = Math.round(rgba[2] / 255 * 100);\n    return \"rgba(\" + r + \"%, \" + g + \"%, \" + b + \"%, \" + (alpha || rgba[3] || 1) + \")\";\n  }\n\n  function hslString(hsla, alpha) {\n    if (alpha < 1 || hsla[3] && hsla[3] < 1) {\n      return hslaString(hsla, alpha);\n    }\n\n    return \"hsl(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%)\";\n  }\n\n  function hslaString(hsla, alpha) {\n    if (alpha === undefined) {\n      alpha = hsla[3] !== undefined ? hsla[3] : 1;\n    }\n\n    return \"hsla(\" + hsla[0] + \", \" + hsla[1] + \"%, \" + hsla[2] + \"%, \" + alpha + \")\";\n  } // hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n  // (hwb have alpha optional & 1 is default value)\n\n\n  function hwbString(hwb, alpha) {\n    if (alpha === undefined) {\n      alpha = hwb[3] !== undefined ? hwb[3] : 1;\n    }\n\n    return \"hwb(\" + hwb[0] + \", \" + hwb[1] + \"%, \" + hwb[2] + \"%\" + (alpha !== undefined && alpha !== 1 ? \", \" + alpha : \"\") + \")\";\n  }\n\n  function keyword(rgb) {\n    return reverseNames[rgb.slice(0, 3)];\n  } // helpers\n\n\n  function scale(num, min, max) {\n    return Math.min(Math.max(min, num), max);\n  }\n\n  function hexDouble(num) {\n    var str = num.toString(16).toUpperCase();\n    return str.length < 2 ? \"0\" + str : str;\n  } //create a list of reverse color names\n\n\n  var reverseNames = {};\n\n  for (var name in colorName) {\n    reverseNames[colorName[name]] = name;\n  }\n  /* MIT license */\n\n\n  var Color = function Color(obj) {\n    if (obj instanceof Color) {\n      return obj;\n    }\n\n    if (!(this instanceof Color)) {\n      return new Color(obj);\n    }\n\n    this.valid = false;\n    this.values = {\n      rgb: [0, 0, 0],\n      hsl: [0, 0, 0],\n      hsv: [0, 0, 0],\n      hwb: [0, 0, 0],\n      cmyk: [0, 0, 0, 0],\n      alpha: 1\n    }; // parse Color() argument\n\n    var vals;\n\n    if (typeof obj === 'string') {\n      vals = colorString.getRgba(obj);\n\n      if (vals) {\n        this.setValues('rgb', vals);\n      } else if (vals = colorString.getHsla(obj)) {\n        this.setValues('hsl', vals);\n      } else if (vals = colorString.getHwb(obj)) {\n        this.setValues('hwb', vals);\n      }\n    } else if (typeof obj === 'object') {\n      vals = obj;\n\n      if (vals.r !== undefined || vals.red !== undefined) {\n        this.setValues('rgb', vals);\n      } else if (vals.l !== undefined || vals.lightness !== undefined) {\n        this.setValues('hsl', vals);\n      } else if (vals.v !== undefined || vals.value !== undefined) {\n        this.setValues('hsv', vals);\n      } else if (vals.w !== undefined || vals.whiteness !== undefined) {\n        this.setValues('hwb', vals);\n      } else if (vals.c !== undefined || vals.cyan !== undefined) {\n        this.setValues('cmyk', vals);\n      }\n    }\n  };\n\n  Color.prototype = {\n    isValid: function isValid() {\n      return this.valid;\n    },\n    rgb: function rgb() {\n      return this.setSpace('rgb', arguments);\n    },\n    hsl: function hsl() {\n      return this.setSpace('hsl', arguments);\n    },\n    hsv: function hsv() {\n      return this.setSpace('hsv', arguments);\n    },\n    hwb: function hwb() {\n      return this.setSpace('hwb', arguments);\n    },\n    cmyk: function cmyk() {\n      return this.setSpace('cmyk', arguments);\n    },\n    rgbArray: function rgbArray() {\n      return this.values.rgb;\n    },\n    hslArray: function hslArray() {\n      return this.values.hsl;\n    },\n    hsvArray: function hsvArray() {\n      return this.values.hsv;\n    },\n    hwbArray: function hwbArray() {\n      var values = this.values;\n\n      if (values.alpha !== 1) {\n        return values.hwb.concat([values.alpha]);\n      }\n\n      return values.hwb;\n    },\n    cmykArray: function cmykArray() {\n      return this.values.cmyk;\n    },\n    rgbaArray: function rgbaArray() {\n      var values = this.values;\n      return values.rgb.concat([values.alpha]);\n    },\n    hslaArray: function hslaArray() {\n      var values = this.values;\n      return values.hsl.concat([values.alpha]);\n    },\n    alpha: function alpha(val) {\n      if (val === undefined) {\n        return this.values.alpha;\n      }\n\n      this.setValues('alpha', val);\n      return this;\n    },\n    red: function red(val) {\n      return this.setChannel('rgb', 0, val);\n    },\n    green: function green(val) {\n      return this.setChannel('rgb', 1, val);\n    },\n    blue: function blue(val) {\n      return this.setChannel('rgb', 2, val);\n    },\n    hue: function hue(val) {\n      if (val) {\n        val %= 360;\n        val = val < 0 ? 360 + val : val;\n      }\n\n      return this.setChannel('hsl', 0, val);\n    },\n    saturation: function saturation(val) {\n      return this.setChannel('hsl', 1, val);\n    },\n    lightness: function lightness(val) {\n      return this.setChannel('hsl', 2, val);\n    },\n    saturationv: function saturationv(val) {\n      return this.setChannel('hsv', 1, val);\n    },\n    whiteness: function whiteness(val) {\n      return this.setChannel('hwb', 1, val);\n    },\n    blackness: function blackness(val) {\n      return this.setChannel('hwb', 2, val);\n    },\n    value: function value(val) {\n      return this.setChannel('hsv', 2, val);\n    },\n    cyan: function cyan(val) {\n      return this.setChannel('cmyk', 0, val);\n    },\n    magenta: function magenta(val) {\n      return this.setChannel('cmyk', 1, val);\n    },\n    yellow: function yellow(val) {\n      return this.setChannel('cmyk', 2, val);\n    },\n    black: function black(val) {\n      return this.setChannel('cmyk', 3, val);\n    },\n    hexString: function hexString() {\n      return colorString.hexString(this.values.rgb);\n    },\n    rgbString: function rgbString() {\n      return colorString.rgbString(this.values.rgb, this.values.alpha);\n    },\n    rgbaString: function rgbaString() {\n      return colorString.rgbaString(this.values.rgb, this.values.alpha);\n    },\n    percentString: function percentString() {\n      return colorString.percentString(this.values.rgb, this.values.alpha);\n    },\n    hslString: function hslString() {\n      return colorString.hslString(this.values.hsl, this.values.alpha);\n    },\n    hslaString: function hslaString() {\n      return colorString.hslaString(this.values.hsl, this.values.alpha);\n    },\n    hwbString: function hwbString() {\n      return colorString.hwbString(this.values.hwb, this.values.alpha);\n    },\n    keyword: function keyword() {\n      return colorString.keyword(this.values.rgb, this.values.alpha);\n    },\n    rgbNumber: function rgbNumber() {\n      var rgb = this.values.rgb;\n      return rgb[0] << 16 | rgb[1] << 8 | rgb[2];\n    },\n    luminosity: function luminosity() {\n      // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n      var rgb = this.values.rgb;\n      var lum = [];\n\n      for (var i = 0; i < rgb.length; i++) {\n        var chan = rgb[i] / 255;\n        lum[i] = chan <= 0.03928 ? chan / 12.92 : Math.pow((chan + 0.055) / 1.055, 2.4);\n      }\n\n      return 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n    },\n    contrast: function contrast(color2) {\n      // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n      var lum1 = this.luminosity();\n      var lum2 = color2.luminosity();\n\n      if (lum1 > lum2) {\n        return (lum1 + 0.05) / (lum2 + 0.05);\n      }\n\n      return (lum2 + 0.05) / (lum1 + 0.05);\n    },\n    level: function level(color2) {\n      var contrastRatio = this.contrast(color2);\n\n      if (contrastRatio >= 7.1) {\n        return 'AAA';\n      }\n\n      return contrastRatio >= 4.5 ? 'AA' : '';\n    },\n    dark: function dark() {\n      // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n      var rgb = this.values.rgb;\n      var yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n      return yiq < 128;\n    },\n    light: function light() {\n      return !this.dark();\n    },\n    negate: function negate() {\n      var rgb = [];\n\n      for (var i = 0; i < 3; i++) {\n        rgb[i] = 255 - this.values.rgb[i];\n      }\n\n      this.setValues('rgb', rgb);\n      return this;\n    },\n    lighten: function lighten(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] += hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    darken: function darken(ratio) {\n      var hsl = this.values.hsl;\n      hsl[2] -= hsl[2] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    saturate: function saturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] += hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    desaturate: function desaturate(ratio) {\n      var hsl = this.values.hsl;\n      hsl[1] -= hsl[1] * ratio;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n    whiten: function whiten(ratio) {\n      var hwb = this.values.hwb;\n      hwb[1] += hwb[1] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    blacken: function blacken(ratio) {\n      var hwb = this.values.hwb;\n      hwb[2] += hwb[2] * ratio;\n      this.setValues('hwb', hwb);\n      return this;\n    },\n    greyscale: function greyscale() {\n      var rgb = this.values.rgb; // http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\n      var val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n      this.setValues('rgb', [val, val, val]);\n      return this;\n    },\n    clearer: function clearer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha - alpha * ratio);\n      return this;\n    },\n    opaquer: function opaquer(ratio) {\n      var alpha = this.values.alpha;\n      this.setValues('alpha', alpha + alpha * ratio);\n      return this;\n    },\n    rotate: function rotate(degrees) {\n      var hsl = this.values.hsl;\n      var hue = (hsl[0] + degrees) % 360;\n      hsl[0] = hue < 0 ? 360 + hue : hue;\n      this.setValues('hsl', hsl);\n      return this;\n    },\n\n    /**\n     * Ported from sass implementation in C\n     * https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n     */\n    mix: function mix(mixinColor, weight) {\n      var color1 = this;\n      var color2 = mixinColor;\n      var p = weight === undefined ? 0.5 : weight;\n      var w = 2 * p - 1;\n      var a = color1.alpha() - color2.alpha();\n      var w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      var w2 = 1 - w1;\n      return this.rgb(w1 * color1.red() + w2 * color2.red(), w1 * color1.green() + w2 * color2.green(), w1 * color1.blue() + w2 * color2.blue()).alpha(color1.alpha() * p + color2.alpha() * (1 - p));\n    },\n    toJSON: function toJSON() {\n      return this.rgb();\n    },\n    clone: function clone() {\n      // NOTE(SB): using node-clone creates a dependency to Buffer when using browserify,\n      // making the final build way to big to embed in Chart.js. So let's do it manually,\n      // assuming that values to clone are 1 dimension arrays containing only numbers,\n      // except 'alpha' which is a number.\n      var result = new Color();\n      var source = this.values;\n      var target = result.values;\n      var value, type;\n\n      for (var prop in source) {\n        if (source.hasOwnProperty(prop)) {\n          value = source[prop];\n          type = {}.toString.call(value);\n\n          if (type === '[object Array]') {\n            target[prop] = value.slice(0);\n          } else if (type === '[object Number]') {\n            target[prop] = value;\n          } else {\n            console.error('unexpected color value:', value);\n          }\n        }\n      }\n\n      return result;\n    }\n  };\n  Color.prototype.spaces = {\n    rgb: ['red', 'green', 'blue'],\n    hsl: ['hue', 'saturation', 'lightness'],\n    hsv: ['hue', 'saturation', 'value'],\n    hwb: ['hue', 'whiteness', 'blackness'],\n    cmyk: ['cyan', 'magenta', 'yellow', 'black']\n  };\n  Color.prototype.maxes = {\n    rgb: [255, 255, 255],\n    hsl: [360, 100, 100],\n    hsv: [360, 100, 100],\n    hwb: [360, 100, 100],\n    cmyk: [100, 100, 100, 100]\n  };\n\n  Color.prototype.getValues = function (space) {\n    var values = this.values;\n    var vals = {};\n\n    for (var i = 0; i < space.length; i++) {\n      vals[space.charAt(i)] = values[space][i];\n    }\n\n    if (values.alpha !== 1) {\n      vals.a = values.alpha;\n    } // {r: 255, g: 255, b: 255, a: 0.4}\n\n\n    return vals;\n  };\n\n  Color.prototype.setValues = function (space, vals) {\n    var values = this.values;\n    var spaces = this.spaces;\n    var maxes = this.maxes;\n    var alpha = 1;\n    var i;\n    this.valid = true;\n\n    if (space === 'alpha') {\n      alpha = vals;\n    } else if (vals.length) {\n      // [10, 10, 10]\n      values[space] = vals.slice(0, space.length);\n      alpha = vals[space.length];\n    } else if (vals[space.charAt(0)] !== undefined) {\n      // {r: 10, g: 10, b: 10}\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[space.charAt(i)];\n      }\n\n      alpha = vals.a;\n    } else if (vals[spaces[space][0]] !== undefined) {\n      // {red: 10, green: 10, blue: 10}\n      var chans = spaces[space];\n\n      for (i = 0; i < space.length; i++) {\n        values[space][i] = vals[chans[i]];\n      }\n\n      alpha = vals.alpha;\n    }\n\n    values.alpha = Math.max(0, Math.min(1, alpha === undefined ? values.alpha : alpha));\n\n    if (space === 'alpha') {\n      return false;\n    }\n\n    var capped; // cap values of the space prior converting all values\n\n    for (i = 0; i < space.length; i++) {\n      capped = Math.max(0, Math.min(maxes[space][i], values[space][i]));\n      values[space][i] = Math.round(capped);\n    } // convert to all the other color spaces\n\n\n    for (var sname in spaces) {\n      if (sname !== space) {\n        values[sname] = colorConvert[space][sname](values[space]);\n      }\n    }\n\n    return true;\n  };\n\n  Color.prototype.setSpace = function (space, args) {\n    var vals = args[0];\n\n    if (vals === undefined) {\n      // color.rgb()\n      return this.getValues(space);\n    } // color.rgb(10, 10, 10)\n\n\n    if (typeof vals === 'number') {\n      vals = Array.prototype.slice.call(args);\n    }\n\n    this.setValues(space, vals);\n    return this;\n  };\n\n  Color.prototype.setChannel = function (space, index, val) {\n    var svalues = this.values[space];\n\n    if (val === undefined) {\n      // color.red()\n      return svalues[index];\n    } else if (val === svalues[index]) {\n      // color.red(color.red())\n      return this;\n    } // color.red(100)\n\n\n    svalues[index] = val;\n    this.setValues(space, svalues);\n    return this;\n  };\n\n  if (typeof window !== 'undefined') {\n    window.Color = Color;\n  }\n\n  var chartjsColor = Color;\n  /**\n   * @namespace Chart.helpers\n   */\n\n  var helpers = {\n    /**\n     * An empty function that can be used, for example, for optional callback.\n     */\n    noop: function noop() {},\n\n    /**\n     * Returns a unique id, sequentially generated from a global variable.\n     * @returns {number}\n     * @function\n     */\n    uid: function () {\n      var id = 0;\n      return function () {\n        return id++;\n      };\n    }(),\n\n    /**\n     * Returns true if `value` is neither null nor undefined, else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isNullOrUndef: function isNullOrUndef(value) {\n      return value === null || typeof value === 'undefined';\n    },\n\n    /**\n     * Returns true if `value` is an array (including typed arrays), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @function\n     */\n    isArray: function isArray(value) {\n      if (Array.isArray && Array.isArray(value)) {\n        return true;\n      }\n\n      var type = Object.prototype.toString.call(value);\n\n      if (type.substr(0, 7) === '[object' && type.substr(-6) === 'Array]') {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Returns true if `value` is an object (excluding null), else returns false.\n     * @param {*} value - The value to test.\n     * @returns {boolean}\n     * @since 2.7.0\n     */\n    isObject: function isObject(value) {\n      return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n    },\n\n    /**\n     * Returns true if `value` is a finite number, else returns false\n     * @param {*} value  - The value to test.\n     * @returns {boolean}\n     */\n    isFinite: function (_isFinite) {\n      function isFinite(_x) {\n        return _isFinite.apply(this, arguments);\n      }\n\n      isFinite.toString = function () {\n        return _isFinite.toString();\n      };\n\n      return isFinite;\n    }(function (value) {\n      return (typeof value === 'number' || value instanceof Number) && isFinite(value);\n    }),\n\n    /**\n     * Returns `value` if defined, else returns `defaultValue`.\n     * @param {*} value - The value to return if defined.\n     * @param {*} defaultValue - The value to return if `value` is undefined.\n     * @returns {*}\n     */\n    valueOrDefault: function valueOrDefault(value, defaultValue) {\n      return typeof value === 'undefined' ? defaultValue : value;\n    },\n\n    /**\n     * Returns value at the given `index` in array if defined, else returns `defaultValue`.\n     * @param {Array} value - The array to lookup for value at `index`.\n     * @param {number} index - The index in `value` to lookup for value.\n     * @param {*} defaultValue - The value to return if `value[index]` is undefined.\n     * @returns {*}\n     */\n    valueAtIndexOrDefault: function valueAtIndexOrDefault(value, index, defaultValue) {\n      return helpers.valueOrDefault(helpers.isArray(value) ? value[index] : value, defaultValue);\n    },\n\n    /**\n     * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n     * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n     * @param {function} fn - The function to call.\n     * @param {Array|undefined|null} args - The arguments with which `fn` should be called.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @returns {*}\n     */\n    callback: function callback(fn, args, thisArg) {\n      if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n      }\n    },\n\n    /**\n     * Note(SB) for performance sake, this method should only be used when loopable type\n     * is unknown or in none intensive code (not called often and small loopable). Else\n     * it's preferable to use a regular for() loop and save extra function calls.\n     * @param {object|Array} loopable - The object or array to be iterated.\n     * @param {function} fn - The function to call for each item.\n     * @param {object} [thisArg] - The value of `this` provided for the call to `fn`.\n     * @param {boolean} [reverse] - If true, iterates backward on the loopable.\n     */\n    each: function each(loopable, fn, thisArg, reverse) {\n      var i, len, keys;\n\n      if (helpers.isArray(loopable)) {\n        len = loopable.length;\n\n        if (reverse) {\n          for (i = len - 1; i >= 0; i--) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        } else {\n          for (i = 0; i < len; i++) {\n            fn.call(thisArg, loopable[i], i);\n          }\n        }\n      } else if (helpers.isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n\n        for (i = 0; i < len; i++) {\n          fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n      }\n    },\n\n    /**\n     * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n     * @see https://stackoverflow.com/a/14853974\n     * @param {Array} a0 - The array to compare\n     * @param {Array} a1 - The array to compare\n     * @returns {boolean}\n     */\n    arrayEquals: function arrayEquals(a0, a1) {\n      var i, ilen, v0, v1;\n\n      if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n      }\n\n      for (i = 0, ilen = a0.length; i < ilen; ++i) {\n        v0 = a0[i];\n        v1 = a1[i];\n\n        if (v0 instanceof Array && v1 instanceof Array) {\n          if (!helpers.arrayEquals(v0, v1)) {\n            return false;\n          }\n        } else if (v0 !== v1) {\n          // NOTE: two different object instances will never be equal: {x:20} != {x:20}\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns a deep copy of `source` without keeping references on objects and arrays.\n     * @param {*} source - The value to clone.\n     * @returns {*}\n     */\n    clone: function clone(source) {\n      if (helpers.isArray(source)) {\n        return source.map(helpers.clone);\n      }\n\n      if (helpers.isObject(source)) {\n        var target = {};\n        var keys = Object.keys(source);\n        var klen = keys.length;\n        var k = 0;\n\n        for (; k < klen; ++k) {\n          target[keys[k]] = helpers.clone(source[keys[k]]);\n        }\n\n        return target;\n      }\n\n      return source;\n    },\n\n    /**\n     * The default merger when Chart.helpers.merge is called without merger option.\n     * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n     * @private\n     */\n    _merger: function _merger(key, target, source, options) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.merge(tval, sval, options);\n      } else {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Merges source[key] in target[key] only if target[key] is undefined.\n     * @private\n     */\n    _mergerIf: function _mergerIf(key, target, source) {\n      var tval = target[key];\n      var sval = source[key];\n\n      if (helpers.isObject(tval) && helpers.isObject(sval)) {\n        helpers.mergeIf(tval, sval);\n      } else if (!target.hasOwnProperty(key)) {\n        target[key] = helpers.clone(sval);\n      }\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` with the given `options`.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @param {object} [options] - Merging options:\n     * @param {function} [options.merger] - The merge method (key, target, source, options)\n     * @returns {object} The `target` object.\n     */\n    merge: function merge(target, source, options) {\n      var sources = helpers.isArray(source) ? source : [source];\n      var ilen = sources.length;\n      var merge, i, keys, klen, k;\n\n      if (!helpers.isObject(target)) {\n        return target;\n      }\n\n      options = options || {};\n      merge = options.merger || helpers._merger;\n\n      for (i = 0; i < ilen; ++i) {\n        source = sources[i];\n\n        if (!helpers.isObject(source)) {\n          continue;\n        }\n\n        keys = Object.keys(source);\n\n        for (k = 0, klen = keys.length; k < klen; ++k) {\n          merge(keys[k], target, source, options);\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Recursively deep copies `source` properties into `target` *only* if not defined in target.\n     * IMPORTANT: `target` is not cloned and will be updated with `source` properties.\n     * @param {object} target - The target object in which all sources are merged into.\n     * @param {object|object[]} source - Object(s) to merge into `target`.\n     * @returns {object} The `target` object.\n     */\n    mergeIf: function mergeIf(target, source) {\n      return helpers.merge(target, source, {\n        merger: helpers._mergerIf\n      });\n    },\n\n    /**\n     * Applies the contents of two or more objects together into the first object.\n     * @param {object} target - The target object in which all objects are merged into.\n     * @param {object} arg1 - Object containing additional properties to merge in target.\n     * @param {object} argN - Additional objects containing properties to merge in target.\n     * @returns {object} The `target` object.\n     */\n    extend: function extend(target) {\n      var setFn = function setFn(value, key) {\n        target[key] = value;\n      };\n\n      for (var i = 1, ilen = arguments.length; i < ilen; ++i) {\n        helpers.each(arguments[i], setFn);\n      }\n\n      return target;\n    },\n\n    /**\n     * Basic javascript inheritance based on the model created in Backbone.js\n     */\n    inherits: function inherits(extensions) {\n      var me = this;\n      var ChartElement = extensions && extensions.hasOwnProperty('constructor') ? extensions.constructor : function () {\n        return me.apply(this, arguments);\n      };\n\n      var Surrogate = function Surrogate() {\n        this.constructor = ChartElement;\n      };\n\n      Surrogate.prototype = me.prototype;\n      ChartElement.prototype = new Surrogate();\n      ChartElement.extend = helpers.inherits;\n\n      if (extensions) {\n        helpers.extend(ChartElement.prototype, extensions);\n      }\n\n      ChartElement.__super__ = me.prototype;\n      return ChartElement;\n    }\n  };\n  var helpers_core = helpers; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.callback instead.\n   * @function Chart.helpers.callCallback\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.callCallback = helpers.callback;\n  /**\n   * Provided for backward compatibility, use Array.prototype.indexOf instead.\n   * Array.prototype.indexOf compatibility: Chrome, Opera, Safari, FF1.5+, IE9+\n   * @function Chart.helpers.indexOf\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.indexOf = function (array, item, fromIndex) {\n    return Array.prototype.indexOf.call(array, item, fromIndex);\n  };\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueOrDefault instead.\n   * @function Chart.helpers.getValueOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  helpers.getValueOrDefault = helpers.valueOrDefault;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.valueAtIndexOrDefault instead.\n   * @function Chart.helpers.getValueAtIndexOrDefault\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers.getValueAtIndexOrDefault = helpers.valueAtIndexOrDefault;\n  /**\n   * Easing functions adapted from Robert Penner's easing equations.\n   * @namespace Chart.helpers.easingEffects\n   * @see http://www.robertpenner.com/easing/\n   */\n\n  var effects = {\n    linear: function linear(t) {\n      return t;\n    },\n    easeInQuad: function easeInQuad(t) {\n      return t * t;\n    },\n    easeOutQuad: function easeOutQuad(t) {\n      return -t * (t - 2);\n    },\n    easeInOutQuad: function easeInOutQuad(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t;\n      }\n\n      return -0.5 * (--t * (t - 2) - 1);\n    },\n    easeInCubic: function easeInCubic(t) {\n      return t * t * t;\n    },\n    easeOutCubic: function easeOutCubic(t) {\n      return (t = t - 1) * t * t + 1;\n    },\n    easeInOutCubic: function easeInOutCubic(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t + 2);\n    },\n    easeInQuart: function easeInQuart(t) {\n      return t * t * t * t;\n    },\n    easeOutQuart: function easeOutQuart(t) {\n      return -((t = t - 1) * t * t * t - 1);\n    },\n    easeInOutQuart: function easeInOutQuart(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t;\n      }\n\n      return -0.5 * ((t -= 2) * t * t * t - 2);\n    },\n    easeInQuint: function easeInQuint(t) {\n      return t * t * t * t * t;\n    },\n    easeOutQuint: function easeOutQuint(t) {\n      return (t = t - 1) * t * t * t * t + 1;\n    },\n    easeInOutQuint: function easeInOutQuint(t) {\n      if ((t /= 0.5) < 1) {\n        return 0.5 * t * t * t * t * t;\n      }\n\n      return 0.5 * ((t -= 2) * t * t * t * t + 2);\n    },\n    easeInSine: function easeInSine(t) {\n      return -Math.cos(t * (Math.PI / 2)) + 1;\n    },\n    easeOutSine: function easeOutSine(t) {\n      return Math.sin(t * (Math.PI / 2));\n    },\n    easeInOutSine: function easeInOutSine(t) {\n      return -0.5 * (Math.cos(Math.PI * t) - 1);\n    },\n    easeInExpo: function easeInExpo(t) {\n      return t === 0 ? 0 : Math.pow(2, 10 * (t - 1));\n    },\n    easeOutExpo: function easeOutExpo(t) {\n      return t === 1 ? 1 : -Math.pow(2, -10 * t) + 1;\n    },\n    easeInOutExpo: function easeInOutExpo(t) {\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * Math.pow(2, 10 * (t - 1));\n      }\n\n      return 0.5 * (-Math.pow(2, -10 * --t) + 2);\n    },\n    easeInCirc: function easeInCirc(t) {\n      if (t >= 1) {\n        return t;\n      }\n\n      return -(Math.sqrt(1 - t * t) - 1);\n    },\n    easeOutCirc: function easeOutCirc(t) {\n      return Math.sqrt(1 - (t = t - 1) * t);\n    },\n    easeInOutCirc: function easeInOutCirc(t) {\n      if ((t /= 0.5) < 1) {\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n      }\n\n      return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n    },\n    easeInElastic: function easeInElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n    },\n    easeOutElastic: function easeOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if (t === 1) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.3;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      return a * Math.pow(2, -10 * t) * Math.sin((t - s) * (2 * Math.PI) / p) + 1;\n    },\n    easeInOutElastic: function easeInOutElastic(t) {\n      var s = 1.70158;\n      var p = 0;\n      var a = 1;\n\n      if (t === 0) {\n        return 0;\n      }\n\n      if ((t /= 0.5) === 2) {\n        return 1;\n      }\n\n      if (!p) {\n        p = 0.45;\n      }\n\n      if (a < 1) {\n        a = 1;\n        s = p / 4;\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(1 / a);\n      }\n\n      if (t < 1) {\n        return -0.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p));\n      }\n\n      return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t - s) * (2 * Math.PI) / p) * 0.5 + 1;\n    },\n    easeInBack: function easeInBack(t) {\n      var s = 1.70158;\n      return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack: function easeOutBack(t) {\n      var s = 1.70158;\n      return (t = t - 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack: function easeInOutBack(t) {\n      var s = 1.70158;\n\n      if ((t /= 0.5) < 1) {\n        return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n      }\n\n      return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: function easeInBounce(t) {\n      return 1 - effects.easeOutBounce(1 - t);\n    },\n    easeOutBounce: function easeOutBounce(t) {\n      if (t < 1 / 2.75) {\n        return 7.5625 * t * t;\n      }\n\n      if (t < 2 / 2.75) {\n        return 7.5625 * (t -= 1.5 / 2.75) * t + 0.75;\n      }\n\n      if (t < 2.5 / 2.75) {\n        return 7.5625 * (t -= 2.25 / 2.75) * t + 0.9375;\n      }\n\n      return 7.5625 * (t -= 2.625 / 2.75) * t + 0.984375;\n    },\n    easeInOutBounce: function easeInOutBounce(t) {\n      if (t < 0.5) {\n        return effects.easeInBounce(t * 2) * 0.5;\n      }\n\n      return effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5;\n    }\n  };\n  var helpers_easing = {\n    effects: effects\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.easing.effects instead.\n   * @function Chart.helpers.easingEffects\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.easingEffects = effects;\n  var PI = Math.PI;\n  var RAD_PER_DEG = PI / 180;\n  var DOUBLE_PI = PI * 2;\n  var HALF_PI = PI / 2;\n  var QUARTER_PI = PI / 4;\n  var TWO_THIRDS_PI = PI * 2 / 3;\n  /**\n   * @namespace Chart.helpers.canvas\n   */\n\n  var exports$1 = {\n    /**\n     * Clears the entire canvas associated to the given `chart`.\n     * @param {Chart} chart - The chart for which to clear the canvas.\n     */\n    clear: function clear(chart) {\n      chart.ctx.clearRect(0, 0, chart.width, chart.height);\n    },\n\n    /**\n     * Creates a \"path\" for a rectangle with rounded corners at position (x, y) with a\n     * given size (width, height) and the same `radius` for all corners.\n     * @param {CanvasRenderingContext2D} ctx - The canvas 2D Context.\n     * @param {number} x - The x axis of the coordinate for the rectangle starting point.\n     * @param {number} y - The y axis of the coordinate for the rectangle starting point.\n     * @param {number} width - The rectangle's width.\n     * @param {number} height - The rectangle's height.\n     * @param {number} radius - The rounded amount (in pixels) for the four corners.\n     * @todo handle `radius` as top-left, top-right, bottom-right, bottom-left array/object?\n     */\n    roundedRect: function roundedRect(ctx, x, y, width, height, radius) {\n      if (radius) {\n        var r = Math.min(radius, height / 2, width / 2);\n        var left = x + r;\n        var top = y + r;\n        var right = x + width - r;\n        var bottom = y + height - r;\n        ctx.moveTo(x, top);\n\n        if (left < right && top < bottom) {\n          ctx.arc(left, top, r, -PI, -HALF_PI);\n          ctx.arc(right, top, r, -HALF_PI, 0);\n          ctx.arc(right, bottom, r, 0, HALF_PI);\n          ctx.arc(left, bottom, r, HALF_PI, PI);\n        } else if (left < right) {\n          ctx.moveTo(left, y);\n          ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n          ctx.arc(left, top, r, HALF_PI, PI + HALF_PI);\n        } else if (top < bottom) {\n          ctx.arc(left, top, r, -PI, 0);\n          ctx.arc(left, bottom, r, 0, PI);\n        } else {\n          ctx.arc(left, top, r, -PI, PI);\n        }\n\n        ctx.closePath();\n        ctx.moveTo(x, y);\n      } else {\n        ctx.rect(x, y, width, height);\n      }\n    },\n    drawPoint: function drawPoint(ctx, style, radius, x, y, rotation) {\n      var type, xOffset, yOffset, size, cornerRadius;\n      var rad = (rotation || 0) * RAD_PER_DEG;\n\n      if (style && typeof style === 'object') {\n        type = style.toString();\n\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n          ctx.drawImage(style, x - style.width / 2, y - style.height / 2, style.width, style.height);\n          return;\n        }\n      }\n\n      if (isNaN(radius) || radius <= 0) {\n        return;\n      }\n\n      ctx.beginPath();\n\n      switch (style) {\n        // Default includes circle\n        default:\n          ctx.arc(x, y, radius, 0, DOUBLE_PI);\n          ctx.closePath();\n          break;\n\n        case 'triangle':\n          ctx.moveTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          rad += TWO_THIRDS_PI;\n          ctx.lineTo(x + Math.sin(rad) * radius, y - Math.cos(rad) * radius);\n          ctx.closePath();\n          break;\n\n        case 'rectRounded':\n          // NOTE: the rounded rect implementation changed to use `arc` instead of\n          // `quadraticCurveTo` since it generates better results when rect is\n          // almost a circle. 0.516 (instead of 0.5) produces results with visually\n          // closer proportion to the previous impl and it is inscribed in the\n          // circle with `radius`. For more details, see the following PRs:\n          // https://github.com/chartjs/Chart.js/issues/5597\n          // https://github.com/chartjs/Chart.js/issues/5858\n          cornerRadius = radius * 0.516;\n          size = radius - cornerRadius;\n          xOffset = Math.cos(rad + QUARTER_PI) * size;\n          yOffset = Math.sin(rad + QUARTER_PI) * size;\n          ctx.arc(x - xOffset, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n          ctx.arc(x + yOffset, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n          ctx.arc(x + xOffset, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n          ctx.arc(x - yOffset, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n          ctx.closePath();\n          break;\n\n        case 'rect':\n          if (!rotation) {\n            size = Math.SQRT1_2 * radius;\n            ctx.rect(x - size, y - size, 2 * size, 2 * size);\n            break;\n          }\n\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'rectRot':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          ctx.closePath();\n          break;\n\n        case 'crossRot':\n          rad += QUARTER_PI;\n\n        /* falls through */\n\n        case 'cross':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'star':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          rad += QUARTER_PI;\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          ctx.moveTo(x + yOffset, y - xOffset);\n          ctx.lineTo(x - yOffset, y + xOffset);\n          break;\n\n        case 'line':\n          xOffset = Math.cos(rad) * radius;\n          yOffset = Math.sin(rad) * radius;\n          ctx.moveTo(x - xOffset, y - yOffset);\n          ctx.lineTo(x + xOffset, y + yOffset);\n          break;\n\n        case 'dash':\n          ctx.moveTo(x, y);\n          ctx.lineTo(x + Math.cos(rad) * radius, y + Math.sin(rad) * radius);\n          break;\n      }\n\n      ctx.fill();\n      ctx.stroke();\n    },\n\n    /**\n     * Returns true if the point is inside the rectangle\n     * @param {object} point - The point to test\n     * @param {object} area - The rectangle\n     * @returns {boolean}\n     * @private\n     */\n    _isPointInArea: function _isPointInArea(point, area) {\n      var epsilon = 1e-6; // 1e-6 is margin in pixels for accumulated error.\n\n      return point.x > area.left - epsilon && point.x < area.right + epsilon && point.y > area.top - epsilon && point.y < area.bottom + epsilon;\n    },\n    clipArea: function clipArea(ctx, area) {\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n      ctx.clip();\n    },\n    unclipArea: function unclipArea(ctx) {\n      ctx.restore();\n    },\n    lineTo: function lineTo(ctx, previous, target, flip) {\n      var stepped = target.steppedLine;\n\n      if (stepped) {\n        if (stepped === 'middle') {\n          var midpoint = (previous.x + target.x) / 2.0;\n          ctx.lineTo(midpoint, flip ? target.y : previous.y);\n          ctx.lineTo(midpoint, flip ? previous.y : target.y);\n        } else if (stepped === 'after' && !flip || stepped !== 'after' && flip) {\n          ctx.lineTo(previous.x, target.y);\n        } else {\n          ctx.lineTo(target.x, previous.y);\n        }\n\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      if (!target.tension) {\n        ctx.lineTo(target.x, target.y);\n        return;\n      }\n\n      ctx.bezierCurveTo(flip ? previous.controlPointPreviousX : previous.controlPointNextX, flip ? previous.controlPointPreviousY : previous.controlPointNextY, flip ? target.controlPointNextX : target.controlPointPreviousX, flip ? target.controlPointNextY : target.controlPointPreviousY, target.x, target.y);\n    }\n  };\n  var helpers_canvas = exports$1; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.clear instead.\n   * @namespace Chart.helpers.clear\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.clear = exports$1.clear;\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas.roundedRect instead.\n   * @namespace Chart.helpers.drawRoundedRectangle\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers_core.drawRoundedRectangle = function (ctx) {\n    ctx.beginPath();\n    exports$1.roundedRect.apply(exports$1, arguments);\n  };\n\n  var defaults = {\n    /**\n     * @private\n     */\n    _set: function _set(scope, values) {\n      return helpers_core.merge(this[scope] || (this[scope] = {}), values);\n    }\n  };\n\n  defaults._set('global', {\n    defaultColor: 'rgba(0,0,0,0.1)',\n    defaultFontColor: '#666',\n    defaultFontFamily: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n    defaultFontSize: 12,\n    defaultFontStyle: 'normal',\n    defaultLineHeight: 1.2,\n    showLines: true\n  });\n\n  var core_defaults = defaults;\n  var valueOrDefault = helpers_core.valueOrDefault;\n  /**\n   * Converts the given font object into a CSS font string.\n   * @param {object} font - A font object.\n   * @return {string} The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n   * @private\n   */\n\n  function toFontString(font) {\n    if (!font || helpers_core.isNullOrUndef(font.size) || helpers_core.isNullOrUndef(font.family)) {\n      return null;\n    }\n\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n  }\n  /**\n   * @alias Chart.helpers.options\n   * @namespace\n   */\n\n\n  var helpers_options = {\n    /**\n     * Converts the given line height `value` in pixels for a specific font `size`.\n     * @param {number|string} value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n     * @param {number} size - The font size (in pixels) used to resolve relative `value`.\n     * @returns {number} The effective line height in pixels (size * 1.2 if value is invalid).\n     * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n     * @since 2.7.0\n     */\n    toLineHeight: function toLineHeight(value, size) {\n      var matches = ('' + value).match(/^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/);\n\n      if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n      }\n\n      value = +matches[2];\n\n      switch (matches[3]) {\n        case 'px':\n          return value;\n\n        case '%':\n          value /= 100;\n          break;\n\n        default:\n          break;\n      }\n\n      return size * value;\n    },\n\n    /**\n     * Converts the given value into a padding object with pre-computed width/height.\n     * @param {number|object} value - If a number, set the value to all TRBL component,\n     *  else, if and object, use defined properties and sets undefined ones to 0.\n     * @returns {object} The padding values (top, right, bottom, left, width, height)\n     * @since 2.7.0\n     */\n    toPadding: function toPadding(value) {\n      var t, r, b, l;\n\n      if (helpers_core.isObject(value)) {\n        t = +value.top || 0;\n        r = +value.right || 0;\n        b = +value.bottom || 0;\n        l = +value.left || 0;\n      } else {\n        t = r = b = l = +value || 0;\n      }\n\n      return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        height: t + b,\n        width: l + r\n      };\n    },\n\n    /**\n     * Parses font options and returns the font object.\n     * @param {object} options - A object that contains font options to be parsed.\n     * @return {object} The font object.\n     * @todo Support font.* options and renamed to toFont().\n     * @private\n     */\n    _parseFont: function _parseFont(options) {\n      var globalDefaults = core_defaults.global;\n      var size = valueOrDefault(options.fontSize, globalDefaults.defaultFontSize);\n      var font = {\n        family: valueOrDefault(options.fontFamily, globalDefaults.defaultFontFamily),\n        lineHeight: helpers_core.options.toLineHeight(valueOrDefault(options.lineHeight, globalDefaults.defaultLineHeight), size),\n        size: size,\n        style: valueOrDefault(options.fontStyle, globalDefaults.defaultFontStyle),\n        weight: null,\n        string: ''\n      };\n      font.string = toFontString(font);\n      return font;\n    },\n\n    /**\n     * Evaluates the given `inputs` sequentially and returns the first defined value.\n     * @param {Array} inputs - An array of values, falling back to the last value.\n     * @param {object} [context] - If defined and the current value is a function, the value\n     * is called with `context` as first argument and the result becomes the new input.\n     * @param {number} [index] - If defined and the current value is an array, the value\n     * at `index` become the new input.\n     * @since 2.7.0\n     */\n    resolve: function resolve(inputs, context, index) {\n      var i, ilen, value;\n\n      for (i = 0, ilen = inputs.length; i < ilen; ++i) {\n        value = inputs[i];\n\n        if (value === undefined) {\n          continue;\n        }\n\n        if (context !== undefined && typeof value === 'function') {\n          value = value(context);\n        }\n\n        if (index !== undefined && helpers_core.isArray(value)) {\n          value = value[index];\n        }\n\n        if (value !== undefined) {\n          return value;\n        }\n      }\n    }\n  };\n  var helpers$1 = helpers_core;\n  var easing = helpers_easing;\n  var canvas = helpers_canvas;\n  var options = helpers_options;\n  helpers$1.easing = easing;\n  helpers$1.canvas = canvas;\n  helpers$1.options = options;\n\n  function interpolate(start, view, model, ease) {\n    var keys = Object.keys(model);\n    var i, ilen, key, actual, origin, target, type, c0, c1;\n\n    for (i = 0, ilen = keys.length; i < ilen; ++i) {\n      key = keys[i];\n      target = model[key]; // if a value is added to the model after pivot() has been called, the view\n      // doesn't contain it, so let's initialize the view to the target value.\n\n      if (!view.hasOwnProperty(key)) {\n        view[key] = target;\n      }\n\n      actual = view[key];\n\n      if (actual === target || key[0] === '_') {\n        continue;\n      }\n\n      if (!start.hasOwnProperty(key)) {\n        start[key] = actual;\n      }\n\n      origin = start[key];\n      type = typeof target;\n\n      if (type === typeof origin) {\n        if (type === 'string') {\n          c0 = chartjsColor(origin);\n\n          if (c0.valid) {\n            c1 = chartjsColor(target);\n\n            if (c1.valid) {\n              view[key] = c1.mix(c0, ease).rgbString();\n              continue;\n            }\n          }\n        } else if (helpers$1.isFinite(origin) && helpers$1.isFinite(target)) {\n          view[key] = origin + (target - origin) * ease;\n          continue;\n        }\n      }\n\n      view[key] = target;\n    }\n  }\n\n  var Element = function Element(configuration) {\n    helpers$1.extend(this, configuration);\n    this.initialize.apply(this, arguments);\n  };\n\n  helpers$1.extend(Element.prototype, {\n    initialize: function initialize() {\n      this.hidden = false;\n    },\n    pivot: function pivot() {\n      var me = this;\n\n      if (!me._view) {\n        me._view = helpers$1.clone(me._model);\n      }\n\n      me._start = {};\n      return me;\n    },\n    transition: function transition(ease) {\n      var me = this;\n      var model = me._model;\n      var start = me._start;\n      var view = me._view; // No animation -> No Transition\n\n      if (!model || ease === 1) {\n        me._view = model;\n        me._start = null;\n        return me;\n      }\n\n      if (!view) {\n        view = me._view = {};\n      }\n\n      if (!start) {\n        start = me._start = {};\n      }\n\n      interpolate(start, view, model, ease);\n      return me;\n    },\n    tooltipPosition: function tooltipPosition() {\n      return {\n        x: this._model.x,\n        y: this._model.y\n      };\n    },\n    hasValue: function hasValue() {\n      return helpers$1.isNumber(this._model.x) && helpers$1.isNumber(this._model.y);\n    }\n  });\n  Element.extend = helpers$1.inherits;\n  var core_element = Element;\n  var exports$2 = core_element.extend({\n    chart: null,\n    // the animation associated chart instance\n    currentStep: 0,\n    // the current animation step\n    numSteps: 60,\n    // default number of steps\n    easing: '',\n    // the easing to use for this animation\n    render: null,\n    // render function used by the animation service\n    onAnimationProgress: null,\n    // user specified callback to fire on each step of the animation\n    onAnimationComplete: null // user specified callback to fire when the animation finishes\n\n  });\n  var core_animation = exports$2; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart.Animation instead\n   * @prop Chart.Animation#animationObject\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'animationObject', {\n    get: function get() {\n      return this;\n    }\n  });\n  /**\n   * Provided for backward compatibility, use Chart.Animation#chart instead\n   * @prop Chart.Animation#chartInstance\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   */\n\n  Object.defineProperty(exports$2.prototype, 'chartInstance', {\n    get: function get() {\n      return this.chart;\n    },\n    set: function set(value) {\n      this.chart = value;\n    }\n  });\n\n  core_defaults._set('global', {\n    animation: {\n      duration: 1000,\n      easing: 'easeOutQuart',\n      onProgress: helpers$1.noop,\n      onComplete: helpers$1.noop\n    }\n  });\n\n  var core_animations = {\n    animations: [],\n    request: null,\n\n    /**\n     * @param {Chart} chart - The chart to animate.\n     * @param {Chart.Animation} animation - The animation that we will animate.\n     * @param {number} duration - The animation duration in ms.\n     * @param {boolean} lazy - if true, the chart is not marked as animating to enable more responsive interactions\n     */\n    addAnimation: function addAnimation(chart, animation, duration, lazy) {\n      var animations = this.animations;\n      var i, ilen;\n      animation.chart = chart;\n      animation.startTime = Date.now();\n      animation.duration = duration;\n\n      if (!lazy) {\n        chart.animating = true;\n      }\n\n      for (i = 0, ilen = animations.length; i < ilen; ++i) {\n        if (animations[i].chart === chart) {\n          animations[i] = animation;\n          return;\n        }\n      }\n\n      animations.push(animation); // If there are no animations queued, manually kickstart a digest, for lack of a better word\n\n      if (animations.length === 1) {\n        this.requestAnimationFrame();\n      }\n    },\n    cancelAnimation: function cancelAnimation(chart) {\n      var index = helpers$1.findIndex(this.animations, function (animation) {\n        return animation.chart === chart;\n      });\n\n      if (index !== -1) {\n        this.animations.splice(index, 1);\n        chart.animating = false;\n      }\n    },\n    requestAnimationFrame: function requestAnimationFrame() {\n      var me = this;\n\n      if (me.request === null) {\n        // Skip animation frame requests until the active one is executed.\n        // This can happen when processing mouse events, e.g. 'mousemove'\n        // and 'mouseout' events will trigger multiple renders.\n        me.request = helpers$1.requestAnimFrame.call(window, function () {\n          me.request = null;\n          me.startDigest();\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    startDigest: function startDigest() {\n      var me = this;\n      me.advance(); // Do we have more stuff to animate?\n\n      if (me.animations.length > 0) {\n        me.requestAnimationFrame();\n      }\n    },\n\n    /**\n     * @private\n     */\n    advance: function advance() {\n      var animations = this.animations;\n      var animation, chart, numSteps, nextStep;\n      var i = 0; // 1 animation per chart, so we are looping charts here\n\n      while (i < animations.length) {\n        animation = animations[i];\n        chart = animation.chart;\n        numSteps = animation.numSteps; // Make sure that currentStep starts at 1\n        // https://github.com/chartjs/Chart.js/issues/6104\n\n        nextStep = Math.floor((Date.now() - animation.startTime) / animation.duration * numSteps) + 1;\n        animation.currentStep = Math.min(nextStep, numSteps);\n        helpers$1.callback(animation.render, [chart, animation], chart);\n        helpers$1.callback(animation.onAnimationProgress, [animation], chart);\n\n        if (animation.currentStep >= numSteps) {\n          helpers$1.callback(animation.onAnimationComplete, [animation], chart);\n          chart.animating = false;\n          animations.splice(i, 1);\n        } else {\n          ++i;\n        }\n      }\n    }\n  };\n  var resolve = helpers$1.options.resolve;\n  var arrayEvents = ['push', 'pop', 'shift', 'splice', 'unshift'];\n  /**\n   * Hooks the array methods that add or remove values ('push', pop', 'shift', 'splice',\n   * 'unshift') and notify the listener AFTER the array has been altered. Listeners are\n   * called on the 'onData*' callbacks (e.g. onDataPush, etc.) with same arguments.\n   */\n\n  function listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n      array._chartjs.listeners.push(listener);\n\n      return;\n    }\n\n    Object.defineProperty(array, '_chartjs', {\n      configurable: true,\n      enumerable: false,\n      value: {\n        listeners: [listener]\n      }\n    });\n    arrayEvents.forEach(function (key) {\n      var method = 'onData' + key.charAt(0).toUpperCase() + key.slice(1);\n      var base = array[key];\n      Object.defineProperty(array, key, {\n        configurable: true,\n        enumerable: false,\n        value: function value() {\n          var args = Array.prototype.slice.call(arguments);\n          var res = base.apply(this, args);\n          helpers$1.each(array._chartjs.listeners, function (object) {\n            if (typeof object[method] === 'function') {\n              object[method].apply(object, args);\n            }\n          });\n          return res;\n        }\n      });\n    });\n  }\n  /**\n   * Removes the given array event listener and cleanup extra attached properties (such as\n   * the _chartjs stub and overridden methods) if array doesn't have any more listeners.\n   */\n\n\n  function unlistenArrayEvents(array, listener) {\n    var stub = array._chartjs;\n\n    if (!stub) {\n      return;\n    }\n\n    var listeners = stub.listeners;\n    var index = listeners.indexOf(listener);\n\n    if (index !== -1) {\n      listeners.splice(index, 1);\n    }\n\n    if (listeners.length > 0) {\n      return;\n    }\n\n    arrayEvents.forEach(function (key) {\n      delete array[key];\n    });\n    delete array._chartjs;\n  } // Base class for all dataset controllers (line, bar, etc)\n\n\n  var DatasetController = function DatasetController(chart, datasetIndex) {\n    this.initialize(chart, datasetIndex);\n  };\n\n  helpers$1.extend(DatasetController.prototype, {\n    /**\n     * Element type used to generate a meta dataset (e.g. Chart.element.Line).\n     * @type {Chart.core.element}\n     */\n    datasetElementType: null,\n\n    /**\n     * Element type used to generate a meta data (e.g. Chart.element.Point).\n     * @type {Chart.core.element}\n     */\n    dataElementType: null,\n    initialize: function initialize(chart, datasetIndex) {\n      var me = this;\n      me.chart = chart;\n      me.index = datasetIndex;\n      me.linkScales();\n      me.addElements();\n    },\n    updateIndex: function updateIndex(datasetIndex) {\n      this.index = datasetIndex;\n    },\n    linkScales: function linkScales() {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      if (meta.xAxisID === null || !(meta.xAxisID in me.chart.scales)) {\n        meta.xAxisID = dataset.xAxisID || me.chart.options.scales.xAxes[0].id;\n      }\n\n      if (meta.yAxisID === null || !(meta.yAxisID in me.chart.scales)) {\n        meta.yAxisID = dataset.yAxisID || me.chart.options.scales.yAxes[0].id;\n      }\n    },\n    getDataset: function getDataset() {\n      return this.chart.data.datasets[this.index];\n    },\n    getMeta: function getMeta() {\n      return this.chart.getDatasetMeta(this.index);\n    },\n    getScaleForId: function getScaleForId(scaleID) {\n      return this.chart.scales[scaleID];\n    },\n\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().yAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getValueScale: function _getValueScale() {\n      return this.getScaleForId(this._getValueScaleId());\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScale: function _getIndexScale() {\n      return this.getScaleForId(this._getIndexScaleId());\n    },\n    reset: function reset() {\n      this.update(true);\n    },\n\n    /**\n     * @private\n     */\n    destroy: function destroy() {\n      if (this._data) {\n        unlistenArrayEvents(this._data, this);\n      }\n    },\n    createMetaDataset: function createMetaDataset() {\n      var me = this;\n      var type = me.datasetElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index\n      });\n    },\n    createMetaData: function createMetaData(index) {\n      var me = this;\n      var type = me.dataElementType;\n      return type && new type({\n        _chart: me.chart,\n        _datasetIndex: me.index,\n        _index: index\n      });\n    },\n    addElements: function addElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data || [];\n      var metaData = meta.data;\n      var i, ilen;\n\n      for (i = 0, ilen = data.length; i < ilen; ++i) {\n        metaData[i] = metaData[i] || me.createMetaData(i);\n      }\n\n      meta.dataset = meta.dataset || me.createMetaDataset();\n    },\n    addElementAndReset: function addElementAndReset(index) {\n      var element = this.createMetaData(index);\n      this.getMeta().data.splice(index, 0, element);\n      this.updateElement(element, index, true);\n    },\n    buildOrUpdateElements: function buildOrUpdateElements() {\n      var me = this;\n      var dataset = me.getDataset();\n      var data = dataset.data || (dataset.data = []); // In order to correctly handle data addition/deletion animation (an thus simulate\n      // real-time charts), we need to monitor these data modifications and synchronize\n      // the internal meta data accordingly.\n\n      if (me._data !== data) {\n        if (me._data) {\n          // This case happens when the user replaced the data array instance.\n          unlistenArrayEvents(me._data, me);\n        }\n\n        if (data && Object.isExtensible(data)) {\n          listenArrayEvents(data, me);\n        }\n\n        me._data = data;\n      } // Re-sync meta data in case the user replaced the data array or if we missed\n      // any updates and so make sure that we handle number of datapoints changing.\n\n\n      me.resyncElements();\n    },\n    update: helpers$1.noop,\n    transition: function transition(easingValue) {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      for (; i < ilen; ++i) {\n        elements[i].transition(easingValue);\n      }\n\n      if (meta.dataset) {\n        meta.dataset.transition(easingValue);\n      }\n    },\n    draw: function draw() {\n      var meta = this.getMeta();\n      var elements = meta.data || [];\n      var ilen = elements.length;\n      var i = 0;\n\n      if (meta.dataset) {\n        meta.dataset.draw();\n      }\n\n      for (; i < ilen; ++i) {\n        elements[i].draw();\n      }\n    },\n    removeHoverStyle: function removeHoverStyle(element) {\n      helpers$1.merge(element._model, element.$previousStyle || {});\n      delete element.$previousStyle;\n    },\n    setHoverStyle: function setHoverStyle(element) {\n      var dataset = this.chart.data.datasets[element._datasetIndex];\n      var index = element._index;\n      var custom = element.custom || {};\n      var model = element._model;\n      var getHoverColor = helpers$1.getHoverColor;\n      element.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = resolve([custom.hoverBackgroundColor, dataset.hoverBackgroundColor, getHoverColor(model.backgroundColor)], undefined, index);\n      model.borderColor = resolve([custom.hoverBorderColor, dataset.hoverBorderColor, getHoverColor(model.borderColor)], undefined, index);\n      model.borderWidth = resolve([custom.hoverBorderWidth, dataset.hoverBorderWidth, model.borderWidth], undefined, index);\n    },\n\n    /**\n     * @private\n     */\n    resyncElements: function resyncElements() {\n      var me = this;\n      var meta = me.getMeta();\n      var data = me.getDataset().data;\n      var numMeta = meta.data.length;\n      var numData = data.length;\n\n      if (numData < numMeta) {\n        meta.data.splice(numData, numMeta - numData);\n      } else if (numData > numMeta) {\n        me.insertElements(numMeta, numData - numMeta);\n      }\n    },\n\n    /**\n     * @private\n     */\n    insertElements: function insertElements(start, count) {\n      for (var i = 0; i < count; ++i) {\n        this.addElementAndReset(start + i);\n      }\n    },\n\n    /**\n     * @private\n     */\n    onDataPush: function onDataPush() {\n      var count = arguments.length;\n      this.insertElements(this.getDataset().data.length - count, count);\n    },\n\n    /**\n     * @private\n     */\n    onDataPop: function onDataPop() {\n      this.getMeta().data.pop();\n    },\n\n    /**\n     * @private\n     */\n    onDataShift: function onDataShift() {\n      this.getMeta().data.shift();\n    },\n\n    /**\n     * @private\n     */\n    onDataSplice: function onDataSplice(start, count) {\n      this.getMeta().data.splice(start, count);\n      this.insertElements(start, arguments.length - 2);\n    },\n\n    /**\n     * @private\n     */\n    onDataUnshift: function onDataUnshift() {\n      this.insertElements(0, arguments.length);\n    }\n  });\n  DatasetController.extend = helpers$1.inherits;\n  var core_datasetController = DatasetController;\n\n  core_defaults._set('global', {\n    elements: {\n      arc: {\n        backgroundColor: core_defaults.global.defaultColor,\n        borderColor: '#fff',\n        borderWidth: 2,\n        borderAlign: 'center'\n      }\n    }\n  });\n\n  var element_arc = core_element.extend({\n    inLabelRange: function inLabelRange(mouseX) {\n      var vm = this._view;\n\n      if (vm) {\n        return Math.pow(mouseX - vm.x, 2) < Math.pow(vm.radius + vm.hoverRadius, 2);\n      }\n\n      return false;\n    },\n    inRange: function inRange(chartX, chartY) {\n      var vm = this._view;\n\n      if (vm) {\n        var pointRelativePosition = helpers$1.getAngleFromPoint(vm, {\n          x: chartX,\n          y: chartY\n        });\n        var angle = pointRelativePosition.angle;\n        var distance = pointRelativePosition.distance; // Sanitise angle range\n\n        var startAngle = vm.startAngle;\n        var endAngle = vm.endAngle;\n\n        while (endAngle < startAngle) {\n          endAngle += 2.0 * Math.PI;\n        }\n\n        while (angle > endAngle) {\n          angle -= 2.0 * Math.PI;\n        }\n\n        while (angle < startAngle) {\n          angle += 2.0 * Math.PI;\n        } // Check if within the range of the open/close angle\n\n\n        var betweenAngles = angle >= startAngle && angle <= endAngle;\n        var withinRadius = distance >= vm.innerRadius && distance <= vm.outerRadius;\n        return betweenAngles && withinRadius;\n      }\n\n      return false;\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var halfAngle = (vm.startAngle + vm.endAngle) / 2;\n      var halfRadius = (vm.innerRadius + vm.outerRadius) / 2;\n      return {\n        x: vm.x + Math.cos(halfAngle) * halfRadius,\n        y: vm.y + Math.sin(halfAngle) * halfRadius\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return Math.PI * ((vm.endAngle - vm.startAngle) / (2 * Math.PI)) * (Math.pow(vm.outerRadius, 2) - Math.pow(vm.innerRadius, 2));\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      var centreAngle = vm.startAngle + (vm.endAngle - vm.startAngle) / 2;\n      var rangeFromCentre = (vm.outerRadius - vm.innerRadius) / 2 + vm.innerRadius;\n      return {\n        x: vm.x + Math.cos(centreAngle) * rangeFromCentre,\n        y: vm.y + Math.sin(centreAngle) * rangeFromCentre\n      };\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var sA = vm.startAngle;\n      var eA = vm.endAngle;\n      var pixelMargin = vm.borderAlign === 'inner' ? 0.33 : 0;\n      var angleMargin;\n      ctx.save();\n      ctx.beginPath();\n      ctx.arc(vm.x, vm.y, Math.max(vm.outerRadius - pixelMargin, 0), sA, eA);\n      ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n      ctx.closePath();\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fill();\n\n      if (vm.borderWidth) {\n        if (vm.borderAlign === 'inner') {\n          // Draw an inner border by cliping the arc and drawing a double-width border\n          // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n          ctx.beginPath();\n          angleMargin = pixelMargin / vm.outerRadius;\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA - angleMargin, eA + angleMargin);\n\n          if (vm.innerRadius > pixelMargin) {\n            angleMargin = pixelMargin / vm.innerRadius;\n            ctx.arc(vm.x, vm.y, vm.innerRadius - pixelMargin, eA + angleMargin, sA - angleMargin, true);\n          } else {\n            ctx.arc(vm.x, vm.y, pixelMargin, eA + Math.PI / 2, sA - Math.PI / 2);\n          }\n\n          ctx.closePath();\n          ctx.clip();\n          ctx.beginPath();\n          ctx.arc(vm.x, vm.y, vm.outerRadius, sA, eA);\n          ctx.arc(vm.x, vm.y, vm.innerRadius, eA, sA, true);\n          ctx.closePath();\n          ctx.lineWidth = vm.borderWidth * 2;\n          ctx.lineJoin = 'round';\n        } else {\n          ctx.lineWidth = vm.borderWidth;\n          ctx.lineJoin = 'bevel';\n        }\n\n        ctx.strokeStyle = vm.borderColor;\n        ctx.stroke();\n      }\n\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$1 = helpers$1.valueOrDefault;\n  var defaultColor = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      line: {\n        tension: 0.4,\n        backgroundColor: defaultColor,\n        borderWidth: 3,\n        borderColor: defaultColor,\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0.0,\n        borderJoinStyle: 'miter',\n        capBezierPoints: true,\n        fill: true // do we fill in the area between the line and its base axis\n\n      }\n    }\n  });\n\n  var element_line = core_element.extend({\n    draw: function draw() {\n      var me = this;\n      var vm = me._view;\n      var ctx = me._chart.ctx;\n      var spanGaps = vm.spanGaps;\n\n      var points = me._children.slice(); // clone array\n\n\n      var globalDefaults = core_defaults.global;\n      var globalOptionLineElements = globalDefaults.elements.line;\n      var lastDrawnIndex = -1;\n      var index, current, previous, currentVM; // If we are looping, adding the first point again\n\n      if (me._loop && points.length) {\n        points.push(points[0]);\n      }\n\n      ctx.save(); // Stroke Line Options\n\n      ctx.lineCap = vm.borderCapStyle || globalOptionLineElements.borderCapStyle; // IE 9 and 10 do not support line dash\n\n      if (ctx.setLineDash) {\n        ctx.setLineDash(vm.borderDash || globalOptionLineElements.borderDash);\n      }\n\n      ctx.lineDashOffset = valueOrDefault$1(vm.borderDashOffset, globalOptionLineElements.borderDashOffset);\n      ctx.lineJoin = vm.borderJoinStyle || globalOptionLineElements.borderJoinStyle;\n      ctx.lineWidth = valueOrDefault$1(vm.borderWidth, globalOptionLineElements.borderWidth);\n      ctx.strokeStyle = vm.borderColor || globalDefaults.defaultColor; // Stroke Line\n\n      ctx.beginPath();\n      lastDrawnIndex = -1;\n\n      for (index = 0; index < points.length; ++index) {\n        current = points[index];\n        previous = helpers$1.previousItem(points, index);\n        currentVM = current._view; // First point moves to it's starting position no matter what\n\n        if (index === 0) {\n          if (!currentVM.skip) {\n            ctx.moveTo(currentVM.x, currentVM.y);\n            lastDrawnIndex = index;\n          }\n        } else {\n          previous = lastDrawnIndex === -1 ? previous : points[lastDrawnIndex];\n\n          if (!currentVM.skip) {\n            if (lastDrawnIndex !== index - 1 && !spanGaps || lastDrawnIndex === -1) {\n              // There was a gap and this is the first point after the gap\n              ctx.moveTo(currentVM.x, currentVM.y);\n            } else {\n              // Line to next point\n              helpers$1.canvas.lineTo(ctx, previous._view, current._view);\n            }\n\n            lastDrawnIndex = index;\n          }\n        }\n      }\n\n      ctx.stroke();\n      ctx.restore();\n    }\n  });\n  var valueOrDefault$2 = helpers$1.valueOrDefault;\n  var defaultColor$1 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      point: {\n        radius: 3,\n        pointStyle: 'circle',\n        backgroundColor: defaultColor$1,\n        borderColor: defaultColor$1,\n        borderWidth: 1,\n        // Hover\n        hitRadius: 1,\n        hoverRadius: 4,\n        hoverBorderWidth: 1\n      }\n    }\n  });\n\n  function xRange(mouseX) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseX - vm.x) < vm.radius + vm.hitRadius : false;\n  }\n\n  function yRange(mouseY) {\n    var vm = this._view;\n    return vm ? Math.abs(mouseY - vm.y) < vm.radius + vm.hitRadius : false;\n  }\n\n  var element_point = core_element.extend({\n    inRange: function inRange(mouseX, mouseY) {\n      var vm = this._view;\n      return vm ? Math.pow(mouseX - vm.x, 2) + Math.pow(mouseY - vm.y, 2) < Math.pow(vm.hitRadius + vm.radius, 2) : false;\n    },\n    inLabelRange: xRange,\n    inXRange: xRange,\n    inYRange: yRange,\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    },\n    getArea: function getArea() {\n      return Math.PI * Math.pow(this._view.radius, 2);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y,\n        padding: vm.radius + vm.borderWidth\n      };\n    },\n    draw: function draw(chartArea) {\n      var vm = this._view;\n      var ctx = this._chart.ctx;\n      var pointStyle = vm.pointStyle;\n      var rotation = vm.rotation;\n      var radius = vm.radius;\n      var x = vm.x;\n      var y = vm.y;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor; // eslint-disable-line no-shadow\n\n      if (vm.skip) {\n        return;\n      } // Clipping for Points.\n\n\n      if (chartArea === undefined || helpers$1.canvas._isPointInArea(vm, chartArea)) {\n        ctx.strokeStyle = vm.borderColor || defaultColor;\n        ctx.lineWidth = valueOrDefault$2(vm.borderWidth, globalDefaults.elements.point.borderWidth);\n        ctx.fillStyle = vm.backgroundColor || defaultColor;\n        helpers$1.canvas.drawPoint(ctx, pointStyle, radius, x, y, rotation);\n      }\n    }\n  });\n  var defaultColor$2 = core_defaults.global.defaultColor;\n\n  core_defaults._set('global', {\n    elements: {\n      rectangle: {\n        backgroundColor: defaultColor$2,\n        borderColor: defaultColor$2,\n        borderSkipped: 'bottom',\n        borderWidth: 0\n      }\n    }\n  });\n\n  function isVertical(vm) {\n    return vm && vm.width !== undefined;\n  }\n  /**\n   * Helper function to get the bounds of the bar regardless of the orientation\n   * @param bar {Chart.Element.Rectangle} the bar\n   * @return {Bounds} bounds of the bar\n   * @private\n   */\n\n\n  function getBarBounds(vm) {\n    var x1, x2, y1, y2, half;\n\n    if (isVertical(vm)) {\n      half = vm.width / 2;\n      x1 = vm.x - half;\n      x2 = vm.x + half;\n      y1 = Math.min(vm.y, vm.base);\n      y2 = Math.max(vm.y, vm.base);\n    } else {\n      half = vm.height / 2;\n      x1 = Math.min(vm.x, vm.base);\n      x2 = Math.max(vm.x, vm.base);\n      y1 = vm.y - half;\n      y2 = vm.y + half;\n    }\n\n    return {\n      left: x1,\n      top: y1,\n      right: x2,\n      bottom: y2\n    };\n  }\n\n  function swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n  }\n\n  function parseBorderSkipped(vm) {\n    var edge = vm.borderSkipped;\n    var res = {};\n\n    if (!edge) {\n      return res;\n    }\n\n    if (vm.horizontal) {\n      if (vm.base > vm.x) {\n        edge = swap(edge, 'left', 'right');\n      }\n    } else if (vm.base < vm.y) {\n      edge = swap(edge, 'bottom', 'top');\n    }\n\n    res[edge] = true;\n    return res;\n  }\n\n  function parseBorderWidth(vm, maxW, maxH) {\n    var value = vm.borderWidth;\n    var skip = parseBorderSkipped(vm);\n    var t, r, b, l;\n\n    if (helpers$1.isObject(value)) {\n      t = +value.top || 0;\n      r = +value.right || 0;\n      b = +value.bottom || 0;\n      l = +value.left || 0;\n    } else {\n      t = r = b = l = +value || 0;\n    }\n\n    return {\n      t: skip.top || t < 0 ? 0 : t > maxH ? maxH : t,\n      r: skip.right || r < 0 ? 0 : r > maxW ? maxW : r,\n      b: skip.bottom || b < 0 ? 0 : b > maxH ? maxH : b,\n      l: skip.left || l < 0 ? 0 : l > maxW ? maxW : l\n    };\n  }\n\n  function boundingRects(vm) {\n    var bounds = getBarBounds(vm);\n    var width = bounds.right - bounds.left;\n    var height = bounds.bottom - bounds.top;\n    var border = parseBorderWidth(vm, width / 2, height / 2);\n    return {\n      outer: {\n        x: bounds.left,\n        y: bounds.top,\n        w: width,\n        h: height\n      },\n      inner: {\n        x: bounds.left + border.l,\n        y: bounds.top + border.t,\n        w: width - border.l - border.r,\n        h: height - border.t - border.b\n      }\n    };\n  }\n\n  function _inRange(vm, x, y) {\n    var skipX = x === null;\n    var skipY = y === null;\n    var bounds = !vm || skipX && skipY ? false : getBarBounds(vm);\n    return bounds && (skipX || x >= bounds.left && x <= bounds.right) && (skipY || y >= bounds.top && y <= bounds.bottom);\n  }\n\n  var element_rectangle = core_element.extend({\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var rects = boundingRects(vm);\n      var outer = rects.outer;\n      var inner = rects.inner;\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.fillRect(outer.x, outer.y, outer.w, outer.h);\n\n      if (outer.w === inner.w && outer.h === inner.h) {\n        return;\n      }\n\n      ctx.save();\n      ctx.beginPath();\n      ctx.rect(outer.x, outer.y, outer.w, outer.h);\n      ctx.clip();\n      ctx.fillStyle = vm.borderColor;\n      ctx.rect(inner.x, inner.y, inner.w, inner.h);\n      ctx.fill('evenodd');\n      ctx.restore();\n    },\n    height: function height() {\n      var vm = this._view;\n      return vm.base - vm.y;\n    },\n    inRange: function inRange(mouseX, mouseY) {\n      return _inRange(this._view, mouseX, mouseY);\n    },\n    inLabelRange: function inLabelRange(mouseX, mouseY) {\n      var vm = this._view;\n      return isVertical(vm) ? _inRange(vm, mouseX, null) : _inRange(vm, null, mouseY);\n    },\n    inXRange: function inXRange(mouseX) {\n      return _inRange(this._view, mouseX, null);\n    },\n    inYRange: function inYRange(mouseY) {\n      return _inRange(this._view, null, mouseY);\n    },\n    getCenterPoint: function getCenterPoint() {\n      var vm = this._view;\n      var x, y;\n\n      if (isVertical(vm)) {\n        x = vm.x;\n        y = (vm.y + vm.base) / 2;\n      } else {\n        x = (vm.x + vm.base) / 2;\n        y = vm.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    },\n    getArea: function getArea() {\n      var vm = this._view;\n      return isVertical(vm) ? vm.width * Math.abs(vm.y - vm.base) : vm.height * Math.abs(vm.x - vm.base);\n    },\n    tooltipPosition: function tooltipPosition() {\n      var vm = this._view;\n      return {\n        x: vm.x,\n        y: vm.y\n      };\n    }\n  });\n  var elements = {};\n  var Arc = element_arc;\n  var Line = element_line;\n  var Point = element_point;\n  var Rectangle = element_rectangle;\n  elements.Arc = Arc;\n  elements.Line = Line;\n  elements.Point = Point;\n  elements.Rectangle = Rectangle;\n  var resolve$1 = helpers$1.options.resolve;\n\n  core_defaults._set('bar', {\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }],\n      yAxes: [{\n        type: 'linear'\n      }]\n    }\n  });\n  /**\n   * Computes the \"optimal\" sample size to maintain bars equally sized while preventing overlap.\n   * @private\n   */\n\n\n  function computeMinSampleSize(scale, pixels) {\n    var min = scale.isHorizontal() ? scale.width : scale.height;\n    var ticks = scale.getTicks();\n    var prev, curr, i, ilen;\n\n    for (i = 1, ilen = pixels.length; i < ilen; ++i) {\n      min = Math.min(min, Math.abs(pixels[i] - pixels[i - 1]));\n    }\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      curr = scale.getPixelForTick(i);\n      min = i > 0 ? Math.min(min, curr - prev) : min;\n      prev = curr;\n    }\n\n    return min;\n  }\n  /**\n   * Computes an \"ideal\" category based on the absolute bar thickness or, if undefined or null,\n   * uses the smallest interval (see computeMinSampleSize) that prevents bar overlapping. This\n   * mode currently always generates bars equally sized (until we introduce scriptable options?).\n   * @private\n   */\n\n\n  function computeFitCategoryTraits(index, ruler, options) {\n    var thickness = options.barThickness;\n    var count = ruler.stackCount;\n    var curr = ruler.pixels[index];\n    var size, ratio;\n\n    if (helpers$1.isNullOrUndef(thickness)) {\n      size = ruler.min * options.categoryPercentage;\n      ratio = options.barPercentage;\n    } else {\n      // When bar thickness is enforced, category and bar percentages are ignored.\n      // Note(SB): we could add support for relative bar thickness (e.g. barThickness: '50%')\n      // and deprecate barPercentage since this value is ignored when thickness is absolute.\n      size = thickness * count;\n      ratio = 1;\n    }\n\n    return {\n      chunk: size / count,\n      ratio: ratio,\n      start: curr - size / 2\n    };\n  }\n  /**\n   * Computes an \"optimal\" category that globally arranges bars side by side (no gap when\n   * percentage options are 1), based on the previous and following categories. This mode\n   * generates bars with different widths when data are not evenly spaced.\n   * @private\n   */\n\n\n  function computeFlexCategoryTraits(index, ruler, options) {\n    var pixels = ruler.pixels;\n    var curr = pixels[index];\n    var prev = index > 0 ? pixels[index - 1] : null;\n    var next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    var percent = options.categoryPercentage;\n    var start, size;\n\n    if (prev === null) {\n      // first data: its size is double based on the next point or,\n      // if it's also the last data, we use the scale size.\n      prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n\n    if (next === null) {\n      // last data: its size is also double based on the previous point.\n      next = curr + curr - prev;\n    }\n\n    start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    size = Math.abs(next - prev) / 2 * percent;\n    return {\n      chunk: size / ruler.stackCount,\n      ratio: options.barPercentage,\n      start: start\n    };\n  }\n\n  var controller_bar = core_datasetController.extend({\n    dataElementType: elements.Rectangle,\n    initialize: function initialize() {\n      var me = this;\n      var meta;\n      core_datasetController.prototype.initialize.apply(me, arguments);\n      meta = me.getMeta();\n      meta.stack = me.getDataset().stack;\n      meta.bar = true;\n    },\n    update: function update(reset) {\n      var me = this;\n      var rects = me.getMeta().data;\n      var i, ilen;\n      me._ruler = me.getRuler();\n\n      for (i = 0, ilen = rects.length; i < ilen; ++i) {\n        me.updateElement(rects[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(rectangle, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var dataset = me.getDataset();\n\n      var options = me._resolveElementOptions(rectangle, index);\n\n      rectangle._xScale = me.getScaleForId(meta.xAxisID);\n      rectangle._yScale = me.getScaleForId(meta.yAxisID);\n      rectangle._datasetIndex = me.index;\n      rectangle._index = index;\n      rectangle._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderSkipped: options.borderSkipped,\n        borderWidth: options.borderWidth,\n        datasetLabel: dataset.label,\n        label: me.chart.data.labels[index]\n      };\n\n      me._updateElementGeometry(rectangle, index, reset);\n\n      rectangle.pivot();\n    },\n\n    /**\n     * @private\n     */\n    _updateElementGeometry: function _updateElementGeometry(rectangle, index, reset) {\n      var me = this;\n      var model = rectangle._model;\n\n      var vscale = me._getValueScale();\n\n      var base = vscale.getBasePixel();\n      var horizontal = vscale.isHorizontal();\n      var ruler = me._ruler || me.getRuler();\n      var vpixels = me.calculateBarValuePixels(me.index, index);\n      var ipixels = me.calculateBarIndexPixels(me.index, index, ruler);\n      model.horizontal = horizontal;\n      model.base = reset ? base : vpixels.base;\n      model.x = horizontal ? reset ? base : vpixels.head : ipixels.center;\n      model.y = horizontal ? ipixels.center : reset ? base : vpixels.head;\n      model.height = horizontal ? ipixels.size : undefined;\n      model.width = horizontal ? undefined : ipixels.size;\n    },\n\n    /**\n     * Returns the stacks based on groups and bar visibility.\n     * @param {number} [last] - The dataset index\n     * @returns {string[]} The list of stack IDs\n     * @private\n     */\n    _getStacks: function _getStacks(last) {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getIndexScale();\n\n      var stacked = scale.options.stacked;\n      var ilen = last === undefined ? chart.data.datasets.length : last + 1;\n      var stacks = [];\n      var i, meta;\n\n      for (i = 0; i < ilen; ++i) {\n        meta = chart.getDatasetMeta(i);\n\n        if (meta.bar && chart.isDatasetVisible(i) && (stacked === false || stacked === true && stacks.indexOf(meta.stack) === -1 || stacked === undefined && (meta.stack === undefined || stacks.indexOf(meta.stack) === -1))) {\n          stacks.push(meta.stack);\n        }\n      }\n\n      return stacks;\n    },\n\n    /**\n     * Returns the effective number of stacks based on groups and bar visibility.\n     * @private\n     */\n    getStackCount: function getStackCount() {\n      return this._getStacks().length;\n    },\n\n    /**\n     * Returns the stack index for the given dataset based on groups and bar visibility.\n     * @param {number} [datasetIndex] - The dataset index\n     * @param {string} [name] - The stack name to find\n     * @returns {number} The stack index\n     * @private\n     */\n    getStackIndex: function getStackIndex(datasetIndex, name) {\n      var stacks = this._getStacks(datasetIndex);\n\n      var index = name !== undefined ? stacks.indexOf(name) : -1; // indexOf returns -1 if element is not present\n\n      return index === -1 ? stacks.length - 1 : index;\n    },\n\n    /**\n     * @private\n     */\n    getRuler: function getRuler() {\n      var me = this;\n\n      var scale = me._getIndexScale();\n\n      var stackCount = me.getStackCount();\n      var datasetIndex = me.index;\n      var isHorizontal = scale.isHorizontal();\n      var start = isHorizontal ? scale.left : scale.top;\n      var end = start + (isHorizontal ? scale.width : scale.height);\n      var pixels = [];\n      var i, ilen, min;\n\n      for (i = 0, ilen = me.getMeta().data.length; i < ilen; ++i) {\n        pixels.push(scale.getPixelForValue(null, i, datasetIndex));\n      }\n\n      min = helpers$1.isNullOrUndef(scale.options.barThickness) ? computeMinSampleSize(scale, pixels) : -1;\n      return {\n        min: min,\n        pixels: pixels,\n        start: start,\n        end: end,\n        stackCount: stackCount,\n        scale: scale\n      };\n    },\n\n    /**\n     * Note: pixel values are not clamped to the scale area.\n     * @private\n     */\n    calculateBarValuePixels: function calculateBarValuePixels(datasetIndex, index) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n\n      var scale = me._getValueScale();\n\n      var isHorizontal = scale.isHorizontal();\n      var datasets = chart.data.datasets;\n      var value = +scale.getRightValue(datasets[datasetIndex].data[index]);\n      var minBarLength = scale.options.minBarLength;\n      var stacked = scale.options.stacked;\n      var stack = meta.stack;\n      var start = 0;\n      var i, imeta, ivalue, base, head, size;\n\n      if (stacked || stacked === undefined && stack !== undefined) {\n        for (i = 0; i < datasetIndex; ++i) {\n          imeta = chart.getDatasetMeta(i);\n\n          if (imeta.bar && imeta.stack === stack && imeta.controller._getValueScaleId() === scale.id && chart.isDatasetVisible(i)) {\n            ivalue = +scale.getRightValue(datasets[i].data[index]);\n\n            if (value < 0 && ivalue < 0 || value >= 0 && ivalue > 0) {\n              start += ivalue;\n            }\n          }\n        }\n      }\n\n      base = scale.getPixelForValue(start);\n      head = scale.getPixelForValue(start + value);\n      size = head - base;\n\n      if (minBarLength !== undefined && Math.abs(size) < minBarLength) {\n        size = minBarLength;\n\n        if (value >= 0 && !isHorizontal || value < 0 && isHorizontal) {\n          head = base - minBarLength;\n        } else {\n          head = base + minBarLength;\n        }\n      }\n\n      return {\n        size: size,\n        base: base,\n        head: head,\n        center: head + size / 2\n      };\n    },\n\n    /**\n     * @private\n     */\n    calculateBarIndexPixels: function calculateBarIndexPixels(datasetIndex, index, ruler) {\n      var me = this;\n      var options = ruler.scale.options;\n      var range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options) : computeFitCategoryTraits(index, ruler, options);\n      var stackIndex = me.getStackIndex(datasetIndex, me.getMeta().stack);\n      var center = range.start + range.chunk * stackIndex + range.chunk / 2;\n      var size = Math.min(helpers$1.valueOrDefault(options.maxBarThickness, Infinity), range.chunk * range.ratio);\n      return {\n        base: center - size / 2,\n        head: center + size / 2,\n        center: center,\n        size: size\n      };\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n\n      var scale = me._getValueScale();\n\n      var rects = me.getMeta().data;\n      var dataset = me.getDataset();\n      var ilen = rects.length;\n      var i = 0;\n      helpers$1.canvas.clipArea(chart.ctx, chart.chartArea);\n\n      for (; i < ilen; ++i) {\n        if (!isNaN(scale.getRightValue(dataset.data[i]))) {\n          rects[i].draw();\n        }\n      }\n\n      helpers$1.canvas.unclipArea(chart.ctx);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(rectangle, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = rectangle.custom || {};\n      var options = chart.options.elements.rectangle;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderSkipped', 'borderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$1([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    }\n  });\n  var valueOrDefault$3 = helpers$1.valueOrDefault;\n  var resolve$2 = helpers$1.options.resolve;\n\n  core_defaults._set('bubble', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        // bubble should probably use a linear scale by default\n        position: 'bottom',\n        id: 'x-axis-0' // need an ID so datasets can reference the scale\n\n      }],\n      yAxes: [{\n        type: 'linear',\n        position: 'left',\n        id: 'y-axis-0'\n      }]\n    },\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          // Title doesn't make sense for scatter since we format the data as a point\n          return '';\n        },\n        label: function label(item, data) {\n          var datasetLabel = data.datasets[item.datasetIndex].label || '';\n          var dataPoint = data.datasets[item.datasetIndex].data[item.index];\n          return datasetLabel + ': (' + item.xLabel + ', ' + item.yLabel + ', ' + dataPoint.r + ')';\n        }\n      }\n    }\n  });\n\n  var controller_bubble = core_datasetController.extend({\n    /**\n     * @protected\n     */\n    dataElementType: elements.Point,\n\n    /**\n     * @protected\n     */\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var points = meta.data; // Update Points\n\n      helpers$1.each(points, function (point, index) {\n        me.updateElement(point, index, reset);\n      });\n    },\n\n    /**\n     * @protected\n     */\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var yScale = me.getScaleForId(meta.yAxisID);\n\n      var options = me._resolveElementOptions(point, index);\n\n      var data = me.getDataset().data[index];\n      var dsIndex = me.index;\n      var x = reset ? xScale.getPixelForDecimal(0.5) : xScale.getPixelForValue(typeof data === 'object' ? data : NaN, index, dsIndex);\n      var y = reset ? yScale.getBasePixel() : yScale.getPixelForValue(data, index, dsIndex);\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = dsIndex;\n      point._index = index;\n      point._model = {\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        hitRadius: options.hitRadius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        radius: reset ? 0 : options.radius,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        x: x,\n        y: y\n      };\n      point.pivot();\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$3(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$3(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$3(options.hoverBorderWidth, options.borderWidth);\n      model.radius = options.radius + options.hoverRadius;\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(point, index) {\n      var me = this;\n      var chart = me.chart;\n      var datasets = chart.data.datasets;\n      var dataset = datasets[me.index];\n      var custom = point.custom || {};\n      var options = chart.options.elements.point;\n      var data = dataset.data[index];\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth', 'hoverRadius', 'hitRadius', 'pointStyle', 'rotation'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$2([custom[key], dataset[key], options[key]], context, index);\n      } // Custom radius resolution\n\n\n      values.radius = resolve$2([custom.radius, data ? data.r : undefined, dataset.radius, options.radius], context, index);\n      return values;\n    }\n  });\n  var resolve$3 = helpers$1.options.resolve;\n  var valueOrDefault$4 = helpers$1.valueOrDefault;\n\n  core_defaults._set('doughnut', {\n    animation: {\n      // Boolean - Whether we animate the rotation of the Doughnut\n      animateRotate: true,\n      // Boolean - Whether we animate scaling the Doughnut from the centre\n      animateScale: false\n    },\n    hover: {\n      mode: 'single'\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc && arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$3([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$3([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$3([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i); // toggle visibility of index if exists\n\n          if (meta.data[index]) {\n            meta.data[index].hidden = !meta.data[index].hidden;\n          }\n        }\n\n        chart.update();\n      }\n    },\n    // The percentage of the chart that we cut out of the middle.\n    cutoutPercentage: 50,\n    // The rotation of the chart, where the first data arc begins.\n    rotation: Math.PI * -0.5,\n    // The total circumference of the chart.\n    circumference: Math.PI * 2.0,\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(tooltipItem, data) {\n          var dataLabel = data.labels[tooltipItem.index];\n          var value = ': ' + data.datasets[tooltipItem.datasetIndex].data[tooltipItem.index];\n\n          if (helpers$1.isArray(dataLabel)) {\n            // show value on first line of multiline label\n            // need to clone because we are changing the value\n            dataLabel = dataLabel.slice();\n            dataLabel[0] += value;\n          } else {\n            dataLabel += value;\n          }\n\n          return dataLabel;\n        }\n      }\n    }\n  });\n\n  var controller_doughnut = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    // Get index of the dataset in relation to the visible datasets. This allows determining the inner and outer radius correctly\n    getRingIndex: function getRingIndex(datasetIndex) {\n      var ringIndex = 0;\n\n      for (var j = 0; j < datasetIndex; ++j) {\n        if (this.chart.isDatasetVisible(j)) {\n          ++ringIndex;\n        }\n      }\n\n      return ringIndex;\n    },\n    update: function update(reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var availableWidth = chartArea.right - chartArea.left;\n      var availableHeight = chartArea.bottom - chartArea.top;\n      var minSize = Math.min(availableWidth, availableHeight);\n      var offset = {\n        x: 0,\n        y: 0\n      };\n      var meta = me.getMeta();\n      var arcs = meta.data;\n      var cutoutPercentage = opts.cutoutPercentage;\n      var circumference = opts.circumference;\n\n      var chartWeight = me._getRingWeight(me.index);\n\n      var i, ilen; // If the chart's circumference isn't a full circle, calculate minSize as a ratio of the width/height of the arc\n\n      if (circumference < Math.PI * 2.0) {\n        var startAngle = opts.rotation % (Math.PI * 2.0);\n        startAngle += Math.PI * 2.0 * (startAngle >= Math.PI ? -1 : startAngle < -Math.PI ? 1 : 0);\n        var endAngle = startAngle + circumference;\n        var start = {\n          x: Math.cos(startAngle),\n          y: Math.sin(startAngle)\n        };\n        var end = {\n          x: Math.cos(endAngle),\n          y: Math.sin(endAngle)\n        };\n        var contains0 = startAngle <= 0 && endAngle >= 0 || startAngle <= Math.PI * 2.0 && Math.PI * 2.0 <= endAngle;\n        var contains90 = startAngle <= Math.PI * 0.5 && Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 2.5 && Math.PI * 2.5 <= endAngle;\n        var contains180 = startAngle <= -Math.PI && -Math.PI <= endAngle || startAngle <= Math.PI && Math.PI <= endAngle;\n        var contains270 = startAngle <= -Math.PI * 0.5 && -Math.PI * 0.5 <= endAngle || startAngle <= Math.PI * 1.5 && Math.PI * 1.5 <= endAngle;\n        var cutout = cutoutPercentage / 100.0;\n        var min = {\n          x: contains180 ? -1 : Math.min(start.x * (start.x < 0 ? 1 : cutout), end.x * (end.x < 0 ? 1 : cutout)),\n          y: contains270 ? -1 : Math.min(start.y * (start.y < 0 ? 1 : cutout), end.y * (end.y < 0 ? 1 : cutout))\n        };\n        var max = {\n          x: contains0 ? 1 : Math.max(start.x * (start.x > 0 ? 1 : cutout), end.x * (end.x > 0 ? 1 : cutout)),\n          y: contains90 ? 1 : Math.max(start.y * (start.y > 0 ? 1 : cutout), end.y * (end.y > 0 ? 1 : cutout))\n        };\n        var size = {\n          width: (max.x - min.x) * 0.5,\n          height: (max.y - min.y) * 0.5\n        };\n        minSize = Math.min(availableWidth / size.width, availableHeight / size.height);\n        offset = {\n          x: (max.x + min.x) * -0.5,\n          y: (max.y + min.y) * -0.5\n        };\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n      }\n\n      chart.borderWidth = me.getMaxBorderWidth();\n      chart.outerRadius = Math.max((minSize - chart.borderWidth) / 2, 0);\n      chart.innerRadius = Math.max(cutoutPercentage ? chart.outerRadius / 100 * cutoutPercentage : 0, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / (me._getVisibleDatasetWeightTotal() || 1);\n      chart.offsetX = offset.x * chart.outerRadius;\n      chart.offsetY = offset.y * chart.outerRadius;\n      meta.total = me.calculateTotal();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me._getRingWeightOffset(me.index);\n      me.innerRadius = Math.max(me.outerRadius - chart.radiusLength * chartWeight, 0);\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var centerX = (chartArea.left + chartArea.right) / 2;\n      var centerY = (chartArea.top + chartArea.bottom) / 2;\n      var startAngle = opts.rotation; // non reset case handled later\n\n      var endAngle = opts.rotation; // non reset case handled later\n\n      var dataset = me.getDataset();\n      var circumference = reset && animationOpts.animateRotate ? 0 : arc.hidden ? 0 : me.calculateCircumference(dataset.data[index]) * (opts.circumference / (2.0 * Math.PI));\n      var innerRadius = reset && animationOpts.animateScale ? 0 : me.innerRadius;\n      var outerRadius = reset && animationOpts.animateScale ? 0 : me.outerRadius;\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX + chart.offsetX,\n          y: centerY + chart.offsetY,\n          startAngle: startAngle,\n          endAngle: endAngle,\n          circumference: circumference,\n          outerRadius: outerRadius,\n          innerRadius: innerRadius,\n          label: helpers$1.valueAtIndexOrDefault(dataset.label, index, chart.data.labels[index])\n        }\n      });\n      var model = arc._model; // Set correct angles if not resetting\n\n      if (!reset || !animationOpts.animateRotate) {\n        if (index === 0) {\n          model.startAngle = opts.rotation;\n        } else {\n          model.startAngle = me.getMeta().data[index - 1]._model.endAngle;\n        }\n\n        model.endAngle = model.startAngle + model.circumference;\n      }\n\n      arc.pivot();\n    },\n    calculateTotal: function calculateTotal() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var total = 0;\n      var value;\n      helpers$1.each(meta.data, function (element, index) {\n        value = dataset.data[index];\n\n        if (!isNaN(value) && !element.hidden) {\n          total += Math.abs(value);\n        }\n      });\n      /* if (total === 0) {\n      \ttotal = NaN;\n      }*/\n\n      return total;\n    },\n    calculateCircumference: function calculateCircumference(value) {\n      var total = this.getMeta().total;\n\n      if (total > 0 && !isNaN(value)) {\n        return Math.PI * 2.0 * (Math.abs(value) / total);\n      }\n\n      return 0;\n    },\n    // gets the max border or hover width to properly scale pie charts\n    getMaxBorderWidth: function getMaxBorderWidth(arcs) {\n      var me = this;\n      var max = 0;\n      var chart = me.chart;\n      var i, ilen, meta, arc, controller, options, borderWidth, hoverWidth;\n\n      if (!arcs) {\n        // Find the outmost visible dataset\n        for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n          if (chart.isDatasetVisible(i)) {\n            meta = chart.getDatasetMeta(i);\n            arcs = meta.data;\n\n            if (i !== me.index) {\n              controller = meta.controller;\n            }\n\n            break;\n          }\n        }\n      }\n\n      if (!arcs) {\n        return 0;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arc = arcs[i];\n        options = controller ? controller._resolveElementOptions(arc, i) : arc._options;\n\n        if (options.borderAlign !== 'inner') {\n          borderWidth = options.borderWidth;\n          hoverWidth = options.hoverBorderWidth;\n          max = borderWidth > max ? borderWidth : max;\n          max = hoverWidth > max ? hoverWidth : max;\n        }\n      }\n\n      return max;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault$4(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$4(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$4(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$3([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * Get radius length offset of the dataset in relation to the visible datasets weights. This allows determining the inner and outer radius correctly\n     * @private\n     */\n    _getRingWeightOffset: function _getRingWeightOffset(datasetIndex) {\n      var ringWeightOffset = 0;\n\n      for (var i = 0; i < datasetIndex; ++i) {\n        if (this.chart.isDatasetVisible(i)) {\n          ringWeightOffset += this._getRingWeight(i);\n        }\n      }\n\n      return ringWeightOffset;\n    },\n\n    /**\n     * @private\n     */\n    _getRingWeight: function _getRingWeight(dataSetIndex) {\n      return Math.max(valueOrDefault$4(this.chart.data.datasets[dataSetIndex].weight, 1), 0);\n    },\n\n    /**\n     * Returns the sum of all visibile data set weights.  This value can be 0.\n     * @private\n     */\n    _getVisibleDatasetWeightTotal: function _getVisibleDatasetWeightTotal() {\n      return this._getRingWeightOffset(this.chart.data.datasets.length);\n    }\n  });\n\n  core_defaults._set('horizontalBar', {\n    hover: {\n      mode: 'index',\n      axis: 'y'\n    },\n    scales: {\n      xAxes: [{\n        type: 'linear',\n        position: 'bottom'\n      }],\n      yAxes: [{\n        type: 'category',\n        position: 'left',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        offset: true,\n        gridLines: {\n          offsetGridLines: true\n        }\n      }]\n    },\n    elements: {\n      rectangle: {\n        borderSkipped: 'left'\n      }\n    },\n    tooltips: {\n      mode: 'index',\n      axis: 'y'\n    }\n  });\n\n  var controller_horizontalBar = controller_bar.extend({\n    /**\n     * @private\n     */\n    _getValueScaleId: function _getValueScaleId() {\n      return this.getMeta().xAxisID;\n    },\n\n    /**\n     * @private\n     */\n    _getIndexScaleId: function _getIndexScaleId() {\n      return this.getMeta().yAxisID;\n    }\n  });\n  var valueOrDefault$5 = helpers$1.valueOrDefault;\n  var resolve$4 = helpers$1.options.resolve;\n  var isPointInArea = helpers$1.canvas._isPointInArea;\n\n  core_defaults._set('line', {\n    showLines: true,\n    spanGaps: false,\n    hover: {\n      mode: 'label'\n    },\n    scales: {\n      xAxes: [{\n        type: 'category',\n        id: 'x-axis-0'\n      }],\n      yAxes: [{\n        type: 'linear',\n        id: 'y-axis-0'\n      }]\n    }\n  });\n\n  function lineEnabled(dataset, options) {\n    return valueOrDefault$5(dataset.showLine, options.showLines);\n  }\n\n  var controller_line = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.getScaleForId(meta.yAxisID);\n      var dataset = me.getDataset();\n      var showLine = lineEnabled(dataset, me.chart.options);\n      var i, ilen; // Update Line\n\n      if (showLine) {\n        // Compatibility: If the properties are defined with only the old name, use those values\n        if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n          dataset.lineTension = dataset.tension;\n        } // Utility\n\n\n        line._scale = scale;\n        line._datasetIndex = me.index; // Data\n\n        line._children = points; // Model\n\n        line._model = me._resolveLineOptions(line);\n        line.pivot();\n      } // Update Points\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      }\n\n      if (showLine && line._model.tension !== 0) {\n        me.updateBezierControlPoints();\n      } // Now pivot the point for animation\n\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var datasetIndex = me.index;\n      var value = dataset.data[index];\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var xScale = me.getScaleForId(meta.xAxisID);\n      var lineModel = meta.dataset._model;\n      var x, y;\n\n      var options = me._resolvePointOptions(point, index);\n\n      x = xScale.getPixelForValue(typeof value === 'object' ? value : NaN, index, datasetIndex);\n      y = reset ? yScale.getBasePixel() : me.calculatePointY(value, index, datasetIndex); // Utility\n\n      point._xScale = xScale;\n      point._yScale = yScale;\n      point._options = options;\n      point._datasetIndex = datasetIndex;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$5(custom.tension, lineModel ? lineModel.tension : 0),\n        steppedLine: lineModel ? lineModel.steppedLine : false,\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options;\n      var elementOptions = options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill', 'cubicInterpolationMode'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$4([custom[key], dataset[key], elementOptions[key]]);\n      } // The default behavior of lines is to break at null values, according\n      // to https://github.com/chartjs/Chart.js/issues/2435#issuecomment-216718158\n      // This option gives lines the ability to span gaps\n\n\n      values.spanGaps = valueOrDefault$5(dataset.spanGaps, options.spanGaps);\n      values.tension = valueOrDefault$5(dataset.lineTension, elementOptions.tension);\n      values.steppedLine = resolve$4([custom.steppedLine, dataset.steppedLine, elementOptions.stepped]);\n      return values;\n    },\n    calculatePointY: function calculatePointY(value, index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var yScale = me.getScaleForId(meta.yAxisID);\n      var sumPos = 0;\n      var sumNeg = 0;\n      var i, ds, dsMeta;\n\n      if (yScale.options.stacked) {\n        for (i = 0; i < datasetIndex; i++) {\n          ds = chart.data.datasets[i];\n          dsMeta = chart.getDatasetMeta(i);\n\n          if (dsMeta.type === 'line' && dsMeta.yAxisID === yScale.id && chart.isDatasetVisible(i)) {\n            var stackedRightValue = Number(yScale.getRightValue(ds.data[index]));\n\n            if (stackedRightValue < 0) {\n              sumNeg += stackedRightValue || 0;\n            } else {\n              sumPos += stackedRightValue || 0;\n            }\n          }\n        }\n\n        var rightValue = Number(yScale.getRightValue(value));\n\n        if (rightValue < 0) {\n          return yScale.getPixelForValue(sumNeg + rightValue);\n        }\n\n        return yScale.getPixelForValue(sumPos + rightValue);\n      }\n\n      return yScale.getPixelForValue(value);\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var lineModel = meta.dataset._model;\n      var area = chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints; // Only consider points that are drawn in case the spanGaps option is used\n\n      if (lineModel.spanGaps) {\n        points = points.filter(function (pt) {\n          return !pt._model.skip;\n        });\n      }\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      if (lineModel.cubicInterpolationMode === 'monotone') {\n        helpers$1.splineCurveMonotone(points);\n      } else {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n          controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i)._model, model, helpers$1.nextItem(points, i)._model, lineModel.tension);\n          model.controlPointPreviousX = controlPoints.previous.x;\n          model.controlPointPreviousY = controlPoints.previous.y;\n          model.controlPointNextX = controlPoints.next.x;\n          model.controlPointNextY = controlPoints.next.y;\n        }\n      }\n\n      if (chart.options.elements.line.capBezierPoints) {\n        for (i = 0, ilen = points.length; i < ilen; ++i) {\n          model = points[i]._model;\n\n          if (isPointInArea(model, area)) {\n            if (i > 0 && isPointInArea(points[i - 1]._model, area)) {\n              model.controlPointPreviousX = capControlPoint(model.controlPointPreviousX, area.left, area.right);\n              model.controlPointPreviousY = capControlPoint(model.controlPointPreviousY, area.top, area.bottom);\n            }\n\n            if (i < points.length - 1 && isPointInArea(points[i + 1]._model, area)) {\n              model.controlPointNextX = capControlPoint(model.controlPointNextX, area.left, area.right);\n              model.controlPointNextY = capControlPoint(model.controlPointNextY, area.top, area.bottom);\n            }\n          }\n        }\n      }\n    },\n    draw: function draw() {\n      var me = this;\n      var chart = me.chart;\n      var meta = me.getMeta();\n      var points = meta.data || [];\n      var area = chart.chartArea;\n      var ilen = points.length;\n      var halfBorderWidth;\n      var i = 0;\n\n      if (lineEnabled(me.getDataset(), chart.options)) {\n        halfBorderWidth = (meta.dataset._model.borderWidth || 0) / 2;\n        helpers$1.canvas.clipArea(chart.ctx, {\n          left: area.left,\n          right: area.right,\n          top: area.top - halfBorderWidth,\n          bottom: area.bottom + halfBorderWidth\n        });\n        meta.dataset.draw();\n        helpers$1.canvas.unclipArea(chart.ctx);\n      } // Draw the points\n\n\n      for (; i < ilen; ++i) {\n        points[i].draw(area);\n      }\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$5(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$5(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$5(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$5(options.hoverRadius, options.radius);\n    }\n  });\n  var resolve$5 = helpers$1.options.resolve;\n\n  core_defaults._set('polarArea', {\n    scale: {\n      type: 'radialLinear',\n      angleLines: {\n        display: false\n      },\n      gridLines: {\n        circular: true\n      },\n      pointLabels: {\n        display: false\n      },\n      ticks: {\n        beginAtZero: true\n      }\n    },\n    // Boolean - Whether to animate the rotation of the chart\n    animation: {\n      animateRotate: true,\n      animateScale: true\n    },\n    startAngle: -0.5 * Math.PI,\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n      var data = chart.data;\n      var datasets = data.datasets;\n      var labels = data.labels;\n\n      if (datasets.length) {\n        for (var i = 0; i < datasets[0].data.length; ++i) {\n          text.push('<li><span style=\"background-color:' + datasets[0].backgroundColor[i] + '\"></span>');\n\n          if (labels[i]) {\n            text.push(labels[i]);\n          }\n\n          text.push('</li>');\n        }\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    },\n    legend: {\n      labels: {\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n\n          if (data.labels.length && data.datasets.length) {\n            return data.labels.map(function (label, i) {\n              var meta = chart.getDatasetMeta(0);\n              var ds = data.datasets[0];\n              var arc = meta.data[i];\n              var custom = arc.custom || {};\n              var arcOpts = chart.options.elements.arc;\n              var fill = resolve$5([custom.backgroundColor, ds.backgroundColor, arcOpts.backgroundColor], undefined, i);\n              var stroke = resolve$5([custom.borderColor, ds.borderColor, arcOpts.borderColor], undefined, i);\n              var bw = resolve$5([custom.borderWidth, ds.borderWidth, arcOpts.borderWidth], undefined, i);\n              return {\n                text: label,\n                fillStyle: fill,\n                strokeStyle: stroke,\n                lineWidth: bw,\n                hidden: isNaN(ds.data[i]) || meta.data[i].hidden,\n                // Extra data used for toggling the correct item\n                index: i\n              };\n            });\n          }\n\n          return [];\n        }\n      },\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.index;\n        var chart = this.chart;\n        var i, ilen, meta;\n\n        for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n          meta = chart.getDatasetMeta(i);\n          meta.data[index].hidden = !meta.data[index].hidden;\n        }\n\n        chart.update();\n      }\n    },\n    // Need to override these to give a nice default\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return '';\n        },\n        label: function label(item, data) {\n          return data.labels[item.index] + ': ' + item.yLabel;\n        }\n      }\n    }\n  });\n\n  var controller_polarArea = core_datasetController.extend({\n    dataElementType: elements.Arc,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n      var start = me.chart.options.startAngle || 0;\n      var starts = me._starts = [];\n      var angles = me._angles = [];\n      var arcs = meta.data;\n      var i, ilen, angle;\n\n      me._updateRadius();\n\n      meta.count = me.countVisibleElements();\n\n      for (i = 0, ilen = dataset.data.length; i < ilen; i++) {\n        starts[i] = start;\n        angle = me._computeAngle(i);\n        angles[i] = angle;\n        start += angle;\n      }\n\n      for (i = 0, ilen = arcs.length; i < ilen; ++i) {\n        arcs[i]._options = me._resolveElementOptions(arcs[i], i);\n        me.updateElement(arcs[i], i, reset);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateRadius: function _updateRadius() {\n      var me = this;\n      var chart = me.chart;\n      var chartArea = chart.chartArea;\n      var opts = chart.options;\n      var minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n      chart.outerRadius = Math.max(minSize / 2, 0);\n      chart.innerRadius = Math.max(opts.cutoutPercentage ? chart.outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n      chart.radiusLength = (chart.outerRadius - chart.innerRadius) / chart.getVisibleDatasetCount();\n      me.outerRadius = chart.outerRadius - chart.radiusLength * me.index;\n      me.innerRadius = me.outerRadius - chart.radiusLength;\n    },\n    updateElement: function updateElement(arc, index, reset) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var opts = chart.options;\n      var animationOpts = opts.animation;\n      var scale = chart.scale;\n      var labels = chart.data.labels;\n      var centerX = scale.xCenter;\n      var centerY = scale.yCenter; // var negHalfPI = -0.5 * Math.PI;\n\n      var datasetStartAngle = opts.startAngle;\n      var distance = arc.hidden ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var startAngle = me._starts[index];\n      var endAngle = startAngle + (arc.hidden ? 0 : me._angles[index]);\n      var resetRadius = animationOpts.animateScale ? 0 : scale.getDistanceFromCenterForValue(dataset.data[index]);\n      var options = arc._options || {};\n      helpers$1.extend(arc, {\n        // Utility\n        _datasetIndex: me.index,\n        _index: index,\n        _scale: scale,\n        // Desired view properties\n        _model: {\n          backgroundColor: options.backgroundColor,\n          borderColor: options.borderColor,\n          borderWidth: options.borderWidth,\n          borderAlign: options.borderAlign,\n          x: centerX,\n          y: centerY,\n          innerRadius: 0,\n          outerRadius: reset ? resetRadius : distance,\n          startAngle: reset && animationOpts.animateRotate ? datasetStartAngle : startAngle,\n          endAngle: reset && animationOpts.animateRotate ? datasetStartAngle : endAngle,\n          label: helpers$1.valueAtIndexOrDefault(labels, index, labels[index])\n        }\n      });\n      arc.pivot();\n    },\n    countVisibleElements: function countVisibleElements() {\n      var dataset = this.getDataset();\n      var meta = this.getMeta();\n      var count = 0;\n      helpers$1.each(meta.data, function (element, index) {\n        if (!isNaN(dataset.data[index]) && !element.hidden) {\n          count++;\n        }\n      });\n      return count;\n    },\n\n    /**\n     * @protected\n     */\n    setHoverStyle: function setHoverStyle(arc) {\n      var model = arc._model;\n      var options = arc._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      var valueOrDefault = helpers$1.valueOrDefault;\n      arc.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth\n      };\n      model.backgroundColor = valueOrDefault(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault(options.hoverBorderWidth, options.borderWidth);\n    },\n\n    /**\n     * @private\n     */\n    _resolveElementOptions: function _resolveElementOptions(arc, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = me.getDataset();\n      var custom = arc.custom || {};\n      var options = chart.options.elements.arc;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var keys = ['backgroundColor', 'borderColor', 'borderWidth', 'borderAlign', 'hoverBackgroundColor', 'hoverBorderColor', 'hoverBorderWidth'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$5([custom[key], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _computeAngle: function _computeAngle(index) {\n      var me = this;\n      var count = this.getMeta().count;\n      var dataset = me.getDataset();\n      var meta = me.getMeta();\n\n      if (isNaN(dataset.data[index]) || meta.data[index].hidden) {\n        return 0;\n      } // Scriptable options\n\n\n      var context = {\n        chart: me.chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      return resolve$5([me.chart.options.elements.arc.angle, 2 * Math.PI / count], context, index);\n    }\n  });\n\n  core_defaults._set('pie', helpers$1.clone(core_defaults.doughnut));\n\n  core_defaults._set('pie', {\n    cutoutPercentage: 0\n  }); // Pie charts are Doughnut chart with different defaults\n\n\n  var controller_pie = controller_doughnut;\n  var valueOrDefault$6 = helpers$1.valueOrDefault;\n  var resolve$6 = helpers$1.options.resolve;\n\n  core_defaults._set('radar', {\n    scale: {\n      type: 'radialLinear'\n    },\n    elements: {\n      line: {\n        tension: 0 // no bezier in radar\n\n      }\n    }\n  });\n\n  var controller_radar = core_datasetController.extend({\n    datasetElementType: elements.Line,\n    dataElementType: elements.Point,\n    linkScales: helpers$1.noop,\n    update: function update(reset) {\n      var me = this;\n      var meta = me.getMeta();\n      var line = meta.dataset;\n      var points = meta.data || [];\n      var scale = me.chart.scale;\n      var dataset = me.getDataset();\n      var i, ilen; // Compatibility: If the properties are defined with only the old name, use those values\n\n      if (dataset.tension !== undefined && dataset.lineTension === undefined) {\n        dataset.lineTension = dataset.tension;\n      } // Utility\n\n\n      line._scale = scale;\n      line._datasetIndex = me.index; // Data\n\n      line._children = points;\n      line._loop = true; // Model\n\n      line._model = me._resolveLineOptions(line);\n      line.pivot(); // Update Points\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        me.updateElement(points[i], i, reset);\n      } // Update bezier control points\n\n\n      me.updateBezierControlPoints(); // Now pivot the point for animation\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        points[i].pivot();\n      }\n    },\n    updateElement: function updateElement(point, index, reset) {\n      var me = this;\n      var custom = point.custom || {};\n      var dataset = me.getDataset();\n      var scale = me.chart.scale;\n      var pointPosition = scale.getPointPositionForValue(index, dataset.data[index]);\n\n      var options = me._resolvePointOptions(point, index);\n\n      var lineModel = me.getMeta().dataset._model;\n\n      var x = reset ? scale.xCenter : pointPosition.x;\n      var y = reset ? scale.yCenter : pointPosition.y; // Utility\n\n      point._scale = scale;\n      point._options = options;\n      point._datasetIndex = me.index;\n      point._index = index; // Desired view properties\n\n      point._model = {\n        x: x,\n        // value not used in dataset scale, but we want a consistent API between scales\n        y: y,\n        skip: custom.skip || isNaN(x) || isNaN(y),\n        // Appearance\n        radius: options.radius,\n        pointStyle: options.pointStyle,\n        rotation: options.rotation,\n        backgroundColor: options.backgroundColor,\n        borderColor: options.borderColor,\n        borderWidth: options.borderWidth,\n        tension: valueOrDefault$6(custom.tension, lineModel ? lineModel.tension : 0),\n        // Tooltip\n        hitRadius: options.hitRadius\n      };\n    },\n\n    /**\n     * @private\n     */\n    _resolvePointOptions: function _resolvePointOptions(element, index) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.point;\n      var values = {};\n      var i, ilen, key; // Scriptable options\n\n      var context = {\n        chart: chart,\n        dataIndex: index,\n        dataset: dataset,\n        datasetIndex: me.index\n      };\n      var ELEMENT_OPTIONS = {\n        backgroundColor: 'pointBackgroundColor',\n        borderColor: 'pointBorderColor',\n        borderWidth: 'pointBorderWidth',\n        hitRadius: 'pointHitRadius',\n        hoverBackgroundColor: 'pointHoverBackgroundColor',\n        hoverBorderColor: 'pointHoverBorderColor',\n        hoverBorderWidth: 'pointHoverBorderWidth',\n        hoverRadius: 'pointHoverRadius',\n        pointStyle: 'pointStyle',\n        radius: 'pointRadius',\n        rotation: 'pointRotation'\n      };\n      var keys = Object.keys(ELEMENT_OPTIONS);\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[ELEMENT_OPTIONS[key]], dataset[key], options[key]], context, index);\n      }\n\n      return values;\n    },\n\n    /**\n     * @private\n     */\n    _resolveLineOptions: function _resolveLineOptions(element) {\n      var me = this;\n      var chart = me.chart;\n      var dataset = chart.data.datasets[me.index];\n      var custom = element.custom || {};\n      var options = chart.options.elements.line;\n      var values = {};\n      var i, ilen, key;\n      var keys = ['backgroundColor', 'borderWidth', 'borderColor', 'borderCapStyle', 'borderDash', 'borderDashOffset', 'borderJoinStyle', 'fill'];\n\n      for (i = 0, ilen = keys.length; i < ilen; ++i) {\n        key = keys[i];\n        values[key] = resolve$6([custom[key], dataset[key], options[key]]);\n      }\n\n      values.tension = valueOrDefault$6(dataset.lineTension, options.tension);\n      return values;\n    },\n    updateBezierControlPoints: function updateBezierControlPoints() {\n      var me = this;\n      var meta = me.getMeta();\n      var area = me.chart.chartArea;\n      var points = meta.data || [];\n      var i, ilen, model, controlPoints;\n\n      function capControlPoint(pt, min, max) {\n        return Math.max(Math.min(pt, max), min);\n      }\n\n      for (i = 0, ilen = points.length; i < ilen; ++i) {\n        model = points[i]._model;\n        controlPoints = helpers$1.splineCurve(helpers$1.previousItem(points, i, true)._model, model, helpers$1.nextItem(points, i, true)._model, model.tension); // Prevent the bezier going outside of the bounds of the graph\n\n        model.controlPointPreviousX = capControlPoint(controlPoints.previous.x, area.left, area.right);\n        model.controlPointPreviousY = capControlPoint(controlPoints.previous.y, area.top, area.bottom);\n        model.controlPointNextX = capControlPoint(controlPoints.next.x, area.left, area.right);\n        model.controlPointNextY = capControlPoint(controlPoints.next.y, area.top, area.bottom);\n      }\n    },\n    setHoverStyle: function setHoverStyle(point) {\n      var model = point._model;\n      var options = point._options;\n      var getHoverColor = helpers$1.getHoverColor;\n      point.$previousStyle = {\n        backgroundColor: model.backgroundColor,\n        borderColor: model.borderColor,\n        borderWidth: model.borderWidth,\n        radius: model.radius\n      };\n      model.backgroundColor = valueOrDefault$6(options.hoverBackgroundColor, getHoverColor(options.backgroundColor));\n      model.borderColor = valueOrDefault$6(options.hoverBorderColor, getHoverColor(options.borderColor));\n      model.borderWidth = valueOrDefault$6(options.hoverBorderWidth, options.borderWidth);\n      model.radius = valueOrDefault$6(options.hoverRadius, options.radius);\n    }\n  });\n\n  core_defaults._set('scatter', {\n    hover: {\n      mode: 'single'\n    },\n    scales: {\n      xAxes: [{\n        id: 'x-axis-1',\n        // need an ID so datasets can reference the scale\n        type: 'linear',\n        // scatter should not use a category axis\n        position: 'bottom'\n      }],\n      yAxes: [{\n        id: 'y-axis-1',\n        type: 'linear',\n        position: 'left'\n      }]\n    },\n    showLines: false,\n    tooltips: {\n      callbacks: {\n        title: function title() {\n          return ''; // doesn't make sense for scatter since data are formatted as a point\n        },\n        label: function label(item) {\n          return '(' + item.xLabel + ', ' + item.yLabel + ')';\n        }\n      }\n    }\n  }); // Scatter charts use line controllers\n\n\n  var controller_scatter = controller_line; // NOTE export a map in which the key represents the controller type, not\n  // the class, and so must be CamelCase in order to be correctly retrieved\n  // by the controller in core.controller.js (`controllers[meta.type]`).\n\n  var controllers = {\n    bar: controller_bar,\n    bubble: controller_bubble,\n    doughnut: controller_doughnut,\n    horizontalBar: controller_horizontalBar,\n    line: controller_line,\n    polarArea: controller_polarArea,\n    pie: controller_pie,\n    radar: controller_radar,\n    scatter: controller_scatter\n  };\n  /**\n   * Helper function to get relative position for an event\n   * @param {Event|IEvent} event - The event to get the position for\n   * @param {Chart} chart - The chart\n   * @returns {object} the event position\n   */\n\n  function getRelativePosition(e, chart) {\n    if (e.native) {\n      return {\n        x: e.x,\n        y: e.y\n      };\n    }\n\n    return helpers$1.getRelativePosition(e, chart);\n  }\n  /**\n   * Helper function to traverse all of the visible elements in the chart\n   * @param {Chart} chart - the chart\n   * @param {function} handler - the callback to execute for each visible item\n   */\n\n\n  function parseVisibleItems(chart, handler) {\n    var datasets = chart.data.datasets;\n    var meta, i, j, ilen, jlen;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      if (!chart.isDatasetVisible(i)) {\n        continue;\n      }\n\n      meta = chart.getDatasetMeta(i);\n\n      for (j = 0, jlen = meta.data.length; j < jlen; ++j) {\n        var element = meta.data[j];\n\n        if (!element._view.skip) {\n          handler(element);\n        }\n      }\n    }\n  }\n  /**\n   * Helper function to get the items that intersect the event position\n   * @param {ChartElement[]} items - elements to filter\n   * @param {object} position - the point to be nearest to\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getIntersectItems(chart, position) {\n    var elements = [];\n    parseVisibleItems(chart, function (element) {\n      if (element.inRange(position.x, position.y)) {\n        elements.push(element);\n      }\n    });\n    return elements;\n  }\n  /**\n   * Helper function to get the items nearest to the event position considering all visible items in teh chart\n   * @param {Chart} chart - the chart to look at elements from\n   * @param {object} position - the point to be nearest to\n   * @param {boolean} intersect - if true, only consider items that intersect the position\n   * @param {function} distanceMetric - function to provide the distance between points\n   * @return {ChartElement[]} the nearest items\n   */\n\n\n  function getNearestItems(chart, position, intersect, distanceMetric) {\n    var minDistance = Number.POSITIVE_INFINITY;\n    var nearestItems = [];\n    parseVisibleItems(chart, function (element) {\n      if (intersect && !element.inRange(position.x, position.y)) {\n        return;\n      }\n\n      var center = element.getCenterPoint();\n      var distance = distanceMetric(position, center);\n\n      if (distance < minDistance) {\n        nearestItems = [element];\n        minDistance = distance;\n      } else if (distance === minDistance) {\n        // Can have multiple items at the same distance in which case we sort by size\n        nearestItems.push(element);\n      }\n    });\n    return nearestItems;\n  }\n  /**\n   * Get a distance metric function for two points based on the\n   * axis mode setting\n   * @param {string} axis - the axis mode. x|y|xy\n   */\n\n\n  function getDistanceMetricForAxis(axis) {\n    var useX = axis.indexOf('x') !== -1;\n    var useY = axis.indexOf('y') !== -1;\n    return function (pt1, pt2) {\n      var deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n      var deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n      return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n  }\n\n  function indexMode(chart, e, options) {\n    var position = getRelativePosition(e, chart); // Default axis for index mode is 'x' to match old behaviour\n\n    options.axis = options.axis || 'x';\n    var distanceMetric = getDistanceMetricForAxis(options.axis);\n    var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n    var elements = [];\n\n    if (!items.length) {\n      return [];\n    }\n\n    chart.data.datasets.forEach(function (dataset, datasetIndex) {\n      if (chart.isDatasetVisible(datasetIndex)) {\n        var meta = chart.getDatasetMeta(datasetIndex);\n        var element = meta.data[items[0]._index]; // don't count items that are skipped (null data)\n\n        if (element && !element._view.skip) {\n          elements.push(element);\n        }\n      }\n    });\n    return elements;\n  }\n  /**\n   * @interface IInteractionOptions\n   */\n\n  /**\n   * If true, only consider items that intersect the point\n   * @name IInterfaceOptions#boolean\n   * @type Boolean\n   */\n\n  /**\n   * Contains interaction related functions\n   * @namespace Chart.Interaction\n   */\n\n\n  var core_interaction = {\n    // Helper function for different modes\n    modes: {\n      single: function single(chart, e) {\n        var position = getRelativePosition(e, chart);\n        var elements = [];\n        parseVisibleItems(chart, function (element) {\n          if (element.inRange(position.x, position.y)) {\n            elements.push(element);\n            return elements;\n          }\n        });\n        return elements.slice(0, 1);\n      },\n\n      /**\n       * @function Chart.Interaction.modes.label\n       * @deprecated since version 2.4.0\n       * @todo remove at version 3\n       * @private\n       */\n      label: indexMode,\n\n      /**\n       * Returns items at the same index. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect mode is false, we find the nearest item and return the items at the same index as that item\n       * @function Chart.Interaction.modes.index\n       * @since v2.4.0\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      index: indexMode,\n\n      /**\n       * Returns items in the same dataset. If the options.intersect parameter is true, we only return items if we intersect something\n       * If the options.intersect is false, we find the nearest item and return the items in that dataset\n       * @function Chart.Interaction.modes.dataset\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use during interaction\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      dataset: function dataset(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        var items = options.intersect ? getIntersectItems(chart, position) : getNearestItems(chart, position, false, distanceMetric);\n\n        if (items.length > 0) {\n          items = chart.getDatasetMeta(items[0]._datasetIndex).data;\n        }\n\n        return items;\n      },\n\n      /**\n       * @function Chart.Interaction.modes.x-axis\n       * @deprecated since version 2.4.0. Use index mode and intersect == true\n       * @todo remove at version 3\n       * @private\n       */\n      'x-axis': function xAxis(chart, e) {\n        return indexMode(chart, e, {\n          intersect: false\n        });\n      },\n\n      /**\n       * Point mode returns all elements that hit test based on the event position\n       * of the event\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      point: function point(chart, e) {\n        var position = getRelativePosition(e, chart);\n        return getIntersectItems(chart, position);\n      },\n\n      /**\n       * nearest mode returns the element closest to the point\n       * @function Chart.Interaction.modes.intersect\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      nearest: function nearest(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        options.axis = options.axis || 'xy';\n        var distanceMetric = getDistanceMetricForAxis(options.axis);\n        return getNearestItems(chart, position, options.intersect, distanceMetric);\n      },\n\n      /**\n       * x mode returns the elements that hit-test at the current x coordinate\n       * @function Chart.Interaction.modes.x\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      x: function x(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inXRange(position.x)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      },\n\n      /**\n       * y mode returns the elements that hit-test at the current y coordinate\n       * @function Chart.Interaction.modes.y\n       * @param {Chart} chart - the chart we are returning items from\n       * @param {Event} e - the event we are find things at\n       * @param {IInteractionOptions} options - options to use\n       * @return {Chart.Element[]} Array of elements that are under the point. If none are found, an empty array is returned\n       */\n      y: function y(chart, e, options) {\n        var position = getRelativePosition(e, chart);\n        var items = [];\n        var intersectsItem = false;\n        parseVisibleItems(chart, function (element) {\n          if (element.inYRange(position.y)) {\n            items.push(element);\n          }\n\n          if (element.inRange(position.x, position.y)) {\n            intersectsItem = true;\n          }\n        }); // If we want to trigger on an intersect and we don't have any items\n        // that intersect the position, return nothing\n\n        if (options.intersect && !intersectsItem) {\n          items = [];\n        }\n\n        return items;\n      }\n    }\n  };\n\n  function filterByPosition(array, position) {\n    return helpers$1.where(array, function (v) {\n      return v.position === position;\n    });\n  }\n\n  function sortByWeight(array, reverse) {\n    array.forEach(function (v, i) {\n      v._tmpIndex_ = i;\n      return v;\n    });\n    array.sort(function (a, b) {\n      var v0 = reverse ? b : a;\n      var v1 = reverse ? a : b;\n      return v0.weight === v1.weight ? v0._tmpIndex_ - v1._tmpIndex_ : v0.weight - v1.weight;\n    });\n    array.forEach(function (v) {\n      delete v._tmpIndex_;\n    });\n  }\n\n  function findMaxPadding(boxes) {\n    var top = 0;\n    var left = 0;\n    var bottom = 0;\n    var right = 0;\n    helpers$1.each(boxes, function (box) {\n      if (box.getPadding) {\n        var boxPadding = box.getPadding();\n        top = Math.max(top, boxPadding.top);\n        left = Math.max(left, boxPadding.left);\n        bottom = Math.max(bottom, boxPadding.bottom);\n        right = Math.max(right, boxPadding.right);\n      }\n    });\n    return {\n      top: top,\n      left: left,\n      bottom: bottom,\n      right: right\n    };\n  }\n\n  function addSizeByPosition(boxes, size) {\n    helpers$1.each(boxes, function (box) {\n      size[box.position] += box.isHorizontal() ? box.height : box.width;\n    });\n  }\n\n  core_defaults._set('global', {\n    layout: {\n      padding: {\n        top: 0,\n        right: 0,\n        bottom: 0,\n        left: 0\n      }\n    }\n  });\n  /**\n   * @interface ILayoutItem\n   * @prop {string} position - The position of the item in the chart layout. Possible values are\n   * 'left', 'top', 'right', 'bottom', and 'chartArea'\n   * @prop {number} weight - The weight used to sort the item. Higher weights are further away from the chart area\n   * @prop {boolean} fullWidth - if true, and the item is horizontal, then push vertical boxes down\n   * @prop {function} isHorizontal - returns true if the layout item is horizontal (ie. top or bottom)\n   * @prop {function} update - Takes two parameters: width and height. Returns size of item\n   * @prop {function} getPadding -  Returns an object with padding on the edges\n   * @prop {number} width - Width of item. Must be valid after update()\n   * @prop {number} height - Height of item. Must be valid after update()\n   * @prop {number} left - Left edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} top - Top edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} right - Right edge of the item. Set by layout system and cannot be used in update\n   * @prop {number} bottom - Bottom edge of the item. Set by layout system and cannot be used in update\n   */\n  // The layout service is very self explanatory.  It's responsible for the layout within a chart.\n  // Scales, Legends and Plugins all rely on the layout service and can easily register to be placed anywhere they need\n  // It is this service's responsibility of carrying out that layout.\n\n\n  var core_layouts = {\n    defaults: {},\n\n    /**\n     * Register a box to a chart.\n     * A box is simply a reference to an object that requires layout. eg. Scales, Legend, Title.\n     * @param {Chart} chart - the chart to use\n     * @param {ILayoutItem} item - the item to add to be layed out\n     */\n    addBox: function addBox(chart, item) {\n      if (!chart.boxes) {\n        chart.boxes = [];\n      } // initialize item with default values\n\n\n      item.fullWidth = item.fullWidth || false;\n      item.position = item.position || 'top';\n      item.weight = item.weight || 0;\n      chart.boxes.push(item);\n    },\n\n    /**\n     * Remove a layoutItem from a chart\n     * @param {Chart} chart - the chart to remove the box from\n     * @param {ILayoutItem} layoutItem - the item to remove from the layout\n     */\n    removeBox: function removeBox(chart, layoutItem) {\n      var index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n\n      if (index !== -1) {\n        chart.boxes.splice(index, 1);\n      }\n    },\n\n    /**\n     * Sets (or updates) options on the given `item`.\n     * @param {Chart} chart - the chart in which the item lives (or will be added to)\n     * @param {ILayoutItem} item - the item to configure with the given options\n     * @param {object} options - the new item options.\n     */\n    configure: function configure(chart, item, options) {\n      var props = ['fullWidth', 'position', 'weight'];\n      var ilen = props.length;\n      var i = 0;\n      var prop;\n\n      for (; i < ilen; ++i) {\n        prop = props[i];\n\n        if (options.hasOwnProperty(prop)) {\n          item[prop] = options[prop];\n        }\n      }\n    },\n\n    /**\n     * Fits boxes of the given chart into the given size by having each box measure itself\n     * then running a fitting algorithm\n     * @param {Chart} chart - the chart\n     * @param {number} width - the width to fit into\n     * @param {number} height - the height to fit into\n     */\n    update: function update(chart, width, height) {\n      if (!chart) {\n        return;\n      }\n\n      var layoutOptions = chart.options.layout || {};\n      var padding = helpers$1.options.toPadding(layoutOptions.padding);\n      var leftPadding = padding.left;\n      var rightPadding = padding.right;\n      var topPadding = padding.top;\n      var bottomPadding = padding.bottom;\n      var leftBoxes = filterByPosition(chart.boxes, 'left');\n      var rightBoxes = filterByPosition(chart.boxes, 'right');\n      var topBoxes = filterByPosition(chart.boxes, 'top');\n      var bottomBoxes = filterByPosition(chart.boxes, 'bottom');\n      var chartAreaBoxes = filterByPosition(chart.boxes, 'chartArea'); // Sort boxes by weight. A higher weight is further away from the chart area\n\n      sortByWeight(leftBoxes, true);\n      sortByWeight(rightBoxes, false);\n      sortByWeight(topBoxes, true);\n      sortByWeight(bottomBoxes, false);\n      var verticalBoxes = leftBoxes.concat(rightBoxes);\n      var horizontalBoxes = topBoxes.concat(bottomBoxes);\n      var outerBoxes = verticalBoxes.concat(horizontalBoxes); // Essentially we now have any number of boxes on each of the 4 sides.\n      // Our canvas looks like the following.\n      // The areas L1 and L2 are the left axes. R1 is the right axis, T1 is the top axis and\n      // B1 is the bottom axis\n      // There are also 4 quadrant-like locations (left to right instead of clockwise) reserved for chart overlays\n      // These locations are single-box locations only, when trying to register a chartArea location that is already taken,\n      // an error will be thrown.\n      //\n      // |----------------------------------------------------|\n      // |                  T1 (Full Width)                   |\n      // |----------------------------------------------------|\n      // |    |    |                 T2                  |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    | C1 |                           | C2 |    |\n      // |    |    |----|                           |----|    |\n      // |    |    |                                     |    |\n      // | L1 | L2 |           ChartArea (C0)            | R1 |\n      // |    |    |                                     |    |\n      // |    |    |----|                           |----|    |\n      // |    |    | C3 |                           | C4 |    |\n      // |    |----|-------------------------------------|----|\n      // |    |    |                 B1                  |    |\n      // |----------------------------------------------------|\n      // |                  B2 (Full Width)                   |\n      // |----------------------------------------------------|\n      //\n      // What we do to find the best sizing, we do the following\n      // 1. Determine the minimum size of the chart area.\n      // 2. Split the remaining width equally between each vertical axis\n      // 3. Split the remaining height equally between each horizontal axis\n      // 4. Give each layout the maximum size it can be. The layout will return it's minimum size\n      // 5. Adjust the sizes of each axis based on it's minimum reported size.\n      // 6. Refit each axis\n      // 7. Position each axis in the final location\n      // 8. Tell the chart the final location of the chart area\n      // 9. Tell any axes that overlay the chart area the positions of the chart area\n      // Step 1\n\n      var chartWidth = width - leftPadding - rightPadding;\n      var chartHeight = height - topPadding - bottomPadding;\n      var chartAreaWidth = chartWidth / 2; // min 50%\n      // Step 2\n\n      var verticalBoxWidth = (width - chartAreaWidth) / verticalBoxes.length; // Step 3\n      // TODO re-limit horizontal axis height (this limit has affected only padding calculation since PR 1837)\n      // var horizontalBoxHeight = (height - chartAreaHeight) / horizontalBoxes.length;\n      // Step 4\n\n      var maxChartAreaWidth = chartWidth;\n      var maxChartAreaHeight = chartHeight;\n      var outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      var minBoxSizes = [];\n      var maxPadding;\n\n      function getMinimumBoxSize(box) {\n        var minSize;\n        var isHorizontal = box.isHorizontal();\n\n        if (isHorizontal) {\n          minSize = box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2);\n          maxChartAreaHeight -= minSize.height;\n        } else {\n          minSize = box.update(verticalBoxWidth, maxChartAreaHeight);\n          maxChartAreaWidth -= minSize.width;\n        }\n\n        minBoxSizes.push({\n          horizontal: isHorizontal,\n          width: minSize.width,\n          box: box\n        });\n      }\n\n      helpers$1.each(outerBoxes, getMinimumBoxSize); // If a horizontal box has padding, we move the left boxes over to avoid ugly charts (see issue #2478)\n\n      maxPadding = findMaxPadding(outerBoxes); // At this point, maxChartAreaHeight and maxChartAreaWidth are the size the chart area could\n      // be if the axes are drawn at their minimum sizes.\n      // Steps 5 & 6\n      // Function to fit a box\n\n      function fitBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minBox) {\n          return minBox.box === box;\n        });\n\n        if (minBoxSize) {\n          if (minBoxSize.horizontal) {\n            var scaleMargin = {\n              left: Math.max(outerBoxSizes.left, maxPadding.left),\n              right: Math.max(outerBoxSizes.right, maxPadding.right),\n              top: 0,\n              bottom: 0\n            }; // Don't use min size here because of label rotation. When the labels are rotated, their rotation highly depends\n            // on the margin. Sometimes they need to increase in size slightly\n\n            box.update(box.fullWidth ? chartWidth : maxChartAreaWidth, chartHeight / 2, scaleMargin);\n          } else {\n            box.update(minBoxSize.width, maxChartAreaHeight);\n          }\n        }\n      } // Update, and calculate the left and right margins for the horizontal boxes\n\n\n      helpers$1.each(verticalBoxes, fitBox);\n      addSizeByPosition(verticalBoxes, outerBoxSizes); // Set the Left and Right margins for the horizontal boxes\n\n      helpers$1.each(horizontalBoxes, fitBox);\n      addSizeByPosition(horizontalBoxes, outerBoxSizes);\n\n      function finalFitVerticalBox(box) {\n        var minBoxSize = helpers$1.findNextWhere(minBoxSizes, function (minSize) {\n          return minSize.box === box;\n        });\n        var scaleMargin = {\n          left: 0,\n          right: 0,\n          top: outerBoxSizes.top,\n          bottom: outerBoxSizes.bottom\n        };\n\n        if (minBoxSize) {\n          box.update(minBoxSize.width, maxChartAreaHeight, scaleMargin);\n        }\n      } // Let the left layout know the final margin\n\n\n      helpers$1.each(verticalBoxes, finalFitVerticalBox); // Recalculate because the size of each layout might have changed slightly due to the margins (label rotation for instance)\n\n      outerBoxSizes = {\n        top: topPadding,\n        left: leftPadding,\n        bottom: bottomPadding,\n        right: rightPadding\n      };\n      addSizeByPosition(outerBoxes, outerBoxSizes); // We may be adding some padding to account for rotated x axis labels\n\n      var leftPaddingAddition = Math.max(maxPadding.left - outerBoxSizes.left, 0);\n      outerBoxSizes.left += leftPaddingAddition;\n      outerBoxSizes.right += Math.max(maxPadding.right - outerBoxSizes.right, 0);\n      var topPaddingAddition = Math.max(maxPadding.top - outerBoxSizes.top, 0);\n      outerBoxSizes.top += topPaddingAddition;\n      outerBoxSizes.bottom += Math.max(maxPadding.bottom - outerBoxSizes.bottom, 0); // Figure out if our chart area changed. This would occur if the dataset layout label rotation\n      // changed due to the application of the margins in step 6. Since we can only get bigger, this is safe to do\n      // without calling `fit` again\n\n      var newMaxChartAreaHeight = height - outerBoxSizes.top - outerBoxSizes.bottom;\n      var newMaxChartAreaWidth = width - outerBoxSizes.left - outerBoxSizes.right;\n\n      if (newMaxChartAreaWidth !== maxChartAreaWidth || newMaxChartAreaHeight !== maxChartAreaHeight) {\n        helpers$1.each(verticalBoxes, function (box) {\n          box.height = newMaxChartAreaHeight;\n        });\n        helpers$1.each(horizontalBoxes, function (box) {\n          if (!box.fullWidth) {\n            box.width = newMaxChartAreaWidth;\n          }\n        });\n        maxChartAreaHeight = newMaxChartAreaHeight;\n        maxChartAreaWidth = newMaxChartAreaWidth;\n      } // Step 7 - Position the boxes\n\n\n      var left = leftPadding + leftPaddingAddition;\n      var top = topPadding + topPaddingAddition;\n\n      function placeBox(box) {\n        if (box.isHorizontal()) {\n          box.left = box.fullWidth ? leftPadding : outerBoxSizes.left;\n          box.right = box.fullWidth ? width - rightPadding : outerBoxSizes.left + maxChartAreaWidth;\n          box.top = top;\n          box.bottom = top + box.height; // Move to next point\n\n          top = box.bottom;\n        } else {\n          box.left = left;\n          box.right = left + box.width;\n          box.top = outerBoxSizes.top;\n          box.bottom = outerBoxSizes.top + maxChartAreaHeight; // Move to next point\n\n          left = box.right;\n        }\n      }\n\n      helpers$1.each(leftBoxes.concat(topBoxes), placeBox); // Account for chart width and height\n\n      left += maxChartAreaWidth;\n      top += maxChartAreaHeight;\n      helpers$1.each(rightBoxes, placeBox);\n      helpers$1.each(bottomBoxes, placeBox); // Step 8\n\n      chart.chartArea = {\n        left: outerBoxSizes.left,\n        top: outerBoxSizes.top,\n        right: outerBoxSizes.left + maxChartAreaWidth,\n        bottom: outerBoxSizes.top + maxChartAreaHeight\n      }; // Step 9\n\n      helpers$1.each(chartAreaBoxes, function (box) {\n        box.left = chart.chartArea.left;\n        box.top = chart.chartArea.top;\n        box.right = chart.chartArea.right;\n        box.bottom = chart.chartArea.bottom;\n        box.update(maxChartAreaWidth, maxChartAreaHeight);\n      });\n    }\n  };\n  /**\n   * Platform fallback implementation (minimal).\n   * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n   */\n\n  var platform_basic = {\n    acquireContext: function acquireContext(item) {\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      }\n\n      return item && item.getContext('2d') || null;\n    }\n  };\n  var platform_dom = \"/*\\n * DOM element rendering detection\\n * https://davidwalsh.name/detect-node-insertion\\n */\\n@keyframes chartjs-render-animation {\\n\\tfrom { opacity: 0.99; }\\n\\tto { opacity: 1; }\\n}\\n\\n.chartjs-render-monitor {\\n\\tanimation: chartjs-render-animation 0.001s;\\n}\\n\\n/*\\n * DOM element resizing detection\\n * https://github.com/marcj/css-element-queries\\n */\\n.chartjs-size-monitor,\\n.chartjs-size-monitor-expand,\\n.chartjs-size-monitor-shrink {\\n\\tposition: absolute;\\n\\tdirection: ltr;\\n\\tleft: 0;\\n\\ttop: 0;\\n\\tright: 0;\\n\\tbottom: 0;\\n\\toverflow: hidden;\\n\\tpointer-events: none;\\n\\tvisibility: hidden;\\n\\tz-index: -1;\\n}\\n\\n.chartjs-size-monitor-expand > div {\\n\\tposition: absolute;\\n\\twidth: 1000000px;\\n\\theight: 1000000px;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\\n.chartjs-size-monitor-shrink > div {\\n\\tposition: absolute;\\n\\twidth: 200%;\\n\\theight: 200%;\\n\\tleft: 0;\\n\\ttop: 0;\\n}\\n\";\n  var platform_dom$1 =\n  /*#__PURE__*/\n  Object.freeze({\n    default: platform_dom\n  });\n\n  function getCjsExportFromNamespace(n) {\n    return n && n.default || n;\n  }\n\n  var stylesheet = getCjsExportFromNamespace(platform_dom$1);\n  var EXPANDO_KEY = '$chartjs';\n  var CSS_PREFIX = 'chartjs-';\n  var CSS_SIZE_MONITOR = CSS_PREFIX + 'size-monitor';\n  var CSS_RENDER_MONITOR = CSS_PREFIX + 'render-monitor';\n  var CSS_RENDER_ANIMATION = CSS_PREFIX + 'render-animation';\n  var ANIMATION_START_EVENTS = ['animationstart', 'webkitAnimationStart'];\n  /**\n   * DOM event types -> Chart.js event types.\n   * Note: only events with different types are mapped.\n   * @see https://developer.mozilla.org/en-US/docs/Web/Events\n   */\n\n  var EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n  };\n  /**\n   * The \"used\" size is the final value of a dimension property after all calculations have\n   * been performed. This method uses the computed style of `element` but returns undefined\n   * if the computed style is not expressed in pixels. That can happen in some cases where\n   * `element` has a size relative to its parent and this last one is not yet displayed,\n   * for example because of `display: none` on a parent node.\n   * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n   * @returns {number} Size in pixels or undefined if unknown.\n   */\n\n  function readUsedSize(element, property) {\n    var value = helpers$1.getStyle(element, property);\n    var matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? Number(matches[1]) : undefined;\n  }\n  /**\n   * Initializes the canvas style and render size without modifying the canvas display size,\n   * since responsiveness is handled by the controller.resize() method. The config is used\n   * to determine the aspect ratio to apply in case no explicit height has been specified.\n   */\n\n\n  function initCanvas(canvas, config) {\n    var style = canvas.style; // NOTE(SB) canvas.getAttribute('width') !== canvas.width: in the first case it\n    // returns null or '' if no explicit value has been set to the canvas attribute.\n\n    var renderHeight = canvas.getAttribute('height');\n    var renderWidth = canvas.getAttribute('width'); // Chart.js modifies some canvas values that we want to restore on destroy\n\n    canvas[EXPANDO_KEY] = {\n      initial: {\n        height: renderHeight,\n        width: renderWidth,\n        style: {\n          display: style.display,\n          height: style.height,\n          width: style.width\n        }\n      }\n    }; // Force canvas to display as block to avoid extra space caused by inline\n    // elements, which would interfere with the responsive resize process.\n    // https://github.com/chartjs/Chart.js/issues/2538\n\n    style.display = style.display || 'block';\n\n    if (renderWidth === null || renderWidth === '') {\n      var displayWidth = readUsedSize(canvas, 'width');\n\n      if (displayWidth !== undefined) {\n        canvas.width = displayWidth;\n      }\n    }\n\n    if (renderHeight === null || renderHeight === '') {\n      if (canvas.style.height === '') {\n        // If no explicit render height and style height, let's apply the aspect ratio,\n        // which one can be specified by the user but also by charts as default option\n        // (i.e. options.aspectRatio). If not specified, use canvas aspect ratio of 2.\n        canvas.height = canvas.width / (config.options.aspectRatio || 2);\n      } else {\n        var displayHeight = readUsedSize(canvas, 'height');\n\n        if (displayWidth !== undefined) {\n          canvas.height = displayHeight;\n        }\n      }\n    }\n\n    return canvas;\n  }\n  /**\n   * Detects support for options object argument in addEventListener.\n   * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n   * @private\n   */\n\n\n  var supportsEventListenerOptions = function () {\n    var supports = false;\n\n    try {\n      var options = Object.defineProperty({}, 'passive', {\n        // eslint-disable-next-line getter-return\n        get: function get() {\n          supports = true;\n        }\n      });\n      window.addEventListener('e', null, options);\n    } catch (e) {// continue regardless of error\n    }\n\n    return supports;\n  }(); // Default passive to true as expected by Chrome for 'touchstart' and 'touchend' events.\n  // https://github.com/chartjs/Chart.js/issues/4287\n\n\n  var eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n  } : false;\n\n  function addListener(node, type, listener) {\n    node.addEventListener(type, listener, eventListenerOptions);\n  }\n\n  function removeListener(node, type, listener) {\n    node.removeEventListener(type, listener, eventListenerOptions);\n  }\n\n  function createEvent(type, chart, x, y, nativeEvent) {\n    return {\n      type: type,\n      chart: chart,\n      native: nativeEvent || null,\n      x: x !== undefined ? x : null,\n      y: y !== undefined ? y : null\n    };\n  }\n\n  function fromNativeEvent(event, chart) {\n    var type = EVENT_TYPES[event.type] || event.type;\n    var pos = helpers$1.getRelativePosition(event, chart);\n    return createEvent(type, chart, pos.x, pos.y, event);\n  }\n\n  function throttled(fn, thisArg) {\n    var ticking = false;\n    var args = [];\n    return function () {\n      args = Array.prototype.slice.call(arguments);\n      thisArg = thisArg || this;\n\n      if (!ticking) {\n        ticking = true;\n        helpers$1.requestAnimFrame.call(window, function () {\n          ticking = false;\n          fn.apply(thisArg, args);\n        });\n      }\n    };\n  }\n\n  function createDiv(cls) {\n    var el = document.createElement('div');\n    el.className = cls || '';\n    return el;\n  } // Implementation based on https://github.com/marcj/css-element-queries\n\n\n  function createResizer(handler) {\n    var maxSize = 1000000; // NOTE(SB) Don't use innerHTML because it could be considered unsafe.\n    // https://github.com/chartjs/Chart.js/issues/5902\n\n    var resizer = createDiv(CSS_SIZE_MONITOR);\n    var expand = createDiv(CSS_SIZE_MONITOR + '-expand');\n    var shrink = createDiv(CSS_SIZE_MONITOR + '-shrink');\n    expand.appendChild(createDiv());\n    shrink.appendChild(createDiv());\n    resizer.appendChild(expand);\n    resizer.appendChild(shrink);\n\n    resizer._reset = function () {\n      expand.scrollLeft = maxSize;\n      expand.scrollTop = maxSize;\n      shrink.scrollLeft = maxSize;\n      shrink.scrollTop = maxSize;\n    };\n\n    var onScroll = function onScroll() {\n      resizer._reset();\n\n      handler();\n    };\n\n    addListener(expand, 'scroll', onScroll.bind(expand, 'expand'));\n    addListener(shrink, 'scroll', onScroll.bind(shrink, 'shrink'));\n    return resizer;\n  } // https://davidwalsh.name/detect-node-insertion\n\n\n  function watchForRender(node, handler) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {});\n\n    var proxy = expando.renderProxy = function (e) {\n      if (e.animationName === CSS_RENDER_ANIMATION) {\n        handler();\n      }\n    };\n\n    helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n      addListener(node, type, proxy);\n    }); // #4737: Chrome might skip the CSS animation when the CSS_RENDER_MONITOR class\n    // is removed then added back immediately (same animation frame?). Accessing the\n    // `offsetParent` property will force a reflow and re-evaluate the CSS animation.\n    // https://gist.github.com/paulirish/5d52fb081b3570c81e3a#box-metrics\n    // https://github.com/chartjs/Chart.js/issues/4737\n\n    expando.reflow = !!node.offsetParent;\n    node.classList.add(CSS_RENDER_MONITOR);\n  }\n\n  function unwatchForRender(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var proxy = expando.renderProxy;\n\n    if (proxy) {\n      helpers$1.each(ANIMATION_START_EVENTS, function (type) {\n        removeListener(node, type, proxy);\n      });\n      delete expando.renderProxy;\n    }\n\n    node.classList.remove(CSS_RENDER_MONITOR);\n  }\n\n  function addResizeListener(node, listener, chart) {\n    var expando = node[EXPANDO_KEY] || (node[EXPANDO_KEY] = {}); // Let's keep track of this added resizer and thus avoid DOM query when removing it.\n\n    var resizer = expando.resizer = createResizer(throttled(function () {\n      if (expando.resizer) {\n        var container = chart.options.maintainAspectRatio && node.parentNode;\n        var w = container ? container.clientWidth : 0;\n        listener(createEvent('resize', chart));\n\n        if (container && container.clientWidth < w && chart.canvas) {\n          // If the container size shrank during chart resize, let's assume\n          // scrollbar appeared. So we resize again with the scrollbar visible -\n          // effectively making chart smaller and the scrollbar hidden again.\n          // Because we are inside `throttled`, and currently `ticking`, scroll\n          // events are ignored during this whole 2 resize process.\n          // If we assumed wrong and something else happened, we are resizing\n          // twice in a frame (potential performance issue)\n          listener(createEvent('resize', chart));\n        }\n      }\n    })); // The resizer needs to be attached to the node parent, so we first need to be\n    // sure that `node` is attached to the DOM before injecting the resizer element.\n\n    watchForRender(node, function () {\n      if (expando.resizer) {\n        var container = node.parentNode;\n\n        if (container && container !== resizer.parentNode) {\n          container.insertBefore(resizer, container.firstChild);\n        } // The container size might have changed, let's reset the resizer state.\n\n\n        resizer._reset();\n      }\n    });\n  }\n\n  function removeResizeListener(node) {\n    var expando = node[EXPANDO_KEY] || {};\n    var resizer = expando.resizer;\n    delete expando.resizer;\n    unwatchForRender(node);\n\n    if (resizer && resizer.parentNode) {\n      resizer.parentNode.removeChild(resizer);\n    }\n  }\n\n  function injectCSS(platform, css) {\n    // https://stackoverflow.com/q/3922139\n    var style = platform._style || document.createElement('style');\n\n    if (!platform._style) {\n      platform._style = style;\n      css = '/* Chart.js */\\n' + css;\n      style.setAttribute('type', 'text/css');\n      document.getElementsByTagName('head')[0].appendChild(style);\n    }\n\n    style.appendChild(document.createTextNode(css));\n  }\n\n  var platform_dom$2 = {\n    /**\n     * When `true`, prevents the automatic injection of the stylesheet required to\n     * correctly detect when the chart is added to the DOM and then resized. This\n     * switch has been added to allow external stylesheet (`dist/Chart(.min)?.js`)\n     * to be manually imported to make this library compatible with any CSP.\n     * See https://github.com/chartjs/Chart.js/issues/5208\n     */\n    disableCSSInjection: false,\n\n    /**\n     * This property holds whether this platform is enabled for the current environment.\n     * Currently used by platform.js to select the proper implementation.\n     * @private\n     */\n    _enabled: typeof window !== 'undefined' && typeof document !== 'undefined',\n\n    /**\n     * @private\n     */\n    _ensureLoaded: function _ensureLoaded() {\n      if (this._loaded) {\n        return;\n      }\n\n      this._loaded = true; // https://github.com/chartjs/Chart.js/issues/5208\n\n      if (!this.disableCSSInjection) {\n        injectCSS(this, stylesheet);\n      }\n    },\n    acquireContext: function acquireContext(item, config) {\n      if (typeof item === 'string') {\n        item = document.getElementById(item);\n      } else if (item.length) {\n        // Support for array based queries (such as jQuery)\n        item = item[0];\n      }\n\n      if (item && item.canvas) {\n        // Support for any object associated to a canvas (including a context2d)\n        item = item.canvas;\n      } // To prevent canvas fingerprinting, some add-ons undefine the getContext\n      // method, for example: https://github.com/kkapsner/CanvasBlocker\n      // https://github.com/chartjs/Chart.js/issues/2807\n\n\n      var context = item && item.getContext && item.getContext('2d'); // Load platform resources on first chart creation, to make possible to change\n      // platform options after importing the library (e.g. `disableCSSInjection`).\n\n      this._ensureLoaded(); // `instanceof HTMLCanvasElement/CanvasRenderingContext2D` fails when the item is\n      // inside an iframe or when running in a protected environment. We could guess the\n      // types from their toString() value but let's keep things flexible and assume it's\n      // a sufficient condition if the item has a context2D which has item as `canvas`.\n      // https://github.com/chartjs/Chart.js/issues/3887\n      // https://github.com/chartjs/Chart.js/issues/4102\n      // https://github.com/chartjs/Chart.js/issues/4152\n\n\n      if (context && context.canvas === item) {\n        initCanvas(item, config);\n        return context;\n      }\n\n      return null;\n    },\n    releaseContext: function releaseContext(context) {\n      var canvas = context.canvas;\n\n      if (!canvas[EXPANDO_KEY]) {\n        return;\n      }\n\n      var initial = canvas[EXPANDO_KEY].initial;\n      ['height', 'width'].forEach(function (prop) {\n        var value = initial[prop];\n\n        if (helpers$1.isNullOrUndef(value)) {\n          canvas.removeAttribute(prop);\n        } else {\n          canvas.setAttribute(prop, value);\n        }\n      });\n      helpers$1.each(initial.style || {}, function (value, key) {\n        canvas.style[key] = value;\n      }); // The canvas render size might have been changed (and thus the state stack discarded),\n      // we can't use save() and restore() to restore the initial state. So make sure that at\n      // least the canvas context is reset to the default state by setting the canvas width.\n      // https://www.w3.org/TR/2011/WD-html5-20110525/the-canvas-element.html\n      // eslint-disable-next-line no-self-assign\n\n      canvas.width = canvas.width;\n      delete canvas[EXPANDO_KEY];\n    },\n    addEventListener: function addEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        addResizeListener(canvas, listener, chart);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || (listener[EXPANDO_KEY] = {});\n      var proxies = expando.proxies || (expando.proxies = {});\n\n      var proxy = proxies[chart.id + '_' + type] = function (event) {\n        listener(fromNativeEvent(event, chart));\n      };\n\n      addListener(canvas, type, proxy);\n    },\n    removeEventListener: function removeEventListener(chart, type, listener) {\n      var canvas = chart.canvas;\n\n      if (type === 'resize') {\n        // Note: the resize event is not supported on all browsers.\n        removeResizeListener(canvas);\n        return;\n      }\n\n      var expando = listener[EXPANDO_KEY] || {};\n      var proxies = expando.proxies || {};\n      var proxy = proxies[chart.id + '_' + type];\n\n      if (!proxy) {\n        return;\n      }\n\n      removeListener(canvas, type, proxy);\n    }\n  }; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use EventTarget.addEventListener instead.\n   * EventTarget.addEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener\n   * @function Chart.helpers.addEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.addEvent = addListener;\n  /**\n   * Provided for backward compatibility, use EventTarget.removeEventListener instead.\n   * EventTarget.removeEventListener compatibility: Chrome, Opera 7, Safari, FF1.5+, IE9+\n   * @see https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/removeEventListener\n   * @function Chart.helpers.removeEvent\n   * @deprecated since version 2.7.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.removeEvent = removeListener; // @TODO Make possible to select another platform at build time.\n\n  var implementation = platform_dom$2._enabled ? platform_dom$2 : platform_basic;\n  /**\n   * @namespace Chart.platform\n   * @see https://chartjs.gitbooks.io/proposals/content/Platform.html\n   * @since 2.4.0\n   */\n\n  var platform = helpers$1.extend({\n    /**\n     * @since 2.7.0\n     */\n    initialize: function initialize() {},\n\n    /**\n     * Called at chart construction time, returns a context2d instance implementing\n     * the [W3C Canvas 2D Context API standard]{@link https://www.w3.org/TR/2dcontext/}.\n     * @param {*} item - The native item from which to acquire context (platform specific)\n     * @param {object} options - The chart options\n     * @returns {CanvasRenderingContext2D} context2d instance\n     */\n    acquireContext: function acquireContext() {},\n\n    /**\n     * Called at chart destruction time, releases any resources associated to the context\n     * previously returned by the acquireContext() method.\n     * @param {CanvasRenderingContext2D} context - The context2d instance\n     * @returns {boolean} true if the method succeeded, else false\n     */\n    releaseContext: function releaseContext() {},\n\n    /**\n     * Registers the specified listener on the given chart.\n     * @param {Chart} chart - Chart from which to listen for event\n     * @param {string} type - The ({@link IEvent}) type to listen for\n     * @param {function} listener - Receives a notification (an object that implements\n     * the {@link IEvent} interface) when an event of the specified type occurs.\n     */\n    addEventListener: function addEventListener() {},\n\n    /**\n     * Removes the specified listener previously registered with addEventListener.\n     * @param {Chart} chart - Chart from which to remove the listener\n     * @param {string} type - The ({@link IEvent}) type to remove\n     * @param {function} listener - The listener function to remove from the event target.\n     */\n    removeEventListener: function removeEventListener() {}\n  }, implementation);\n\n  core_defaults._set('global', {\n    plugins: {}\n  });\n  /**\n   * The plugin service singleton\n   * @namespace Chart.plugins\n   * @since 2.1.0\n   */\n\n\n  var core_plugins = {\n    /**\n     * Globally registered plugins.\n     * @private\n     */\n    _plugins: [],\n\n    /**\n     * This identifier is used to invalidate the descriptors cache attached to each chart\n     * when a global plugin is registered or unregistered. In this case, the cache ID is\n     * incremented and descriptors are regenerated during following API calls.\n     * @private\n     */\n    _cacheId: 0,\n\n    /**\n     * Registers the given plugin(s) if not already registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    register: function register(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        if (p.indexOf(plugin) === -1) {\n          p.push(plugin);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Unregisters the given plugin(s) only if registered.\n     * @param {IPlugin[]|IPlugin} plugins plugin instance(s).\n     */\n    unregister: function unregister(plugins) {\n      var p = this._plugins;\n      [].concat(plugins).forEach(function (plugin) {\n        var idx = p.indexOf(plugin);\n\n        if (idx !== -1) {\n          p.splice(idx, 1);\n        }\n      });\n      this._cacheId++;\n    },\n\n    /**\n     * Remove all registered plugins.\n     * @since 2.1.5\n     */\n    clear: function clear() {\n      this._plugins = [];\n      this._cacheId++;\n    },\n\n    /**\n     * Returns the number of registered plugins?\n     * @returns {number}\n     * @since 2.1.5\n     */\n    count: function count() {\n      return this._plugins.length;\n    },\n\n    /**\n     * Returns all registered plugin instances.\n     * @returns {IPlugin[]} array of plugin objects.\n     * @since 2.1.5\n     */\n    getAll: function getAll() {\n      return this._plugins;\n    },\n\n    /**\n     * Calls enabled plugins for `chart` on the specified hook and with the given args.\n     * This method immediately returns as soon as a plugin explicitly returns false. The\n     * returned value can be used, for instance, to interrupt the current action.\n     * @param {Chart} chart - The chart instance for which plugins should be called.\n     * @param {string} hook - The name of the plugin method to call (e.g. 'beforeUpdate').\n     * @param {Array} [args] - Extra arguments to apply to the hook call.\n     * @returns {boolean} false if any of the plugins return false, else returns true.\n     */\n    notify: function notify(chart, hook, args) {\n      var descriptors = this.descriptors(chart);\n      var ilen = descriptors.length;\n      var i, descriptor, plugin, params, method;\n\n      for (i = 0; i < ilen; ++i) {\n        descriptor = descriptors[i];\n        plugin = descriptor.plugin;\n        method = plugin[hook];\n\n        if (typeof method === 'function') {\n          params = [chart].concat(args || []);\n          params.push(descriptor.options);\n\n          if (method.apply(plugin, params) === false) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns descriptors of enabled plugins for the given chart.\n     * @returns {object[]} [{ plugin, options }]\n     * @private\n     */\n    descriptors: function descriptors(chart) {\n      var cache = chart.$plugins || (chart.$plugins = {});\n\n      if (cache.id === this._cacheId) {\n        return cache.descriptors;\n      }\n\n      var plugins = [];\n      var descriptors = [];\n      var config = chart && chart.config || {};\n      var options = config.options && config.options.plugins || {};\n\n      this._plugins.concat(config.plugins || []).forEach(function (plugin) {\n        var idx = plugins.indexOf(plugin);\n\n        if (idx !== -1) {\n          return;\n        }\n\n        var id = plugin.id;\n        var opts = options[id];\n\n        if (opts === false) {\n          return;\n        }\n\n        if (opts === true) {\n          opts = helpers$1.clone(core_defaults.global.plugins[id]);\n        }\n\n        plugins.push(plugin);\n        descriptors.push({\n          plugin: plugin,\n          options: opts || {}\n        });\n      });\n\n      cache.descriptors = descriptors;\n      cache.id = this._cacheId;\n      return descriptors;\n    },\n\n    /**\n     * Invalidates cache for the given chart: descriptors hold a reference on plugin option,\n     * but in some cases, this reference can be changed by the user when updating options.\n     * https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n     * @private\n     */\n    _invalidate: function _invalidate(chart) {\n      delete chart.$plugins;\n    }\n  };\n  var core_scaleService = {\n    // Scale registration object. Extensions can register new scale types (such as log or DB scales) and then\n    // use the new chart options to grab the correct scale\n    constructors: {},\n    // Use a registration function so that we can move to an ES6 map when we no longer need to support\n    // old browsers\n    // Scale config defaults\n    defaults: {},\n    registerScaleType: function registerScaleType(type, scaleConstructor, scaleDefaults) {\n      this.constructors[type] = scaleConstructor;\n      this.defaults[type] = helpers$1.clone(scaleDefaults);\n    },\n    getScaleConstructor: function getScaleConstructor(type) {\n      return this.constructors.hasOwnProperty(type) ? this.constructors[type] : undefined;\n    },\n    getScaleDefaults: function getScaleDefaults(type) {\n      // Return the scale defaults merged with the global settings so that we always use the latest ones\n      return this.defaults.hasOwnProperty(type) ? helpers$1.merge({}, [core_defaults.scale, this.defaults[type]]) : {};\n    },\n    updateScaleDefaults: function updateScaleDefaults(type, additions) {\n      var me = this;\n\n      if (me.defaults.hasOwnProperty(type)) {\n        me.defaults[type] = helpers$1.extend(me.defaults[type], additions);\n      }\n    },\n    addScalesToLayout: function addScalesToLayout(chart) {\n      // Adds each scale to the chart.boxes array to be sized accordingly\n      helpers$1.each(chart.scales, function (scale) {\n        // Set ILayoutItem parameters for backwards compatibility\n        scale.fullWidth = scale.options.fullWidth;\n        scale.position = scale.options.position;\n        scale.weight = scale.options.weight;\n        core_layouts.addBox(chart, scale);\n      });\n    }\n  };\n  var valueOrDefault$7 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    tooltips: {\n      enabled: true,\n      custom: null,\n      mode: 'nearest',\n      position: 'average',\n      intersect: true,\n      backgroundColor: 'rgba(0,0,0,0.8)',\n      titleFontStyle: 'bold',\n      titleSpacing: 2,\n      titleMarginBottom: 6,\n      titleFontColor: '#fff',\n      titleAlign: 'left',\n      bodySpacing: 2,\n      bodyFontColor: '#fff',\n      bodyAlign: 'left',\n      footerFontStyle: 'bold',\n      footerSpacing: 2,\n      footerMarginTop: 6,\n      footerFontColor: '#fff',\n      footerAlign: 'left',\n      yPadding: 6,\n      xPadding: 6,\n      caretPadding: 2,\n      caretSize: 5,\n      cornerRadius: 6,\n      multiKeyBackground: '#fff',\n      displayColors: true,\n      borderColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      callbacks: {\n        // Args are: (tooltipItems, data)\n        beforeTitle: helpers$1.noop,\n        title: function title(tooltipItems, data) {\n          var title = '';\n          var labels = data.labels;\n          var labelCount = labels ? labels.length : 0;\n\n          if (tooltipItems.length > 0) {\n            var item = tooltipItems[0];\n\n            if (item.label) {\n              title = item.label;\n            } else if (item.xLabel) {\n              title = item.xLabel;\n            } else if (labelCount > 0 && item.index < labelCount) {\n              title = labels[item.index];\n            }\n          }\n\n          return title;\n        },\n        afterTitle: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeBody: helpers$1.noop,\n        // Args are: (tooltipItem, data)\n        beforeLabel: helpers$1.noop,\n        label: function label(tooltipItem, data) {\n          var label = data.datasets[tooltipItem.datasetIndex].label || '';\n\n          if (label) {\n            label += ': ';\n          }\n\n          if (!helpers$1.isNullOrUndef(tooltipItem.value)) {\n            label += tooltipItem.value;\n          } else {\n            label += tooltipItem.yLabel;\n          }\n\n          return label;\n        },\n        labelColor: function labelColor(tooltipItem, chart) {\n          var meta = chart.getDatasetMeta(tooltipItem.datasetIndex);\n          var activeElement = meta.data[tooltipItem.index];\n          var view = activeElement._view;\n          return {\n            borderColor: view.borderColor,\n            backgroundColor: view.backgroundColor\n          };\n        },\n        labelTextColor: function labelTextColor() {\n          return this._options.bodyFontColor;\n        },\n        afterLabel: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        afterBody: helpers$1.noop,\n        // Args are: (tooltipItems, data)\n        beforeFooter: helpers$1.noop,\n        footer: helpers$1.noop,\n        afterFooter: helpers$1.noop\n      }\n    }\n  });\n\n  var positioners = {\n    /**\n     * Average mode places the tooltip at the average position of the elements shown\n     * @function Chart.Tooltip.positioners.average\n     * @param elements {ChartElement[]} the elements being displayed in the tooltip\n     * @returns {object} tooltip position\n     */\n    average: function average(elements) {\n      if (!elements.length) {\n        return false;\n      }\n\n      var i, len;\n      var x = 0;\n      var y = 0;\n      var count = 0;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var pos = el.tooltipPosition();\n          x += pos.x;\n          y += pos.y;\n          ++count;\n        }\n      }\n\n      return {\n        x: x / count,\n        y: y / count\n      };\n    },\n\n    /**\n     * Gets the tooltip position nearest of the item nearest to the event position\n     * @function Chart.Tooltip.positioners.nearest\n     * @param elements {Chart.Element[]} the tooltip elements\n     * @param eventPosition {object} the position of the event in canvas coordinates\n     * @returns {object} the tooltip position\n     */\n    nearest: function nearest(elements, eventPosition) {\n      var x = eventPosition.x;\n      var y = eventPosition.y;\n      var minDistance = Number.POSITIVE_INFINITY;\n      var i, len, nearestElement;\n\n      for (i = 0, len = elements.length; i < len; ++i) {\n        var el = elements[i];\n\n        if (el && el.hasValue()) {\n          var center = el.getCenterPoint();\n          var d = helpers$1.distanceBetweenPoints(eventPosition, center);\n\n          if (d < minDistance) {\n            minDistance = d;\n            nearestElement = el;\n          }\n        }\n      }\n\n      if (nearestElement) {\n        var tp = nearestElement.tooltipPosition();\n        x = tp.x;\n        y = tp.y;\n      }\n\n      return {\n        x: x,\n        y: y\n      };\n    }\n  }; // Helper to push or concat based on if the 2nd parameter is an array or not\n\n  function pushOrConcat(base, toPush) {\n    if (toPush) {\n      if (helpers$1.isArray(toPush)) {\n        // base = base.concat(toPush);\n        Array.prototype.push.apply(base, toPush);\n      } else {\n        base.push(toPush);\n      }\n    }\n\n    return base;\n  }\n  /**\n   * Returns array of strings split by newline\n   * @param {string} value - The value to split by newline.\n   * @returns {string[]} value if newline present - Returned from String split() method\n   * @function\n   */\n\n\n  function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n      return str.split('\\n');\n    }\n\n    return str;\n  }\n  /**\n   * Private helper to create a tooltip item model\n   * @param element - the chart element (point, arc, bar) to create the tooltip item for\n   * @return new tooltip item\n   */\n\n\n  function createTooltipItem(element) {\n    var xScale = element._xScale;\n    var yScale = element._yScale || element._scale; // handle radar || polarArea charts\n\n    var index = element._index;\n    var datasetIndex = element._datasetIndex;\n\n    var controller = element._chart.getDatasetMeta(datasetIndex).controller;\n\n    var indexScale = controller._getIndexScale();\n\n    var valueScale = controller._getValueScale();\n\n    return {\n      xLabel: xScale ? xScale.getLabelForIndex(index, datasetIndex) : '',\n      yLabel: yScale ? yScale.getLabelForIndex(index, datasetIndex) : '',\n      label: indexScale ? '' + indexScale.getLabelForIndex(index, datasetIndex) : '',\n      value: valueScale ? '' + valueScale.getLabelForIndex(index, datasetIndex) : '',\n      index: index,\n      datasetIndex: datasetIndex,\n      x: element._model.x,\n      y: element._model.y\n    };\n  }\n  /**\n   * Helper to get the reset model for the tooltip\n   * @param tooltipOpts {object} the tooltip options\n   */\n\n\n  function getBaseModel(tooltipOpts) {\n    var globalDefaults = core_defaults.global;\n    return {\n      // Positioning\n      xPadding: tooltipOpts.xPadding,\n      yPadding: tooltipOpts.yPadding,\n      xAlign: tooltipOpts.xAlign,\n      yAlign: tooltipOpts.yAlign,\n      // Body\n      bodyFontColor: tooltipOpts.bodyFontColor,\n      _bodyFontFamily: valueOrDefault$7(tooltipOpts.bodyFontFamily, globalDefaults.defaultFontFamily),\n      _bodyFontStyle: valueOrDefault$7(tooltipOpts.bodyFontStyle, globalDefaults.defaultFontStyle),\n      _bodyAlign: tooltipOpts.bodyAlign,\n      bodyFontSize: valueOrDefault$7(tooltipOpts.bodyFontSize, globalDefaults.defaultFontSize),\n      bodySpacing: tooltipOpts.bodySpacing,\n      // Title\n      titleFontColor: tooltipOpts.titleFontColor,\n      _titleFontFamily: valueOrDefault$7(tooltipOpts.titleFontFamily, globalDefaults.defaultFontFamily),\n      _titleFontStyle: valueOrDefault$7(tooltipOpts.titleFontStyle, globalDefaults.defaultFontStyle),\n      titleFontSize: valueOrDefault$7(tooltipOpts.titleFontSize, globalDefaults.defaultFontSize),\n      _titleAlign: tooltipOpts.titleAlign,\n      titleSpacing: tooltipOpts.titleSpacing,\n      titleMarginBottom: tooltipOpts.titleMarginBottom,\n      // Footer\n      footerFontColor: tooltipOpts.footerFontColor,\n      _footerFontFamily: valueOrDefault$7(tooltipOpts.footerFontFamily, globalDefaults.defaultFontFamily),\n      _footerFontStyle: valueOrDefault$7(tooltipOpts.footerFontStyle, globalDefaults.defaultFontStyle),\n      footerFontSize: valueOrDefault$7(tooltipOpts.footerFontSize, globalDefaults.defaultFontSize),\n      _footerAlign: tooltipOpts.footerAlign,\n      footerSpacing: tooltipOpts.footerSpacing,\n      footerMarginTop: tooltipOpts.footerMarginTop,\n      // Appearance\n      caretSize: tooltipOpts.caretSize,\n      cornerRadius: tooltipOpts.cornerRadius,\n      backgroundColor: tooltipOpts.backgroundColor,\n      opacity: 0,\n      legendColorBackground: tooltipOpts.multiKeyBackground,\n      displayColors: tooltipOpts.displayColors,\n      borderColor: tooltipOpts.borderColor,\n      borderWidth: tooltipOpts.borderWidth\n    };\n  }\n  /**\n   * Get the size of the tooltip\n   */\n\n\n  function getTooltipSize(tooltip, model) {\n    var ctx = tooltip._chart.ctx;\n    var height = model.yPadding * 2; // Tooltip Padding\n\n    var width = 0; // Count of all lines in the body\n\n    var body = model.body;\n    var combinedBodyLength = body.reduce(function (count, bodyItem) {\n      return count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length;\n    }, 0);\n    combinedBodyLength += model.beforeBody.length + model.afterBody.length;\n    var titleLineCount = model.title.length;\n    var footerLineCount = model.footer.length;\n    var titleFontSize = model.titleFontSize;\n    var bodyFontSize = model.bodyFontSize;\n    var footerFontSize = model.footerFontSize;\n    height += titleLineCount * titleFontSize; // Title Lines\n\n    height += titleLineCount ? (titleLineCount - 1) * model.titleSpacing : 0; // Title Line Spacing\n\n    height += titleLineCount ? model.titleMarginBottom : 0; // Title's bottom Margin\n\n    height += combinedBodyLength * bodyFontSize; // Body Lines\n\n    height += combinedBodyLength ? (combinedBodyLength - 1) * model.bodySpacing : 0; // Body Line Spacing\n\n    height += footerLineCount ? model.footerMarginTop : 0; // Footer Margin\n\n    height += footerLineCount * footerFontSize; // Footer Lines\n\n    height += footerLineCount ? (footerLineCount - 1) * model.footerSpacing : 0; // Footer Line Spacing\n    // Title width\n\n    var widthPadding = 0;\n\n    var maxLineWidth = function maxLineWidth(line) {\n      width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n\n    ctx.font = helpers$1.fontString(titleFontSize, model._titleFontStyle, model._titleFontFamily);\n    helpers$1.each(model.title, maxLineWidth); // Body width\n\n    ctx.font = helpers$1.fontString(bodyFontSize, model._bodyFontStyle, model._bodyFontFamily);\n    helpers$1.each(model.beforeBody.concat(model.afterBody), maxLineWidth); // Body lines may include some extra width due to the color box\n\n    widthPadding = model.displayColors ? bodyFontSize + 2 : 0;\n    helpers$1.each(body, function (bodyItem) {\n      helpers$1.each(bodyItem.before, maxLineWidth);\n      helpers$1.each(bodyItem.lines, maxLineWidth);\n      helpers$1.each(bodyItem.after, maxLineWidth);\n    }); // Reset back to 0\n\n    widthPadding = 0; // Footer width\n\n    ctx.font = helpers$1.fontString(footerFontSize, model._footerFontStyle, model._footerFontFamily);\n    helpers$1.each(model.footer, maxLineWidth); // Add padding\n\n    width += 2 * model.xPadding;\n    return {\n      width: width,\n      height: height\n    };\n  }\n  /**\n   * Helper to get the alignment of a tooltip given the size\n   */\n\n\n  function determineAlignment(tooltip, size) {\n    var model = tooltip._model;\n    var chart = tooltip._chart;\n    var chartArea = tooltip._chart.chartArea;\n    var xAlign = 'center';\n    var yAlign = 'center';\n\n    if (model.y < size.height) {\n      yAlign = 'top';\n    } else if (model.y > chart.height - size.height) {\n      yAlign = 'bottom';\n    }\n\n    var lf, rf; // functions to determine left, right alignment\n\n    var olf, orf; // functions to determine if left/right alignment causes tooltip to go outside chart\n\n    var yf; // function to get the y alignment if the tooltip goes outside of the left or right edges\n\n    var midX = (chartArea.left + chartArea.right) / 2;\n    var midY = (chartArea.top + chartArea.bottom) / 2;\n\n    if (yAlign === 'center') {\n      lf = function lf(x) {\n        return x <= midX;\n      };\n\n      rf = function rf(x) {\n        return x > midX;\n      };\n    } else {\n      lf = function lf(x) {\n        return x <= size.width / 2;\n      };\n\n      rf = function rf(x) {\n        return x >= chart.width - size.width / 2;\n      };\n    }\n\n    olf = function olf(x) {\n      return x + size.width + model.caretSize + model.caretPadding > chart.width;\n    };\n\n    orf = function orf(x) {\n      return x - size.width - model.caretSize - model.caretPadding < 0;\n    };\n\n    yf = function yf(y) {\n      return y <= midY ? 'top' : 'bottom';\n    };\n\n    if (lf(model.x)) {\n      xAlign = 'left'; // Is tooltip too wide and goes over the right side of the chart.?\n\n      if (olf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    } else if (rf(model.x)) {\n      xAlign = 'right'; // Is tooltip too wide and goes outside left edge of canvas?\n\n      if (orf(model.x)) {\n        xAlign = 'center';\n        yAlign = yf(model.y);\n      }\n    }\n\n    var opts = tooltip._options;\n    return {\n      xAlign: opts.xAlign ? opts.xAlign : xAlign,\n      yAlign: opts.yAlign ? opts.yAlign : yAlign\n    };\n  }\n  /**\n   * Helper to get the location a tooltip needs to be placed at given the initial position (via the vm) and the size and alignment\n   */\n\n\n  function getBackgroundPoint(vm, size, alignment, chart) {\n    // Background Position\n    var x = vm.x;\n    var y = vm.y;\n    var caretSize = vm.caretSize;\n    var caretPadding = vm.caretPadding;\n    var cornerRadius = vm.cornerRadius;\n    var xAlign = alignment.xAlign;\n    var yAlign = alignment.yAlign;\n    var paddingAndSize = caretSize + caretPadding;\n    var radiusAndPadding = cornerRadius + caretPadding;\n\n    if (xAlign === 'right') {\n      x -= size.width;\n    } else if (xAlign === 'center') {\n      x -= size.width / 2;\n\n      if (x + size.width > chart.width) {\n        x = chart.width - size.width;\n      }\n\n      if (x < 0) {\n        x = 0;\n      }\n    }\n\n    if (yAlign === 'top') {\n      y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n      y -= size.height + paddingAndSize;\n    } else {\n      y -= size.height / 2;\n    }\n\n    if (yAlign === 'center') {\n      if (xAlign === 'left') {\n        x += paddingAndSize;\n      } else if (xAlign === 'right') {\n        x -= paddingAndSize;\n      }\n    } else if (xAlign === 'left') {\n      x -= radiusAndPadding;\n    } else if (xAlign === 'right') {\n      x += radiusAndPadding;\n    }\n\n    return {\n      x: x,\n      y: y\n    };\n  }\n\n  function getAlignedX(vm, align) {\n    return align === 'center' ? vm.x + vm.width / 2 : align === 'right' ? vm.x + vm.width - vm.xPadding : vm.x + vm.xPadding;\n  }\n  /**\n   * Helper to build before and after body lines\n   */\n\n\n  function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n  }\n\n  var exports$3 = core_element.extend({\n    initialize: function initialize() {\n      this._model = getBaseModel(this._options);\n      this._lastActive = [];\n    },\n    // Get the title\n    // Args are: (tooltipItem, data)\n    getTitle: function getTitle() {\n      var me = this;\n      var opts = me._options;\n      var callbacks = opts.callbacks;\n      var beforeTitle = callbacks.beforeTitle.apply(me, arguments);\n      var title = callbacks.title.apply(me, arguments);\n      var afterTitle = callbacks.afterTitle.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n      lines = pushOrConcat(lines, splitNewlines(title));\n      lines = pushOrConcat(lines, splitNewlines(afterTitle));\n      return lines;\n    },\n    // Args are: (tooltipItem, data)\n    getBeforeBody: function getBeforeBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.beforeBody.apply(this, arguments));\n    },\n    // Args are: (tooltipItem, data)\n    getBody: function getBody(tooltipItems, data) {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var bodyItems = [];\n      helpers$1.each(tooltipItems, function (tooltipItem) {\n        var bodyItem = {\n          before: [],\n          lines: [],\n          after: []\n        };\n        pushOrConcat(bodyItem.before, splitNewlines(callbacks.beforeLabel.call(me, tooltipItem, data)));\n        pushOrConcat(bodyItem.lines, callbacks.label.call(me, tooltipItem, data));\n        pushOrConcat(bodyItem.after, splitNewlines(callbacks.afterLabel.call(me, tooltipItem, data)));\n        bodyItems.push(bodyItem);\n      });\n      return bodyItems;\n    },\n    // Args are: (tooltipItem, data)\n    getAfterBody: function getAfterBody() {\n      return getBeforeAfterBodyLines(this._options.callbacks.afterBody.apply(this, arguments));\n    },\n    // Get the footer and beforeFooter and afterFooter lines\n    // Args are: (tooltipItem, data)\n    getFooter: function getFooter() {\n      var me = this;\n      var callbacks = me._options.callbacks;\n      var beforeFooter = callbacks.beforeFooter.apply(me, arguments);\n      var footer = callbacks.footer.apply(me, arguments);\n      var afterFooter = callbacks.afterFooter.apply(me, arguments);\n      var lines = [];\n      lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n      lines = pushOrConcat(lines, splitNewlines(footer));\n      lines = pushOrConcat(lines, splitNewlines(afterFooter));\n      return lines;\n    },\n    update: function update(changed) {\n      var me = this;\n      var opts = me._options; // Need to regenerate the model because its faster than using extend and it is necessary due to the optimization in Chart.Element.transition\n      // that does _view = _model if ease === 1. This causes the 2nd tooltip update to set properties in both the view and model at the same time\n      // which breaks any animations.\n\n      var existingModel = me._model;\n      var model = me._model = getBaseModel(opts);\n      var active = me._active;\n      var data = me._data; // In the case where active.length === 0 we need to keep these at existing values for good animations\n\n      var alignment = {\n        xAlign: existingModel.xAlign,\n        yAlign: existingModel.yAlign\n      };\n      var backgroundPoint = {\n        x: existingModel.x,\n        y: existingModel.y\n      };\n      var tooltipSize = {\n        width: existingModel.width,\n        height: existingModel.height\n      };\n      var tooltipPosition = {\n        x: existingModel.caretX,\n        y: existingModel.caretY\n      };\n      var i, len;\n\n      if (active.length) {\n        model.opacity = 1;\n        var labelColors = [];\n        var labelTextColors = [];\n        tooltipPosition = positioners[opts.position].call(me, active, me._eventPosition);\n        var tooltipItems = [];\n\n        for (i = 0, len = active.length; i < len; ++i) {\n          tooltipItems.push(createTooltipItem(active[i]));\n        } // If the user provided a filter function, use it to modify the tooltip items\n\n\n        if (opts.filter) {\n          tooltipItems = tooltipItems.filter(function (a) {\n            return opts.filter(a, data);\n          });\n        } // If the user provided a sorting function, use it to modify the tooltip items\n\n\n        if (opts.itemSort) {\n          tooltipItems = tooltipItems.sort(function (a, b) {\n            return opts.itemSort(a, b, data);\n          });\n        } // Determine colors for boxes\n\n\n        helpers$1.each(tooltipItems, function (tooltipItem) {\n          labelColors.push(opts.callbacks.labelColor.call(me, tooltipItem, me._chart));\n          labelTextColors.push(opts.callbacks.labelTextColor.call(me, tooltipItem, me._chart));\n        }); // Build the Text Lines\n\n        model.title = me.getTitle(tooltipItems, data);\n        model.beforeBody = me.getBeforeBody(tooltipItems, data);\n        model.body = me.getBody(tooltipItems, data);\n        model.afterBody = me.getAfterBody(tooltipItems, data);\n        model.footer = me.getFooter(tooltipItems, data); // Initial positioning and colors\n\n        model.x = tooltipPosition.x;\n        model.y = tooltipPosition.y;\n        model.caretPadding = opts.caretPadding;\n        model.labelColors = labelColors;\n        model.labelTextColors = labelTextColors; // data points\n\n        model.dataPoints = tooltipItems; // We need to determine alignment of the tooltip\n\n        tooltipSize = getTooltipSize(this, model);\n        alignment = determineAlignment(this, tooltipSize); // Final Size and Position\n\n        backgroundPoint = getBackgroundPoint(model, tooltipSize, alignment, me._chart);\n      } else {\n        model.opacity = 0;\n      }\n\n      model.xAlign = alignment.xAlign;\n      model.yAlign = alignment.yAlign;\n      model.x = backgroundPoint.x;\n      model.y = backgroundPoint.y;\n      model.width = tooltipSize.width;\n      model.height = tooltipSize.height; // Point where the caret on the tooltip points to\n\n      model.caretX = tooltipPosition.x;\n      model.caretY = tooltipPosition.y;\n      me._model = model;\n\n      if (changed && opts.custom) {\n        opts.custom.call(me, model);\n      }\n\n      return me;\n    },\n    drawCaret: function drawCaret(tooltipPoint, size) {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n      var caretPosition = this.getCaretPosition(tooltipPoint, size, vm);\n      ctx.lineTo(caretPosition.x1, caretPosition.y1);\n      ctx.lineTo(caretPosition.x2, caretPosition.y2);\n      ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    },\n    getCaretPosition: function getCaretPosition(tooltipPoint, size, vm) {\n      var x1, x2, x3, y1, y2, y3;\n      var caretSize = vm.caretSize;\n      var cornerRadius = vm.cornerRadius;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var ptX = tooltipPoint.x;\n      var ptY = tooltipPoint.y;\n      var width = size.width;\n      var height = size.height;\n\n      if (yAlign === 'center') {\n        y2 = ptY + height / 2;\n\n        if (xAlign === 'left') {\n          x1 = ptX;\n          x2 = x1 - caretSize;\n          x3 = x1;\n          y1 = y2 + caretSize;\n          y3 = y2 - caretSize;\n        } else {\n          x1 = ptX + width;\n          x2 = x1 + caretSize;\n          x3 = x1;\n          y1 = y2 - caretSize;\n          y3 = y2 + caretSize;\n        }\n      } else {\n        if (xAlign === 'left') {\n          x2 = ptX + cornerRadius + caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else if (xAlign === 'right') {\n          x2 = ptX + width - cornerRadius - caretSize;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        } else {\n          x2 = vm.caretX;\n          x1 = x2 - caretSize;\n          x3 = x2 + caretSize;\n        }\n\n        if (yAlign === 'top') {\n          y1 = ptY;\n          y2 = y1 - caretSize;\n          y3 = y1;\n        } else {\n          y1 = ptY + height;\n          y2 = y1 + caretSize;\n          y3 = y1; // invert drawing order\n\n          var tmp = x3;\n          x3 = x1;\n          x1 = tmp;\n        }\n      }\n\n      return {\n        x1: x1,\n        x2: x2,\n        x3: x3,\n        y1: y1,\n        y2: y2,\n        y3: y3\n      };\n    },\n    drawTitle: function drawTitle(pt, vm, ctx) {\n      var title = vm.title;\n\n      if (title.length) {\n        pt.x = getAlignedX(vm, vm._titleAlign);\n        ctx.textAlign = vm._titleAlign;\n        ctx.textBaseline = 'top';\n        var titleFontSize = vm.titleFontSize;\n        var titleSpacing = vm.titleSpacing;\n        ctx.fillStyle = vm.titleFontColor;\n        ctx.font = helpers$1.fontString(titleFontSize, vm._titleFontStyle, vm._titleFontFamily);\n        var i, len;\n\n        for (i = 0, len = title.length; i < len; ++i) {\n          ctx.fillText(title[i], pt.x, pt.y);\n          pt.y += titleFontSize + titleSpacing; // Line Height and spacing\n\n          if (i + 1 === title.length) {\n            pt.y += vm.titleMarginBottom - titleSpacing; // If Last, add margin, remove spacing\n          }\n        }\n      }\n    },\n    drawBody: function drawBody(pt, vm, ctx) {\n      var bodyFontSize = vm.bodyFontSize;\n      var bodySpacing = vm.bodySpacing;\n      var bodyAlign = vm._bodyAlign;\n      var body = vm.body;\n      var drawColorBoxes = vm.displayColors;\n      var labelColors = vm.labelColors;\n      var xLinePadding = 0;\n      var colorX = drawColorBoxes ? getAlignedX(vm, 'left') : 0;\n      var textColor;\n      ctx.textAlign = bodyAlign;\n      ctx.textBaseline = 'top';\n      ctx.font = helpers$1.fontString(bodyFontSize, vm._bodyFontStyle, vm._bodyFontFamily);\n      pt.x = getAlignedX(vm, bodyAlign); // Before Body\n\n      var fillLineOfText = function fillLineOfText(line) {\n        ctx.fillText(line, pt.x + xLinePadding, pt.y);\n        pt.y += bodyFontSize + bodySpacing;\n      }; // Before body lines\n\n\n      ctx.fillStyle = vm.bodyFontColor;\n      helpers$1.each(vm.beforeBody, fillLineOfText);\n      xLinePadding = drawColorBoxes && bodyAlign !== 'right' ? bodyAlign === 'center' ? bodyFontSize / 2 + 1 : bodyFontSize + 2 : 0; // Draw body lines now\n\n      helpers$1.each(body, function (bodyItem, i) {\n        textColor = vm.labelTextColors[i];\n        ctx.fillStyle = textColor;\n        helpers$1.each(bodyItem.before, fillLineOfText);\n        helpers$1.each(bodyItem.lines, function (line) {\n          // Draw Legend-like boxes if needed\n          if (drawColorBoxes) {\n            // Fill a white rect so that colours merge nicely if the opacity is < 1\n            ctx.fillStyle = vm.legendColorBackground;\n            ctx.fillRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Border\n\n            ctx.lineWidth = 1;\n            ctx.strokeStyle = labelColors[i].borderColor;\n            ctx.strokeRect(colorX, pt.y, bodyFontSize, bodyFontSize); // Inner square\n\n            ctx.fillStyle = labelColors[i].backgroundColor;\n            ctx.fillRect(colorX + 1, pt.y + 1, bodyFontSize - 2, bodyFontSize - 2);\n            ctx.fillStyle = textColor;\n          }\n\n          fillLineOfText(line);\n        });\n        helpers$1.each(bodyItem.after, fillLineOfText);\n      }); // Reset back to 0 for after body\n\n      xLinePadding = 0; // After body lines\n\n      helpers$1.each(vm.afterBody, fillLineOfText);\n      pt.y -= bodySpacing; // Remove last body spacing\n    },\n    drawFooter: function drawFooter(pt, vm, ctx) {\n      var footer = vm.footer;\n\n      if (footer.length) {\n        pt.x = getAlignedX(vm, vm._footerAlign);\n        pt.y += vm.footerMarginTop;\n        ctx.textAlign = vm._footerAlign;\n        ctx.textBaseline = 'top';\n        ctx.fillStyle = vm.footerFontColor;\n        ctx.font = helpers$1.fontString(vm.footerFontSize, vm._footerFontStyle, vm._footerFontFamily);\n        helpers$1.each(footer, function (line) {\n          ctx.fillText(line, pt.x, pt.y);\n          pt.y += vm.footerFontSize + vm.footerSpacing;\n        });\n      }\n    },\n    drawBackground: function drawBackground(pt, vm, ctx, tooltipSize) {\n      ctx.fillStyle = vm.backgroundColor;\n      ctx.strokeStyle = vm.borderColor;\n      ctx.lineWidth = vm.borderWidth;\n      var xAlign = vm.xAlign;\n      var yAlign = vm.yAlign;\n      var x = pt.x;\n      var y = pt.y;\n      var width = tooltipSize.width;\n      var height = tooltipSize.height;\n      var radius = vm.cornerRadius;\n      ctx.beginPath();\n      ctx.moveTo(x + radius, y);\n\n      if (yAlign === 'top') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width - radius, y);\n      ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n\n      if (yAlign === 'center' && xAlign === 'right') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + width, y + height - radius);\n      ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n\n      if (yAlign === 'bottom') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x + radius, y + height);\n      ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n\n      if (yAlign === 'center' && xAlign === 'left') {\n        this.drawCaret(pt, tooltipSize);\n      }\n\n      ctx.lineTo(x, y + radius);\n      ctx.quadraticCurveTo(x, y, x + radius, y);\n      ctx.closePath();\n      ctx.fill();\n\n      if (vm.borderWidth > 0) {\n        ctx.stroke();\n      }\n    },\n    draw: function draw() {\n      var ctx = this._chart.ctx;\n      var vm = this._view;\n\n      if (vm.opacity === 0) {\n        return;\n      }\n\n      var tooltipSize = {\n        width: vm.width,\n        height: vm.height\n      };\n      var pt = {\n        x: vm.x,\n        y: vm.y\n      }; // IE11/Edge does not like very small opacities, so snap to 0\n\n      var opacity = Math.abs(vm.opacity < 1e-3) ? 0 : vm.opacity; // Truthy/falsey value for empty tooltip\n\n      var hasTooltipContent = vm.title.length || vm.beforeBody.length || vm.body.length || vm.afterBody.length || vm.footer.length;\n\n      if (this._options.enabled && hasTooltipContent) {\n        ctx.save();\n        ctx.globalAlpha = opacity; // Draw Background\n\n        this.drawBackground(pt, vm, ctx, tooltipSize); // Draw Title, Body, and Footer\n\n        pt.y += vm.yPadding; // Titles\n\n        this.drawTitle(pt, vm, ctx); // Body\n\n        this.drawBody(pt, vm, ctx); // Footer\n\n        this.drawFooter(pt, vm, ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     * @returns {boolean} true if the tooltip changed\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me._options;\n      var changed = false;\n      me._lastActive = me._lastActive || []; // Find Active Elements for tooltips\n\n      if (e.type === 'mouseout') {\n        me._active = [];\n      } else {\n        me._active = me._chart.getElementsAtEventForMode(e, options.mode, options);\n      } // Remember Last Actives\n\n\n      changed = !helpers$1.arrayEquals(me._active, me._lastActive); // Only handle target event on tooltip change\n\n      if (changed) {\n        me._lastActive = me._active;\n\n        if (options.enabled || options.custom) {\n          me._eventPosition = {\n            x: e.x,\n            y: e.y\n          };\n          me.update(true);\n          me.pivot();\n        }\n      }\n\n      return changed;\n    }\n  });\n  /**\n   * @namespace Chart.Tooltip.positioners\n   */\n\n  var positioners_1 = positioners;\n  var core_tooltip = exports$3;\n  core_tooltip.positioners = positioners_1;\n  var valueOrDefault$8 = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    elements: {},\n    events: ['mousemove', 'mouseout', 'click', 'touchstart', 'touchmove'],\n    hover: {\n      onHover: null,\n      mode: 'nearest',\n      intersect: true,\n      animationDuration: 400\n    },\n    onClick: null,\n    maintainAspectRatio: true,\n    responsive: true,\n    responsiveAnimationDuration: 0\n  });\n  /**\n   * Recursively merge the given config objects representing the `scales` option\n   * by incorporating scale defaults in `xAxes` and `yAxes` array items, then\n   * returns a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeScaleConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        if (key === 'xAxes' || key === 'yAxes') {\n          var slen = source[key].length;\n          var i, type, scale;\n\n          if (!target[key]) {\n            target[key] = [];\n          }\n\n          for (i = 0; i < slen; ++i) {\n            scale = source[key][i];\n            type = valueOrDefault$8(scale.type, key === 'xAxes' ? 'category' : 'linear');\n\n            if (i >= target[key].length) {\n              target[key].push({});\n            }\n\n            if (!target[key][i].type || scale.type && scale.type !== target[key][i].type) {\n              // new/untyped scale or type changed: let's apply the new defaults\n              // then merge source scale to correctly overwrite the defaults.\n              helpers$1.merge(target[key][i], [core_scaleService.getScaleDefaults(type), scale]);\n            } else {\n              // scales type are the same\n              helpers$1.merge(target[key][i], scale);\n            }\n          }\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n  /**\n   * Recursively merge the given config objects as the root options by handling\n   * default scale options for the `scales` and `scale` properties, then returns\n   * a deep copy of the result, thus doesn't alter inputs.\n   */\n\n\n  function mergeConfig()\n  /* config objects ... */\n  {\n    return helpers$1.merge({}, [].slice.call(arguments), {\n      merger: function merger(key, target, source, options) {\n        var tval = target[key] || {};\n        var sval = source[key];\n\n        if (key === 'scales') {\n          // scale config merging is complex. Add our own function here for that\n          target[key] = mergeScaleConfig(tval, sval);\n        } else if (key === 'scale') {\n          // used in polar area & radar charts since there is only one scale\n          target[key] = helpers$1.merge(tval, [core_scaleService.getScaleDefaults(sval.type), sval]);\n        } else {\n          helpers$1._merger(key, target, source, options);\n        }\n      }\n    });\n  }\n\n  function initConfig(config) {\n    config = config || {}; // Do NOT use mergeConfig for the data object because this method merges arrays\n    // and so would change references to labels and datasets, preventing data updates.\n\n    var data = config.data = config.data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    config.options = mergeConfig(core_defaults.global, core_defaults[config.type], config.options || {});\n    return config;\n  }\n\n  function updateConfig(chart) {\n    var newOptions = chart.options;\n    helpers$1.each(chart.scales, function (scale) {\n      core_layouts.removeBox(chart, scale);\n    });\n    newOptions = mergeConfig(core_defaults.global, core_defaults[chart.config.type], newOptions);\n    chart.options = chart.config.options = newOptions;\n    chart.ensureScalesHaveIDs();\n    chart.buildOrUpdateScales(); // Tooltip\n\n    chart.tooltip._options = newOptions.tooltips;\n    chart.tooltip.initialize();\n  }\n\n  function positionIsHorizontal(position) {\n    return position === 'top' || position === 'bottom';\n  }\n\n  var Chart = function Chart(item, config) {\n    this.construct(item, config);\n    return this;\n  };\n\n  helpers$1.extend(Chart.prototype,\n  /** @lends Chart */\n  {\n    /**\n     * @private\n     */\n    construct: function construct(item, config) {\n      var me = this;\n      config = initConfig(config);\n      var context = platform.acquireContext(item, config);\n      var canvas = context && context.canvas;\n      var height = canvas && canvas.height;\n      var width = canvas && canvas.width;\n      me.id = helpers$1.uid();\n      me.ctx = context;\n      me.canvas = canvas;\n      me.config = config;\n      me.width = width;\n      me.height = height;\n      me.aspectRatio = height ? width / height : null;\n      me.options = config.options;\n      me._bufferedRender = false;\n      /**\n       * Provided for backward compatibility, Chart and Chart.Controller have been merged,\n       * the \"instance\" still need to be defined since it might be called from plugins.\n       * @prop Chart#chart\n       * @deprecated since version 2.6.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      me.chart = me;\n      me.controller = me; // chart.chart.controller #inception\n      // Add the chart instance to the global namespace\n\n      Chart.instances[me.id] = me; // Define alias to the config data: `chart.data === chart.config.data`\n\n      Object.defineProperty(me, 'data', {\n        get: function get() {\n          return me.config.data;\n        },\n        set: function set(value) {\n          me.config.data = value;\n        }\n      });\n\n      if (!context || !canvas) {\n        // The given item is not a compatible context2d element, let's return before finalizing\n        // the chart initialization but after setting basic chart / controller properties that\n        // can help to figure out that the chart is not valid (e.g chart.canvas !== null);\n        // https://github.com/chartjs/Chart.js/issues/2807\n        console.error(\"Failed to create chart: can't acquire context from the given item\");\n        return;\n      }\n\n      me.initialize();\n      me.update();\n    },\n\n    /**\n     * @private\n     */\n    initialize: function initialize() {\n      var me = this; // Before init plugin notification\n\n      core_plugins.notify(me, 'beforeInit');\n      helpers$1.retinaScale(me, me.options.devicePixelRatio);\n      me.bindEvents();\n\n      if (me.options.responsive) {\n        // Initial resize before chart draws (must be silent to preserve initial animations).\n        me.resize(true);\n      } // Make sure scales have IDs and are built before we build any controllers.\n\n\n      me.ensureScalesHaveIDs();\n      me.buildOrUpdateScales();\n      me.initToolTip(); // After init plugin notification\n\n      core_plugins.notify(me, 'afterInit');\n      return me;\n    },\n    clear: function clear() {\n      helpers$1.canvas.clear(this);\n      return this;\n    },\n    stop: function stop() {\n      // Stops any current animation loop occurring\n      core_animations.cancelAnimation(this);\n      return this;\n    },\n    resize: function resize(silent) {\n      var me = this;\n      var options = me.options;\n      var canvas = me.canvas;\n      var aspectRatio = options.maintainAspectRatio && me.aspectRatio || null; // the canvas render width and height will be casted to integers so make sure that\n      // the canvas display style uses the same integer values to avoid blurring effect.\n      // Set to 0 instead of canvas.size because the size defaults to 300x150 if the element is collapsed\n\n      var newWidth = Math.max(0, Math.floor(helpers$1.getMaximumWidth(canvas)));\n      var newHeight = Math.max(0, Math.floor(aspectRatio ? newWidth / aspectRatio : helpers$1.getMaximumHeight(canvas)));\n\n      if (me.width === newWidth && me.height === newHeight) {\n        return;\n      }\n\n      canvas.width = me.width = newWidth;\n      canvas.height = me.height = newHeight;\n      canvas.style.width = newWidth + 'px';\n      canvas.style.height = newHeight + 'px';\n      helpers$1.retinaScale(me, options.devicePixelRatio);\n\n      if (!silent) {\n        // Notify any plugins about the resize\n        var newSize = {\n          width: newWidth,\n          height: newHeight\n        };\n        core_plugins.notify(me, 'resize', [newSize]); // Notify of resize\n\n        if (options.onResize) {\n          options.onResize(me, newSize);\n        }\n\n        me.stop();\n        me.update({\n          duration: options.responsiveAnimationDuration\n        });\n      }\n    },\n    ensureScalesHaveIDs: function ensureScalesHaveIDs() {\n      var options = this.options;\n      var scalesOptions = options.scales || {};\n      var scaleOptions = options.scale;\n      helpers$1.each(scalesOptions.xAxes, function (xAxisOptions, index) {\n        xAxisOptions.id = xAxisOptions.id || 'x-axis-' + index;\n      });\n      helpers$1.each(scalesOptions.yAxes, function (yAxisOptions, index) {\n        yAxisOptions.id = yAxisOptions.id || 'y-axis-' + index;\n      });\n\n      if (scaleOptions) {\n        scaleOptions.id = scaleOptions.id || 'scale';\n      }\n    },\n\n    /**\n     * Builds a map of scale ID to scale object for future lookup.\n     */\n    buildOrUpdateScales: function buildOrUpdateScales() {\n      var me = this;\n      var options = me.options;\n      var scales = me.scales || {};\n      var items = [];\n      var updated = Object.keys(scales).reduce(function (obj, id) {\n        obj[id] = false;\n        return obj;\n      }, {});\n\n      if (options.scales) {\n        items = items.concat((options.scales.xAxes || []).map(function (xAxisOptions) {\n          return {\n            options: xAxisOptions,\n            dtype: 'category',\n            dposition: 'bottom'\n          };\n        }), (options.scales.yAxes || []).map(function (yAxisOptions) {\n          return {\n            options: yAxisOptions,\n            dtype: 'linear',\n            dposition: 'left'\n          };\n        }));\n      }\n\n      if (options.scale) {\n        items.push({\n          options: options.scale,\n          dtype: 'radialLinear',\n          isDefault: true,\n          dposition: 'chartArea'\n        });\n      }\n\n      helpers$1.each(items, function (item) {\n        var scaleOptions = item.options;\n        var id = scaleOptions.id;\n        var scaleType = valueOrDefault$8(scaleOptions.type, item.dtype);\n\n        if (positionIsHorizontal(scaleOptions.position) !== positionIsHorizontal(item.dposition)) {\n          scaleOptions.position = item.dposition;\n        }\n\n        updated[id] = true;\n        var scale = null;\n\n        if (id in scales && scales[id].type === scaleType) {\n          scale = scales[id];\n          scale.options = scaleOptions;\n          scale.ctx = me.ctx;\n          scale.chart = me;\n        } else {\n          var scaleClass = core_scaleService.getScaleConstructor(scaleType);\n\n          if (!scaleClass) {\n            return;\n          }\n\n          scale = new scaleClass({\n            id: id,\n            type: scaleType,\n            options: scaleOptions,\n            ctx: me.ctx,\n            chart: me\n          });\n          scales[scale.id] = scale;\n        }\n\n        scale.mergeTicksOptions(); // TODO(SB): I think we should be able to remove this custom case (options.scale)\n        // and consider it as a regular scale part of the \"scales\"\" map only! This would\n        // make the logic easier and remove some useless? custom code.\n\n        if (item.isDefault) {\n          me.scale = scale;\n        }\n      }); // clear up discarded scales\n\n      helpers$1.each(updated, function (hasUpdated, id) {\n        if (!hasUpdated) {\n          delete scales[id];\n        }\n      });\n      me.scales = scales;\n      core_scaleService.addScalesToLayout(this);\n    },\n    buildOrUpdateControllers: function buildOrUpdateControllers() {\n      var me = this;\n      var newControllers = [];\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        var meta = me.getDatasetMeta(datasetIndex);\n        var type = dataset.type || me.config.type;\n\n        if (meta.type && meta.type !== type) {\n          me.destroyDatasetMeta(datasetIndex);\n          meta = me.getDatasetMeta(datasetIndex);\n        }\n\n        meta.type = type;\n\n        if (meta.controller) {\n          meta.controller.updateIndex(datasetIndex);\n          meta.controller.linkScales();\n        } else {\n          var ControllerClass = controllers[meta.type];\n\n          if (ControllerClass === undefined) {\n            throw new Error('\"' + meta.type + '\" is not a chart type.');\n          }\n\n          meta.controller = new ControllerClass(me, datasetIndex);\n          newControllers.push(meta.controller);\n        }\n      }, me);\n      return newControllers;\n    },\n\n    /**\n     * Reset the elements of all datasets\n     * @private\n     */\n    resetElements: function resetElements() {\n      var me = this;\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.reset();\n      }, me);\n    },\n\n    /**\n    * Resets the chart back to it's state before the initial animation\n    */\n    reset: function reset() {\n      this.resetElements();\n      this.tooltip.initialize();\n    },\n    update: function update(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      updateConfig(me); // plugins options references might have change, let's invalidate the cache\n      // https://github.com/chartjs/Chart.js/issues/5111#issuecomment-355934167\n\n      core_plugins._invalidate(me);\n\n      if (core_plugins.notify(me, 'beforeUpdate') === false) {\n        return;\n      } // In case the entire data object changed\n\n\n      me.tooltip._data = me.data; // Make sure dataset controllers are updated and new controllers are reset\n\n      var newControllers = me.buildOrUpdateControllers(); // Make sure all dataset controllers have correct meta data counts\n\n      helpers$1.each(me.data.datasets, function (dataset, datasetIndex) {\n        me.getDatasetMeta(datasetIndex).controller.buildOrUpdateElements();\n      }, me);\n      me.updateLayout(); // Can only reset the new controllers after the scales have been updated\n\n      if (me.options.animation && me.options.animation.duration) {\n        helpers$1.each(newControllers, function (controller) {\n          controller.reset();\n        });\n      }\n\n      me.updateDatasets(); // Need to reset tooltip in case it is displayed with elements that are removed\n      // after update.\n\n      me.tooltip.initialize(); // Last active contains items that were previously in the tooltip.\n      // When we reset the tooltip, we need to clear it\n\n      me.lastActive = []; // Do this before render so that any plugins that need final scale updates can use it\n\n      core_plugins.notify(me, 'afterUpdate');\n\n      if (me._bufferedRender) {\n        me._bufferedRequest = {\n          duration: config.duration,\n          easing: config.easing,\n          lazy: config.lazy\n        };\n      } else {\n        me.render(config);\n      }\n    },\n\n    /**\n     * Updates the chart layout unless a plugin returns `false` to the `beforeLayout`\n     * hook, in which case, plugins will not be called on `afterLayout`.\n     * @private\n     */\n    updateLayout: function updateLayout() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeLayout') === false) {\n        return;\n      }\n\n      core_layouts.update(this, this.width, this.height);\n      /**\n       * Provided for backward compatibility, use `afterLayout` instead.\n       * @method IPlugin#afterScaleUpdate\n       * @deprecated since version 2.5.0\n       * @todo remove at version 3\n       * @private\n       */\n\n      core_plugins.notify(me, 'afterScaleUpdate');\n      core_plugins.notify(me, 'afterLayout');\n    },\n\n    /**\n     * Updates all datasets unless a plugin returns `false` to the `beforeDatasetsUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetsUpdate`.\n     * @private\n     */\n    updateDatasets: function updateDatasets() {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsUpdate') === false) {\n        return;\n      }\n\n      for (var i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.updateDataset(i);\n      }\n\n      core_plugins.notify(me, 'afterDatasetsUpdate');\n    },\n\n    /**\n     * Updates dataset at index unless a plugin returns `false` to the `beforeDatasetUpdate`\n     * hook, in which case, plugins will not be called on `afterDatasetUpdate`.\n     * @private\n     */\n    updateDataset: function updateDataset(index) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetUpdate', [args]) === false) {\n        return;\n      }\n\n      meta.controller.update();\n      core_plugins.notify(me, 'afterDatasetUpdate', [args]);\n    },\n    render: function render(config) {\n      var me = this;\n\n      if (!config || typeof config !== 'object') {\n        // backwards compatibility\n        config = {\n          duration: config,\n          lazy: arguments[1]\n        };\n      }\n\n      var animationOptions = me.options.animation;\n      var duration = valueOrDefault$8(config.duration, animationOptions && animationOptions.duration);\n      var lazy = config.lazy;\n\n      if (core_plugins.notify(me, 'beforeRender') === false) {\n        return;\n      }\n\n      var onComplete = function onComplete(animation) {\n        core_plugins.notify(me, 'afterRender');\n        helpers$1.callback(animationOptions && animationOptions.onComplete, [animation], me);\n      };\n\n      if (animationOptions && duration) {\n        var animation = new core_animation({\n          numSteps: duration / 16.66,\n          // 60 fps\n          easing: config.easing || animationOptions.easing,\n          render: function render(chart, animationObject) {\n            var easingFunction = helpers$1.easing.effects[animationObject.easing];\n            var currentStep = animationObject.currentStep;\n            var stepDecimal = currentStep / animationObject.numSteps;\n            chart.draw(easingFunction(stepDecimal), stepDecimal, currentStep);\n          },\n          onAnimationProgress: animationOptions.onProgress,\n          onAnimationComplete: onComplete\n        });\n        core_animations.addAnimation(me, animation, duration, lazy);\n      } else {\n        me.draw(); // See https://github.com/chartjs/Chart.js/issues/3781\n\n        onComplete(new core_animation({\n          numSteps: 0,\n          chart: me\n        }));\n      }\n\n      return me;\n    },\n    draw: function draw(easingValue) {\n      var me = this;\n      me.clear();\n\n      if (helpers$1.isNullOrUndef(easingValue)) {\n        easingValue = 1;\n      }\n\n      me.transition(easingValue);\n\n      if (me.width <= 0 || me.height <= 0) {\n        return;\n      }\n\n      if (core_plugins.notify(me, 'beforeDraw', [easingValue]) === false) {\n        return;\n      } // Draw all the scales\n\n\n      helpers$1.each(me.boxes, function (box) {\n        box.draw(me.chartArea);\n      }, me);\n      me.drawDatasets(easingValue);\n\n      me._drawTooltip(easingValue);\n\n      core_plugins.notify(me, 'afterDraw', [easingValue]);\n    },\n\n    /**\n     * @private\n     */\n    transition: function transition(easingValue) {\n      var me = this;\n\n      for (var i = 0, ilen = (me.data.datasets || []).length; i < ilen; ++i) {\n        if (me.isDatasetVisible(i)) {\n          me.getDatasetMeta(i).controller.transition(easingValue);\n        }\n      }\n\n      me.tooltip.transition(easingValue);\n    },\n\n    /**\n     * Draws all datasets unless a plugin returns `false` to the `beforeDatasetsDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetsDraw`.\n     * @private\n     */\n    drawDatasets: function drawDatasets(easingValue) {\n      var me = this;\n\n      if (core_plugins.notify(me, 'beforeDatasetsDraw', [easingValue]) === false) {\n        return;\n      } // Draw datasets reversed to support proper line stacking\n\n\n      for (var i = (me.data.datasets || []).length - 1; i >= 0; --i) {\n        if (me.isDatasetVisible(i)) {\n          me.drawDataset(i, easingValue);\n        }\n      }\n\n      core_plugins.notify(me, 'afterDatasetsDraw', [easingValue]);\n    },\n\n    /**\n     * Draws dataset at index unless a plugin returns `false` to the `beforeDatasetDraw`\n     * hook, in which case, plugins will not be called on `afterDatasetDraw`.\n     * @private\n     */\n    drawDataset: function drawDataset(index, easingValue) {\n      var me = this;\n      var meta = me.getDatasetMeta(index);\n      var args = {\n        meta: meta,\n        index: index,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeDatasetDraw', [args]) === false) {\n        return;\n      }\n\n      meta.controller.draw(easingValue);\n      core_plugins.notify(me, 'afterDatasetDraw', [args]);\n    },\n\n    /**\n     * Draws tooltip unless a plugin returns `false` to the `beforeTooltipDraw`\n     * hook, in which case, plugins will not be called on `afterTooltipDraw`.\n     * @private\n     */\n    _drawTooltip: function _drawTooltip(easingValue) {\n      var me = this;\n      var tooltip = me.tooltip;\n      var args = {\n        tooltip: tooltip,\n        easingValue: easingValue\n      };\n\n      if (core_plugins.notify(me, 'beforeTooltipDraw', [args]) === false) {\n        return;\n      }\n\n      tooltip.draw();\n      core_plugins.notify(me, 'afterTooltipDraw', [args]);\n    },\n\n    /**\n     * Get the single element that was clicked on\n     * @return An object containing the dataset index and element index of the matching element. Also contains the rectangle that was draw\n     */\n    getElementAtEvent: function getElementAtEvent(e) {\n      return core_interaction.modes.single(this, e);\n    },\n    getElementsAtEvent: function getElementsAtEvent(e) {\n      return core_interaction.modes.label(this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtXAxis: function getElementsAtXAxis(e) {\n      return core_interaction.modes['x-axis'](this, e, {\n        intersect: true\n      });\n    },\n    getElementsAtEventForMode: function getElementsAtEventForMode(e, mode, options) {\n      var method = core_interaction.modes[mode];\n\n      if (typeof method === 'function') {\n        return method(this, e, options);\n      }\n\n      return [];\n    },\n    getDatasetAtEvent: function getDatasetAtEvent(e) {\n      return core_interaction.modes.dataset(this, e, {\n        intersect: true\n      });\n    },\n    getDatasetMeta: function getDatasetMeta(datasetIndex) {\n      var me = this;\n      var dataset = me.data.datasets[datasetIndex];\n\n      if (!dataset._meta) {\n        dataset._meta = {};\n      }\n\n      var meta = dataset._meta[me.id];\n\n      if (!meta) {\n        meta = dataset._meta[me.id] = {\n          type: null,\n          data: [],\n          dataset: null,\n          controller: null,\n          hidden: null,\n          // See isDatasetVisible() comment\n          xAxisID: null,\n          yAxisID: null\n        };\n      }\n\n      return meta;\n    },\n    getVisibleDatasetCount: function getVisibleDatasetCount() {\n      var count = 0;\n\n      for (var i = 0, ilen = this.data.datasets.length; i < ilen; ++i) {\n        if (this.isDatasetVisible(i)) {\n          count++;\n        }\n      }\n\n      return count;\n    },\n    isDatasetVisible: function isDatasetVisible(datasetIndex) {\n      var meta = this.getDatasetMeta(datasetIndex); // meta.hidden is a per chart dataset hidden flag override with 3 states: if true or false,\n      // the dataset.hidden value is ignored, else if null, the dataset hidden state is returned.\n\n      return typeof meta.hidden === 'boolean' ? !meta.hidden : !this.data.datasets[datasetIndex].hidden;\n    },\n    generateLegend: function generateLegend() {\n      return this.options.legendCallback(this);\n    },\n\n    /**\n     * @private\n     */\n    destroyDatasetMeta: function destroyDatasetMeta(datasetIndex) {\n      var id = this.id;\n      var dataset = this.data.datasets[datasetIndex];\n      var meta = dataset._meta && dataset._meta[id];\n\n      if (meta) {\n        meta.controller.destroy();\n        delete dataset._meta[id];\n      }\n    },\n    destroy: function destroy() {\n      var me = this;\n      var canvas = me.canvas;\n      var i, ilen;\n      me.stop(); // dataset controllers need to cleanup associated data\n\n      for (i = 0, ilen = me.data.datasets.length; i < ilen; ++i) {\n        me.destroyDatasetMeta(i);\n      }\n\n      if (canvas) {\n        me.unbindEvents();\n        helpers$1.canvas.clear(me);\n        platform.releaseContext(me.ctx);\n        me.canvas = null;\n        me.ctx = null;\n      }\n\n      core_plugins.notify(me, 'destroy');\n      delete Chart.instances[me.id];\n    },\n    toBase64Image: function toBase64Image() {\n      return this.canvas.toDataURL.apply(this.canvas, arguments);\n    },\n    initToolTip: function initToolTip() {\n      var me = this;\n      me.tooltip = new core_tooltip({\n        _chart: me,\n        _chartInstance: me,\n        // deprecated, backward compatibility\n        _data: me.data,\n        _options: me.options.tooltips\n      }, me);\n    },\n\n    /**\n     * @private\n     */\n    bindEvents: function bindEvents() {\n      var me = this;\n      var listeners = me._listeners = {};\n\n      var listener = function listener() {\n        me.eventHandler.apply(me, arguments);\n      };\n\n      helpers$1.each(me.options.events, function (type) {\n        platform.addEventListener(me, type, listener);\n        listeners[type] = listener;\n      }); // Elements used to detect size change should not be injected for non responsive charts.\n      // See https://github.com/chartjs/Chart.js/issues/2210\n\n      if (me.options.responsive) {\n        listener = function listener() {\n          me.resize();\n        };\n\n        platform.addEventListener(me, 'resize', listener);\n        listeners.resize = listener;\n      }\n    },\n\n    /**\n     * @private\n     */\n    unbindEvents: function unbindEvents() {\n      var me = this;\n      var listeners = me._listeners;\n\n      if (!listeners) {\n        return;\n      }\n\n      delete me._listeners;\n      helpers$1.each(listeners, function (listener, type) {\n        platform.removeEventListener(me, type, listener);\n      });\n    },\n    updateHoverStyle: function updateHoverStyle(elements, mode, enabled) {\n      var method = enabled ? 'setHoverStyle' : 'removeHoverStyle';\n      var element, i, ilen;\n\n      for (i = 0, ilen = elements.length; i < ilen; ++i) {\n        element = elements[i];\n\n        if (element) {\n          this.getDatasetMeta(element._datasetIndex).controller[method](element);\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    eventHandler: function eventHandler(e) {\n      var me = this;\n      var tooltip = me.tooltip;\n\n      if (core_plugins.notify(me, 'beforeEvent', [e]) === false) {\n        return;\n      } // Buffer any update calls so that renders do not occur\n\n\n      me._bufferedRender = true;\n      me._bufferedRequest = null;\n      var changed = me.handleEvent(e); // for smooth tooltip animations issue #4989\n      // the tooltip should be the source of change\n      // Animation check workaround:\n      // tooltip._start will be null when tooltip isn't animating\n\n      if (tooltip) {\n        changed = tooltip._start ? tooltip.handleEvent(e) : changed | tooltip.handleEvent(e);\n      }\n\n      core_plugins.notify(me, 'afterEvent', [e]);\n      var bufferedRequest = me._bufferedRequest;\n\n      if (bufferedRequest) {\n        // If we have an update that was triggered, we need to do a normal render\n        me.render(bufferedRequest);\n      } else if (changed && !me.animating) {\n        // If entering, leaving, or changing elements, animate the change via pivot\n        me.stop(); // We only need to render at this point. Updating will cause scales to be\n        // recomputed generating flicker & using more memory than necessary.\n\n        me.render({\n          duration: me.options.hover.animationDuration,\n          lazy: true\n        });\n      }\n\n      me._bufferedRender = false;\n      me._bufferedRequest = null;\n      return me;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event the event to handle\n     * @return {boolean} true if the chart needs to re-render\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var options = me.options || {};\n      var hoverOptions = options.hover;\n      var changed = false;\n      me.lastActive = me.lastActive || []; // Find Active Elements for hover and tooltips\n\n      if (e.type === 'mouseout') {\n        me.active = [];\n      } else {\n        me.active = me.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions);\n      } // Invoke onHover hook\n      // Need to call with native event here to not break backwards compatibility\n\n\n      helpers$1.callback(options.onHover || options.hover.onHover, [e.native, me.active], me);\n\n      if (e.type === 'mouseup' || e.type === 'click') {\n        if (options.onClick) {\n          // Use e.native here for backwards compatibility\n          options.onClick.call(me, e.native, me.active);\n        }\n      } // Remove styling for last active (even if it may still be active)\n\n\n      if (me.lastActive.length) {\n        me.updateHoverStyle(me.lastActive, hoverOptions.mode, false);\n      } // Built in hover styling\n\n\n      if (me.active.length && hoverOptions.mode) {\n        me.updateHoverStyle(me.active, hoverOptions.mode, true);\n      }\n\n      changed = !helpers$1.arrayEquals(me.active, me.lastActive); // Remember Last Actives\n\n      me.lastActive = me.active;\n      return changed;\n    }\n  });\n  /**\n   * NOTE(SB) We actually don't use this container anymore but we need to keep it\n   * for backward compatibility. Though, it can still be useful for plugins that\n   * would need to work on multiple charts?!\n   */\n\n  Chart.instances = {};\n  var core_controller = Chart; // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, use Chart instead.\n   * @class Chart.Controller\n   * @deprecated since version 2.6\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.Controller = Chart;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  Chart.types = {};\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.configMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.configMerge = mergeConfig;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.helpers.scaleMerge\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  helpers$1.scaleMerge = mergeScaleConfig;\n\n  var core_helpers = function core_helpers() {\n    // -- Basic js utility methods\n    helpers$1.where = function (collection, filterCallback) {\n      if (helpers$1.isArray(collection) && Array.prototype.filter) {\n        return collection.filter(filterCallback);\n      }\n\n      var filtered = [];\n      helpers$1.each(collection, function (item) {\n        if (filterCallback(item)) {\n          filtered.push(item);\n        }\n      });\n      return filtered;\n    };\n\n    helpers$1.findIndex = Array.prototype.findIndex ? function (array, callback, scope) {\n      return array.findIndex(callback, scope);\n    } : function (array, callback, scope) {\n      scope = scope === undefined ? array : scope;\n\n      for (var i = 0, ilen = array.length; i < ilen; ++i) {\n        if (callback.call(scope, array[i], i, array)) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n\n    helpers$1.findNextWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to start of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = -1;\n      }\n\n      for (var i = startIndex + 1; i < arrayToSearch.length; i++) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    };\n\n    helpers$1.findPreviousWhere = function (arrayToSearch, filterCallback, startIndex) {\n      // Default to end of the array\n      if (helpers$1.isNullOrUndef(startIndex)) {\n        startIndex = arrayToSearch.length;\n      }\n\n      for (var i = startIndex - 1; i >= 0; i--) {\n        var currentItem = arrayToSearch[i];\n\n        if (filterCallback(currentItem)) {\n          return currentItem;\n        }\n      }\n    }; // -- Math methods\n\n\n    helpers$1.isNumber = function (n) {\n      return !isNaN(parseFloat(n)) && isFinite(n);\n    };\n\n    helpers$1.almostEquals = function (x, y, epsilon) {\n      return Math.abs(x - y) < epsilon;\n    };\n\n    helpers$1.almostWhole = function (x, epsilon) {\n      var rounded = Math.round(x);\n      return rounded - epsilon < x && rounded + epsilon > x;\n    };\n\n    helpers$1.max = function (array) {\n      return array.reduce(function (max, value) {\n        if (!isNaN(value)) {\n          return Math.max(max, value);\n        }\n\n        return max;\n      }, Number.NEGATIVE_INFINITY);\n    };\n\n    helpers$1.min = function (array) {\n      return array.reduce(function (min, value) {\n        if (!isNaN(value)) {\n          return Math.min(min, value);\n        }\n\n        return min;\n      }, Number.POSITIVE_INFINITY);\n    };\n\n    helpers$1.sign = Math.sign ? function (x) {\n      return Math.sign(x);\n    } : function (x) {\n      x = +x; // convert to a number\n\n      if (x === 0 || isNaN(x)) {\n        return x;\n      }\n\n      return x > 0 ? 1 : -1;\n    };\n    helpers$1.log10 = Math.log10 ? function (x) {\n      return Math.log10(x);\n    } : function (x) {\n      var exponent = Math.log(x) * Math.LOG10E; // Math.LOG10E = 1 / Math.LN10.\n      // Check for whole powers of 10,\n      // which due to floating point rounding error should be corrected.\n\n      var powerOf10 = Math.round(exponent);\n      var isPowerOf10 = x === Math.pow(10, powerOf10);\n      return isPowerOf10 ? powerOf10 : exponent;\n    };\n\n    helpers$1.toRadians = function (degrees) {\n      return degrees * (Math.PI / 180);\n    };\n\n    helpers$1.toDegrees = function (radians) {\n      return radians * (180 / Math.PI);\n    };\n    /**\n     * Returns the number of decimal places\n     * i.e. the number of digits after the decimal point, of the value of this Number.\n     * @param {number} x - A number.\n     * @returns {number} The number of decimal places.\n     * @private\n     */\n\n\n    helpers$1._decimalPlaces = function (x) {\n      if (!helpers$1.isFinite(x)) {\n        return;\n      }\n\n      var e = 1;\n      var p = 0;\n\n      while (Math.round(x * e) / e !== x) {\n        e *= 10;\n        p++;\n      }\n\n      return p;\n    }; // Gets the angle from vertical upright to the point about a centre.\n\n\n    helpers$1.getAngleFromPoint = function (centrePoint, anglePoint) {\n      var distanceFromXCenter = anglePoint.x - centrePoint.x;\n      var distanceFromYCenter = anglePoint.y - centrePoint.y;\n      var radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n      var angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n\n      if (angle < -0.5 * Math.PI) {\n        angle += 2.0 * Math.PI; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n      }\n\n      return {\n        angle: angle,\n        distance: radialDistanceFromCenter\n      };\n    };\n\n    helpers$1.distanceBetweenPoints = function (pt1, pt2) {\n      return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n    };\n    /**\n     * Provided for backward compatibility, not available anymore\n     * @function Chart.helpers.aliasPixel\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     */\n\n\n    helpers$1.aliasPixel = function (pixelWidth) {\n      return pixelWidth % 2 === 0 ? 0 : 0.5;\n    };\n    /**\n     * Returns the aligned pixel value to avoid anti-aliasing blur\n     * @param {Chart} chart - The chart instance.\n     * @param {number} pixel - A pixel value.\n     * @param {number} width - The width of the element.\n     * @returns {number} The aligned pixel value.\n     * @private\n     */\n\n\n    helpers$1._alignPixel = function (chart, pixel, width) {\n      var devicePixelRatio = chart.currentDevicePixelRatio;\n      var halfWidth = width / 2;\n      return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n    };\n\n    helpers$1.splineCurve = function (firstPoint, middlePoint, afterPoint, t) {\n      // Props to Rob Spencer at scaled innovation for his post on splining between points\n      // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n      // This function must also respect \"skipped\" points\n      var previous = firstPoint.skip ? middlePoint : firstPoint;\n      var current = middlePoint;\n      var next = afterPoint.skip ? middlePoint : afterPoint;\n      var d01 = Math.sqrt(Math.pow(current.x - previous.x, 2) + Math.pow(current.y - previous.y, 2));\n      var d12 = Math.sqrt(Math.pow(next.x - current.x, 2) + Math.pow(next.y - current.y, 2));\n      var s01 = d01 / (d01 + d12);\n      var s12 = d12 / (d01 + d12); // If all points are the same, s01 & s02 will be inf\n\n      s01 = isNaN(s01) ? 0 : s01;\n      s12 = isNaN(s12) ? 0 : s12;\n      var fa = t * s01; // scaling factor for triangle Ta\n\n      var fb = t * s12;\n      return {\n        previous: {\n          x: current.x - fa * (next.x - previous.x),\n          y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n          x: current.x + fb * (next.x - previous.x),\n          y: current.y + fb * (next.y - previous.y)\n        }\n      };\n    };\n\n    helpers$1.EPSILON = Number.EPSILON || 1e-14;\n\n    helpers$1.splineCurveMonotone = function (points) {\n      // This function calculates Bézier control points in a similar way than |splineCurve|,\n      // but preserves monotonicity of the provided data and ensures no local extremums are added\n      // between the dataset discrete points due to the interpolation.\n      // See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n      var pointsWithTangents = (points || []).map(function (point) {\n        return {\n          model: point._model,\n          deltaK: 0,\n          mK: 0\n        };\n      }); // Calculate slopes (deltaK) and initialize tangents (mK)\n\n      var pointsLen = pointsWithTangents.length;\n      var i, pointBefore, pointCurrent, pointAfter;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointAfter && !pointAfter.model.skip) {\n          var slopeDeltaX = pointAfter.model.x - pointCurrent.model.x; // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n\n          pointCurrent.deltaK = slopeDeltaX !== 0 ? (pointAfter.model.y - pointCurrent.model.y) / slopeDeltaX : 0;\n        }\n\n        if (!pointBefore || pointBefore.model.skip) {\n          pointCurrent.mK = pointCurrent.deltaK;\n        } else if (!pointAfter || pointAfter.model.skip) {\n          pointCurrent.mK = pointBefore.deltaK;\n        } else if (this.sign(pointBefore.deltaK) !== this.sign(pointCurrent.deltaK)) {\n          pointCurrent.mK = 0;\n        } else {\n          pointCurrent.mK = (pointBefore.deltaK + pointCurrent.deltaK) / 2;\n        }\n      } // Adjust tangents to ensure monotonic properties\n\n\n      var alphaK, betaK, tauK, squaredMagnitude;\n\n      for (i = 0; i < pointsLen - 1; ++i) {\n        pointCurrent = pointsWithTangents[i];\n        pointAfter = pointsWithTangents[i + 1];\n\n        if (pointCurrent.model.skip || pointAfter.model.skip) {\n          continue;\n        }\n\n        if (helpers$1.almostEquals(pointCurrent.deltaK, 0, this.EPSILON)) {\n          pointCurrent.mK = pointAfter.mK = 0;\n          continue;\n        }\n\n        alphaK = pointCurrent.mK / pointCurrent.deltaK;\n        betaK = pointAfter.mK / pointCurrent.deltaK;\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n\n        if (squaredMagnitude <= 9) {\n          continue;\n        }\n\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        pointCurrent.mK = alphaK * tauK * pointCurrent.deltaK;\n        pointAfter.mK = betaK * tauK * pointCurrent.deltaK;\n      } // Compute control points\n\n\n      var deltaX;\n\n      for (i = 0; i < pointsLen; ++i) {\n        pointCurrent = pointsWithTangents[i];\n\n        if (pointCurrent.model.skip) {\n          continue;\n        }\n\n        pointBefore = i > 0 ? pointsWithTangents[i - 1] : null;\n        pointAfter = i < pointsLen - 1 ? pointsWithTangents[i + 1] : null;\n\n        if (pointBefore && !pointBefore.model.skip) {\n          deltaX = (pointCurrent.model.x - pointBefore.model.x) / 3;\n          pointCurrent.model.controlPointPreviousX = pointCurrent.model.x - deltaX;\n          pointCurrent.model.controlPointPreviousY = pointCurrent.model.y - deltaX * pointCurrent.mK;\n        }\n\n        if (pointAfter && !pointAfter.model.skip) {\n          deltaX = (pointAfter.model.x - pointCurrent.model.x) / 3;\n          pointCurrent.model.controlPointNextX = pointCurrent.model.x + deltaX;\n          pointCurrent.model.controlPointNextY = pointCurrent.model.y + deltaX * pointCurrent.mK;\n        }\n      }\n    };\n\n    helpers$1.nextItem = function (collection, index, loop) {\n      if (loop) {\n        return index >= collection.length - 1 ? collection[0] : collection[index + 1];\n      }\n\n      return index >= collection.length - 1 ? collection[collection.length - 1] : collection[index + 1];\n    };\n\n    helpers$1.previousItem = function (collection, index, loop) {\n      if (loop) {\n        return index <= 0 ? collection[collection.length - 1] : collection[index - 1];\n      }\n\n      return index <= 0 ? collection[0] : collection[index - 1];\n    }; // Implementation of the nice number algorithm used in determining where axis labels will go\n\n\n    helpers$1.niceNum = function (range, round) {\n      var exponent = Math.floor(helpers$1.log10(range));\n      var fraction = range / Math.pow(10, exponent);\n      var niceFraction;\n\n      if (round) {\n        if (fraction < 1.5) {\n          niceFraction = 1;\n        } else if (fraction < 3) {\n          niceFraction = 2;\n        } else if (fraction < 7) {\n          niceFraction = 5;\n        } else {\n          niceFraction = 10;\n        }\n      } else if (fraction <= 1.0) {\n        niceFraction = 1;\n      } else if (fraction <= 2) {\n        niceFraction = 2;\n      } else if (fraction <= 5) {\n        niceFraction = 5;\n      } else {\n        niceFraction = 10;\n      }\n\n      return niceFraction * Math.pow(10, exponent);\n    }; // Request animation polyfill - https://www.paulirish.com/2011/requestanimationframe-for-smart-animating/\n\n\n    helpers$1.requestAnimFrame = function () {\n      if (typeof window === 'undefined') {\n        return function (callback) {\n          callback();\n        };\n      }\n\n      return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {\n        return window.setTimeout(callback, 1000 / 60);\n      };\n    }(); // -- DOM methods\n\n\n    helpers$1.getRelativePosition = function (evt, chart) {\n      var mouseX, mouseY;\n      var e = evt.originalEvent || evt;\n      var canvas = evt.target || evt.srcElement;\n      var boundingRect = canvas.getBoundingClientRect();\n      var touches = e.touches;\n\n      if (touches && touches.length > 0) {\n        mouseX = touches[0].clientX;\n        mouseY = touches[0].clientY;\n      } else {\n        mouseX = e.clientX;\n        mouseY = e.clientY;\n      } // Scale mouse coordinates into canvas coordinates\n      // by following the pattern laid out by 'jerryj' in the comments of\n      // https://www.html5canvastutorials.com/advanced/html5-canvas-mouse-coordinates/\n\n\n      var paddingLeft = parseFloat(helpers$1.getStyle(canvas, 'padding-left'));\n      var paddingTop = parseFloat(helpers$1.getStyle(canvas, 'padding-top'));\n      var paddingRight = parseFloat(helpers$1.getStyle(canvas, 'padding-right'));\n      var paddingBottom = parseFloat(helpers$1.getStyle(canvas, 'padding-bottom'));\n      var width = boundingRect.right - boundingRect.left - paddingLeft - paddingRight;\n      var height = boundingRect.bottom - boundingRect.top - paddingTop - paddingBottom; // We divide by the current device pixel ratio, because the canvas is scaled up by that amount in each direction. However\n      // the backend model is in unscaled coordinates. Since we are going to deal with our model coordinates, we go back here\n\n      mouseX = Math.round((mouseX - boundingRect.left - paddingLeft) / width * canvas.width / chart.currentDevicePixelRatio);\n      mouseY = Math.round((mouseY - boundingRect.top - paddingTop) / height * canvas.height / chart.currentDevicePixelRatio);\n      return {\n        x: mouseX,\n        y: mouseY\n      };\n    }; // Private helper function to convert max-width/max-height values that may be percentages into a number\n\n\n    function parseMaxStyle(styleValue, node, parentProperty) {\n      var valueInPixels;\n\n      if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n\n        if (styleValue.indexOf('%') !== -1) {\n          // percentage * size in dimension\n          valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n      } else {\n        valueInPixels = styleValue;\n      }\n\n      return valueInPixels;\n    }\n    /**\n     * Returns if the given value contains an effective constraint.\n     * @private\n     */\n\n\n    function isConstrainedValue(value) {\n      return value !== undefined && value !== null && value !== 'none';\n    }\n    /**\n     * Returns the max width or height of the given DOM node in a cross-browser compatible fashion\n     * @param {HTMLElement} domNode - the node to check the constraint on\n     * @param {string} maxStyle - the style that defines the maximum for the direction we are using ('max-width' / 'max-height')\n     * @param {string} percentageProperty - property of parent to use when calculating width as a percentage\n     * @see {@link https://www.nathanaeljones.com/blog/2013/reading-max-width-cross-browser}\n     */\n\n\n    function getConstraintDimension(domNode, maxStyle, percentageProperty) {\n      var view = document.defaultView;\n\n      var parentNode = helpers$1._getParentNode(domNode);\n\n      var constrainedNode = view.getComputedStyle(domNode)[maxStyle];\n      var constrainedContainer = view.getComputedStyle(parentNode)[maxStyle];\n      var hasCNode = isConstrainedValue(constrainedNode);\n      var hasCContainer = isConstrainedValue(constrainedContainer);\n      var infinity = Number.POSITIVE_INFINITY;\n\n      if (hasCNode || hasCContainer) {\n        return Math.min(hasCNode ? parseMaxStyle(constrainedNode, domNode, percentageProperty) : infinity, hasCContainer ? parseMaxStyle(constrainedContainer, parentNode, percentageProperty) : infinity);\n      }\n\n      return 'none';\n    } // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintWidth = function (domNode) {\n      return getConstraintDimension(domNode, 'max-width', 'clientWidth');\n    }; // returns Number or undefined if no constraint\n\n\n    helpers$1.getConstraintHeight = function (domNode) {\n      return getConstraintDimension(domNode, 'max-height', 'clientHeight');\n    };\n    /**\n     * @private\n    \t */\n\n\n    helpers$1._calculatePadding = function (container, padding, parentDimension) {\n      padding = helpers$1.getStyle(container, padding);\n      return padding.indexOf('%') > -1 ? parentDimension * parseInt(padding, 10) / 100 : parseInt(padding, 10);\n    };\n    /**\n     * @private\n     */\n\n\n    helpers$1._getParentNode = function (domNode) {\n      var parent = domNode.parentNode;\n\n      if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n      }\n\n      return parent;\n    };\n\n    helpers$1.getMaximumWidth = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientWidth;\n      }\n\n      var clientWidth = container.clientWidth;\n\n      var paddingLeft = helpers$1._calculatePadding(container, 'padding-left', clientWidth);\n\n      var paddingRight = helpers$1._calculatePadding(container, 'padding-right', clientWidth);\n\n      var w = clientWidth - paddingLeft - paddingRight;\n      var cw = helpers$1.getConstraintWidth(domNode);\n      return isNaN(cw) ? w : Math.min(w, cw);\n    };\n\n    helpers$1.getMaximumHeight = function (domNode) {\n      var container = helpers$1._getParentNode(domNode);\n\n      if (!container) {\n        return domNode.clientHeight;\n      }\n\n      var clientHeight = container.clientHeight;\n\n      var paddingTop = helpers$1._calculatePadding(container, 'padding-top', clientHeight);\n\n      var paddingBottom = helpers$1._calculatePadding(container, 'padding-bottom', clientHeight);\n\n      var h = clientHeight - paddingTop - paddingBottom;\n      var ch = helpers$1.getConstraintHeight(domNode);\n      return isNaN(ch) ? h : Math.min(h, ch);\n    };\n\n    helpers$1.getStyle = function (el, property) {\n      return el.currentStyle ? el.currentStyle[property] : document.defaultView.getComputedStyle(el, null).getPropertyValue(property);\n    };\n\n    helpers$1.retinaScale = function (chart, forceRatio) {\n      var pixelRatio = chart.currentDevicePixelRatio = forceRatio || typeof window !== 'undefined' && window.devicePixelRatio || 1;\n\n      if (pixelRatio === 1) {\n        return;\n      }\n\n      var canvas = chart.canvas;\n      var height = chart.height;\n      var width = chart.width;\n      canvas.height = height * pixelRatio;\n      canvas.width = width * pixelRatio;\n      chart.ctx.scale(pixelRatio, pixelRatio); // If no style has been set on the canvas, the render size is used as display size,\n      // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n      // See https://github.com/chartjs/Chart.js/issues/3575\n\n      if (!canvas.style.height && !canvas.style.width) {\n        canvas.style.height = height + 'px';\n        canvas.style.width = width + 'px';\n      }\n    }; // -- Canvas methods\n\n\n    helpers$1.fontString = function (pixelSize, fontStyle, fontFamily) {\n      return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n    };\n\n    helpers$1.longestText = function (ctx, font, arrayOfThings, cache) {\n      cache = cache || {};\n      var data = cache.data = cache.data || {};\n      var gc = cache.garbageCollect = cache.garbageCollect || [];\n\n      if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n      }\n\n      ctx.font = font;\n      var longest = 0;\n      helpers$1.each(arrayOfThings, function (thing) {\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && helpers$1.isArray(thing) !== true) {\n          longest = helpers$1.measureText(ctx, data, gc, longest, thing);\n        } else if (helpers$1.isArray(thing)) {\n          // if it is an array lets measure each element\n          // to do maybe simplify this function a bit so we can do this more recursively?\n          helpers$1.each(thing, function (nestedThing) {\n            // Undefined strings and arrays should not be measured\n            if (nestedThing !== undefined && nestedThing !== null && !helpers$1.isArray(nestedThing)) {\n              longest = helpers$1.measureText(ctx, data, gc, longest, nestedThing);\n            }\n          });\n        }\n      });\n      var gcLen = gc.length / 2;\n\n      if (gcLen > arrayOfThings.length) {\n        for (var i = 0; i < gcLen; i++) {\n          delete data[gc[i]];\n        }\n\n        gc.splice(0, gcLen);\n      }\n\n      return longest;\n    };\n\n    helpers$1.measureText = function (ctx, data, gc, longest, string) {\n      var textWidth = data[string];\n\n      if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n      }\n\n      if (textWidth > longest) {\n        longest = textWidth;\n      }\n\n      return longest;\n    };\n\n    helpers$1.numberOfLabelLines = function (arrayOfThings) {\n      var numberOfLines = 1;\n      helpers$1.each(arrayOfThings, function (thing) {\n        if (helpers$1.isArray(thing)) {\n          if (thing.length > numberOfLines) {\n            numberOfLines = thing.length;\n          }\n        }\n      });\n      return numberOfLines;\n    };\n\n    helpers$1.color = !chartjsColor ? function (value) {\n      console.error('Color.js not found!');\n      return value;\n    } : function (value) {\n      /* global CanvasGradient */\n      if (value instanceof CanvasGradient) {\n        value = core_defaults.global.defaultColor;\n      }\n\n      return chartjsColor(value);\n    };\n\n    helpers$1.getHoverColor = function (colorValue) {\n      /* global CanvasPattern */\n      return colorValue instanceof CanvasPattern || colorValue instanceof CanvasGradient ? colorValue : helpers$1.color(colorValue).saturate(0.5).darken(0.1).rgbString();\n    };\n  };\n\n  function abstract() {\n    throw new Error('This method is not implemented: either no adapter can ' + 'be found or an incomplete integration was provided.');\n  }\n  /**\n   * Date adapter (current used by the time scale)\n   * @namespace Chart._adapters._date\n   * @memberof Chart._adapters\n   * @private\n   */\n\n  /**\n   * Currently supported unit string values.\n   * @typedef {('millisecond'|'second'|'minute'|'hour'|'day'|'week'|'month'|'quarter'|'year')}\n   * @memberof Chart._adapters._date\n   * @name Unit\n   */\n\n  /**\n   * @class\n   */\n\n\n  function DateAdapter(options) {\n    this.options = options || {};\n  }\n\n  helpers$1.extend(DateAdapter.prototype,\n  /** @lends DateAdapter */\n  {\n    /**\n     * Returns a map of time formats for the supported formatting units defined\n     * in Unit as well as 'datetime' representing a detailed date/time string.\n     * @returns {{string: string}}\n     */\n    formats: abstract,\n\n    /**\n     * Parses the given `value` and return the associated timestamp.\n     * @param {any} value - the value to parse (usually comes from the data)\n     * @param {string} [format] - the expected data format\n     * @returns {(number|null)}\n     * @function\n     */\n    parse: abstract,\n\n    /**\n     * Returns the formatted date in the specified `format` for a given `timestamp`.\n     * @param {number} timestamp - the timestamp to format\n     * @param {string} format - the date/time token\n     * @return {string}\n     * @function\n     */\n    format: abstract,\n\n    /**\n     * Adds the specified `amount` of `unit` to the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {number} amount - the amount to add\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    add: abstract,\n\n    /**\n     * Returns the number of `unit` between the given timestamps.\n     * @param {number} max - the input timestamp (reference)\n     * @param {number} min - the timestamp to substract\n     * @param {Unit} unit - the unit as string\n     * @return {number}\n     * @function\n     */\n    diff: abstract,\n\n    /**\n     * Returns start of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @param {number} [weekday] - the ISO day of the week with 1 being Monday\n     * and 7 being Sunday (only needed if param *unit* is `isoWeek`).\n     * @function\n     */\n    startOf: abstract,\n\n    /**\n     * Returns end of `unit` for the given `timestamp`.\n     * @param {number} timestamp - the input timestamp\n     * @param {Unit} unit - the unit as string\n     * @function\n     */\n    endOf: abstract,\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility for scale.getValueForPixel(),\n     * this method should be overridden only by the moment adapter.\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(value) {\n      return value;\n    }\n  });\n\n  DateAdapter.override = function (members) {\n    helpers$1.extend(DateAdapter.prototype, members);\n  };\n\n  var _date = DateAdapter;\n  var core_adapters = {\n    _date: _date\n  };\n  /**\n   * Namespace to hold static tick generation functions\n   * @namespace Chart.Ticks\n   */\n\n  var core_ticks = {\n    /**\n     * Namespace to hold formatters for different types of ticks\n     * @namespace Chart.Ticks.formatters\n     */\n    formatters: {\n      /**\n       * Formatter for value labels\n       * @method Chart.Ticks.formatters.values\n       * @param value the value to display\n       * @return {string|string[]} the label to display\n       */\n      values: function values(value) {\n        return helpers$1.isArray(value) ? value : '' + value;\n      },\n\n      /**\n       * Formatter for linear numeric ticks\n       * @method Chart.Ticks.formatters.linear\n       * @param tickValue {number} the value to be formatted\n       * @param index {number} the position of the tickValue parameter in the ticks array\n       * @param ticks {number[]} the list of ticks being converted\n       * @return {string} string representation of the tickValue parameter\n       */\n      linear: function linear(tickValue, index, ticks) {\n        // If we have lots of ticks, don't use the ones\n        var delta = ticks.length > 3 ? ticks[2] - ticks[1] : ticks[1] - ticks[0]; // If we have a number like 2.5 as the delta, figure out how many decimal places we need\n\n        if (Math.abs(delta) > 1) {\n          if (tickValue !== Math.floor(tickValue)) {\n            // not an integer\n            delta = tickValue - Math.floor(tickValue);\n          }\n        }\n\n        var logDelta = helpers$1.log10(Math.abs(delta));\n        var tickString = '';\n\n        if (tickValue !== 0) {\n          var maxTick = Math.max(Math.abs(ticks[0]), Math.abs(ticks[ticks.length - 1]));\n\n          if (maxTick < 1e-4) {\n            // all ticks are small numbers; use scientific notation\n            var logTick = helpers$1.log10(Math.abs(tickValue));\n            tickString = tickValue.toExponential(Math.floor(logTick) - Math.floor(logDelta));\n          } else {\n            var numDecimal = -1 * Math.floor(logDelta);\n            numDecimal = Math.max(Math.min(numDecimal, 20), 0); // toFixed has a max of 20 decimal places\n\n            tickString = tickValue.toFixed(numDecimal);\n          }\n        } else {\n          tickString = '0'; // never show decimal places for 0\n        }\n\n        return tickString;\n      },\n      logarithmic: function logarithmic(tickValue, index, ticks) {\n        var remain = tickValue / Math.pow(10, Math.floor(helpers$1.log10(tickValue)));\n\n        if (tickValue === 0) {\n          return '0';\n        } else if (remain === 1 || remain === 2 || remain === 5 || index === 0 || index === ticks.length - 1) {\n          return tickValue.toExponential();\n        }\n\n        return '';\n      }\n    }\n  };\n  var valueOrDefault$9 = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault = helpers$1.valueAtIndexOrDefault;\n\n  core_defaults._set('scale', {\n    display: true,\n    position: 'left',\n    offset: false,\n    // grid line settings\n    gridLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      drawBorder: true,\n      drawOnChartArea: true,\n      drawTicks: true,\n      tickMarkLength: 10,\n      zeroLineWidth: 1,\n      zeroLineColor: 'rgba(0,0,0,0.25)',\n      zeroLineBorderDash: [],\n      zeroLineBorderDashOffset: 0.0,\n      offsetGridLines: false,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    // scale label\n    scaleLabel: {\n      // display property\n      display: false,\n      // actual label\n      labelString: '',\n      // top/bottom padding\n      padding: {\n        top: 4,\n        bottom: 4\n      }\n    },\n    // label settings\n    ticks: {\n      beginAtZero: false,\n      minRotation: 0,\n      maxRotation: 50,\n      mirror: false,\n      padding: 0,\n      reverse: false,\n      display: true,\n      autoSkip: true,\n      autoSkipPadding: 0,\n      labelOffset: 0,\n      // We pass through arrays to be rendered as multiline labels, we convert Others to strings here.\n      callback: core_ticks.formatters.values,\n      minor: {},\n      major: {}\n    }\n  });\n\n  function labelsFromTicks(ticks) {\n    var labels = [];\n    var i, ilen;\n\n    for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n      labels.push(ticks[i].label);\n    }\n\n    return labels;\n  }\n\n  function getPixelForGridLine(scale, index, offsetGridLines) {\n    var lineValue = scale.getPixelForTick(index);\n\n    if (offsetGridLines) {\n      if (scale.getTicks().length === 1) {\n        lineValue -= scale.isHorizontal() ? Math.max(lineValue - scale.left, scale.right - lineValue) : Math.max(lineValue - scale.top, scale.bottom - lineValue);\n      } else if (index === 0) {\n        lineValue -= (scale.getPixelForTick(1) - lineValue) / 2;\n      } else {\n        lineValue -= (lineValue - scale.getPixelForTick(index - 1)) / 2;\n      }\n    }\n\n    return lineValue;\n  }\n\n  function computeTextSize(context, tick, font) {\n    return helpers$1.isArray(tick) ? helpers$1.longestText(context, font, tick) : context.measureText(tick).width;\n  }\n\n  var core_scale = core_element.extend({\n    /**\n     * Get the padding needed for the scale\n     * @method getPadding\n     * @private\n     * @returns {Padding} the necessary padding\n     */\n    getPadding: function getPadding() {\n      var me = this;\n      return {\n        left: me.paddingLeft || 0,\n        top: me.paddingTop || 0,\n        right: me.paddingRight || 0,\n        bottom: me.paddingBottom || 0\n      };\n    },\n\n    /**\n     * Returns the scale tick objects ({label, major})\n     * @since 2.7\n     */\n    getTicks: function getTicks() {\n      return this._ticks;\n    },\n    // These methods are ordered by lifecyle. Utilities then follow.\n    // Any function defined here is inherited by all scale types.\n    // Any function can be extended by the scale type\n    mergeTicksOptions: function mergeTicksOptions() {\n      var ticks = this.options.ticks;\n\n      if (ticks.minor === false) {\n        ticks.minor = {\n          display: false\n        };\n      }\n\n      if (ticks.major === false) {\n        ticks.major = {\n          display: false\n        };\n      }\n\n      for (var key in ticks) {\n        if (key !== 'major' && key !== 'minor') {\n          if (typeof ticks.minor[key] === 'undefined') {\n            ticks.minor[key] = ticks[key];\n          }\n\n          if (typeof ticks.major[key] === 'undefined') {\n            ticks.major[key] = ticks[key];\n          }\n        }\n      }\n    },\n    beforeUpdate: function beforeUpdate() {\n      helpers$1.callback(this.options.beforeUpdate, [this]);\n    },\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this;\n      var i, ilen, labels, label, ticks, tick; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = helpers$1.extend({\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0\n      }, margins);\n      me._maxLabelLines = 0;\n      me.longestLabelWidth = 0;\n      me.longestTextCache = me.longestTextCache || {}; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Data min/max\n\n      me.beforeDataLimits();\n      me.determineDataLimits();\n      me.afterDataLimits(); // Ticks - `this.ticks` is now DEPRECATED!\n      // Internal ticks are now stored as objects in the PRIVATE `this._ticks` member\n      // and must not be accessed directly from outside this class. `this.ticks` being\n      // around for long time and not marked as private, we can't change its structure\n      // without unexpected breaking changes. If you need to access the scale ticks,\n      // use scale.getTicks() instead.\n\n      me.beforeBuildTicks(); // New implementations should return an array of objects but for BACKWARD COMPAT,\n      // we still support no return (`this.ticks` internally set by calling this method).\n\n      ticks = me.buildTicks() || []; // Allow modification of ticks in callback.\n\n      ticks = me.afterBuildTicks(ticks) || ticks;\n      me.beforeTickToLabelConversion(); // New implementations should return the formatted tick labels but for BACKWARD\n      // COMPAT, we still support no return (`this.ticks` internally changed by calling\n      // this method and supposed to contain only string values).\n\n      labels = me.convertTicksToLabels(ticks) || me.ticks;\n      me.afterTickToLabelConversion();\n      me.ticks = labels; // BACKWARD COMPATIBILITY\n      // IMPORTANT: from this point, we consider that `this.ticks` will NEVER change!\n      // BACKWARD COMPAT: synchronize `_ticks` with labels (so potentially `this.ticks`)\n\n      for (i = 0, ilen = labels.length; i < ilen; ++i) {\n        label = labels[i];\n        tick = ticks[i];\n\n        if (!tick) {\n          ticks.push(tick = {\n            label: label,\n            major: false\n          });\n        } else {\n          tick.label = label;\n        }\n      }\n\n      me._ticks = ticks; // Tick Rotation\n\n      me.beforeCalculateTickRotation();\n      me.calculateTickRotation();\n      me.afterCalculateTickRotation(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: function afterUpdate() {\n      helpers$1.callback(this.options.afterUpdate, [this]);\n    },\n    //\n    beforeSetDimensions: function beforeSetDimensions() {\n      helpers$1.callback(this.options.beforeSetDimensions, [this]);\n    },\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0;\n    },\n    afterSetDimensions: function afterSetDimensions() {\n      helpers$1.callback(this.options.afterSetDimensions, [this]);\n    },\n    // Data limits\n    beforeDataLimits: function beforeDataLimits() {\n      helpers$1.callback(this.options.beforeDataLimits, [this]);\n    },\n    determineDataLimits: helpers$1.noop,\n    afterDataLimits: function afterDataLimits() {\n      helpers$1.callback(this.options.afterDataLimits, [this]);\n    },\n    //\n    beforeBuildTicks: function beforeBuildTicks() {\n      helpers$1.callback(this.options.beforeBuildTicks, [this]);\n    },\n    buildTicks: helpers$1.noop,\n    afterBuildTicks: function afterBuildTicks(ticks) {\n      var me = this; // ticks is empty for old axis implementations here\n\n      if (helpers$1.isArray(ticks) && ticks.length) {\n        return helpers$1.callback(me.options.afterBuildTicks, [me, ticks]);\n      } // Support old implementations (that modified `this.ticks` directly in buildTicks)\n\n\n      me.ticks = helpers$1.callback(me.options.afterBuildTicks, [me, me.ticks]) || me.ticks;\n      return ticks;\n    },\n    beforeTickToLabelConversion: function beforeTickToLabelConversion() {\n      helpers$1.callback(this.options.beforeTickToLabelConversion, [this]);\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this; // Convert ticks to strings\n\n      var tickOpts = me.options.ticks;\n      me.ticks = me.ticks.map(tickOpts.userCallback || tickOpts.callback, this);\n    },\n    afterTickToLabelConversion: function afterTickToLabelConversion() {\n      helpers$1.callback(this.options.afterTickToLabelConversion, [this]);\n    },\n    //\n    beforeCalculateTickRotation: function beforeCalculateTickRotation() {\n      helpers$1.callback(this.options.beforeCalculateTickRotation, [this]);\n    },\n    calculateTickRotation: function calculateTickRotation() {\n      var me = this;\n      var context = me.ctx;\n      var tickOpts = me.options.ticks;\n      var labels = labelsFromTicks(me._ticks); // Get the width of each grid by calculating the difference\n      // between x offsets between 0 and 1.\n\n      var tickFont = helpers$1.options._parseFont(tickOpts);\n\n      context.font = tickFont.string;\n      var labelRotation = tickOpts.minRotation || 0;\n\n      if (labels.length && me.options.display && me.isHorizontal()) {\n        var originalLabelWidth = helpers$1.longestText(context, tickFont.string, labels, me.longestTextCache);\n        var labelWidth = originalLabelWidth;\n        var cosRotation, sinRotation; // Allow 3 pixels x2 padding either side for label readability\n\n        var tickWidth = me.getPixelForTick(1) - me.getPixelForTick(0) - 6; // Max label rotation can be set or default to 90 - also act as a loop counter\n\n        while (labelWidth > tickWidth && labelRotation < tickOpts.maxRotation) {\n          var angleRadians = helpers$1.toRadians(labelRotation);\n          cosRotation = Math.cos(angleRadians);\n          sinRotation = Math.sin(angleRadians);\n\n          if (sinRotation * originalLabelWidth > me.maxHeight) {\n            // go back one step\n            labelRotation--;\n            break;\n          }\n\n          labelRotation++;\n          labelWidth = cosRotation * originalLabelWidth;\n        }\n      }\n\n      me.labelRotation = labelRotation;\n    },\n    afterCalculateTickRotation: function afterCalculateTickRotation() {\n      helpers$1.callback(this.options.afterCalculateTickRotation, [this]);\n    },\n    //\n    beforeFit: function beforeFit() {\n      helpers$1.callback(this.options.beforeFit, [this]);\n    },\n    fit: function fit() {\n      var me = this; // Reset\n\n      var minSize = me.minSize = {\n        width: 0,\n        height: 0\n      };\n      var labels = labelsFromTicks(me._ticks);\n      var opts = me.options;\n      var tickOpts = opts.ticks;\n      var scaleLabelOpts = opts.scaleLabel;\n      var gridLineOpts = opts.gridLines;\n\n      var display = me._isVisible();\n\n      var position = opts.position;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var tickFont = parseFont(tickOpts);\n      var tickMarkLength = opts.gridLines.tickMarkLength; // Width\n\n      if (isHorizontal) {\n        // subtract the margins to line up with the chartArea if we are a full width scale\n        minSize.width = me.isFullWidth() ? me.maxWidth - me.margins.left - me.margins.right : me.maxWidth;\n      } else {\n        minSize.width = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } // height\n\n\n      if (isHorizontal) {\n        minSize.height = display && gridLineOpts.drawTicks ? tickMarkLength : 0;\n      } else {\n        minSize.height = me.maxHeight; // fill all the height\n      } // Are we showing a title for the scale?\n\n\n      if (scaleLabelOpts.display && display) {\n        var scaleLabelFont = parseFont(scaleLabelOpts);\n        var scaleLabelPadding = helpers$1.options.toPadding(scaleLabelOpts.padding);\n        var deltaHeight = scaleLabelFont.lineHeight + scaleLabelPadding.height;\n\n        if (isHorizontal) {\n          minSize.height += deltaHeight;\n        } else {\n          minSize.width += deltaHeight;\n        }\n      } // Don't bother fitting the ticks if we are not showing the labels\n\n\n      if (tickOpts.display && display) {\n        var largestTextWidth = helpers$1.longestText(me.ctx, tickFont.string, labels, me.longestTextCache);\n        var tallestLabelHeightInLines = helpers$1.numberOfLabelLines(labels);\n        var lineSpace = tickFont.size * 0.5;\n        var tickPadding = me.options.ticks.padding; // Store max number of lines and widest label for _autoSkip\n\n        me._maxLabelLines = tallestLabelHeightInLines;\n        me.longestLabelWidth = largestTextWidth;\n\n        if (isHorizontal) {\n          var angleRadians = helpers$1.toRadians(me.labelRotation);\n          var cosRotation = Math.cos(angleRadians);\n          var sinRotation = Math.sin(angleRadians); // TODO - improve this calculation\n\n          var labelHeight = sinRotation * largestTextWidth + tickFont.lineHeight * tallestLabelHeightInLines + lineSpace; // padding\n\n          minSize.height = Math.min(me.maxHeight, minSize.height + labelHeight + tickPadding);\n          me.ctx.font = tickFont.string;\n          var firstLabelWidth = computeTextSize(me.ctx, labels[0], tickFont.string);\n          var lastLabelWidth = computeTextSize(me.ctx, labels[labels.length - 1], tickFont.string);\n          var offsetLeft = me.getPixelForTick(0) - me.left;\n          var offsetRight = me.right - me.getPixelForTick(labels.length - 1);\n          var paddingLeft, paddingRight; // Ensure that our ticks are always inside the canvas. When rotated, ticks are right aligned\n          // which means that the right padding is dominated by the font height\n\n          if (me.labelRotation !== 0) {\n            paddingLeft = position === 'bottom' ? cosRotation * firstLabelWidth : cosRotation * lineSpace;\n            paddingRight = position === 'bottom' ? cosRotation * lineSpace : cosRotation * lastLabelWidth;\n          } else {\n            paddingLeft = firstLabelWidth / 2;\n            paddingRight = lastLabelWidth / 2;\n          }\n\n          me.paddingLeft = Math.max(paddingLeft - offsetLeft, 0) + 3; // add 3 px to move away from canvas edges\n\n          me.paddingRight = Math.max(paddingRight - offsetRight, 0) + 3;\n        } else {\n          // A vertical axis is more constrained by the width. Labels are the\n          // dominant factor here, so get that length first and account for padding\n          if (tickOpts.mirror) {\n            largestTextWidth = 0;\n          } else {\n            // use lineSpace for consistency with horizontal axis\n            // tickPadding is not implemented for horizontal\n            largestTextWidth += tickPadding + lineSpace;\n          }\n\n          minSize.width = Math.min(me.maxWidth, minSize.width + largestTextWidth);\n          me.paddingTop = tickFont.size / 2;\n          me.paddingBottom = tickFont.size / 2;\n        }\n      }\n\n      me.handleMargins();\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n\n    /**\n     * Handle margins and padding interactions\n     * @private\n     */\n    handleMargins: function handleMargins() {\n      var me = this;\n\n      if (me.margins) {\n        me.paddingLeft = Math.max(me.paddingLeft - me.margins.left, 0);\n        me.paddingTop = Math.max(me.paddingTop - me.margins.top, 0);\n        me.paddingRight = Math.max(me.paddingRight - me.margins.right, 0);\n        me.paddingBottom = Math.max(me.paddingBottom - me.margins.bottom, 0);\n      }\n    },\n    afterFit: function afterFit() {\n      helpers$1.callback(this.options.afterFit, [this]);\n    },\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    isFullWidth: function isFullWidth() {\n      return this.options.fullWidth;\n    },\n    // Get the correct value. NaN bad inputs, If the value type is object get the x or y based on whether we are horizontal or not\n    getRightValue: function getRightValue(rawValue) {\n      // Null and undefined values first\n      if (helpers$1.isNullOrUndef(rawValue)) {\n        return NaN;\n      } // isNaN(object) returns true, so make sure NaN is checking for a number; Discard Infinite values\n\n\n      if ((typeof rawValue === 'number' || rawValue instanceof Number) && !isFinite(rawValue)) {\n        return NaN;\n      } // If it is in fact an object, dive in one more level\n\n\n      if (rawValue) {\n        if (this.isHorizontal()) {\n          if (rawValue.x !== undefined) {\n            return this.getRightValue(rawValue.x);\n          }\n        } else if (rawValue.y !== undefined) {\n          return this.getRightValue(rawValue.y);\n        }\n      } // Value is good, return it\n\n\n      return rawValue;\n    },\n\n    /**\n     * Used to get the value to display in the tooltip for the data at the given index\n     * @param index\n     * @param datasetIndex\n     */\n    getLabelForIndex: helpers$1.noop,\n\n    /**\n     * Returns the location of the given data point. Value can either be an index or a numerical value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param value\n     * @param index\n     * @param datasetIndex\n     */\n    getPixelForValue: helpers$1.noop,\n\n    /**\n     * Used to get the data value from a given pixel. This is the inverse of getPixelForValue\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     * @param pixel\n     */\n    getValueForPixel: helpers$1.noop,\n\n    /**\n     * Returns the location of the tick at the given index\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForTick: function getPixelForTick(index) {\n      var me = this;\n      var offset = me.options.offset;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var tickWidth = innerWidth / Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n        var pixel = tickWidth * index + me.paddingLeft;\n\n        if (offset) {\n          pixel += tickWidth / 2;\n        }\n\n        var finalVal = me.left + pixel;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      var innerHeight = me.height - (me.paddingTop + me.paddingBottom);\n      return me.top + index * (innerHeight / (me._ticks.length - 1));\n    },\n\n    /**\n     * Utility for getting the pixel location of a percentage of scale\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getPixelForDecimal: function getPixelForDecimal(decimal) {\n      var me = this;\n\n      if (me.isHorizontal()) {\n        var innerWidth = me.width - (me.paddingLeft + me.paddingRight);\n        var valueOffset = innerWidth * decimal + me.paddingLeft;\n        var finalVal = me.left + valueOffset;\n        finalVal += me.isFullWidth() ? me.margins.left : 0;\n        return finalVal;\n      }\n\n      return me.top + decimal * me.height;\n    },\n\n    /**\n     * Returns the pixel for the minimum chart value\n     * The coordinate (0, 0) is at the upper-left corner of the canvas\n     */\n    getBasePixel: function getBasePixel() {\n      return this.getPixelForValue(this.getBaseValue());\n    },\n    getBaseValue: function getBaseValue() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    },\n\n    /**\n     * Returns a subset of ticks to be plotted to avoid overlapping labels.\n     * @private\n     */\n    _autoSkip: function _autoSkip(ticks) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor;\n      var tickCount = ticks.length;\n      var skipRatio = false;\n      var maxTicks = optionTicks.maxTicksLimit; // Total space needed to display all ticks. First and last ticks are\n      // drawn as their center at end of axis, so tickCount-1\n\n      var ticksLength = me._tickSize() * (tickCount - 1); // Axis length\n\n      var axisLength = isHorizontal ? me.width - (me.paddingLeft + me.paddingRight) : me.height - (me.paddingTop + me.PaddingBottom);\n      var result = [];\n      var i, tick;\n\n      if (ticksLength > axisLength) {\n        skipRatio = 1 + Math.floor(ticksLength / axisLength);\n      } // if they defined a max number of optionTicks,\n      // increase skipRatio until that number is met\n\n\n      if (tickCount > maxTicks) {\n        skipRatio = Math.max(skipRatio, 1 + Math.floor(tickCount / maxTicks));\n      }\n\n      for (i = 0; i < tickCount; i++) {\n        tick = ticks[i];\n\n        if (skipRatio > 1 && i % skipRatio > 0) {\n          // leave tick in place but make sure it's not displayed (#4635)\n          delete tick.label;\n        }\n\n        result.push(tick);\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _tickSize: function _tickSize() {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var optionTicks = me.options.ticks.minor; // Calculate space needed by label in axis direction.\n\n      var rot = helpers$1.toRadians(me.labelRotation);\n      var cos = Math.abs(Math.cos(rot));\n      var sin = Math.abs(Math.sin(rot));\n      var padding = optionTicks.autoSkipPadding || 0;\n      var w = me.longestLabelWidth + padding || 0;\n\n      var tickFont = helpers$1.options._parseFont(optionTicks);\n\n      var h = me._maxLabelLines * tickFont.lineHeight + padding || 0; // Calculate space needed for 1 tick in axis direction.\n\n      return isHorizontal ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    },\n\n    /**\n     * @private\n     */\n    _isVisible: function _isVisible() {\n      var me = this;\n      var chart = me.chart;\n      var display = me.options.display;\n      var i, ilen, meta;\n\n      if (display !== 'auto') {\n        return !!display;\n      } // When 'auto', the scale is visible if at least one associated dataset is visible.\n\n\n      for (i = 0, ilen = chart.data.datasets.length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          meta = chart.getDatasetMeta(i);\n\n          if (meta.xAxisID === me.id || meta.yAxisID === me.id) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Actually draw the scale on the canvas\n     * @param {object} chartArea - the area of the chart to draw full grid lines on\n     */\n    draw: function draw(chartArea) {\n      var me = this;\n      var options = me.options;\n\n      if (!me._isVisible()) {\n        return;\n      }\n\n      var chart = me.chart;\n      var context = me.ctx;\n      var globalDefaults = core_defaults.global;\n      var defaultFontColor = globalDefaults.defaultFontColor;\n      var optionTicks = options.ticks.minor;\n      var optionMajorTicks = options.ticks.major || optionTicks;\n      var gridLines = options.gridLines;\n      var scaleLabel = options.scaleLabel;\n      var position = options.position;\n      var isRotated = me.labelRotation !== 0;\n      var isMirrored = optionTicks.mirror;\n      var isHorizontal = me.isHorizontal();\n      var parseFont = helpers$1.options._parseFont;\n      var ticks = optionTicks.display && optionTicks.autoSkip ? me._autoSkip(me.getTicks()) : me.getTicks();\n      var tickFontColor = valueOrDefault$9(optionTicks.fontColor, defaultFontColor);\n      var tickFont = parseFont(optionTicks);\n      var lineHeight = tickFont.lineHeight;\n      var majorTickFontColor = valueOrDefault$9(optionMajorTicks.fontColor, defaultFontColor);\n      var majorTickFont = parseFont(optionMajorTicks);\n      var tickPadding = optionTicks.padding;\n      var labelOffset = optionTicks.labelOffset;\n      var tl = gridLines.drawTicks ? gridLines.tickMarkLength : 0;\n      var scaleLabelFontColor = valueOrDefault$9(scaleLabel.fontColor, defaultFontColor);\n      var scaleLabelFont = parseFont(scaleLabel);\n      var scaleLabelPadding = helpers$1.options.toPadding(scaleLabel.padding);\n      var labelRotationRadians = helpers$1.toRadians(me.labelRotation);\n      var itemsToDraw = [];\n      var axisWidth = gridLines.drawBorder ? valueAtIndexOrDefault(gridLines.lineWidth, 0, 0) : 0;\n      var alignPixel = helpers$1._alignPixel;\n      var borderValue, tickStart, tickEnd;\n\n      if (position === 'top') {\n        borderValue = alignPixel(chart, me.bottom, axisWidth);\n        tickStart = me.bottom - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else if (position === 'bottom') {\n        borderValue = alignPixel(chart, me.top, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.top + tl;\n      } else if (position === 'left') {\n        borderValue = alignPixel(chart, me.right, axisWidth);\n        tickStart = me.right - tl;\n        tickEnd = borderValue - axisWidth / 2;\n      } else {\n        borderValue = alignPixel(chart, me.left, axisWidth);\n        tickStart = borderValue + axisWidth / 2;\n        tickEnd = me.left + tl;\n      }\n\n      var epsilon = 0.0000001; // 0.0000001 is margin in pixels for Accumulated error.\n\n      helpers$1.each(ticks, function (tick, index) {\n        // autoskipper skipped this tick (#4635)\n        if (helpers$1.isNullOrUndef(tick.label)) {\n          return;\n        }\n\n        var label = tick.label;\n        var lineWidth, lineColor, borderDash, borderDashOffset;\n\n        if (index === me.zeroLineIndex && options.offset === gridLines.offsetGridLines) {\n          // Draw the first index specially\n          lineWidth = gridLines.zeroLineWidth;\n          lineColor = gridLines.zeroLineColor;\n          borderDash = gridLines.zeroLineBorderDash || [];\n          borderDashOffset = gridLines.zeroLineBorderDashOffset || 0.0;\n        } else {\n          lineWidth = valueAtIndexOrDefault(gridLines.lineWidth, index);\n          lineColor = valueAtIndexOrDefault(gridLines.color, index);\n          borderDash = gridLines.borderDash || [];\n          borderDashOffset = gridLines.borderDashOffset || 0.0;\n        } // Common properties\n\n\n        var tx1, ty1, tx2, ty2, x1, y1, x2, y2, labelX, labelY, textOffset, textAlign;\n        var labelCount = helpers$1.isArray(label) ? label.length : 1;\n        var lineValue = getPixelForGridLine(me, index, gridLines.offsetGridLines);\n\n        if (isHorizontal) {\n          var labelYOffset = tl + tickPadding;\n\n          if (lineValue < me.left - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tx2 = x1 = x2 = alignPixel(chart, lineValue, lineWidth);\n          ty1 = tickStart;\n          ty2 = tickEnd;\n          labelX = me.getPixelForTick(index) + labelOffset; // x values for optionTicks (need to consider offsetLabel option)\n\n          if (position === 'top') {\n            y1 = alignPixel(chart, chartArea.top, axisWidth) + axisWidth / 2;\n            y2 = chartArea.bottom;\n            textOffset = ((!isRotated ? 0.5 : 1) - labelCount) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'left';\n            labelY = me.bottom - labelYOffset;\n          } else {\n            y1 = chartArea.top;\n            y2 = alignPixel(chart, chartArea.bottom, axisWidth) - axisWidth / 2;\n            textOffset = (!isRotated ? 0.5 : 0) * lineHeight;\n            textAlign = !isRotated ? 'center' : 'right';\n            labelY = me.top + labelYOffset;\n          }\n        } else {\n          var labelXOffset = (isMirrored ? 0 : tl) + tickPadding;\n\n          if (lineValue < me.top - epsilon) {\n            lineColor = 'rgba(0,0,0,0)';\n          }\n\n          tx1 = tickStart;\n          tx2 = tickEnd;\n          ty1 = ty2 = y1 = y2 = alignPixel(chart, lineValue, lineWidth);\n          labelY = me.getPixelForTick(index) + labelOffset;\n          textOffset = (1 - labelCount) * lineHeight / 2;\n\n          if (position === 'left') {\n            x1 = alignPixel(chart, chartArea.left, axisWidth) + axisWidth / 2;\n            x2 = chartArea.right;\n            textAlign = isMirrored ? 'left' : 'right';\n            labelX = me.right - labelXOffset;\n          } else {\n            x1 = chartArea.left;\n            x2 = alignPixel(chart, chartArea.right, axisWidth) - axisWidth / 2;\n            textAlign = isMirrored ? 'right' : 'left';\n            labelX = me.left + labelXOffset;\n          }\n        }\n\n        itemsToDraw.push({\n          tx1: tx1,\n          ty1: ty1,\n          tx2: tx2,\n          ty2: ty2,\n          x1: x1,\n          y1: y1,\n          x2: x2,\n          y2: y2,\n          labelX: labelX,\n          labelY: labelY,\n          glWidth: lineWidth,\n          glColor: lineColor,\n          glBorderDash: borderDash,\n          glBorderDashOffset: borderDashOffset,\n          rotation: -1 * labelRotationRadians,\n          label: label,\n          major: tick.major,\n          textOffset: textOffset,\n          textAlign: textAlign\n        });\n      }); // Draw all of the tick labels, tick marks, and grid lines at the correct places\n\n      helpers$1.each(itemsToDraw, function (itemToDraw) {\n        var glWidth = itemToDraw.glWidth;\n        var glColor = itemToDraw.glColor;\n\n        if (gridLines.display && glWidth && glColor) {\n          context.save();\n          context.lineWidth = glWidth;\n          context.strokeStyle = glColor;\n\n          if (context.setLineDash) {\n            context.setLineDash(itemToDraw.glBorderDash);\n            context.lineDashOffset = itemToDraw.glBorderDashOffset;\n          }\n\n          context.beginPath();\n\n          if (gridLines.drawTicks) {\n            context.moveTo(itemToDraw.tx1, itemToDraw.ty1);\n            context.lineTo(itemToDraw.tx2, itemToDraw.ty2);\n          }\n\n          if (gridLines.drawOnChartArea) {\n            context.moveTo(itemToDraw.x1, itemToDraw.y1);\n            context.lineTo(itemToDraw.x2, itemToDraw.y2);\n          }\n\n          context.stroke();\n          context.restore();\n        }\n\n        if (optionTicks.display) {\n          // Make sure we draw text in the correct color and font\n          context.save();\n          context.translate(itemToDraw.labelX, itemToDraw.labelY);\n          context.rotate(itemToDraw.rotation);\n          context.font = itemToDraw.major ? majorTickFont.string : tickFont.string;\n          context.fillStyle = itemToDraw.major ? majorTickFontColor : tickFontColor;\n          context.textBaseline = 'middle';\n          context.textAlign = itemToDraw.textAlign;\n          var label = itemToDraw.label;\n          var y = itemToDraw.textOffset;\n\n          if (helpers$1.isArray(label)) {\n            for (var i = 0; i < label.length; ++i) {\n              // We just make sure the multiline element is a string here..\n              context.fillText('' + label[i], 0, y);\n              y += lineHeight;\n            }\n          } else {\n            context.fillText(label, 0, y);\n          }\n\n          context.restore();\n        }\n      });\n\n      if (scaleLabel.display) {\n        // Draw the scale label\n        var scaleLabelX;\n        var scaleLabelY;\n        var rotation = 0;\n        var halfLineHeight = scaleLabelFont.lineHeight / 2;\n\n        if (isHorizontal) {\n          scaleLabelX = me.left + (me.right - me.left) / 2; // midpoint of the width\n\n          scaleLabelY = position === 'bottom' ? me.bottom - halfLineHeight - scaleLabelPadding.bottom : me.top + halfLineHeight + scaleLabelPadding.top;\n        } else {\n          var isLeft = position === 'left';\n          scaleLabelX = isLeft ? me.left + halfLineHeight + scaleLabelPadding.top : me.right - halfLineHeight - scaleLabelPadding.top;\n          scaleLabelY = me.top + (me.bottom - me.top) / 2;\n          rotation = isLeft ? -0.5 * Math.PI : 0.5 * Math.PI;\n        }\n\n        context.save();\n        context.translate(scaleLabelX, scaleLabelY);\n        context.rotate(rotation);\n        context.textAlign = 'center';\n        context.textBaseline = 'middle';\n        context.fillStyle = scaleLabelFontColor; // render in correct colour\n\n        context.font = scaleLabelFont.string;\n        context.fillText(scaleLabel.labelString, 0, 0);\n        context.restore();\n      }\n\n      if (axisWidth) {\n        // Draw the line at the edge of the axis\n        var firstLineWidth = axisWidth;\n        var lastLineWidth = valueAtIndexOrDefault(gridLines.lineWidth, ticks.length - 1, 0);\n        var x1, x2, y1, y2;\n\n        if (isHorizontal) {\n          x1 = alignPixel(chart, me.left, firstLineWidth) - firstLineWidth / 2;\n          x2 = alignPixel(chart, me.right, lastLineWidth) + lastLineWidth / 2;\n          y1 = y2 = borderValue;\n        } else {\n          y1 = alignPixel(chart, me.top, firstLineWidth) - firstLineWidth / 2;\n          y2 = alignPixel(chart, me.bottom, lastLineWidth) + lastLineWidth / 2;\n          x1 = x2 = borderValue;\n        }\n\n        context.lineWidth = axisWidth;\n        context.strokeStyle = valueAtIndexOrDefault(gridLines.color, 0);\n        context.beginPath();\n        context.moveTo(x1, y1);\n        context.lineTo(x2, y2);\n        context.stroke();\n      }\n    }\n  });\n  var defaultConfig = {\n    position: 'bottom'\n  };\n  var scale_category = core_scale.extend({\n    /**\n    * Internal function to get the correct labels. If data.xLabels or data.yLabels are defined, use those\n    * else fall back to data.labels\n    * @private\n    */\n    getLabels: function getLabels() {\n      var data = this.chart.data;\n      return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var labels = me.getLabels();\n      me.minIndex = 0;\n      me.maxIndex = labels.length - 1;\n      var findIndex;\n\n      if (me.options.ticks.min !== undefined) {\n        // user specified min value\n        findIndex = labels.indexOf(me.options.ticks.min);\n        me.minIndex = findIndex !== -1 ? findIndex : me.minIndex;\n      }\n\n      if (me.options.ticks.max !== undefined) {\n        // user specified max value\n        findIndex = labels.indexOf(me.options.ticks.max);\n        me.maxIndex = findIndex !== -1 ? findIndex : me.maxIndex;\n      }\n\n      me.min = labels[me.minIndex];\n      me.max = labels[me.maxIndex];\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var labels = me.getLabels(); // If we are viewing some subset of labels, slice the original array\n\n      me.ticks = me.minIndex === 0 && me.maxIndex === labels.length - 1 ? labels : labels.slice(me.minIndex, me.maxIndex + 1);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var chart = me.chart;\n\n      if (chart.getDatasetMeta(datasetIndex).controller._getValueScaleId() === me.id) {\n        return me.getRightValue(chart.data.datasets[datasetIndex].data[index]);\n      }\n\n      return me.ticks[index - me.minIndex];\n    },\n    // Used to get data value locations.  Value can either be an index or a numerical value\n    getPixelForValue: function getPixelForValue(value, index) {\n      var me = this;\n      var offset = me.options.offset; // 1 is added because we need the length but we have the indexes\n\n      var offsetAmt = Math.max(me.maxIndex + 1 - me.minIndex - (offset ? 0 : 1), 1); // If value is a data object, then index is the index in the data array,\n      // not the index of the scale. We need to change that.\n\n      var valueCategory;\n\n      if (value !== undefined && value !== null) {\n        valueCategory = me.isHorizontal() ? value.x : value.y;\n      }\n\n      if (valueCategory !== undefined || value !== undefined && isNaN(index)) {\n        var labels = me.getLabels();\n        value = valueCategory || value;\n        var idx = labels.indexOf(value);\n        index = idx !== -1 ? idx : index;\n      }\n\n      if (me.isHorizontal()) {\n        var valueWidth = me.width / offsetAmt;\n        var widthOffset = valueWidth * (index - me.minIndex);\n\n        if (offset) {\n          widthOffset += valueWidth / 2;\n        }\n\n        return me.left + widthOffset;\n      }\n\n      var valueHeight = me.height / offsetAmt;\n      var heightOffset = valueHeight * (index - me.minIndex);\n\n      if (offset) {\n        heightOffset += valueHeight / 2;\n      }\n\n      return me.top + heightOffset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticks[index], index + this.minIndex, null);\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var offset = me.options.offset;\n      var value;\n      var offsetAmt = Math.max(me._ticks.length - (offset ? 0 : 1), 1);\n      var horz = me.isHorizontal();\n      var valueDimension = (horz ? me.width : me.height) / offsetAmt;\n      pixel -= horz ? me.left : me.top;\n\n      if (offset) {\n        pixel -= valueDimension / 2;\n      }\n\n      if (pixel <= 0) {\n        value = 0;\n      } else {\n        value = Math.round(pixel / valueDimension);\n      }\n\n      return value + me.minIndex;\n    },\n    getBasePixel: function getBasePixel() {\n      return this.bottom;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults = defaultConfig;\n  scale_category._defaults = _defaults;\n  var noop = helpers$1.noop;\n  var isNullOrUndef = helpers$1.isNullOrUndef;\n  /**\n   * Generate a set of linear ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks(generationOptions, dataRange) {\n    var ticks = []; // To get a \"nice\" value for the tick spacing, we will use the appropriately named\n    // \"nice number\" algorithm. See https://stackoverflow.com/questions/8506881/nice-label-algorithm-for-charts-with-minimum-ticks\n    // for details.\n\n    var MIN_SPACING = 1e-14;\n    var stepSize = generationOptions.stepSize;\n    var unit = stepSize || 1;\n    var maxNumSpaces = generationOptions.maxTicks - 1;\n    var min = generationOptions.min;\n    var max = generationOptions.max;\n    var precision = generationOptions.precision;\n    var rmin = dataRange.min;\n    var rmax = dataRange.max;\n    var spacing = helpers$1.niceNum((rmax - rmin) / maxNumSpaces / unit) * unit;\n    var factor, niceMin, niceMax, numSpaces; // Beyond MIN_SPACING floating point numbers being to lose precision\n    // such that we can't do the math necessary to generate ticks\n\n    if (spacing < MIN_SPACING && isNullOrUndef(min) && isNullOrUndef(max)) {\n      return [rmin, rmax];\n    }\n\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n\n    if (numSpaces > maxNumSpaces) {\n      // If the calculated num of spaces exceeds maxNumSpaces, recalculate it\n      spacing = helpers$1.niceNum(numSpaces * spacing / maxNumSpaces / unit) * unit;\n    }\n\n    if (stepSize || isNullOrUndef(precision)) {\n      // If a precision is not specified, calculate factor based on spacing\n      factor = Math.pow(10, helpers$1._decimalPlaces(spacing));\n    } else {\n      // If the user specified a precision, round to that number of decimal places\n      factor = Math.pow(10, precision);\n      spacing = Math.ceil(spacing * factor) / factor;\n    }\n\n    niceMin = Math.floor(rmin / spacing) * spacing;\n    niceMax = Math.ceil(rmax / spacing) * spacing; // If min, max and stepSize is set and they make an evenly spaced scale use it.\n\n    if (stepSize) {\n      // If very close to our whole number, use it.\n      if (!isNullOrUndef(min) && helpers$1.almostWhole(min / spacing, spacing / 1000)) {\n        niceMin = min;\n      }\n\n      if (!isNullOrUndef(max) && helpers$1.almostWhole(max / spacing, spacing / 1000)) {\n        niceMax = max;\n      }\n    }\n\n    numSpaces = (niceMax - niceMin) / spacing; // If very close to our rounded value, use it.\n\n    if (helpers$1.almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n      numSpaces = Math.round(numSpaces);\n    } else {\n      numSpaces = Math.ceil(numSpaces);\n    }\n\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    ticks.push(isNullOrUndef(min) ? niceMin : min);\n\n    for (var j = 1; j < numSpaces; ++j) {\n      ticks.push(Math.round((niceMin + j * spacing) * factor) / factor);\n    }\n\n    ticks.push(isNullOrUndef(max) ? niceMax : max);\n    return ticks;\n  }\n\n  var scale_linearbase = core_scale.extend({\n    getRightValue: function getRightValue(value) {\n      if (typeof value === 'string') {\n        return +value;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, value);\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // If we are forcing it to begin at 0, but 0 will already be rendered on the chart,\n      // do nothing since that would make the chart weird. If the user really wants a weird chart\n      // axis, they can manually override it\n\n      if (tickOpts.beginAtZero) {\n        var minSign = helpers$1.sign(me.min);\n        var maxSign = helpers$1.sign(me.max);\n\n        if (minSign < 0 && maxSign < 0) {\n          // move the top up to 0\n          me.max = 0;\n        } else if (minSign > 0 && maxSign > 0) {\n          // move the bottom down to 0\n          me.min = 0;\n        }\n      }\n\n      var setMin = tickOpts.min !== undefined || tickOpts.suggestedMin !== undefined;\n      var setMax = tickOpts.max !== undefined || tickOpts.suggestedMax !== undefined;\n\n      if (tickOpts.min !== undefined) {\n        me.min = tickOpts.min;\n      } else if (tickOpts.suggestedMin !== undefined) {\n        if (me.min === null) {\n          me.min = tickOpts.suggestedMin;\n        } else {\n          me.min = Math.min(me.min, tickOpts.suggestedMin);\n        }\n      }\n\n      if (tickOpts.max !== undefined) {\n        me.max = tickOpts.max;\n      } else if (tickOpts.suggestedMax !== undefined) {\n        if (me.max === null) {\n          me.max = tickOpts.suggestedMax;\n        } else {\n          me.max = Math.max(me.max, tickOpts.suggestedMax);\n        }\n      }\n\n      if (setMin !== setMax) {\n        // We set the min or the max but not both.\n        // So ensure that our range is good\n        // Inverted or 0 length range can happen when\n        // ticks.min is set, and no datasets are visible\n        if (me.min >= me.max) {\n          if (setMin) {\n            me.max = me.min + 1;\n          } else {\n            me.min = me.max - 1;\n          }\n        }\n      }\n\n      if (me.min === me.max) {\n        me.max++;\n\n        if (!tickOpts.beginAtZero) {\n          me.min--;\n        }\n      }\n    },\n    getTickLimit: function getTickLimit() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var stepSize = tickOpts.stepSize;\n      var maxTicksLimit = tickOpts.maxTicksLimit;\n      var maxTicks;\n\n      if (stepSize) {\n        maxTicks = Math.ceil(me.max / stepSize) - Math.floor(me.min / stepSize) + 1;\n      } else {\n        maxTicks = me._computeTickLimit();\n        maxTicksLimit = maxTicksLimit || 11;\n      }\n\n      if (maxTicksLimit) {\n        maxTicks = Math.min(maxTicksLimit, maxTicks);\n      }\n\n      return maxTicks;\n    },\n    _computeTickLimit: function _computeTickLimit() {\n      return Number.POSITIVE_INFINITY;\n    },\n    handleDirectionalChanges: noop,\n    buildTicks: function buildTicks() {\n      var me = this;\n      var opts = me.options;\n      var tickOpts = opts.ticks; // Figure out what the max number of ticks we can support it is based on the size of\n      // the axis area. For now, we say that the minimum tick spacing in pixels must be 40\n      // We also limit the maximum number of ticks to 11 which gives a nice 10 squares on\n      // the graph. Make sure we always have at least 2 ticks\n\n      var maxTicks = me.getTickLimit();\n      maxTicks = Math.max(2, maxTicks);\n      var numericGeneratorOptions = {\n        maxTicks: maxTicks,\n        min: tickOpts.min,\n        max: tickOpts.max,\n        precision: tickOpts.precision,\n        stepSize: helpers$1.valueOrDefault(tickOpts.fixedStepSize, tickOpts.stepSize)\n      };\n      var ticks = me.ticks = generateTicks(numericGeneratorOptions, me);\n      me.handleDirectionalChanges(); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        ticks.reverse();\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      me.ticksAsNumbers = me.ticks.slice();\n      me.zeroLineIndex = me.ticks.indexOf(0);\n      core_scale.prototype.convertTicksToLabels.call(me);\n    }\n  });\n  var defaultConfig$1 = {\n    position: 'left',\n    ticks: {\n      callback: core_ticks.formatters.linear\n    }\n  };\n  var scale_linear = scale_linearbase.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n      var DEFAULT_MIN = 0;\n      var DEFAULT_MAX = 1;\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // First Calculate the range\n\n\n      me.min = null;\n      me.max = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (valuesPerStack[key] === undefined) {\n            valuesPerStack[key] = {\n              positiveValues: [],\n              negativeValues: []\n            };\n          } // Store these per type\n\n\n          var positiveValues = valuesPerStack[key].positiveValues;\n          var negativeValues = valuesPerStack[key].negativeValues;\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              positiveValues[index] = positiveValues[index] || 0;\n              negativeValues[index] = negativeValues[index] || 0;\n\n              if (opts.relativePoints) {\n                positiveValues[index] = 100;\n              } else if (value < 0) {\n                negativeValues[index] += value;\n              } else {\n                positiveValues[index] += value;\n              }\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          var values = valuesForType.positiveValues.concat(valuesForType.negativeValues);\n          var minVal = helpers$1.min(values);\n          var maxVal = helpers$1.max(values);\n          me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n          me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue);\n\n              if (isNaN(value) || meta.data[index].hidden) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n            });\n          }\n        });\n      }\n\n      me.min = isFinite(me.min) && !isNaN(me.min) ? me.min : DEFAULT_MIN;\n      me.max = isFinite(me.max) && !isNaN(me.max) ? me.max : DEFAULT_MAX; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      this.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      var me = this;\n      var tickFont;\n\n      if (me.isHorizontal()) {\n        return Math.ceil(me.width / 40);\n      }\n\n      tickFont = helpers$1.options._parseFont(me.options.ticks);\n      return Math.ceil(me.height / tickFont.lineHeight);\n    },\n    // Called after the ticks are built. We need\n    handleDirectionalChanges: function handleDirectionalChanges() {\n      if (!this.isHorizontal()) {\n        // We are in a vertical orientation. The top value is the highest. So reverse the array\n        this.ticks.reverse();\n      }\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    // Utils\n    getPixelForValue: function getPixelForValue(value) {\n      // This must be called after fit has been run so that\n      // this.left, this.top, this.right, and this.bottom have been defined\n      var me = this;\n      var start = me.start;\n      var rightValue = +me.getRightValue(value);\n      var pixel;\n      var range = me.end - start;\n\n      if (me.isHorizontal()) {\n        pixel = me.left + me.width / range * (rightValue - start);\n      } else {\n        pixel = me.bottom - me.height / range * (rightValue - start);\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var isHorizontal = me.isHorizontal();\n      var innerDimension = isHorizontal ? me.width : me.height;\n      var offset = (isHorizontal ? pixel - me.left : me.bottom - pixel) / innerDimension;\n      return me.start + (me.end - me.start) * offset;\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.ticksAsNumbers[index]);\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$1 = defaultConfig$1;\n  scale_linear._defaults = _defaults$1;\n  var valueOrDefault$a = helpers$1.valueOrDefault;\n  /**\n   * Generate a set of logarithmic ticks\n   * @param generationOptions the options used to generate the ticks\n   * @param dataRange the range of the data\n   * @returns {number[]} array of tick values\n   */\n\n  function generateTicks$1(generationOptions, dataRange) {\n    var ticks = [];\n    var tickVal = valueOrDefault$a(generationOptions.min, Math.pow(10, Math.floor(helpers$1.log10(dataRange.min))));\n    var endExp = Math.floor(helpers$1.log10(dataRange.max));\n    var endSignificand = Math.ceil(dataRange.max / Math.pow(10, endExp));\n    var exp, significand;\n\n    if (tickVal === 0) {\n      exp = Math.floor(helpers$1.log10(dataRange.minNotZero));\n      significand = Math.floor(dataRange.minNotZero / Math.pow(10, exp));\n      ticks.push(tickVal);\n      tickVal = significand * Math.pow(10, exp);\n    } else {\n      exp = Math.floor(helpers$1.log10(tickVal));\n      significand = Math.floor(tickVal / Math.pow(10, exp));\n    }\n\n    var precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n\n    do {\n      ticks.push(tickVal);\n      ++significand;\n\n      if (significand === 10) {\n        significand = 1;\n        ++exp;\n        precision = exp >= 0 ? 1 : precision;\n      }\n\n      tickVal = Math.round(significand * Math.pow(10, exp) * precision) / precision;\n    } while (exp < endExp || exp === endExp && significand < endSignificand);\n\n    var lastTick = valueOrDefault$a(generationOptions.max, tickVal);\n    ticks.push(lastTick);\n    return ticks;\n  }\n\n  var defaultConfig$2 = {\n    position: 'left',\n    // label settings\n    ticks: {\n      callback: core_ticks.formatters.logarithmic\n    }\n  }; // TODO(v3): change this to positiveOrDefault\n\n  function nonNegativeOrDefault(value, defaultValue) {\n    return helpers$1.isFinite(value) && value >= 0 ? value : defaultValue;\n  }\n\n  var scale_logarithmic = core_scale.extend({\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var opts = me.options;\n      var chart = me.chart;\n      var data = chart.data;\n      var datasets = data.datasets;\n      var isHorizontal = me.isHorizontal();\n\n      function IDMatches(meta) {\n        return isHorizontal ? meta.xAxisID === me.id : meta.yAxisID === me.id;\n      } // Calculate Range\n\n\n      me.min = null;\n      me.max = null;\n      me.minNotZero = null;\n      var hasStacks = opts.stacked;\n\n      if (hasStacks === undefined) {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          if (hasStacks) {\n            return;\n          }\n\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta) && meta.stack !== undefined) {\n            hasStacks = true;\n          }\n        });\n      }\n\n      if (opts.stacked || hasStacks) {\n        var valuesPerStack = {};\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          var key = [meta.type, // we have a separate stack for stack=undefined datasets when the opts.stacked is undefined\n          opts.stacked === undefined && meta.stack === undefined ? datasetIndex : '', meta.stack].join('.');\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            if (valuesPerStack[key] === undefined) {\n              valuesPerStack[key] = [];\n            }\n\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var values = valuesPerStack[key];\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              values[index] = values[index] || 0;\n              values[index] += value;\n            });\n          }\n        });\n        helpers$1.each(valuesPerStack, function (valuesForType) {\n          if (valuesForType.length > 0) {\n            var minVal = helpers$1.min(valuesForType);\n            var maxVal = helpers$1.max(valuesForType);\n            me.min = me.min === null ? minVal : Math.min(me.min, minVal);\n            me.max = me.max === null ? maxVal : Math.max(me.max, maxVal);\n          }\n        });\n      } else {\n        helpers$1.each(datasets, function (dataset, datasetIndex) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n\n          if (chart.isDatasetVisible(datasetIndex) && IDMatches(meta)) {\n            helpers$1.each(dataset.data, function (rawValue, index) {\n              var value = +me.getRightValue(rawValue); // invalid, hidden and negative values are ignored\n\n              if (isNaN(value) || meta.data[index].hidden || value < 0) {\n                return;\n              }\n\n              if (me.min === null) {\n                me.min = value;\n              } else if (value < me.min) {\n                me.min = value;\n              }\n\n              if (me.max === null) {\n                me.max = value;\n              } else if (value > me.max) {\n                me.max = value;\n              }\n\n              if (value !== 0 && (me.minNotZero === null || value < me.minNotZero)) {\n                me.minNotZero = value;\n              }\n            });\n          }\n        });\n      } // Common base implementation to handle ticks.min, ticks.max\n\n\n      this.handleTickRangeOptions();\n    },\n    handleTickRangeOptions: function handleTickRangeOptions() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var DEFAULT_MIN = 1;\n      var DEFAULT_MAX = 10;\n      me.min = nonNegativeOrDefault(tickOpts.min, me.min);\n      me.max = nonNegativeOrDefault(tickOpts.max, me.max);\n\n      if (me.min === me.max) {\n        if (me.min !== 0 && me.min !== null) {\n          me.min = Math.pow(10, Math.floor(helpers$1.log10(me.min)) - 1);\n          me.max = Math.pow(10, Math.floor(helpers$1.log10(me.max)) + 1);\n        } else {\n          me.min = DEFAULT_MIN;\n          me.max = DEFAULT_MAX;\n        }\n      }\n\n      if (me.min === null) {\n        me.min = Math.pow(10, Math.floor(helpers$1.log10(me.max)) - 1);\n      }\n\n      if (me.max === null) {\n        me.max = me.min !== 0 ? Math.pow(10, Math.floor(helpers$1.log10(me.min)) + 1) : DEFAULT_MAX;\n      }\n\n      if (me.minNotZero === null) {\n        if (me.min > 0) {\n          me.minNotZero = me.min;\n        } else if (me.max < 1) {\n          me.minNotZero = Math.pow(10, Math.floor(helpers$1.log10(me.max)));\n        } else {\n          me.minNotZero = DEFAULT_MIN;\n        }\n      }\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = !me.isHorizontal();\n      var generationOptions = {\n        min: nonNegativeOrDefault(tickOpts.min),\n        max: nonNegativeOrDefault(tickOpts.max)\n      };\n      var ticks = me.ticks = generateTicks$1(generationOptions, me); // At this point, we need to update our max and min given the tick values since we have expanded the\n      // range of the scale\n\n      me.max = helpers$1.max(ticks);\n      me.min = helpers$1.min(ticks);\n\n      if (tickOpts.reverse) {\n        reverse = !reverse;\n        me.start = me.max;\n        me.end = me.min;\n      } else {\n        me.start = me.min;\n        me.end = me.max;\n      }\n\n      if (reverse) {\n        ticks.reverse();\n      }\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      this.tickValues = this.ticks.slice();\n      core_scale.prototype.convertTicksToLabels.call(this);\n    },\n    // Get the correct tooltip label\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      return this.getPixelForValue(this.tickValues[index]);\n    },\n\n    /**\n     * Returns the value of the first tick.\n     * @param {number} value - The minimum not zero value.\n     * @return {number} The first tick value.\n     * @private\n     */\n    _getFirstTickValue: function _getFirstTickValue(value) {\n      var exp = Math.floor(helpers$1.log10(value));\n      var significand = Math.floor(value / Math.pow(10, exp));\n      return significand * Math.pow(10, exp);\n    },\n    getPixelForValue: function getPixelForValue(value) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var offset = 0;\n      var innerDimension, pixel, start, end, sign;\n      value = +me.getRightValue(value);\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n        sign = -1;\n      } else {\n        start = me.start;\n        end = me.end;\n        sign = 1;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        pixel = reverse ? me.right : me.left;\n      } else {\n        innerDimension = me.height;\n        sign *= -1; // invert, since the upper-left corner of the canvas is at pixel (0, 0)\n\n        pixel = reverse ? me.top : me.bottom;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        if (value !== 0) {\n          offset += innerDimension / (log10(end) - log10(start)) * (log10(value) - log10(start));\n        }\n\n        pixel += sign * offset;\n      }\n\n      return pixel;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var tickOpts = me.options.ticks;\n      var reverse = tickOpts.reverse;\n      var log10 = helpers$1.log10;\n\n      var firstTickValue = me._getFirstTickValue(me.minNotZero);\n\n      var innerDimension, start, end, value;\n\n      if (reverse) {\n        start = me.end;\n        end = me.start;\n      } else {\n        start = me.start;\n        end = me.end;\n      }\n\n      if (me.isHorizontal()) {\n        innerDimension = me.width;\n        value = reverse ? me.right - pixel : pixel - me.left;\n      } else {\n        innerDimension = me.height;\n        value = reverse ? pixel - me.top : me.bottom - pixel;\n      }\n\n      if (value !== start) {\n        if (start === 0) {\n          // include zero tick\n          var offset = valueOrDefault$a(tickOpts.fontSize, core_defaults.global.defaultFontSize);\n          value -= offset;\n          innerDimension -= offset;\n          start = firstTickValue;\n        }\n\n        value *= log10(end) - log10(start);\n        value /= innerDimension;\n        value = Math.pow(10, log10(start) + value);\n      }\n\n      return value;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$2 = defaultConfig$2;\n  scale_logarithmic._defaults = _defaults$2;\n  var valueOrDefault$b = helpers$1.valueOrDefault;\n  var valueAtIndexOrDefault$1 = helpers$1.valueAtIndexOrDefault;\n  var resolve$7 = helpers$1.options.resolve;\n  var defaultConfig$3 = {\n    display: true,\n    // Boolean - Whether to animate scaling the chart from the centre\n    animate: true,\n    position: 'chartArea',\n    angleLines: {\n      display: true,\n      color: 'rgba(0, 0, 0, 0.1)',\n      lineWidth: 1,\n      borderDash: [],\n      borderDashOffset: 0.0\n    },\n    gridLines: {\n      circular: false\n    },\n    // label settings\n    ticks: {\n      // Boolean - Show a backdrop to the scale label\n      showLabelBackdrop: true,\n      // String - The colour of the label backdrop\n      backdropColor: 'rgba(255,255,255,0.75)',\n      // Number - The backdrop padding above & below the label in pixels\n      backdropPaddingY: 2,\n      // Number - The backdrop padding to the side of the label in pixels\n      backdropPaddingX: 2,\n      callback: core_ticks.formatters.linear\n    },\n    pointLabels: {\n      // Boolean - if true, show point labels\n      display: true,\n      // Number - Point label font size in pixels\n      fontSize: 10,\n      // Function - Used to convert point labels\n      callback: function callback(label) {\n        return label;\n      }\n    }\n  };\n\n  function getValueCount(scale) {\n    var opts = scale.options;\n    return opts.angleLines.display || opts.pointLabels.display ? scale.chart.data.labels.length : 0;\n  }\n\n  function getTickBackdropHeight(opts) {\n    var tickOpts = opts.ticks;\n\n    if (tickOpts.display && opts.display) {\n      return valueOrDefault$b(tickOpts.fontSize, core_defaults.global.defaultFontSize) + tickOpts.backdropPaddingY * 2;\n    }\n\n    return 0;\n  }\n\n  function measureLabelSize(ctx, lineHeight, label) {\n    if (helpers$1.isArray(label)) {\n      return {\n        w: helpers$1.longestText(ctx, ctx.font, label),\n        h: label.length * lineHeight\n      };\n    }\n\n    return {\n      w: ctx.measureText(label).width,\n      h: lineHeight\n    };\n  }\n\n  function determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n      return {\n        start: pos - size / 2,\n        end: pos + size / 2\n      };\n    } else if (angle < min || angle > max) {\n      return {\n        start: pos - size,\n        end: pos\n      };\n    }\n\n    return {\n      start: pos,\n      end: pos + size\n    };\n  }\n  /**\n   * Helper function to fit a radial linear scale with point labels\n   */\n\n\n  function fitWithPointLabels(scale) {\n    // Right, this is really confusing and there is a lot of maths going on here\n    // The gist of the problem is here: https://gist.github.com/nnnick/696cc9c55f4b0beb8fe9\n    //\n    // Reaction: https://dl.dropboxusercontent.com/u/34601363/toomuchscience.gif\n    //\n    // Solution:\n    //\n    // We assume the radius of the polygon is half the size of the canvas at first\n    // at each index we check if the text overlaps.\n    //\n    // Where it does, we store that angle and that index.\n    //\n    // After finding the largest index and angle we calculate how much we need to remove\n    // from the shape radius to move the point inwards by that x.\n    //\n    // We average the left and right distances to get the maximum shape radius that can fit in the box\n    // along with labels.\n    //\n    // Once we have that, we can find the centre point for the chart, by taking the x text protrusion\n    // on each side, removing that from the size, halving it and adding the left x protrusion width.\n    //\n    // This will mean we have a shape fitted to the canvas, as large as it can be with the labels\n    // and position it in the most space efficient manner\n    //\n    // https://dl.dropboxusercontent.com/u/34601363/yeahscience.gif\n    var plFont = helpers$1.options._parseFont(scale.options.pointLabels); // Get maximum radius of the polygon. Either half the height (minus the text width) or half the width.\n    // Use this to calculate the offset + change. - Make sure L/R protrusion is at least 0 to stop issues with centre points\n\n\n    var furthestLimits = {\n      l: 0,\n      r: scale.width,\n      t: 0,\n      b: scale.height - scale.paddingTop\n    };\n    var furthestAngles = {};\n    var i, textSize, pointPosition;\n    scale.ctx.font = plFont.string;\n    scale._pointLabelSizes = [];\n    var valueCount = getValueCount(scale);\n\n    for (i = 0; i < valueCount; i++) {\n      pointPosition = scale.getPointPosition(i, scale.drawingArea + 5);\n      textSize = measureLabelSize(scale.ctx, plFont.lineHeight, scale.pointLabels[i] || '');\n      scale._pointLabelSizes[i] = textSize; // Add quarter circle to make degree 0 mean top of circle\n\n      var angleRadians = scale.getIndexAngle(i);\n      var angle = helpers$1.toDegrees(angleRadians) % 360;\n      var hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n      var vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n\n      if (hLimits.start < furthestLimits.l) {\n        furthestLimits.l = hLimits.start;\n        furthestAngles.l = angleRadians;\n      }\n\n      if (hLimits.end > furthestLimits.r) {\n        furthestLimits.r = hLimits.end;\n        furthestAngles.r = angleRadians;\n      }\n\n      if (vLimits.start < furthestLimits.t) {\n        furthestLimits.t = vLimits.start;\n        furthestAngles.t = angleRadians;\n      }\n\n      if (vLimits.end > furthestLimits.b) {\n        furthestLimits.b = vLimits.end;\n        furthestAngles.b = angleRadians;\n      }\n    }\n\n    scale.setReductions(scale.drawingArea, furthestLimits, furthestAngles);\n  }\n\n  function getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n      return 'center';\n    } else if (angle < 180) {\n      return 'left';\n    }\n\n    return 'right';\n  }\n\n  function fillText(ctx, text, position, lineHeight) {\n    var y = position.y + lineHeight / 2;\n    var i, ilen;\n\n    if (helpers$1.isArray(text)) {\n      for (i = 0, ilen = text.length; i < ilen; ++i) {\n        ctx.fillText(text[i], position.x, y);\n        y += lineHeight;\n      }\n    } else {\n      ctx.fillText(text, position.x, y);\n    }\n  }\n\n  function adjustPointPositionForLabelHeight(angle, textSize, position) {\n    if (angle === 90 || angle === 270) {\n      position.y -= textSize.h / 2;\n    } else if (angle > 270 || angle < 90) {\n      position.y -= textSize.h;\n    }\n  }\n\n  function drawPointLabels(scale) {\n    var ctx = scale.ctx;\n    var opts = scale.options;\n    var angleLineOpts = opts.angleLines;\n    var gridLineOpts = opts.gridLines;\n    var pointLabelOpts = opts.pointLabels;\n    var lineWidth = valueOrDefault$b(angleLineOpts.lineWidth, gridLineOpts.lineWidth);\n    var lineColor = valueOrDefault$b(angleLineOpts.color, gridLineOpts.color);\n    var tickBackdropHeight = getTickBackdropHeight(opts);\n    ctx.save();\n    ctx.lineWidth = lineWidth;\n    ctx.strokeStyle = lineColor;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(resolve$7([angleLineOpts.borderDash, gridLineOpts.borderDash, []]));\n      ctx.lineDashOffset = resolve$7([angleLineOpts.borderDashOffset, gridLineOpts.borderDashOffset, 0.0]);\n    }\n\n    var outerDistance = scale.getDistanceFromCenterForValue(opts.ticks.reverse ? scale.min : scale.max); // Point Label Font\n\n    var plFont = helpers$1.options._parseFont(pointLabelOpts);\n\n    ctx.font = plFont.string;\n    ctx.textBaseline = 'middle';\n\n    for (var i = getValueCount(scale) - 1; i >= 0; i--) {\n      if (angleLineOpts.display && lineWidth && lineColor) {\n        var outerPosition = scale.getPointPosition(i, outerDistance);\n        ctx.beginPath();\n        ctx.moveTo(scale.xCenter, scale.yCenter);\n        ctx.lineTo(outerPosition.x, outerPosition.y);\n        ctx.stroke();\n      }\n\n      if (pointLabelOpts.display) {\n        // Extra pixels out for some label spacing\n        var extra = i === 0 ? tickBackdropHeight / 2 : 0;\n        var pointLabelPosition = scale.getPointPosition(i, outerDistance + extra + 5); // Keep this in loop since we may support array properties here\n\n        var pointLabelFontColor = valueAtIndexOrDefault$1(pointLabelOpts.fontColor, i, core_defaults.global.defaultFontColor);\n        ctx.fillStyle = pointLabelFontColor;\n        var angleRadians = scale.getIndexAngle(i);\n        var angle = helpers$1.toDegrees(angleRadians);\n        ctx.textAlign = getTextAlignForAngle(angle);\n        adjustPointPositionForLabelHeight(angle, scale._pointLabelSizes[i], pointLabelPosition);\n        fillText(ctx, scale.pointLabels[i] || '', pointLabelPosition, plFont.lineHeight);\n      }\n    }\n\n    ctx.restore();\n  }\n\n  function drawRadiusLine(scale, gridLineOpts, radius, index) {\n    var ctx = scale.ctx;\n    var circular = gridLineOpts.circular;\n    var valueCount = getValueCount(scale);\n    var lineColor = valueAtIndexOrDefault$1(gridLineOpts.color, index - 1);\n    var lineWidth = valueAtIndexOrDefault$1(gridLineOpts.lineWidth, index - 1);\n    var pointPosition;\n\n    if (!circular && !valueCount || !lineColor || !lineWidth) {\n      return;\n    }\n\n    ctx.save();\n    ctx.strokeStyle = lineColor;\n    ctx.lineWidth = lineWidth;\n\n    if (ctx.setLineDash) {\n      ctx.setLineDash(gridLineOpts.borderDash || []);\n      ctx.lineDashOffset = gridLineOpts.borderDashOffset || 0.0;\n    }\n\n    ctx.beginPath();\n\n    if (circular) {\n      // Draw circular arcs between the points\n      ctx.arc(scale.xCenter, scale.yCenter, radius, 0, Math.PI * 2);\n    } else {\n      // Draw straight lines connecting each index\n      pointPosition = scale.getPointPosition(0, radius);\n      ctx.moveTo(pointPosition.x, pointPosition.y);\n\n      for (var i = 1; i < valueCount; i++) {\n        pointPosition = scale.getPointPosition(i, radius);\n        ctx.lineTo(pointPosition.x, pointPosition.y);\n      }\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n  }\n\n  function numberOrZero(param) {\n    return helpers$1.isNumber(param) ? param : 0;\n  }\n\n  var scale_radialLinear = scale_linearbase.extend({\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      me.width = me.maxWidth;\n      me.height = me.maxHeight;\n      me.paddingTop = getTickBackdropHeight(me.options) / 2;\n      me.xCenter = Math.floor(me.width / 2);\n      me.yCenter = Math.floor((me.height - me.paddingTop) / 2);\n      me.drawingArea = Math.min(me.height - me.paddingTop, me.width) / 2;\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var min = Number.POSITIVE_INFINITY;\n      var max = Number.NEGATIVE_INFINITY;\n      helpers$1.each(chart.data.datasets, function (dataset, datasetIndex) {\n        if (chart.isDatasetVisible(datasetIndex)) {\n          var meta = chart.getDatasetMeta(datasetIndex);\n          helpers$1.each(dataset.data, function (rawValue, index) {\n            var value = +me.getRightValue(rawValue);\n\n            if (isNaN(value) || meta.data[index].hidden) {\n              return;\n            }\n\n            min = Math.min(value, min);\n            max = Math.max(value, max);\n          });\n        }\n      });\n      me.min = min === Number.POSITIVE_INFINITY ? 0 : min;\n      me.max = max === Number.NEGATIVE_INFINITY ? 0 : max; // Common base implementation to handle ticks.min, ticks.max, ticks.beginAtZero\n\n      me.handleTickRangeOptions();\n    },\n    // Returns the maximum number of ticks based on the scale dimension\n    _computeTickLimit: function _computeTickLimit() {\n      return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    },\n    convertTicksToLabels: function convertTicksToLabels() {\n      var me = this;\n      scale_linearbase.prototype.convertTicksToLabels.call(me); // Point labels\n\n      me.pointLabels = me.chart.data.labels.map(me.options.pointLabels.callback, me);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      return +this.getRightValue(this.chart.data.datasets[datasetIndex].data[index]);\n    },\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n\n      if (opts.display && opts.pointLabels.display) {\n        fitWithPointLabels(me);\n      } else {\n        me.setCenterPoint(0, 0, 0, 0);\n      }\n    },\n\n    /**\n     * Set radius reductions and determine new radius and center point\n     * @private\n     */\n    setReductions: function setReductions(largestPossibleRadius, furthestLimits, furthestAngles) {\n      var me = this;\n      var radiusReductionLeft = furthestLimits.l / Math.sin(furthestAngles.l);\n      var radiusReductionRight = Math.max(furthestLimits.r - me.width, 0) / Math.sin(furthestAngles.r);\n      var radiusReductionTop = -furthestLimits.t / Math.cos(furthestAngles.t);\n      var radiusReductionBottom = -Math.max(furthestLimits.b - (me.height - me.paddingTop), 0) / Math.cos(furthestAngles.b);\n      radiusReductionLeft = numberOrZero(radiusReductionLeft);\n      radiusReductionRight = numberOrZero(radiusReductionRight);\n      radiusReductionTop = numberOrZero(radiusReductionTop);\n      radiusReductionBottom = numberOrZero(radiusReductionBottom);\n      me.drawingArea = Math.min(Math.floor(largestPossibleRadius - (radiusReductionLeft + radiusReductionRight) / 2), Math.floor(largestPossibleRadius - (radiusReductionTop + radiusReductionBottom) / 2));\n      me.setCenterPoint(radiusReductionLeft, radiusReductionRight, radiusReductionTop, radiusReductionBottom);\n    },\n    setCenterPoint: function setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n      var me = this;\n      var maxRight = me.width - rightMovement - me.drawingArea;\n      var maxLeft = leftMovement + me.drawingArea;\n      var maxTop = topMovement + me.drawingArea;\n      var maxBottom = me.height - me.paddingTop - bottomMovement - me.drawingArea;\n      me.xCenter = Math.floor((maxLeft + maxRight) / 2 + me.left);\n      me.yCenter = Math.floor((maxTop + maxBottom) / 2 + me.top + me.paddingTop);\n    },\n    getIndexAngle: function getIndexAngle(index) {\n      var angleMultiplier = Math.PI * 2 / getValueCount(this);\n      var startAngle = this.chart.options && this.chart.options.startAngle ? this.chart.options.startAngle : 0;\n      var startAngleRadians = startAngle * Math.PI * 2 / 360; // Start from the top instead of right, so remove a quarter of the circle\n\n      return index * angleMultiplier + startAngleRadians;\n    },\n    getDistanceFromCenterForValue: function getDistanceFromCenterForValue(value) {\n      var me = this;\n\n      if (value === null) {\n        return 0; // null always in center\n      } // Take into account half font size + the yPadding of the top value\n\n\n      var scalingFactor = me.drawingArea / (me.max - me.min);\n\n      if (me.options.ticks.reverse) {\n        return (me.max - value) * scalingFactor;\n      }\n\n      return (value - me.min) * scalingFactor;\n    },\n    getPointPosition: function getPointPosition(index, distanceFromCenter) {\n      var me = this;\n      var thisAngle = me.getIndexAngle(index) - Math.PI / 2;\n      return {\n        x: Math.cos(thisAngle) * distanceFromCenter + me.xCenter,\n        y: Math.sin(thisAngle) * distanceFromCenter + me.yCenter\n      };\n    },\n    getPointPositionForValue: function getPointPositionForValue(index, value) {\n      return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    },\n    getBasePosition: function getBasePosition() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      return me.getPointPositionForValue(0, me.beginAtZero ? 0 : min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0);\n    },\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var gridLineOpts = opts.gridLines;\n      var tickOpts = opts.ticks;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var startAngle = this.getIndexAngle(0);\n\n        var tickFont = helpers$1.options._parseFont(tickOpts);\n\n        if (opts.angleLines.display || opts.pointLabels.display) {\n          drawPointLabels(me);\n        }\n\n        helpers$1.each(me.ticks, function (label, index) {\n          // Don't draw a centre value (if it is minimum)\n          if (index > 0 || tickOpts.reverse) {\n            var yCenterOffset = me.getDistanceFromCenterForValue(me.ticksAsNumbers[index]); // Draw circular lines around the scale\n\n            if (gridLineOpts.display && index !== 0) {\n              drawRadiusLine(me, gridLineOpts, yCenterOffset, index);\n            }\n\n            if (tickOpts.display) {\n              var tickFontColor = valueOrDefault$b(tickOpts.fontColor, core_defaults.global.defaultFontColor);\n              ctx.font = tickFont.string;\n              ctx.save();\n              ctx.translate(me.xCenter, me.yCenter);\n              ctx.rotate(startAngle);\n\n              if (tickOpts.showLabelBackdrop) {\n                var labelWidth = ctx.measureText(label).width;\n                ctx.fillStyle = tickOpts.backdropColor;\n                ctx.fillRect(-labelWidth / 2 - tickOpts.backdropPaddingX, -yCenterOffset - tickFont.size / 2 - tickOpts.backdropPaddingY, labelWidth + tickOpts.backdropPaddingX * 2, tickFont.size + tickOpts.backdropPaddingY * 2);\n              }\n\n              ctx.textAlign = 'center';\n              ctx.textBaseline = 'middle';\n              ctx.fillStyle = tickFontColor;\n              ctx.fillText(label, 0, -yCenterOffset);\n              ctx.restore();\n            }\n          }\n        });\n      }\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$3 = defaultConfig$3;\n  scale_radialLinear._defaults = _defaults$3;\n  var valueOrDefault$c = helpers$1.valueOrDefault; // Integer constants are from the ES6 spec.\n\n  var MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991;\n  var MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;\n  var INTERVALS = {\n    millisecond: {\n      common: true,\n      size: 1,\n      steps: [1, 2, 5, 10, 20, 50, 100, 250, 500]\n    },\n    second: {\n      common: true,\n      size: 1000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    minute: {\n      common: true,\n      size: 60000,\n      steps: [1, 2, 5, 10, 15, 30]\n    },\n    hour: {\n      common: true,\n      size: 3600000,\n      steps: [1, 2, 3, 6, 12]\n    },\n    day: {\n      common: true,\n      size: 86400000,\n      steps: [1, 2, 5]\n    },\n    week: {\n      common: false,\n      size: 604800000,\n      steps: [1, 2, 3, 4]\n    },\n    month: {\n      common: true,\n      size: 2.628e9,\n      steps: [1, 2, 3]\n    },\n    quarter: {\n      common: false,\n      size: 7.884e9,\n      steps: [1, 2, 3, 4]\n    },\n    year: {\n      common: true,\n      size: 3.154e10\n    }\n  };\n  var UNITS = Object.keys(INTERVALS);\n\n  function sorter(a, b) {\n    return a - b;\n  }\n\n  function arrayUnique(items) {\n    var hash = {};\n    var out = [];\n    var i, ilen, item;\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      item = items[i];\n\n      if (!hash[item]) {\n        hash[item] = true;\n        out.push(item);\n      }\n    }\n\n    return out;\n  }\n  /**\n   * Returns an array of {time, pos} objects used to interpolate a specific `time` or position\n   * (`pos`) on the scale, by searching entries before and after the requested value. `pos` is\n   * a decimal between 0 and 1: 0 being the start of the scale (left or top) and 1 the other\n   * extremity (left + width or top + height). Note that it would be more optimized to directly\n   * store pre-computed pixels, but the scale dimensions are not guaranteed at the time we need\n   * to create the lookup table. The table ALWAYS contains at least two items: min and max.\n   *\n   * @param {number[]} timestamps - timestamps sorted from lowest to highest.\n   * @param {string} distribution - If 'linear', timestamps will be spread linearly along the min\n   * and max range, so basically, the table will contains only two items: {min, 0} and {max, 1}.\n   * If 'series', timestamps will be positioned at the same distance from each other. In this\n   * case, only timestamps that break the time linearity are registered, meaning that in the\n   * best case, all timestamps are linear, the table contains only min and max.\n   */\n\n\n  function buildLookupTable(timestamps, min, max, distribution) {\n    if (distribution === 'linear' || !timestamps.length) {\n      return [{\n        time: min,\n        pos: 0\n      }, {\n        time: max,\n        pos: 1\n      }];\n    }\n\n    var table = [];\n    var items = [min];\n    var i, ilen, prev, curr, next;\n\n    for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n      curr = timestamps[i];\n\n      if (curr > min && curr < max) {\n        items.push(curr);\n      }\n    }\n\n    items.push(max);\n\n    for (i = 0, ilen = items.length; i < ilen; ++i) {\n      next = items[i + 1];\n      prev = items[i - 1];\n      curr = items[i]; // only add points that breaks the scale linearity\n\n      if (prev === undefined || next === undefined || Math.round((next + prev) / 2) !== curr) {\n        table.push({\n          time: curr,\n          pos: i / (ilen - 1)\n        });\n      }\n    }\n\n    return table;\n  } // @see adapted from https://www.anujgakhar.com/2014/03/01/binary-search-in-javascript/\n\n\n  function lookup(table, key, value) {\n    var lo = 0;\n    var hi = table.length - 1;\n    var mid, i0, i1;\n\n    while (lo >= 0 && lo <= hi) {\n      mid = lo + hi >> 1;\n      i0 = table[mid - 1] || null;\n      i1 = table[mid];\n\n      if (!i0) {\n        // given value is outside table (before first item)\n        return {\n          lo: null,\n          hi: i1\n        };\n      } else if (i1[key] < value) {\n        lo = mid + 1;\n      } else if (i0[key] > value) {\n        hi = mid - 1;\n      } else {\n        return {\n          lo: i0,\n          hi: i1\n        };\n      }\n    } // given value is outside table (after last item)\n\n\n    return {\n      lo: i1,\n      hi: null\n    };\n  }\n  /**\n   * Linearly interpolates the given source `value` using the table items `skey` values and\n   * returns the associated `tkey` value. For example, interpolate(table, 'time', 42, 'pos')\n   * returns the position for a timestamp equal to 42. If value is out of bounds, values at\n   * index [0, 1] or [n - 1, n] are used for the interpolation.\n   */\n\n\n  function interpolate$1(table, skey, sval, tkey) {\n    var range = lookup(table, skey, sval); // Note: the lookup table ALWAYS contains at least 2 items (min and max)\n\n    var prev = !range.lo ? table[0] : !range.hi ? table[table.length - 2] : range.lo;\n    var next = !range.lo ? table[1] : !range.hi ? table[table.length - 1] : range.hi;\n    var span = next[skey] - prev[skey];\n    var ratio = span ? (sval - prev[skey]) / span : 0;\n    var offset = (next[tkey] - prev[tkey]) * ratio;\n    return prev[tkey] + offset;\n  }\n\n  function toTimestamp(scale, input) {\n    var adapter = scale._adapter;\n    var options = scale.options.time;\n    var parser = options.parser;\n    var format = parser || options.format;\n    var value = input;\n\n    if (typeof parser === 'function') {\n      value = parser(value);\n    } // Only parse if its not a timestamp already\n\n\n    if (!helpers$1.isFinite(value)) {\n      value = typeof format === 'string' ? adapter.parse(value, format) : adapter.parse(value);\n    }\n\n    if (value !== null) {\n      return +value;\n    } // Labels are in an incompatible format and no `parser` has been provided.\n    // The user might still use the deprecated `format` option for parsing.\n\n\n    if (!parser && typeof format === 'function') {\n      value = format(input); // `format` could return something else than a timestamp, if so, parse it\n\n      if (!helpers$1.isFinite(value)) {\n        value = adapter.parse(value);\n      }\n    }\n\n    return value;\n  }\n\n  function parse(scale, input) {\n    if (helpers$1.isNullOrUndef(input)) {\n      return null;\n    }\n\n    var options = scale.options.time;\n    var value = toTimestamp(scale, scale.getRightValue(input));\n\n    if (value === null) {\n      return value;\n    }\n\n    if (options.round) {\n      value = +scale._adapter.startOf(value, options.round);\n    }\n\n    return value;\n  }\n  /**\n   * Returns the number of unit to skip to be able to display up to `capacity` number of ticks\n   * in `unit` for the given `min` / `max` range and respecting the interval steps constraints.\n   */\n\n\n  function determineStepSize(min, max, unit, capacity) {\n    var range = max - min;\n    var interval = INTERVALS[unit];\n    var milliseconds = interval.size;\n    var steps = interval.steps;\n    var i, ilen, factor;\n\n    if (!steps) {\n      return Math.ceil(range / (capacity * milliseconds));\n    }\n\n    for (i = 0, ilen = steps.length; i < ilen; ++i) {\n      factor = steps[i];\n\n      if (Math.ceil(range / (milliseconds * factor)) <= capacity) {\n        break;\n      }\n    }\n\n    return factor;\n  }\n  /**\n   * Figures out what unit results in an appropriate number of auto-generated ticks\n   */\n\n\n  function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    var ilen = UNITS.length;\n    var i, interval, factor;\n\n    for (i = UNITS.indexOf(minUnit); i < ilen - 1; ++i) {\n      interval = INTERVALS[UNITS[i]];\n      factor = interval.steps ? interval.steps[interval.steps.length - 1] : MAX_INTEGER;\n\n      if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n        return UNITS[i];\n      }\n    }\n\n    return UNITS[ilen - 1];\n  }\n  /**\n   * Figures out what unit to format a set of ticks with\n   */\n\n\n  function determineUnitForFormatting(scale, ticks, minUnit, min, max) {\n    var ilen = UNITS.length;\n    var i, unit;\n\n    for (i = ilen - 1; i >= UNITS.indexOf(minUnit); i--) {\n      unit = UNITS[i];\n\n      if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= ticks.length) {\n        return unit;\n      }\n    }\n\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n  }\n\n  function determineMajorUnit(unit) {\n    for (var i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i) {\n      if (INTERVALS[UNITS[i]].common) {\n        return UNITS[i];\n      }\n    }\n  }\n  /**\n   * Generates a maximum of `capacity` timestamps between min and max, rounded to the\n   * `minor` unit, aligned on the `major` unit and using the given scale time `options`.\n   * Important: this method can return ticks outside the min and max range, it's the\n   * responsibility of the calling code to clamp values if needed.\n   */\n\n\n  function generate(scale, min, max, capacity) {\n    var adapter = scale._adapter;\n    var options = scale.options;\n    var timeOpts = options.time;\n    var minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, capacity);\n    var major = determineMajorUnit(minor);\n    var stepSize = valueOrDefault$c(timeOpts.stepSize, timeOpts.unitStepSize);\n    var weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n    var majorTicksEnabled = options.ticks.major.enabled;\n    var interval = INTERVALS[minor];\n    var first = min;\n    var last = max;\n    var ticks = [];\n    var time;\n\n    if (!stepSize) {\n      stepSize = determineStepSize(min, max, minor, capacity);\n    } // For 'week' unit, handle the first day of week option\n\n\n    if (weekday) {\n      first = +adapter.startOf(first, 'isoWeek', weekday);\n      last = +adapter.startOf(last, 'isoWeek', weekday);\n    } // Align first/last ticks on unit\n\n\n    first = +adapter.startOf(first, weekday ? 'day' : minor);\n    last = +adapter.startOf(last, weekday ? 'day' : minor); // Make sure that the last tick include max\n\n    if (last < max) {\n      last = +adapter.add(last, 1, minor);\n    }\n\n    time = first;\n\n    if (majorTicksEnabled && major && !weekday && !timeOpts.round) {\n      // Align the first tick on the previous `minor` unit aligned on the `major` unit:\n      // we first aligned time on the previous `major` unit then add the number of full\n      // stepSize there is between first and the previous major time.\n      time = +adapter.startOf(time, major);\n      time = +adapter.add(time, ~~((first - time) / (interval.size * stepSize)) * stepSize, minor);\n    }\n\n    for (; time < last; time = +adapter.add(time, stepSize, minor)) {\n      ticks.push(+time);\n    }\n\n    ticks.push(+time);\n    return ticks;\n  }\n  /**\n   * Returns the start and end offsets from edges in the form of {start, end}\n   * where each value is a relative width to the scale and ranges between 0 and 1.\n   * They add extra margins on the both sides by scaling down the original scale.\n   * Offsets are added when the `offset` option is true.\n   */\n\n\n  function computeOffsets(table, ticks, min, max, options) {\n    var start = 0;\n    var end = 0;\n    var first, last;\n\n    if (options.offset && ticks.length) {\n      if (!options.time.min) {\n        first = interpolate$1(table, 'time', ticks[0], 'pos');\n\n        if (ticks.length === 1) {\n          start = 1 - first;\n        } else {\n          start = (interpolate$1(table, 'time', ticks[1], 'pos') - first) / 2;\n        }\n      }\n\n      if (!options.time.max) {\n        last = interpolate$1(table, 'time', ticks[ticks.length - 1], 'pos');\n\n        if (ticks.length === 1) {\n          end = last;\n        } else {\n          end = (last - interpolate$1(table, 'time', ticks[ticks.length - 2], 'pos')) / 2;\n        }\n      }\n    }\n\n    return {\n      start: start,\n      end: end\n    };\n  }\n\n  function ticksFromTimestamps(scale, values, majorUnit) {\n    var ticks = [];\n    var i, ilen, value, major;\n\n    for (i = 0, ilen = values.length; i < ilen; ++i) {\n      value = values[i];\n      major = majorUnit ? value === +scale._adapter.startOf(value, majorUnit) : false;\n      ticks.push({\n        value: value,\n        major: major\n      });\n    }\n\n    return ticks;\n  }\n\n  var defaultConfig$4 = {\n    position: 'bottom',\n\n    /**\n     * Data distribution along the scale:\n     * - 'linear': data are spread according to their time (distances can vary),\n     * - 'series': data are spread at the same distance from each other.\n     * @see https://github.com/chartjs/Chart.js/pull/4507\n     * @since 2.7.0\n     */\n    distribution: 'linear',\n\n    /**\n     * Scale boundary strategy (bypassed by min/max time options)\n     * - `data`: make sure data are fully visible, ticks outside are removed\n     * - `ticks`: make sure ticks are fully visible, data outside are truncated\n     * @see https://github.com/chartjs/Chart.js/pull/4556\n     * @since 2.7.0\n     */\n    bounds: 'data',\n    adapters: {},\n    time: {\n      parser: false,\n      // false == a pattern string from https://momentjs.com/docs/#/parsing/string-format/ or a custom callback that converts its argument to a moment\n      format: false,\n      // DEPRECATED false == date objects, moment object, callback or a pattern string from https://momentjs.com/docs/#/parsing/string-format/\n      unit: false,\n      // false == automatic or override with week, month, year, etc.\n      round: false,\n      // none, or override with week, month, year, etc.\n      displayFormat: false,\n      // DEPRECATED\n      isoWeekday: false,\n      // override week start day - see https://momentjs.com/docs/#/get-set/iso-weekday/\n      minUnit: 'millisecond',\n      displayFormats: {}\n    },\n    ticks: {\n      autoSkip: false,\n\n      /**\n       * Ticks generation input values:\n       * - 'auto': generates \"optimal\" ticks based on scale size and time options.\n       * - 'data': generates ticks from data (including labels from data {t|x|y} objects).\n       * - 'labels': generates ticks from user given `data.labels` values ONLY.\n       * @see https://github.com/chartjs/Chart.js/pull/4507\n       * @since 2.7.0\n       */\n      source: 'auto',\n      major: {\n        enabled: false\n      }\n    }\n  };\n  var scale_time = core_scale.extend({\n    initialize: function initialize() {\n      this.mergeTicksOptions();\n      core_scale.prototype.initialize.call(this);\n    },\n    update: function update() {\n      var me = this;\n      var options = me.options;\n      var time = options.time || (options.time = {});\n      var adapter = me._adapter = new core_adapters._date(options.adapters.date); // DEPRECATIONS: output a message only one time per update\n\n      if (time.format) {\n        console.warn('options.time.format is deprecated and replaced by options.time.parser.');\n      } // Backward compatibility: before introducing adapter, `displayFormats` was\n      // supposed to contain *all* unit/string pairs but this can't be resolved\n      // when loading the scale (adapters are loaded afterward), so let's populate\n      // missing formats on update\n\n\n      helpers$1.mergeIf(time.displayFormats, adapter.formats());\n      return core_scale.prototype.update.apply(me, arguments);\n    },\n\n    /**\n     * Allows data to be referenced via 't' attribute\n     */\n    getRightValue: function getRightValue(rawValue) {\n      if (rawValue && rawValue.t !== undefined) {\n        rawValue = rawValue.t;\n      }\n\n      return core_scale.prototype.getRightValue.call(this, rawValue);\n    },\n    determineDataLimits: function determineDataLimits() {\n      var me = this;\n      var chart = me.chart;\n      var adapter = me._adapter;\n      var timeOpts = me.options.time;\n      var unit = timeOpts.unit || 'day';\n      var min = MAX_INTEGER;\n      var max = MIN_INTEGER;\n      var timestamps = [];\n      var datasets = [];\n      var labels = [];\n      var i, j, ilen, jlen, data, timestamp;\n      var dataLabels = chart.data.labels || []; // Convert labels to timestamps\n\n      for (i = 0, ilen = dataLabels.length; i < ilen; ++i) {\n        labels.push(parse(me, dataLabels[i]));\n      } // Convert data to timestamps\n\n\n      for (i = 0, ilen = (chart.data.datasets || []).length; i < ilen; ++i) {\n        if (chart.isDatasetVisible(i)) {\n          data = chart.data.datasets[i].data; // Let's consider that all data have the same format.\n\n          if (helpers$1.isObject(data[0])) {\n            datasets[i] = [];\n\n            for (j = 0, jlen = data.length; j < jlen; ++j) {\n              timestamp = parse(me, data[j]);\n              timestamps.push(timestamp);\n              datasets[i][j] = timestamp;\n            }\n          } else {\n            for (j = 0, jlen = labels.length; j < jlen; ++j) {\n              timestamps.push(labels[j]);\n            }\n\n            datasets[i] = labels.slice(0);\n          }\n        } else {\n          datasets[i] = [];\n        }\n      }\n\n      if (labels.length) {\n        // Sort labels **after** data have been converted\n        labels = arrayUnique(labels).sort(sorter);\n        min = Math.min(min, labels[0]);\n        max = Math.max(max, labels[labels.length - 1]);\n      }\n\n      if (timestamps.length) {\n        timestamps = arrayUnique(timestamps).sort(sorter);\n        min = Math.min(min, timestamps[0]);\n        max = Math.max(max, timestamps[timestamps.length - 1]);\n      }\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // In case there is no valid min/max, set limits based on unit time option\n\n      min = min === MAX_INTEGER ? +adapter.startOf(Date.now(), unit) : min;\n      max = max === MIN_INTEGER ? +adapter.endOf(Date.now(), unit) + 1 : max; // Make sure that max is strictly higher than min (required by the lookup table)\n\n      me.min = Math.min(min, max);\n      me.max = Math.max(min + 1, max); // PRIVATE\n\n      me._horizontal = me.isHorizontal();\n      me._table = [];\n      me._timestamps = {\n        data: timestamps,\n        datasets: datasets,\n        labels: labels\n      };\n    },\n    buildTicks: function buildTicks() {\n      var me = this;\n      var min = me.min;\n      var max = me.max;\n      var options = me.options;\n      var timeOpts = options.time;\n      var timestamps = [];\n      var ticks = [];\n      var i, ilen, timestamp;\n\n      switch (options.ticks.source) {\n        case 'data':\n          timestamps = me._timestamps.data;\n          break;\n\n        case 'labels':\n          timestamps = me._timestamps.labels;\n          break;\n\n        case 'auto':\n        default:\n          timestamps = generate(me, min, max, me.getLabelCapacity(min), options);\n      }\n\n      if (options.bounds === 'ticks' && timestamps.length) {\n        min = timestamps[0];\n        max = timestamps[timestamps.length - 1];\n      } // Enforce limits with user min/max options\n\n\n      min = parse(me, timeOpts.min) || min;\n      max = parse(me, timeOpts.max) || max; // Remove ticks outside the min/max range\n\n      for (i = 0, ilen = timestamps.length; i < ilen; ++i) {\n        timestamp = timestamps[i];\n\n        if (timestamp >= min && timestamp <= max) {\n          ticks.push(timestamp);\n        }\n      }\n\n      me.min = min;\n      me.max = max; // PRIVATE\n\n      me._unit = timeOpts.unit || determineUnitForFormatting(me, ticks, timeOpts.minUnit, me.min, me.max);\n      me._majorUnit = determineMajorUnit(me._unit);\n      me._table = buildLookupTable(me._timestamps.data, min, max, options.distribution);\n      me._offsets = computeOffsets(me._table, ticks, min, max, options);\n\n      if (options.ticks.reverse) {\n        ticks.reverse();\n      }\n\n      return ticksFromTimestamps(me, ticks, me._majorUnit);\n    },\n    getLabelForIndex: function getLabelForIndex(index, datasetIndex) {\n      var me = this;\n      var adapter = me._adapter;\n      var data = me.chart.data;\n      var timeOpts = me.options.time;\n      var label = data.labels && index < data.labels.length ? data.labels[index] : '';\n      var value = data.datasets[datasetIndex].data[index];\n\n      if (helpers$1.isObject(value)) {\n        label = me.getRightValue(value);\n      }\n\n      if (timeOpts.tooltipFormat) {\n        return adapter.format(toTimestamp(me, label), timeOpts.tooltipFormat);\n      }\n\n      if (typeof label === 'string') {\n        return label;\n      }\n\n      return adapter.format(toTimestamp(me, label), timeOpts.displayFormats.datetime);\n    },\n\n    /**\n     * Function to format an individual tick mark\n     * @private\n     */\n    tickFormatFunction: function tickFormatFunction(time, index, ticks, format) {\n      var me = this;\n      var adapter = me._adapter;\n      var options = me.options;\n      var formats = options.time.displayFormats;\n      var minorFormat = formats[me._unit];\n      var majorUnit = me._majorUnit;\n      var majorFormat = formats[majorUnit];\n      var majorTime = +adapter.startOf(time, majorUnit);\n      var majorTickOpts = options.ticks.major;\n      var major = majorTickOpts.enabled && majorUnit && majorFormat && time === majorTime;\n      var label = adapter.format(time, format ? format : major ? majorFormat : minorFormat);\n      var tickOpts = major ? majorTickOpts : options.ticks.minor;\n      var formatter = valueOrDefault$c(tickOpts.callback, tickOpts.userCallback);\n      return formatter ? formatter(label, index, ticks) : label;\n    },\n    convertTicksToLabels: function convertTicksToLabels(ticks) {\n      var labels = [];\n      var i, ilen;\n\n      for (i = 0, ilen = ticks.length; i < ilen; ++i) {\n        labels.push(this.tickFormatFunction(ticks[i].value, i, ticks));\n      }\n\n      return labels;\n    },\n\n    /**\n     * @private\n     */\n    getPixelForOffset: function getPixelForOffset(time) {\n      var me = this;\n      var isReverse = me.options.ticks.reverse;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? isReverse ? me.right : me.left : isReverse ? me.bottom : me.top;\n      var pos = interpolate$1(me._table, 'time', time, 'pos');\n      var offset = size * (me._offsets.start + pos) / (me._offsets.start + 1 + me._offsets.end);\n      return isReverse ? start - offset : start + offset;\n    },\n    getPixelForValue: function getPixelForValue(value, index, datasetIndex) {\n      var me = this;\n      var time = null;\n\n      if (index !== undefined && datasetIndex !== undefined) {\n        time = me._timestamps.datasets[datasetIndex][index];\n      }\n\n      if (time === null) {\n        time = parse(me, value);\n      }\n\n      if (time !== null) {\n        return me.getPixelForOffset(time);\n      }\n    },\n    getPixelForTick: function getPixelForTick(index) {\n      var ticks = this.getTicks();\n      return index >= 0 && index < ticks.length ? this.getPixelForOffset(ticks[index].value) : null;\n    },\n    getValueForPixel: function getValueForPixel(pixel) {\n      var me = this;\n      var size = me._horizontal ? me.width : me.height;\n      var start = me._horizontal ? me.left : me.top;\n      var pos = (size ? (pixel - start) / size : 0) * (me._offsets.start + 1 + me._offsets.start) - me._offsets.end;\n      var time = interpolate$1(me._table, 'pos', pos, 'time'); // DEPRECATION, we should return time directly\n\n      return me._adapter._create(time);\n    },\n\n    /**\n     * Crude approximation of what the label width might be\n     * @private\n     */\n    getLabelWidth: function getLabelWidth(label) {\n      var me = this;\n      var ticksOpts = me.options.ticks;\n      var tickLabelWidth = me.ctx.measureText(label).width;\n      var angle = helpers$1.toRadians(ticksOpts.maxRotation);\n      var cosRotation = Math.cos(angle);\n      var sinRotation = Math.sin(angle);\n      var tickFontSize = valueOrDefault$c(ticksOpts.fontSize, core_defaults.global.defaultFontSize);\n      return tickLabelWidth * cosRotation + tickFontSize * sinRotation;\n    },\n\n    /**\n     * @private\n     */\n    getLabelCapacity: function getLabelCapacity(exampleTime) {\n      var me = this; // pick the longest format (milliseconds) for guestimation\n\n      var format = me.options.time.displayFormats.millisecond;\n      var exampleLabel = me.tickFormatFunction(exampleTime, 0, [], format);\n      var tickLabelWidth = me.getLabelWidth(exampleLabel);\n      var innerWidth = me.isHorizontal() ? me.width : me.height;\n      var capacity = Math.floor(innerWidth / tickLabelWidth);\n      return capacity > 0 ? capacity : 1;\n    }\n  }); // INTERNAL: static default options, registered in src/index.js\n\n  var _defaults$4 = defaultConfig$4;\n  scale_time._defaults = _defaults$4;\n  var scales = {\n    category: scale_category,\n    linear: scale_linear,\n    logarithmic: scale_logarithmic,\n    radialLinear: scale_radialLinear,\n    time: scale_time\n  };\n  var FORMATS = {\n    datetime: 'MMM D, YYYY, h:mm:ss a',\n    millisecond: 'h:mm:ss.SSS a',\n    second: 'h:mm:ss a',\n    minute: 'h:mm a',\n    hour: 'hA',\n    day: 'MMM D',\n    week: 'll',\n    month: 'MMM YYYY',\n    quarter: '[Q]Q - YYYY',\n    year: 'YYYY'\n  };\n\n  core_adapters._date.override(typeof moment === 'function' ? {\n    _id: 'moment',\n    // DEBUG ONLY\n    formats: function formats() {\n      return FORMATS;\n    },\n    parse: function parse(value, format) {\n      if (typeof value === 'string' && typeof format === 'string') {\n        value = moment(value, format);\n      } else if (!(value instanceof moment)) {\n        value = moment(value);\n      }\n\n      return value.isValid() ? value.valueOf() : null;\n    },\n    format: function format(time, _format) {\n      return moment(time).format(_format);\n    },\n    add: function add(time, amount, unit) {\n      return moment(time).add(amount, unit).valueOf();\n    },\n    diff: function diff(max, min, unit) {\n      return moment.duration(moment(max).diff(moment(min))).as(unit);\n    },\n    startOf: function startOf(time, unit, weekday) {\n      time = moment(time);\n\n      if (unit === 'isoWeek') {\n        return time.isoWeekday(weekday).valueOf();\n      }\n\n      return time.startOf(unit).valueOf();\n    },\n    endOf: function endOf(time, unit) {\n      return moment(time).endOf(unit).valueOf();\n    },\n    // DEPRECATIONS\n\n    /**\n     * Provided for backward compatibility with scale.getValueForPixel().\n     * @deprecated since version 2.8.0\n     * @todo remove at version 3\n     * @private\n     */\n    _create: function _create(time) {\n      return moment(time);\n    }\n  } : {});\n\n  core_defaults._set('global', {\n    plugins: {\n      filler: {\n        propagate: true\n      }\n    }\n  });\n\n  var mappers = {\n    dataset: function dataset(source) {\n      var index = source.fill;\n      var chart = source.chart;\n      var meta = chart.getDatasetMeta(index);\n      var visible = meta && chart.isDatasetVisible(index);\n      var points = visible && meta.dataset._children || [];\n      var length = points.length || 0;\n      return !length ? null : function (point, i) {\n        return i < length && points[i]._view || null;\n      };\n    },\n    boundary: function boundary(source) {\n      var boundary = source.boundary;\n      var x = boundary ? boundary.x : null;\n      var y = boundary ? boundary.y : null;\n      return function (point) {\n        return {\n          x: x === null ? point.x : x,\n          y: y === null ? point.y : y\n        };\n      };\n    }\n  }; // @todo if (fill[0] === '#')\n\n  function decodeFill(el, index, count) {\n    var model = el._model || {};\n    var fill = model.fill;\n    var target;\n\n    if (fill === undefined) {\n      fill = !!model.backgroundColor;\n    }\n\n    if (fill === false || fill === null) {\n      return false;\n    }\n\n    if (fill === true) {\n      return 'origin';\n    }\n\n    target = parseFloat(fill, 10);\n\n    if (isFinite(target) && Math.floor(target) === target) {\n      if (fill[0] === '-' || fill[0] === '+') {\n        target = index + target;\n      }\n\n      if (target === index || target < 0 || target >= count) {\n        return false;\n      }\n\n      return target;\n    }\n\n    switch (fill) {\n      // compatibility\n      case 'bottom':\n        return 'start';\n\n      case 'top':\n        return 'end';\n\n      case 'zero':\n        return 'origin';\n      // supported boundaries\n\n      case 'origin':\n      case 'start':\n      case 'end':\n        return fill;\n      // invalid fill values\n\n      default:\n        return false;\n    }\n  }\n\n  function computeBoundary(source) {\n    var model = source.el._model || {};\n    var scale = source.el._scale || {};\n    var fill = source.fill;\n    var target = null;\n    var horizontal;\n\n    if (isFinite(fill)) {\n      return null;\n    } // Backward compatibility: until v3, we still need to support boundary values set on\n    // the model (scaleTop, scaleBottom and scaleZero) because some external plugins and\n    // controllers might still use it (e.g. the Smith chart).\n\n\n    if (fill === 'start') {\n      target = model.scaleBottom === undefined ? scale.bottom : model.scaleBottom;\n    } else if (fill === 'end') {\n      target = model.scaleTop === undefined ? scale.top : model.scaleTop;\n    } else if (model.scaleZero !== undefined) {\n      target = model.scaleZero;\n    } else if (scale.getBasePosition) {\n      target = scale.getBasePosition();\n    } else if (scale.getBasePixel) {\n      target = scale.getBasePixel();\n    }\n\n    if (target !== undefined && target !== null) {\n      if (target.x !== undefined && target.y !== undefined) {\n        return target;\n      }\n\n      if (helpers$1.isFinite(target)) {\n        horizontal = scale.isHorizontal();\n        return {\n          x: horizontal ? target : null,\n          y: horizontal ? null : target\n        };\n      }\n    }\n\n    return null;\n  }\n\n  function resolveTarget(sources, index, propagate) {\n    var source = sources[index];\n    var fill = source.fill;\n    var visited = [index];\n    var target;\n\n    if (!propagate) {\n      return fill;\n    }\n\n    while (fill !== false && visited.indexOf(fill) === -1) {\n      if (!isFinite(fill)) {\n        return fill;\n      }\n\n      target = sources[fill];\n\n      if (!target) {\n        return false;\n      }\n\n      if (target.visible) {\n        return fill;\n      }\n\n      visited.push(fill);\n      fill = target.fill;\n    }\n\n    return false;\n  }\n\n  function createMapper(source) {\n    var fill = source.fill;\n    var type = 'dataset';\n\n    if (fill === false) {\n      return null;\n    }\n\n    if (!isFinite(fill)) {\n      type = 'boundary';\n    }\n\n    return mappers[type](source);\n  }\n\n  function isDrawable(point) {\n    return point && !point.skip;\n  }\n\n  function drawArea(ctx, curve0, curve1, len0, len1) {\n    var i;\n\n    if (!len0 || !len1) {\n      return;\n    } // building first area curve (normal)\n\n\n    ctx.moveTo(curve0[0].x, curve0[0].y);\n\n    for (i = 1; i < len0; ++i) {\n      helpers$1.canvas.lineTo(ctx, curve0[i - 1], curve0[i]);\n    } // joining the two area curves\n\n\n    ctx.lineTo(curve1[len1 - 1].x, curve1[len1 - 1].y); // building opposite area curve (reverse)\n\n    for (i = len1 - 1; i > 0; --i) {\n      helpers$1.canvas.lineTo(ctx, curve1[i], curve1[i - 1], true);\n    }\n  }\n\n  function doFill(ctx, points, mapper, view, color, loop) {\n    var count = points.length;\n    var span = view.spanGaps;\n    var curve0 = [];\n    var curve1 = [];\n    var len0 = 0;\n    var len1 = 0;\n    var i, ilen, index, p0, p1, d0, d1;\n    ctx.beginPath();\n\n    for (i = 0, ilen = count + !!loop; i < ilen; ++i) {\n      index = i % count;\n      p0 = points[index]._view;\n      p1 = mapper(p0, index, view);\n      d0 = isDrawable(p0);\n      d1 = isDrawable(p1);\n\n      if (d0 && d1) {\n        len0 = curve0.push(p0);\n        len1 = curve1.push(p1);\n      } else if (len0 && len1) {\n        if (!span) {\n          drawArea(ctx, curve0, curve1, len0, len1);\n          len0 = len1 = 0;\n          curve0 = [];\n          curve1 = [];\n        } else {\n          if (d0) {\n            curve0.push(p0);\n          }\n\n          if (d1) {\n            curve1.push(p1);\n          }\n        }\n      }\n    }\n\n    drawArea(ctx, curve0, curve1, len0, len1);\n    ctx.closePath();\n    ctx.fillStyle = color;\n    ctx.fill();\n  }\n\n  var plugin_filler = {\n    id: 'filler',\n    afterDatasetsUpdate: function afterDatasetsUpdate(chart, options) {\n      var count = (chart.data.datasets || []).length;\n      var propagate = options.propagate;\n      var sources = [];\n      var meta, i, el, source;\n\n      for (i = 0; i < count; ++i) {\n        meta = chart.getDatasetMeta(i);\n        el = meta.dataset;\n        source = null;\n\n        if (el && el._model && el instanceof elements.Line) {\n          source = {\n            visible: chart.isDatasetVisible(i),\n            fill: decodeFill(el, i, count),\n            chart: chart,\n            el: el\n          };\n        }\n\n        meta.$filler = source;\n        sources.push(source);\n      }\n\n      for (i = 0; i < count; ++i) {\n        source = sources[i];\n\n        if (!source) {\n          continue;\n        }\n\n        source.fill = resolveTarget(sources, i, propagate);\n        source.boundary = computeBoundary(source);\n        source.mapper = createMapper(source);\n      }\n    },\n    beforeDatasetDraw: function beforeDatasetDraw(chart, args) {\n      var meta = args.meta.$filler;\n\n      if (!meta) {\n        return;\n      }\n\n      var ctx = chart.ctx;\n      var el = meta.el;\n      var view = el._view;\n      var points = el._children || [];\n      var mapper = meta.mapper;\n      var color = view.backgroundColor || core_defaults.global.defaultColor;\n\n      if (mapper && color && points.length) {\n        helpers$1.canvas.clipArea(ctx, chart.chartArea);\n        doFill(ctx, points, mapper, view, color, el._loop);\n        helpers$1.canvas.unclipArea(ctx);\n      }\n    }\n  };\n  var noop$1 = helpers$1.noop;\n  var valueOrDefault$d = helpers$1.valueOrDefault;\n\n  core_defaults._set('global', {\n    legend: {\n      display: true,\n      position: 'top',\n      fullWidth: true,\n      reverse: false,\n      weight: 1000,\n      // a callback that will handle\n      onClick: function onClick(e, legendItem) {\n        var index = legendItem.datasetIndex;\n        var ci = this.chart;\n        var meta = ci.getDatasetMeta(index); // See controller.isDatasetVisible comment\n\n        meta.hidden = meta.hidden === null ? !ci.data.datasets[index].hidden : null; // We hid a dataset ... rerender the chart\n\n        ci.update();\n      },\n      onHover: null,\n      onLeave: null,\n      labels: {\n        boxWidth: 40,\n        padding: 10,\n        // Generates labels shown in the legend\n        // Valid properties to return:\n        // text : text to display\n        // fillStyle : fill of coloured box\n        // strokeStyle: stroke of coloured box\n        // hidden : if this legend item refers to a hidden item\n        // lineCap : cap style for line\n        // lineDash\n        // lineDashOffset :\n        // lineJoin :\n        // lineWidth :\n        generateLabels: function generateLabels(chart) {\n          var data = chart.data;\n          return helpers$1.isArray(data.datasets) ? data.datasets.map(function (dataset, i) {\n            return {\n              text: dataset.label,\n              fillStyle: !helpers$1.isArray(dataset.backgroundColor) ? dataset.backgroundColor : dataset.backgroundColor[0],\n              hidden: !chart.isDatasetVisible(i),\n              lineCap: dataset.borderCapStyle,\n              lineDash: dataset.borderDash,\n              lineDashOffset: dataset.borderDashOffset,\n              lineJoin: dataset.borderJoinStyle,\n              lineWidth: dataset.borderWidth,\n              strokeStyle: dataset.borderColor,\n              pointStyle: dataset.pointStyle,\n              // Below is extra data used for toggling the datasets\n              datasetIndex: i\n            };\n          }, this) : [];\n        }\n      }\n    },\n    legendCallback: function legendCallback(chart) {\n      var text = [];\n      text.push('<ul class=\"' + chart.id + '-legend\">');\n\n      for (var i = 0; i < chart.data.datasets.length; i++) {\n        text.push('<li><span style=\"background-color:' + chart.data.datasets[i].backgroundColor + '\"></span>');\n\n        if (chart.data.datasets[i].label) {\n          text.push(chart.data.datasets[i].label);\n        }\n\n        text.push('</li>');\n      }\n\n      text.push('</ul>');\n      return text.join('');\n    }\n  });\n  /**\n   * Helper function to get the box width based on the usePointStyle option\n   * @param {object} labelopts - the label options on the legend\n   * @param {number} fontSize - the label font size\n   * @return {number} width of the color box area\n   */\n\n\n  function getBoxWidth(labelOpts, fontSize) {\n    return labelOpts.usePointStyle && labelOpts.boxWidth > fontSize ? fontSize : labelOpts.boxWidth;\n  }\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Legend = core_element.extend({\n    initialize: function initialize(config) {\n      helpers$1.extend(this, config); // Contains hit boxes for each dataset (in dataset order)\n\n      this.legendHitBoxes = [];\n      /**\n      \t * @private\n      \t */\n\n      this._hoveredItem = null; // Are we in doughnut mode which has a different data type\n\n      this.doughnutMode = false;\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    // Any function defined here is inherited by all legend types.\n    // Any function can be extended by the legend type\n    beforeUpdate: noop$1,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$1,\n    //\n    beforeSetDimensions: noop$1,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$1,\n    //\n    beforeBuildLabels: noop$1,\n    buildLabels: function buildLabels() {\n      var me = this;\n      var labelOpts = me.options.labels || {};\n      var legendItems = helpers$1.callback(labelOpts.generateLabels, [me.chart], me) || [];\n\n      if (labelOpts.filter) {\n        legendItems = legendItems.filter(function (item) {\n          return labelOpts.filter(item, me.chart.data);\n        });\n      }\n\n      if (me.options.reverse) {\n        legendItems.reverse();\n      }\n\n      me.legendItems = legendItems;\n    },\n    afterBuildLabels: noop$1,\n    //\n    beforeFit: noop$1,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var display = opts.display;\n      var ctx = me.ctx;\n\n      var labelFont = helpers$1.options._parseFont(labelOpts);\n\n      var fontSize = labelFont.size; // Reset hit boxes\n\n      var hitboxes = me.legendHitBoxes = [];\n      var minSize = me.minSize;\n      var isHorizontal = me.isHorizontal();\n\n      if (isHorizontal) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = display ? 10 : 0;\n      } else {\n        minSize.width = display ? 10 : 0;\n        minSize.height = me.maxHeight; // fill all the height\n      } // Increase sizes here\n\n\n      if (display) {\n        ctx.font = labelFont.string;\n\n        if (isHorizontal) {\n          // Labels\n          // Width of each line of legend boxes. Labels wrap onto multiple lines when there are too many to fit on one\n          var lineWidths = me.lineWidths = [0];\n          var totalHeight = 0;\n          ctx.textAlign = 'left';\n          ctx.textBaseline = 'top';\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var width = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n\n            if (i === 0 || lineWidths[lineWidths.length - 1] + width + labelOpts.padding > minSize.width) {\n              totalHeight += fontSize + labelOpts.padding;\n              lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = labelOpts.padding;\n            } // Store the hitbox width and height here. Final position will be updated in `draw`\n\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: width,\n              height: fontSize\n            };\n            lineWidths[lineWidths.length - 1] += width + labelOpts.padding;\n          });\n          minSize.height += totalHeight;\n        } else {\n          var vPadding = labelOpts.padding;\n          var columnWidths = me.columnWidths = [];\n          var totalWidth = labelOpts.padding;\n          var currentColWidth = 0;\n          var currentColHeight = 0;\n          var itemHeight = fontSize + vPadding;\n          helpers$1.each(me.legendItems, function (legendItem, i) {\n            var boxWidth = getBoxWidth(labelOpts, fontSize);\n            var itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width; // If too tall, go to new column\n\n            if (i > 0 && currentColHeight + itemHeight > minSize.height - vPadding) {\n              totalWidth += currentColWidth + labelOpts.padding;\n              columnWidths.push(currentColWidth); // previous column width\n\n              currentColWidth = 0;\n              currentColHeight = 0;\n            } // Get max width\n\n\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight; // Store the hitbox width and height here. Final position will be updated in `draw`\n\n            hitboxes[i] = {\n              left: 0,\n              top: 0,\n              width: itemWidth,\n              height: fontSize\n            };\n          });\n          totalWidth += currentColWidth;\n          columnWidths.push(currentColWidth);\n          minSize.width += totalWidth;\n        }\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$1,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      return this.options.position === 'top' || this.options.position === 'bottom';\n    },\n    // Actually draw the legend on the canvas\n    draw: function draw() {\n      var me = this;\n      var opts = me.options;\n      var labelOpts = opts.labels;\n      var globalDefaults = core_defaults.global;\n      var defaultColor = globalDefaults.defaultColor;\n      var lineDefault = globalDefaults.elements.line;\n      var legendWidth = me.width;\n      var lineWidths = me.lineWidths;\n\n      if (opts.display) {\n        var ctx = me.ctx;\n        var fontColor = valueOrDefault$d(labelOpts.fontColor, globalDefaults.defaultFontColor);\n\n        var labelFont = helpers$1.options._parseFont(labelOpts);\n\n        var fontSize = labelFont.size;\n        var cursor; // Canvas setup\n\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.strokeStyle = fontColor; // for strikethrough effect\n\n        ctx.fillStyle = fontColor; // render in correct colour\n\n        ctx.font = labelFont.string;\n        var boxWidth = getBoxWidth(labelOpts, fontSize);\n        var hitboxes = me.legendHitBoxes; // current position\n\n        var drawLegendBox = function drawLegendBox(x, y, legendItem) {\n          if (isNaN(boxWidth) || boxWidth <= 0) {\n            return;\n          } // Set the ctx for the box\n\n\n          ctx.save();\n          var lineWidth = valueOrDefault$d(legendItem.lineWidth, lineDefault.borderWidth);\n          ctx.fillStyle = valueOrDefault$d(legendItem.fillStyle, defaultColor);\n          ctx.lineCap = valueOrDefault$d(legendItem.lineCap, lineDefault.borderCapStyle);\n          ctx.lineDashOffset = valueOrDefault$d(legendItem.lineDashOffset, lineDefault.borderDashOffset);\n          ctx.lineJoin = valueOrDefault$d(legendItem.lineJoin, lineDefault.borderJoinStyle);\n          ctx.lineWidth = lineWidth;\n          ctx.strokeStyle = valueOrDefault$d(legendItem.strokeStyle, defaultColor);\n\n          if (ctx.setLineDash) {\n            // IE 9 and 10 do not support line dash\n            ctx.setLineDash(valueOrDefault$d(legendItem.lineDash, lineDefault.borderDash));\n          }\n\n          if (opts.labels && opts.labels.usePointStyle) {\n            // Recalculate x and y for drawPoint() because its expecting\n            // x and y to be center of figure (instead of top left)\n            var radius = boxWidth * Math.SQRT2 / 2;\n            var centerX = x + boxWidth / 2;\n            var centerY = y + fontSize / 2; // Draw pointStyle as legend symbol\n\n            helpers$1.canvas.drawPoint(ctx, legendItem.pointStyle, radius, centerX, centerY);\n          } else {\n            // Draw box as legend symbol\n            if (lineWidth !== 0) {\n              ctx.strokeRect(x, y, boxWidth, fontSize);\n            }\n\n            ctx.fillRect(x, y, boxWidth, fontSize);\n          }\n\n          ctx.restore();\n        };\n\n        var fillText = function fillText(x, y, legendItem, textWidth) {\n          var halfFontSize = fontSize / 2;\n          var xLeft = boxWidth + halfFontSize + x;\n          var yMiddle = y + halfFontSize;\n          ctx.fillText(legendItem.text, xLeft, yMiddle);\n\n          if (legendItem.hidden) {\n            // Strikethrough the text if hidden\n            ctx.beginPath();\n            ctx.lineWidth = 2;\n            ctx.moveTo(xLeft, yMiddle);\n            ctx.lineTo(xLeft + textWidth, yMiddle);\n            ctx.stroke();\n          }\n        }; // Horizontal\n\n\n        var isHorizontal = me.isHorizontal();\n\n        if (isHorizontal) {\n          cursor = {\n            x: me.left + (legendWidth - lineWidths[0]) / 2 + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        } else {\n          cursor = {\n            x: me.left + labelOpts.padding,\n            y: me.top + labelOpts.padding,\n            line: 0\n          };\n        }\n\n        var itemHeight = fontSize + labelOpts.padding;\n        helpers$1.each(me.legendItems, function (legendItem, i) {\n          var textWidth = ctx.measureText(legendItem.text).width;\n          var width = boxWidth + fontSize / 2 + textWidth;\n          var x = cursor.x;\n          var y = cursor.y; // Use (me.left + me.minSize.width) and (me.top + me.minSize.height)\n          // instead of me.right and me.bottom because me.width and me.height\n          // may have been changed since me.minSize was calculated\n\n          if (isHorizontal) {\n            if (i > 0 && x + width + labelOpts.padding > me.left + me.minSize.width) {\n              y = cursor.y += itemHeight;\n              cursor.line++;\n              x = cursor.x = me.left + (legendWidth - lineWidths[cursor.line]) / 2 + labelOpts.padding;\n            }\n          } else if (i > 0 && y + itemHeight > me.top + me.minSize.height) {\n            x = cursor.x = x + me.columnWidths[cursor.line] + labelOpts.padding;\n            y = cursor.y = me.top + labelOpts.padding;\n            cursor.line++;\n          }\n\n          drawLegendBox(x, y, legendItem);\n          hitboxes[i].left = x;\n          hitboxes[i].top = y; // Fill the actual label\n\n          fillText(x, y, legendItem, textWidth);\n\n          if (isHorizontal) {\n            cursor.x += width + labelOpts.padding;\n          } else {\n            cursor.y += itemHeight;\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getLegendItemAt: function _getLegendItemAt(x, y) {\n      var me = this;\n      var i, hitBox, lh;\n\n      if (x >= me.left && x <= me.right && y >= me.top && y <= me.bottom) {\n        // See if we are touching one of the dataset boxes\n        lh = me.legendHitBoxes;\n\n        for (i = 0; i < lh.length; ++i) {\n          hitBox = lh[i];\n\n          if (x >= hitBox.left && x <= hitBox.left + hitBox.width && y >= hitBox.top && y <= hitBox.top + hitBox.height) {\n            // Touching an element\n            return me.legendItems[i];\n          }\n        }\n      }\n\n      return null;\n    },\n\n    /**\n     * Handle an event\n     * @private\n     * @param {IEvent} event - The event to handle\n     */\n    handleEvent: function handleEvent(e) {\n      var me = this;\n      var opts = me.options;\n      var type = e.type === 'mouseup' ? 'click' : e.type;\n      var hoveredItem;\n\n      if (type === 'mousemove') {\n        if (!opts.onHover && !opts.onLeave) {\n          return;\n        }\n      } else if (type === 'click') {\n        if (!opts.onClick) {\n          return;\n        }\n      } else {\n        return;\n      } // Chart event already has relative position in it\n\n\n      hoveredItem = me._getLegendItemAt(e.x, e.y);\n\n      if (type === 'click') {\n        if (hoveredItem && opts.onClick) {\n          // use e.native for backwards compatibility\n          opts.onClick.call(me, e.native, hoveredItem);\n        }\n      } else {\n        if (opts.onLeave && hoveredItem !== me._hoveredItem) {\n          if (me._hoveredItem) {\n            opts.onLeave.call(me, e.native, me._hoveredItem);\n          }\n\n          me._hoveredItem = hoveredItem;\n        }\n\n        if (opts.onHover && hoveredItem) {\n          // use e.native for backwards compatibility\n          opts.onHover.call(me, e.native, hoveredItem);\n        }\n      }\n    }\n  });\n\n  function createNewLegendAndAttach(chart, legendOpts) {\n    var legend = new Legend({\n      ctx: chart.ctx,\n      options: legendOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, legend, legendOpts);\n    core_layouts.addBox(chart, legend);\n    chart.legend = legend;\n  }\n\n  var plugin_legend = {\n    id: 'legend',\n\n    /**\n     * Backward compatibility: since 2.1.5, the legend is registered as a plugin, making\n     * Chart.Legend obsolete. To avoid a breaking change, we export the Legend as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Legend,\n    beforeInit: function beforeInit(chart) {\n      var legendOpts = chart.options.legend;\n\n      if (legendOpts) {\n        createNewLegendAndAttach(chart, legendOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var legendOpts = chart.options.legend;\n      var legend = chart.legend;\n\n      if (legendOpts) {\n        helpers$1.mergeIf(legendOpts, core_defaults.global.legend);\n\n        if (legend) {\n          core_layouts.configure(chart, legend, legendOpts);\n          legend.options = legendOpts;\n        } else {\n          createNewLegendAndAttach(chart, legendOpts);\n        }\n      } else if (legend) {\n        core_layouts.removeBox(chart, legend);\n        delete chart.legend;\n      }\n    },\n    afterEvent: function afterEvent(chart, e) {\n      var legend = chart.legend;\n\n      if (legend) {\n        legend.handleEvent(e);\n      }\n    }\n  };\n  var noop$2 = helpers$1.noop;\n\n  core_defaults._set('global', {\n    title: {\n      display: false,\n      fontStyle: 'bold',\n      fullWidth: true,\n      padding: 10,\n      position: 'top',\n      text: '',\n      weight: 2000 // by default greater than legend (1000) to be above\n\n    }\n  });\n  /**\n   * IMPORTANT: this class is exposed publicly as Chart.Legend, backward compatibility required!\n   */\n\n\n  var Title = core_element.extend({\n    initialize: function initialize(config) {\n      var me = this;\n      helpers$1.extend(me, config); // Contains hit boxes for each dataset (in dataset order)\n\n      me.legendHitBoxes = [];\n    },\n    // These methods are ordered by lifecycle. Utilities then follow.\n    beforeUpdate: noop$2,\n    update: function update(maxWidth, maxHeight, margins) {\n      var me = this; // Update Lifecycle - Probably don't want to ever extend or overwrite this function ;)\n\n      me.beforeUpdate(); // Absorb the master measurements\n\n      me.maxWidth = maxWidth;\n      me.maxHeight = maxHeight;\n      me.margins = margins; // Dimensions\n\n      me.beforeSetDimensions();\n      me.setDimensions();\n      me.afterSetDimensions(); // Labels\n\n      me.beforeBuildLabels();\n      me.buildLabels();\n      me.afterBuildLabels(); // Fit\n\n      me.beforeFit();\n      me.fit();\n      me.afterFit(); //\n\n      me.afterUpdate();\n      return me.minSize;\n    },\n    afterUpdate: noop$2,\n    //\n    beforeSetDimensions: noop$2,\n    setDimensions: function setDimensions() {\n      var me = this; // Set the unconstrained dimension before label rotation\n\n      if (me.isHorizontal()) {\n        // Reset position before calculating rotation\n        me.width = me.maxWidth;\n        me.left = 0;\n        me.right = me.width;\n      } else {\n        me.height = me.maxHeight; // Reset position before calculating rotation\n\n        me.top = 0;\n        me.bottom = me.height;\n      } // Reset padding\n\n\n      me.paddingLeft = 0;\n      me.paddingTop = 0;\n      me.paddingRight = 0;\n      me.paddingBottom = 0; // Reset minSize\n\n      me.minSize = {\n        width: 0,\n        height: 0\n      };\n    },\n    afterSetDimensions: noop$2,\n    //\n    beforeBuildLabels: noop$2,\n    buildLabels: noop$2,\n    afterBuildLabels: noop$2,\n    //\n    beforeFit: noop$2,\n    fit: function fit() {\n      var me = this;\n      var opts = me.options;\n      var display = opts.display;\n      var minSize = me.minSize;\n      var lineCount = helpers$1.isArray(opts.text) ? opts.text.length : 1;\n\n      var fontOpts = helpers$1.options._parseFont(opts);\n\n      var textSize = display ? lineCount * fontOpts.lineHeight + opts.padding * 2 : 0;\n\n      if (me.isHorizontal()) {\n        minSize.width = me.maxWidth; // fill all the width\n\n        minSize.height = textSize;\n      } else {\n        minSize.width = textSize;\n        minSize.height = me.maxHeight; // fill all the height\n      }\n\n      me.width = minSize.width;\n      me.height = minSize.height;\n    },\n    afterFit: noop$2,\n    // Shared Methods\n    isHorizontal: function isHorizontal() {\n      var pos = this.options.position;\n      return pos === 'top' || pos === 'bottom';\n    },\n    // Actually draw the title block on the canvas\n    draw: function draw() {\n      var me = this;\n      var ctx = me.ctx;\n      var opts = me.options;\n\n      if (opts.display) {\n        var fontOpts = helpers$1.options._parseFont(opts);\n\n        var lineHeight = fontOpts.lineHeight;\n        var offset = lineHeight / 2 + opts.padding;\n        var rotation = 0;\n        var top = me.top;\n        var left = me.left;\n        var bottom = me.bottom;\n        var right = me.right;\n        var maxWidth, titleX, titleY;\n        ctx.fillStyle = helpers$1.valueOrDefault(opts.fontColor, core_defaults.global.defaultFontColor); // render in correct colour\n\n        ctx.font = fontOpts.string; // Horizontal\n\n        if (me.isHorizontal()) {\n          titleX = left + (right - left) / 2; // midpoint of the width\n\n          titleY = top + offset;\n          maxWidth = right - left;\n        } else {\n          titleX = opts.position === 'left' ? left + offset : right - offset;\n          titleY = top + (bottom - top) / 2;\n          maxWidth = bottom - top;\n          rotation = Math.PI * (opts.position === 'left' ? -0.5 : 0.5);\n        }\n\n        ctx.save();\n        ctx.translate(titleX, titleY);\n        ctx.rotate(rotation);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        var text = opts.text;\n\n        if (helpers$1.isArray(text)) {\n          var y = 0;\n\n          for (var i = 0; i < text.length; ++i) {\n            ctx.fillText(text[i], 0, y, maxWidth);\n            y += lineHeight;\n          }\n        } else {\n          ctx.fillText(text, 0, 0, maxWidth);\n        }\n\n        ctx.restore();\n      }\n    }\n  });\n\n  function createNewTitleBlockAndAttach(chart, titleOpts) {\n    var title = new Title({\n      ctx: chart.ctx,\n      options: titleOpts,\n      chart: chart\n    });\n    core_layouts.configure(chart, title, titleOpts);\n    core_layouts.addBox(chart, title);\n    chart.titleBlock = title;\n  }\n\n  var plugin_title = {\n    id: 'title',\n\n    /**\n     * Backward compatibility: since 2.1.5, the title is registered as a plugin, making\n     * Chart.Title obsolete. To avoid a breaking change, we export the Title as part of\n     * the plugin, which one will be re-exposed in the chart.js file.\n     * https://github.com/chartjs/Chart.js/pull/2640\n     * @private\n     */\n    _element: Title,\n    beforeInit: function beforeInit(chart) {\n      var titleOpts = chart.options.title;\n\n      if (titleOpts) {\n        createNewTitleBlockAndAttach(chart, titleOpts);\n      }\n    },\n    beforeUpdate: function beforeUpdate(chart) {\n      var titleOpts = chart.options.title;\n      var titleBlock = chart.titleBlock;\n\n      if (titleOpts) {\n        helpers$1.mergeIf(titleOpts, core_defaults.global.title);\n\n        if (titleBlock) {\n          core_layouts.configure(chart, titleBlock, titleOpts);\n          titleBlock.options = titleOpts;\n        } else {\n          createNewTitleBlockAndAttach(chart, titleOpts);\n        }\n      } else if (titleBlock) {\n        core_layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n      }\n    }\n  };\n  var plugins = {};\n  var filler = plugin_filler;\n  var legend = plugin_legend;\n  var title = plugin_title;\n  plugins.filler = filler;\n  plugins.legend = legend;\n  plugins.title = title;\n  /**\n   * @namespace Chart\n   */\n\n  core_controller.helpers = helpers$1; // @todo dispatch these helpers into appropriated helpers/helpers.* file and write unit tests!\n\n  core_helpers(core_controller);\n  core_controller._adapters = core_adapters;\n  core_controller.Animation = core_animation;\n  core_controller.animationService = core_animations;\n  core_controller.controllers = controllers;\n  core_controller.DatasetController = core_datasetController;\n  core_controller.defaults = core_defaults;\n  core_controller.Element = core_element;\n  core_controller.elements = elements;\n  core_controller.Interaction = core_interaction;\n  core_controller.layouts = core_layouts;\n  core_controller.platform = platform;\n  core_controller.plugins = core_plugins;\n  core_controller.Scale = core_scale;\n  core_controller.scaleService = core_scaleService;\n  core_controller.Ticks = core_ticks;\n  core_controller.Tooltip = core_tooltip; // Register built-in scales\n\n  core_controller.helpers.each(scales, function (scale, type) {\n    core_controller.scaleService.registerScaleType(type, scale, scale._defaults);\n  }); // Load to register built-in adapters (as side effects)\n  // Loading built-in plugins\n\n  for (var k in plugins) {\n    if (plugins.hasOwnProperty(k)) {\n      core_controller.plugins.register(plugins[k]);\n    }\n  }\n\n  core_controller.platform.initialize();\n  var src = core_controller;\n\n  if (typeof window !== 'undefined') {\n    window.Chart = core_controller;\n  } // DEPRECATIONS\n\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Chart\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   * @private\n   */\n\n\n  core_controller.Chart = core_controller;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Legend\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Legend = plugins.legend._element;\n  /**\n   * Provided for backward compatibility, not available anymore\n   * @namespace Chart.Title\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.Title = plugins.title._element;\n  /**\n   * Provided for backward compatibility, use Chart.plugins instead\n   * @namespace Chart.pluginService\n   * @deprecated since version 2.1.5\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.pluginService = core_controller.plugins;\n  /**\n   * Provided for backward compatibility, inheriting from Chart.PlugingBase has no\n   * effect, instead simply create/register plugins via plain JavaScript objects.\n   * @interface Chart.PluginBase\n   * @deprecated since version 2.5.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.PluginBase = core_controller.Element.extend({});\n  /**\n   * Provided for backward compatibility, use Chart.helpers.canvas instead.\n   * @namespace Chart.canvasHelpers\n   * @deprecated since version 2.6.0\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.canvasHelpers = core_controller.helpers.canvas;\n  /**\n   * Provided for backward compatibility, use Chart.layouts instead.\n   * @namespace Chart.layoutService\n   * @deprecated since version 2.7.3\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.layoutService = core_controller.layouts;\n  /**\n   * Provided for backward compatibility, not available anymore.\n   * @namespace Chart.LinearScaleBase\n   * @deprecated since version 2.8\n   * @todo remove at version 3\n   * @private\n   */\n\n  core_controller.LinearScaleBase = scale_linearbase;\n  /**\n   * Provided for backward compatibility, instead we should create a new Chart\n   * by setting the type in the config (`new Chart(id, {type: '{chart-type}'}`).\n   * @deprecated since version 2.8.0\n   * @todo remove at version 3\n   */\n\n  core_controller.helpers.each(['Bar', 'Bubble', 'Doughnut', 'Line', 'PolarArea', 'Radar', 'Scatter'], function (klass) {\n    core_controller[klass] = function (ctx, cfg) {\n      return new core_controller(ctx, core_controller.helpers.merge(cfg || {}, {\n        type: klass.charAt(0).toLowerCase() + klass.slice(1)\n      }));\n    };\n  });\n  return src;\n});","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","//! moment.js\n;\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : global.moment = factory();\n})(this, function () {\n  'use strict';\n\n  var hookCallback;\n\n  function hooks() {\n    return hookCallback.apply(null, arguments);\n  } // This is done to register the method called with moment()\n  // without creating circular dependencies.\n\n\n  function setHookCallback(callback) {\n    hookCallback = callback;\n  }\n\n  function isArray(input) {\n    return input instanceof Array || Object.prototype.toString.call(input) === '[object Array]';\n  }\n\n  function isObject(input) {\n    // IE8 will treat undefined and null as object if it wasn't for\n    // input != null\n    return input != null && Object.prototype.toString.call(input) === '[object Object]';\n  }\n\n  function isObjectEmpty(obj) {\n    if (Object.getOwnPropertyNames) {\n      return Object.getOwnPropertyNames(obj).length === 0;\n    } else {\n      var k;\n\n      for (k in obj) {\n        if (obj.hasOwnProperty(k)) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  function isUndefined(input) {\n    return input === void 0;\n  }\n\n  function isNumber(input) {\n    return typeof input === 'number' || Object.prototype.toString.call(input) === '[object Number]';\n  }\n\n  function isDate(input) {\n    return input instanceof Date || Object.prototype.toString.call(input) === '[object Date]';\n  }\n\n  function map(arr, fn) {\n    var res = [],\n        i;\n\n    for (i = 0; i < arr.length; ++i) {\n      res.push(fn(arr[i], i));\n    }\n\n    return res;\n  }\n\n  function hasOwnProp(a, b) {\n    return Object.prototype.hasOwnProperty.call(a, b);\n  }\n\n  function extend(a, b) {\n    for (var i in b) {\n      if (hasOwnProp(b, i)) {\n        a[i] = b[i];\n      }\n    }\n\n    if (hasOwnProp(b, 'toString')) {\n      a.toString = b.toString;\n    }\n\n    if (hasOwnProp(b, 'valueOf')) {\n      a.valueOf = b.valueOf;\n    }\n\n    return a;\n  }\n\n  function createUTC(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, true).utc();\n  }\n\n  function defaultParsingFlags() {\n    // We need to deep clone this object.\n    return {\n      empty: false,\n      unusedTokens: [],\n      unusedInput: [],\n      overflow: -2,\n      charsLeftOver: 0,\n      nullInput: false,\n      invalidMonth: null,\n      invalidFormat: false,\n      userInvalidated: false,\n      iso: false,\n      parsedDateParts: [],\n      meridiem: null,\n      rfc2822: false,\n      weekdayMismatch: false\n    };\n  }\n\n  function getParsingFlags(m) {\n    if (m._pf == null) {\n      m._pf = defaultParsingFlags();\n    }\n\n    return m._pf;\n  }\n\n  var some;\n\n  if (Array.prototype.some) {\n    some = Array.prototype.some;\n  } else {\n    some = function some(fun) {\n      var t = Object(this);\n      var len = t.length >>> 0;\n\n      for (var i = 0; i < len; i++) {\n        if (i in t && fun.call(this, t[i], i, t)) {\n          return true;\n        }\n      }\n\n      return false;\n    };\n  }\n\n  function isValid(m) {\n    if (m._isValid == null) {\n      var flags = getParsingFlags(m);\n      var parsedParts = some.call(flags.parsedDateParts, function (i) {\n        return i != null;\n      });\n      var isNowValid = !isNaN(m._d.getTime()) && flags.overflow < 0 && !flags.empty && !flags.invalidMonth && !flags.invalidWeekday && !flags.weekdayMismatch && !flags.nullInput && !flags.invalidFormat && !flags.userInvalidated && (!flags.meridiem || flags.meridiem && parsedParts);\n\n      if (m._strict) {\n        isNowValid = isNowValid && flags.charsLeftOver === 0 && flags.unusedTokens.length === 0 && flags.bigHour === undefined;\n      }\n\n      if (Object.isFrozen == null || !Object.isFrozen(m)) {\n        m._isValid = isNowValid;\n      } else {\n        return isNowValid;\n      }\n    }\n\n    return m._isValid;\n  }\n\n  function createInvalid(flags) {\n    var m = createUTC(NaN);\n\n    if (flags != null) {\n      extend(getParsingFlags(m), flags);\n    } else {\n      getParsingFlags(m).userInvalidated = true;\n    }\n\n    return m;\n  } // Plugins that add properties should also add the key here (null value),\n  // so we can properly clone ourselves.\n\n\n  var momentProperties = hooks.momentProperties = [];\n\n  function copyConfig(to, from) {\n    var i, prop, val;\n\n    if (!isUndefined(from._isAMomentObject)) {\n      to._isAMomentObject = from._isAMomentObject;\n    }\n\n    if (!isUndefined(from._i)) {\n      to._i = from._i;\n    }\n\n    if (!isUndefined(from._f)) {\n      to._f = from._f;\n    }\n\n    if (!isUndefined(from._l)) {\n      to._l = from._l;\n    }\n\n    if (!isUndefined(from._strict)) {\n      to._strict = from._strict;\n    }\n\n    if (!isUndefined(from._tzm)) {\n      to._tzm = from._tzm;\n    }\n\n    if (!isUndefined(from._isUTC)) {\n      to._isUTC = from._isUTC;\n    }\n\n    if (!isUndefined(from._offset)) {\n      to._offset = from._offset;\n    }\n\n    if (!isUndefined(from._pf)) {\n      to._pf = getParsingFlags(from);\n    }\n\n    if (!isUndefined(from._locale)) {\n      to._locale = from._locale;\n    }\n\n    if (momentProperties.length > 0) {\n      for (i = 0; i < momentProperties.length; i++) {\n        prop = momentProperties[i];\n        val = from[prop];\n\n        if (!isUndefined(val)) {\n          to[prop] = val;\n        }\n      }\n    }\n\n    return to;\n  }\n\n  var updateInProgress = false; // Moment prototype object\n\n  function Moment(config) {\n    copyConfig(this, config);\n    this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\n    if (!this.isValid()) {\n      this._d = new Date(NaN);\n    } // Prevent infinite loop in case updateOffset creates new moment\n    // objects.\n\n\n    if (updateInProgress === false) {\n      updateInProgress = true;\n      hooks.updateOffset(this);\n      updateInProgress = false;\n    }\n  }\n\n  function isMoment(obj) {\n    return obj instanceof Moment || obj != null && obj._isAMomentObject != null;\n  }\n\n  function absFloor(number) {\n    if (number < 0) {\n      // -0 -> 0\n      return Math.ceil(number) || 0;\n    } else {\n      return Math.floor(number);\n    }\n  }\n\n  function toInt(argumentForCoercion) {\n    var coercedNumber = +argumentForCoercion,\n        value = 0;\n\n    if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n      value = absFloor(coercedNumber);\n    }\n\n    return value;\n  } // compare two arrays, return the number of differences\n\n\n  function compareArrays(array1, array2, dontConvert) {\n    var len = Math.min(array1.length, array2.length),\n        lengthDiff = Math.abs(array1.length - array2.length),\n        diffs = 0,\n        i;\n\n    for (i = 0; i < len; i++) {\n      if (dontConvert && array1[i] !== array2[i] || !dontConvert && toInt(array1[i]) !== toInt(array2[i])) {\n        diffs++;\n      }\n    }\n\n    return diffs + lengthDiff;\n  }\n\n  function warn(msg) {\n    if (hooks.suppressDeprecationWarnings === false && typeof console !== 'undefined' && console.warn) {\n      console.warn('Deprecation warning: ' + msg);\n    }\n  }\n\n  function deprecate(msg, fn) {\n    var firstTime = true;\n    return extend(function () {\n      if (hooks.deprecationHandler != null) {\n        hooks.deprecationHandler(null, msg);\n      }\n\n      if (firstTime) {\n        var args = [];\n        var arg;\n\n        for (var i = 0; i < arguments.length; i++) {\n          arg = '';\n\n          if (typeof arguments[i] === 'object') {\n            arg += '\\n[' + i + '] ';\n\n            for (var key in arguments[0]) {\n              arg += key + ': ' + arguments[0][key] + ', ';\n            }\n\n            arg = arg.slice(0, -2); // Remove trailing comma and space\n          } else {\n            arg = arguments[i];\n          }\n\n          args.push(arg);\n        }\n\n        warn(msg + '\\nArguments: ' + Array.prototype.slice.call(args).join('') + '\\n' + new Error().stack);\n        firstTime = false;\n      }\n\n      return fn.apply(this, arguments);\n    }, fn);\n  }\n\n  var deprecations = {};\n\n  function deprecateSimple(name, msg) {\n    if (hooks.deprecationHandler != null) {\n      hooks.deprecationHandler(name, msg);\n    }\n\n    if (!deprecations[name]) {\n      warn(msg);\n      deprecations[name] = true;\n    }\n  }\n\n  hooks.suppressDeprecationWarnings = false;\n  hooks.deprecationHandler = null;\n\n  function isFunction(input) {\n    return input instanceof Function || Object.prototype.toString.call(input) === '[object Function]';\n  }\n\n  function set(config) {\n    var prop, i;\n\n    for (i in config) {\n      prop = config[i];\n\n      if (isFunction(prop)) {\n        this[i] = prop;\n      } else {\n        this['_' + i] = prop;\n      }\n    }\n\n    this._config = config; // Lenient ordinal parsing accepts just a number in addition to\n    // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n\n    this._dayOfMonthOrdinalParseLenient = new RegExp((this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) + '|' + /\\d{1,2}/.source);\n  }\n\n  function mergeConfigs(parentConfig, childConfig) {\n    var res = extend({}, parentConfig),\n        prop;\n\n    for (prop in childConfig) {\n      if (hasOwnProp(childConfig, prop)) {\n        if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n          res[prop] = {};\n          extend(res[prop], parentConfig[prop]);\n          extend(res[prop], childConfig[prop]);\n        } else if (childConfig[prop] != null) {\n          res[prop] = childConfig[prop];\n        } else {\n          delete res[prop];\n        }\n      }\n    }\n\n    for (prop in parentConfig) {\n      if (hasOwnProp(parentConfig, prop) && !hasOwnProp(childConfig, prop) && isObject(parentConfig[prop])) {\n        // make sure changes to properties don't modify parent config\n        res[prop] = extend({}, res[prop]);\n      }\n    }\n\n    return res;\n  }\n\n  function Locale(config) {\n    if (config != null) {\n      this.set(config);\n    }\n  }\n\n  var keys;\n\n  if (Object.keys) {\n    keys = Object.keys;\n  } else {\n    keys = function keys(obj) {\n      var i,\n          res = [];\n\n      for (i in obj) {\n        if (hasOwnProp(obj, i)) {\n          res.push(i);\n        }\n      }\n\n      return res;\n    };\n  }\n\n  var defaultCalendar = {\n    sameDay: '[Today at] LT',\n    nextDay: '[Tomorrow at] LT',\n    nextWeek: 'dddd [at] LT',\n    lastDay: '[Yesterday at] LT',\n    lastWeek: '[Last] dddd [at] LT',\n    sameElse: 'L'\n  };\n\n  function calendar(key, mom, now) {\n    var output = this._calendar[key] || this._calendar['sameElse'];\n    return isFunction(output) ? output.call(mom, now) : output;\n  }\n\n  var defaultLongDateFormat = {\n    LTS: 'h:mm:ss A',\n    LT: 'h:mm A',\n    L: 'MM/DD/YYYY',\n    LL: 'MMMM D, YYYY',\n    LLL: 'MMMM D, YYYY h:mm A',\n    LLLL: 'dddd, MMMM D, YYYY h:mm A'\n  };\n\n  function longDateFormat(key) {\n    var format = this._longDateFormat[key],\n        formatUpper = this._longDateFormat[key.toUpperCase()];\n\n    if (format || !formatUpper) {\n      return format;\n    }\n\n    this._longDateFormat[key] = formatUpper.replace(/MMMM|MM|DD|dddd/g, function (val) {\n      return val.slice(1);\n    });\n    return this._longDateFormat[key];\n  }\n\n  var defaultInvalidDate = 'Invalid date';\n\n  function invalidDate() {\n    return this._invalidDate;\n  }\n\n  var defaultOrdinal = '%d';\n  var defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n  function ordinal(number) {\n    return this._ordinal.replace('%d', number);\n  }\n\n  var defaultRelativeTime = {\n    future: 'in %s',\n    past: '%s ago',\n    s: 'a few seconds',\n    ss: '%d seconds',\n    m: 'a minute',\n    mm: '%d minutes',\n    h: 'an hour',\n    hh: '%d hours',\n    d: 'a day',\n    dd: '%d days',\n    M: 'a month',\n    MM: '%d months',\n    y: 'a year',\n    yy: '%d years'\n  };\n\n  function relativeTime(number, withoutSuffix, string, isFuture) {\n    var output = this._relativeTime[string];\n    return isFunction(output) ? output(number, withoutSuffix, string, isFuture) : output.replace(/%d/i, number);\n  }\n\n  function pastFuture(diff, output) {\n    var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n    return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n  }\n\n  var aliases = {};\n\n  function addUnitAlias(unit, shorthand) {\n    var lowerCase = unit.toLowerCase();\n    aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n  }\n\n  function normalizeUnits(units) {\n    return typeof units === 'string' ? aliases[units] || aliases[units.toLowerCase()] : undefined;\n  }\n\n  function normalizeObjectUnits(inputObject) {\n    var normalizedInput = {},\n        normalizedProp,\n        prop;\n\n    for (prop in inputObject) {\n      if (hasOwnProp(inputObject, prop)) {\n        normalizedProp = normalizeUnits(prop);\n\n        if (normalizedProp) {\n          normalizedInput[normalizedProp] = inputObject[prop];\n        }\n      }\n    }\n\n    return normalizedInput;\n  }\n\n  var priorities = {};\n\n  function addUnitPriority(unit, priority) {\n    priorities[unit] = priority;\n  }\n\n  function getPrioritizedUnits(unitsObj) {\n    var units = [];\n\n    for (var u in unitsObj) {\n      units.push({\n        unit: u,\n        priority: priorities[u]\n      });\n    }\n\n    units.sort(function (a, b) {\n      return a.priority - b.priority;\n    });\n    return units;\n  }\n\n  function zeroFill(number, targetLength, forceSign) {\n    var absNumber = '' + Math.abs(number),\n        zerosToFill = targetLength - absNumber.length,\n        sign = number >= 0;\n    return (sign ? forceSign ? '+' : '' : '-') + Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) + absNumber;\n  }\n\n  var formattingTokens = /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|YYYYYY|YYYYY|YYYY|YY|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g;\n  var localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g;\n  var formatFunctions = {};\n  var formatTokenFunctions = {}; // token:    'M'\n  // padded:   ['MM', 2]\n  // ordinal:  'Mo'\n  // callback: function () { this.month() + 1 }\n\n  function addFormatToken(token, padded, ordinal, callback) {\n    var func = callback;\n\n    if (typeof callback === 'string') {\n      func = function func() {\n        return this[callback]();\n      };\n    }\n\n    if (token) {\n      formatTokenFunctions[token] = func;\n    }\n\n    if (padded) {\n      formatTokenFunctions[padded[0]] = function () {\n        return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n      };\n    }\n\n    if (ordinal) {\n      formatTokenFunctions[ordinal] = function () {\n        return this.localeData().ordinal(func.apply(this, arguments), token);\n      };\n    }\n  }\n\n  function removeFormattingTokens(input) {\n    if (input.match(/\\[[\\s\\S]/)) {\n      return input.replace(/^\\[|\\]$/g, '');\n    }\n\n    return input.replace(/\\\\/g, '');\n  }\n\n  function makeFormatFunction(format) {\n    var array = format.match(formattingTokens),\n        i,\n        length;\n\n    for (i = 0, length = array.length; i < length; i++) {\n      if (formatTokenFunctions[array[i]]) {\n        array[i] = formatTokenFunctions[array[i]];\n      } else {\n        array[i] = removeFormattingTokens(array[i]);\n      }\n    }\n\n    return function (mom) {\n      var output = '',\n          i;\n\n      for (i = 0; i < length; i++) {\n        output += isFunction(array[i]) ? array[i].call(mom, format) : array[i];\n      }\n\n      return output;\n    };\n  } // format date using native date object\n\n\n  function formatMoment(m, format) {\n    if (!m.isValid()) {\n      return m.localeData().invalidDate();\n    }\n\n    format = expandFormat(format, m.localeData());\n    formatFunctions[format] = formatFunctions[format] || makeFormatFunction(format);\n    return formatFunctions[format](m);\n  }\n\n  function expandFormat(format, locale) {\n    var i = 5;\n\n    function replaceLongDateFormatTokens(input) {\n      return locale.longDateFormat(input) || input;\n    }\n\n    localFormattingTokens.lastIndex = 0;\n\n    while (i >= 0 && localFormattingTokens.test(format)) {\n      format = format.replace(localFormattingTokens, replaceLongDateFormatTokens);\n      localFormattingTokens.lastIndex = 0;\n      i -= 1;\n    }\n\n    return format;\n  }\n\n  var match1 = /\\d/; //       0 - 9\n\n  var match2 = /\\d\\d/; //      00 - 99\n\n  var match3 = /\\d{3}/; //     000 - 999\n\n  var match4 = /\\d{4}/; //    0000 - 9999\n\n  var match6 = /[+-]?\\d{6}/; // -999999 - 999999\n\n  var match1to2 = /\\d\\d?/; //       0 - 99\n\n  var match3to4 = /\\d\\d\\d\\d?/; //     999 - 9999\n\n  var match5to6 = /\\d\\d\\d\\d\\d\\d?/; //   99999 - 999999\n\n  var match1to3 = /\\d{1,3}/; //       0 - 999\n\n  var match1to4 = /\\d{1,4}/; //       0 - 9999\n\n  var match1to6 = /[+-]?\\d{1,6}/; // -999999 - 999999\n\n  var matchUnsigned = /\\d+/; //       0 - inf\n\n  var matchSigned = /[+-]?\\d+/; //    -inf - inf\n\n  var matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi; // +00:00 -00:00 +0000 -0000 or Z\n\n  var matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi; // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\n  var matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/; // 123456789 123456789.123\n  // any word (or two) characters or numbers including two/three word month in arabic.\n  // includes scottish gaelic two word and hyphenated months\n\n  var matchWord = /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i;\n  var regexes = {};\n\n  function addRegexToken(token, regex, strictRegex) {\n    regexes[token] = isFunction(regex) ? regex : function (isStrict, localeData) {\n      return isStrict && strictRegex ? strictRegex : regex;\n    };\n  }\n\n  function getParseRegexForToken(token, config) {\n    if (!hasOwnProp(regexes, token)) {\n      return new RegExp(unescapeFormat(token));\n    }\n\n    return regexes[token](config._strict, config._locale);\n  } // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\n\n  function unescapeFormat(s) {\n    return regexEscape(s.replace('\\\\', '').replace(/\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g, function (matched, p1, p2, p3, p4) {\n      return p1 || p2 || p3 || p4;\n    }));\n  }\n\n  function regexEscape(s) {\n    return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n  }\n\n  var tokens = {};\n\n  function addParseToken(token, callback) {\n    var i,\n        func = callback;\n\n    if (typeof token === 'string') {\n      token = [token];\n    }\n\n    if (isNumber(callback)) {\n      func = function func(input, array) {\n        array[callback] = toInt(input);\n      };\n    }\n\n    for (i = 0; i < token.length; i++) {\n      tokens[token[i]] = func;\n    }\n  }\n\n  function addWeekParseToken(token, callback) {\n    addParseToken(token, function (input, array, config, token) {\n      config._w = config._w || {};\n      callback(input, config._w, config, token);\n    });\n  }\n\n  function addTimeToArrayFromToken(token, input, config) {\n    if (input != null && hasOwnProp(tokens, token)) {\n      tokens[token](input, config._a, config, token);\n    }\n  }\n\n  var YEAR = 0;\n  var MONTH = 1;\n  var DATE = 2;\n  var HOUR = 3;\n  var MINUTE = 4;\n  var SECOND = 5;\n  var MILLISECOND = 6;\n  var WEEK = 7;\n  var WEEKDAY = 8; // FORMATTING\n\n  addFormatToken('Y', 0, 0, function () {\n    var y = this.year();\n    return y <= 9999 ? '' + y : '+' + y;\n  });\n  addFormatToken(0, ['YY', 2], 0, function () {\n    return this.year() % 100;\n  });\n  addFormatToken(0, ['YYYY', 4], 0, 'year');\n  addFormatToken(0, ['YYYYY', 5], 0, 'year');\n  addFormatToken(0, ['YYYYYY', 6, true], 0, 'year'); // ALIASES\n\n  addUnitAlias('year', 'y'); // PRIORITIES\n\n  addUnitPriority('year', 1); // PARSING\n\n  addRegexToken('Y', matchSigned);\n  addRegexToken('YY', match1to2, match2);\n  addRegexToken('YYYY', match1to4, match4);\n  addRegexToken('YYYYY', match1to6, match6);\n  addRegexToken('YYYYYY', match1to6, match6);\n  addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n  addParseToken('YYYY', function (input, array) {\n    array[YEAR] = input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n  });\n  addParseToken('YY', function (input, array) {\n    array[YEAR] = hooks.parseTwoDigitYear(input);\n  });\n  addParseToken('Y', function (input, array) {\n    array[YEAR] = parseInt(input, 10);\n  }); // HELPERS\n\n  function daysInYear(year) {\n    return isLeapYear(year) ? 366 : 365;\n  }\n\n  function isLeapYear(year) {\n    return year % 4 === 0 && year % 100 !== 0 || year % 400 === 0;\n  } // HOOKS\n\n\n  hooks.parseTwoDigitYear = function (input) {\n    return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n  }; // MOMENTS\n\n\n  var getSetYear = makeGetSet('FullYear', true);\n\n  function getIsLeapYear() {\n    return isLeapYear(this.year());\n  }\n\n  function makeGetSet(unit, keepTime) {\n    return function (value) {\n      if (value != null) {\n        set$1(this, unit, value);\n        hooks.updateOffset(this, keepTime);\n        return this;\n      } else {\n        return get(this, unit);\n      }\n    };\n  }\n\n  function get(mom, unit) {\n    return mom.isValid() ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]() : NaN;\n  }\n\n  function set$1(mom, unit, value) {\n    if (mom.isValid() && !isNaN(value)) {\n      if (unit === 'FullYear' && isLeapYear(mom.year()) && mom.month() === 1 && mom.date() === 29) {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value, mom.month(), daysInMonth(value, mom.month()));\n      } else {\n        mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n      }\n    }\n  } // MOMENTS\n\n\n  function stringGet(units) {\n    units = normalizeUnits(units);\n\n    if (isFunction(this[units])) {\n      return this[units]();\n    }\n\n    return this;\n  }\n\n  function stringSet(units, value) {\n    if (typeof units === 'object') {\n      units = normalizeObjectUnits(units);\n      var prioritized = getPrioritizedUnits(units);\n\n      for (var i = 0; i < prioritized.length; i++) {\n        this[prioritized[i].unit](units[prioritized[i].unit]);\n      }\n    } else {\n      units = normalizeUnits(units);\n\n      if (isFunction(this[units])) {\n        return this[units](value);\n      }\n    }\n\n    return this;\n  }\n\n  function mod(n, x) {\n    return (n % x + x) % x;\n  }\n\n  var indexOf;\n\n  if (Array.prototype.indexOf) {\n    indexOf = Array.prototype.indexOf;\n  } else {\n    indexOf = function indexOf(o) {\n      // I know\n      var i;\n\n      for (i = 0; i < this.length; ++i) {\n        if (this[i] === o) {\n          return i;\n        }\n      }\n\n      return -1;\n    };\n  }\n\n  function daysInMonth(year, month) {\n    if (isNaN(year) || isNaN(month)) {\n      return NaN;\n    }\n\n    var modMonth = mod(month, 12);\n    year += (month - modMonth) / 12;\n    return modMonth === 1 ? isLeapYear(year) ? 29 : 28 : 31 - modMonth % 7 % 2;\n  } // FORMATTING\n\n\n  addFormatToken('M', ['MM', 2], 'Mo', function () {\n    return this.month() + 1;\n  });\n  addFormatToken('MMM', 0, 0, function (format) {\n    return this.localeData().monthsShort(this, format);\n  });\n  addFormatToken('MMMM', 0, 0, function (format) {\n    return this.localeData().months(this, format);\n  }); // ALIASES\n\n  addUnitAlias('month', 'M'); // PRIORITY\n\n  addUnitPriority('month', 8); // PARSING\n\n  addRegexToken('M', match1to2);\n  addRegexToken('MM', match1to2, match2);\n  addRegexToken('MMM', function (isStrict, locale) {\n    return locale.monthsShortRegex(isStrict);\n  });\n  addRegexToken('MMMM', function (isStrict, locale) {\n    return locale.monthsRegex(isStrict);\n  });\n  addParseToken(['M', 'MM'], function (input, array) {\n    array[MONTH] = toInt(input) - 1;\n  });\n  addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n    var month = config._locale.monthsParse(input, token, config._strict); // if we didn't find a month name, mark the date as invalid.\n\n\n    if (month != null) {\n      array[MONTH] = month;\n    } else {\n      getParsingFlags(config).invalidMonth = input;\n    }\n  }); // LOCALES\n\n  var MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/;\n  var defaultLocaleMonths = 'January_February_March_April_May_June_July_August_September_October_November_December'.split('_');\n\n  function localeMonths(m, format) {\n    if (!m) {\n      return isArray(this._months) ? this._months : this._months['standalone'];\n    }\n\n    return isArray(this._months) ? this._months[m.month()] : this._months[(this._months.isFormat || MONTHS_IN_FORMAT).test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  var defaultLocaleMonthsShort = 'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_');\n\n  function localeMonthsShort(m, format) {\n    if (!m) {\n      return isArray(this._monthsShort) ? this._monthsShort : this._monthsShort['standalone'];\n    }\n\n    return isArray(this._monthsShort) ? this._monthsShort[m.month()] : this._monthsShort[MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'][m.month()];\n  }\n\n  function handleStrictParse(monthName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = monthName.toLocaleLowerCase();\n\n    if (!this._monthsParse) {\n      // this is not used\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n\n      for (i = 0; i < 12; ++i) {\n        mom = createUTC([2000, i]);\n        this._shortMonthsParse[i] = this.monthsShort(mom, '').toLocaleLowerCase();\n        this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'MMM') {\n        ii = indexOf.call(this._shortMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._longMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._longMonthsParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortMonthsParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeMonthsParse(monthName, format, strict) {\n    var i, mom, regex;\n\n    if (this._monthsParseExact) {\n      return handleStrictParse.call(this, monthName, format, strict);\n    }\n\n    if (!this._monthsParse) {\n      this._monthsParse = [];\n      this._longMonthsParse = [];\n      this._shortMonthsParse = [];\n    } // TODO: add sorting\n    // Sorting makes sure if one month (or abbr) is a prefix of another\n    // see sorting in computeMonthsParse\n\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n\n      if (strict && !this._longMonthsParse[i]) {\n        this._longMonthsParse[i] = new RegExp('^' + this.months(mom, '').replace('.', '') + '$', 'i');\n        this._shortMonthsParse[i] = new RegExp('^' + this.monthsShort(mom, '').replace('.', '') + '$', 'i');\n      }\n\n      if (!strict && !this._monthsParse[i]) {\n        regex = '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n        this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'MMMM' && this._longMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (strict && format === 'MMM' && this._shortMonthsParse[i].test(monthName)) {\n        return i;\n      } else if (!strict && this._monthsParse[i].test(monthName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function setMonth(mom, value) {\n    var dayOfMonth;\n\n    if (!mom.isValid()) {\n      // No op\n      return mom;\n    }\n\n    if (typeof value === 'string') {\n      if (/^\\d+$/.test(value)) {\n        value = toInt(value);\n      } else {\n        value = mom.localeData().monthsParse(value); // TODO: Another silent failure?\n\n        if (!isNumber(value)) {\n          return mom;\n        }\n      }\n    }\n\n    dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\n    mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\n    return mom;\n  }\n\n  function getSetMonth(value) {\n    if (value != null) {\n      setMonth(this, value);\n      hooks.updateOffset(this, true);\n      return this;\n    } else {\n      return get(this, 'Month');\n    }\n  }\n\n  function getDaysInMonth() {\n    return daysInMonth(this.year(), this.month());\n  }\n\n  var defaultMonthsShortRegex = matchWord;\n\n  function monthsShortRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsShortStrictRegex;\n      } else {\n        return this._monthsShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsShortRegex')) {\n        this._monthsShortRegex = defaultMonthsShortRegex;\n      }\n\n      return this._monthsShortStrictRegex && isStrict ? this._monthsShortStrictRegex : this._monthsShortRegex;\n    }\n  }\n\n  var defaultMonthsRegex = matchWord;\n\n  function monthsRegex(isStrict) {\n    if (this._monthsParseExact) {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        computeMonthsParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._monthsStrictRegex;\n      } else {\n        return this._monthsRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_monthsRegex')) {\n        this._monthsRegex = defaultMonthsRegex;\n      }\n\n      return this._monthsStrictRegex && isStrict ? this._monthsStrictRegex : this._monthsRegex;\n    }\n  }\n\n  function computeMonthsParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom;\n\n    for (i = 0; i < 12; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, i]);\n      shortPieces.push(this.monthsShort(mom, ''));\n      longPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.months(mom, ''));\n      mixedPieces.push(this.monthsShort(mom, ''));\n    } // Sorting makes sure if one month (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 12; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n    }\n\n    for (i = 0; i < 24; i++) {\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._monthsShortRegex = this._monthsRegex;\n    this._monthsStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._monthsShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n  }\n\n  function createDate(y, m, d, h, M, s, ms) {\n    // can't just apply() to create a date:\n    // https://stackoverflow.com/q/181348\n    var date; // the date constructor remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      date = new Date(y + 400, m, d, h, M, s, ms);\n\n      if (isFinite(date.getFullYear())) {\n        date.setFullYear(y);\n      }\n    } else {\n      date = new Date(y, m, d, h, M, s, ms);\n    }\n\n    return date;\n  }\n\n  function createUTCDate(y) {\n    var date; // the Date.UTC function remaps years 0-99 to 1900-1999\n\n    if (y < 100 && y >= 0) {\n      var args = Array.prototype.slice.call(arguments); // preserve leap years using a full 400 year cycle, then reset\n\n      args[0] = y + 400;\n      date = new Date(Date.UTC.apply(null, args));\n\n      if (isFinite(date.getUTCFullYear())) {\n        date.setUTCFullYear(y);\n      }\n    } else {\n      date = new Date(Date.UTC.apply(null, arguments));\n    }\n\n    return date;\n  } // start-of-first-week - start-of-year\n\n\n  function firstWeekOffset(year, dow, doy) {\n    var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n    fwd = 7 + dow - doy,\n        // first-week day local weekday -- which local weekday is fwd\n    fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n    return -fwdlw + fwd - 1;\n  } // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\n\n  function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n    var localWeekday = (7 + weekday - dow) % 7,\n        weekOffset = firstWeekOffset(year, dow, doy),\n        dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n        resYear,\n        resDayOfYear;\n\n    if (dayOfYear <= 0) {\n      resYear = year - 1;\n      resDayOfYear = daysInYear(resYear) + dayOfYear;\n    } else if (dayOfYear > daysInYear(year)) {\n      resYear = year + 1;\n      resDayOfYear = dayOfYear - daysInYear(year);\n    } else {\n      resYear = year;\n      resDayOfYear = dayOfYear;\n    }\n\n    return {\n      year: resYear,\n      dayOfYear: resDayOfYear\n    };\n  }\n\n  function weekOfYear(mom, dow, doy) {\n    var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n        week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n        resWeek,\n        resYear;\n\n    if (week < 1) {\n      resYear = mom.year() - 1;\n      resWeek = week + weeksInYear(resYear, dow, doy);\n    } else if (week > weeksInYear(mom.year(), dow, doy)) {\n      resWeek = week - weeksInYear(mom.year(), dow, doy);\n      resYear = mom.year() + 1;\n    } else {\n      resYear = mom.year();\n      resWeek = week;\n    }\n\n    return {\n      week: resWeek,\n      year: resYear\n    };\n  }\n\n  function weeksInYear(year, dow, doy) {\n    var weekOffset = firstWeekOffset(year, dow, doy),\n        weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n    return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n  } // FORMATTING\n\n\n  addFormatToken('w', ['ww', 2], 'wo', 'week');\n  addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek'); // ALIASES\n\n  addUnitAlias('week', 'w');\n  addUnitAlias('isoWeek', 'W'); // PRIORITIES\n\n  addUnitPriority('week', 5);\n  addUnitPriority('isoWeek', 5); // PARSING\n\n  addRegexToken('w', match1to2);\n  addRegexToken('ww', match1to2, match2);\n  addRegexToken('W', match1to2);\n  addRegexToken('WW', match1to2, match2);\n  addWeekParseToken(['w', 'ww', 'W', 'WW'], function (input, week, config, token) {\n    week[token.substr(0, 1)] = toInt(input);\n  }); // HELPERS\n  // LOCALES\n\n  function localeWeek(mom) {\n    return weekOfYear(mom, this._week.dow, this._week.doy).week;\n  }\n\n  var defaultLocaleWeek = {\n    dow: 0,\n    // Sunday is the first day of the week.\n    doy: 6 // The week that contains Jan 6th is the first week of the year.\n\n  };\n\n  function localeFirstDayOfWeek() {\n    return this._week.dow;\n  }\n\n  function localeFirstDayOfYear() {\n    return this._week.doy;\n  } // MOMENTS\n\n\n  function getSetWeek(input) {\n    var week = this.localeData().week(this);\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  }\n\n  function getSetISOWeek(input) {\n    var week = weekOfYear(this, 1, 4).week;\n    return input == null ? week : this.add((input - week) * 7, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('d', 0, 'do', 'day');\n  addFormatToken('dd', 0, 0, function (format) {\n    return this.localeData().weekdaysMin(this, format);\n  });\n  addFormatToken('ddd', 0, 0, function (format) {\n    return this.localeData().weekdaysShort(this, format);\n  });\n  addFormatToken('dddd', 0, 0, function (format) {\n    return this.localeData().weekdays(this, format);\n  });\n  addFormatToken('e', 0, 0, 'weekday');\n  addFormatToken('E', 0, 0, 'isoWeekday'); // ALIASES\n\n  addUnitAlias('day', 'd');\n  addUnitAlias('weekday', 'e');\n  addUnitAlias('isoWeekday', 'E'); // PRIORITY\n\n  addUnitPriority('day', 11);\n  addUnitPriority('weekday', 11);\n  addUnitPriority('isoWeekday', 11); // PARSING\n\n  addRegexToken('d', match1to2);\n  addRegexToken('e', match1to2);\n  addRegexToken('E', match1to2);\n  addRegexToken('dd', function (isStrict, locale) {\n    return locale.weekdaysMinRegex(isStrict);\n  });\n  addRegexToken('ddd', function (isStrict, locale) {\n    return locale.weekdaysShortRegex(isStrict);\n  });\n  addRegexToken('dddd', function (isStrict, locale) {\n    return locale.weekdaysRegex(isStrict);\n  });\n  addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n    var weekday = config._locale.weekdaysParse(input, token, config._strict); // if we didn't get a weekday name, mark the date as invalid\n\n\n    if (weekday != null) {\n      week.d = weekday;\n    } else {\n      getParsingFlags(config).invalidWeekday = input;\n    }\n  });\n  addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n    week[token] = toInt(input);\n  }); // HELPERS\n\n  function parseWeekday(input, locale) {\n    if (typeof input !== 'string') {\n      return input;\n    }\n\n    if (!isNaN(input)) {\n      return parseInt(input, 10);\n    }\n\n    input = locale.weekdaysParse(input);\n\n    if (typeof input === 'number') {\n      return input;\n    }\n\n    return null;\n  }\n\n  function parseIsoWeekday(input, locale) {\n    if (typeof input === 'string') {\n      return locale.weekdaysParse(input) % 7 || 7;\n    }\n\n    return isNaN(input) ? null : input;\n  } // LOCALES\n\n\n  function shiftWeekdays(ws, n) {\n    return ws.slice(n, 7).concat(ws.slice(0, n));\n  }\n\n  var defaultLocaleWeekdays = 'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_');\n\n  function localeWeekdays(m, format) {\n    var weekdays = isArray(this._weekdays) ? this._weekdays : this._weekdays[m && m !== true && this._weekdays.isFormat.test(format) ? 'format' : 'standalone'];\n    return m === true ? shiftWeekdays(weekdays, this._week.dow) : m ? weekdays[m.day()] : weekdays;\n  }\n\n  var defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_');\n\n  function localeWeekdaysShort(m) {\n    return m === true ? shiftWeekdays(this._weekdaysShort, this._week.dow) : m ? this._weekdaysShort[m.day()] : this._weekdaysShort;\n  }\n\n  var defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_');\n\n  function localeWeekdaysMin(m) {\n    return m === true ? shiftWeekdays(this._weekdaysMin, this._week.dow) : m ? this._weekdaysMin[m.day()] : this._weekdaysMin;\n  }\n\n  function handleStrictParse$1(weekdayName, format, strict) {\n    var i,\n        ii,\n        mom,\n        llc = weekdayName.toLocaleLowerCase();\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._minWeekdaysParse = [];\n\n      for (i = 0; i < 7; ++i) {\n        mom = createUTC([2000, 1]).day(i);\n        this._minWeekdaysParse[i] = this.weekdaysMin(mom, '').toLocaleLowerCase();\n        this._shortWeekdaysParse[i] = this.weekdaysShort(mom, '').toLocaleLowerCase();\n        this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n      }\n    }\n\n    if (strict) {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    } else {\n      if (format === 'dddd') {\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else if (format === 'ddd') {\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      } else {\n        ii = indexOf.call(this._minWeekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._weekdaysParse, llc);\n\n        if (ii !== -1) {\n          return ii;\n        }\n\n        ii = indexOf.call(this._shortWeekdaysParse, llc);\n        return ii !== -1 ? ii : null;\n      }\n    }\n  }\n\n  function localeWeekdaysParse(weekdayName, format, strict) {\n    var i, mom, regex;\n\n    if (this._weekdaysParseExact) {\n      return handleStrictParse$1.call(this, weekdayName, format, strict);\n    }\n\n    if (!this._weekdaysParse) {\n      this._weekdaysParse = [];\n      this._minWeekdaysParse = [];\n      this._shortWeekdaysParse = [];\n      this._fullWeekdaysParse = [];\n    }\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n\n      if (strict && !this._fullWeekdaysParse[i]) {\n        this._fullWeekdaysParse[i] = new RegExp('^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._shortWeekdaysParse[i] = new RegExp('^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$', 'i');\n        this._minWeekdaysParse[i] = new RegExp('^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$', 'i');\n      }\n\n      if (!this._weekdaysParse[i]) {\n        regex = '^' + this.weekdays(mom, '') + '|^' + this.weekdaysShort(mom, '') + '|^' + this.weekdaysMin(mom, '');\n        this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n      } // test the regex\n\n\n      if (strict && format === 'dddd' && this._fullWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'ddd' && this._shortWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (strict && format === 'dd' && this._minWeekdaysParse[i].test(weekdayName)) {\n        return i;\n      } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n        return i;\n      }\n    }\n  } // MOMENTS\n\n\n  function getSetDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\n    if (input != null) {\n      input = parseWeekday(input, this.localeData());\n      return this.add(input - day, 'd');\n    } else {\n      return day;\n    }\n  }\n\n  function getSetLocaleDayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n    return input == null ? weekday : this.add(input - weekday, 'd');\n  }\n\n  function getSetISODayOfWeek(input) {\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    } // behaves the same as moment#day except\n    // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n    // as a setter, sunday should belong to the previous week.\n\n\n    if (input != null) {\n      var weekday = parseIsoWeekday(input, this.localeData());\n      return this.day(this.day() % 7 ? weekday : weekday - 7);\n    } else {\n      return this.day() || 7;\n    }\n  }\n\n  var defaultWeekdaysRegex = matchWord;\n\n  function weekdaysRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysStrictRegex;\n      } else {\n        return this._weekdaysRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        this._weekdaysRegex = defaultWeekdaysRegex;\n      }\n\n      return this._weekdaysStrictRegex && isStrict ? this._weekdaysStrictRegex : this._weekdaysRegex;\n    }\n  }\n\n  var defaultWeekdaysShortRegex = matchWord;\n\n  function weekdaysShortRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysShortStrictRegex;\n      } else {\n        return this._weekdaysShortRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n        this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n      }\n\n      return this._weekdaysShortStrictRegex && isStrict ? this._weekdaysShortStrictRegex : this._weekdaysShortRegex;\n    }\n  }\n\n  var defaultWeekdaysMinRegex = matchWord;\n\n  function weekdaysMinRegex(isStrict) {\n    if (this._weekdaysParseExact) {\n      if (!hasOwnProp(this, '_weekdaysRegex')) {\n        computeWeekdaysParse.call(this);\n      }\n\n      if (isStrict) {\n        return this._weekdaysMinStrictRegex;\n      } else {\n        return this._weekdaysMinRegex;\n      }\n    } else {\n      if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n        this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n      }\n\n      return this._weekdaysMinStrictRegex && isStrict ? this._weekdaysMinStrictRegex : this._weekdaysMinRegex;\n    }\n  }\n\n  function computeWeekdaysParse() {\n    function cmpLenRev(a, b) {\n      return b.length - a.length;\n    }\n\n    var minPieces = [],\n        shortPieces = [],\n        longPieces = [],\n        mixedPieces = [],\n        i,\n        mom,\n        minp,\n        shortp,\n        longp;\n\n    for (i = 0; i < 7; i++) {\n      // make the regex if we don't have it already\n      mom = createUTC([2000, 1]).day(i);\n      minp = this.weekdaysMin(mom, '');\n      shortp = this.weekdaysShort(mom, '');\n      longp = this.weekdays(mom, '');\n      minPieces.push(minp);\n      shortPieces.push(shortp);\n      longPieces.push(longp);\n      mixedPieces.push(minp);\n      mixedPieces.push(shortp);\n      mixedPieces.push(longp);\n    } // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n    // will match the longer piece.\n\n\n    minPieces.sort(cmpLenRev);\n    shortPieces.sort(cmpLenRev);\n    longPieces.sort(cmpLenRev);\n    mixedPieces.sort(cmpLenRev);\n\n    for (i = 0; i < 7; i++) {\n      shortPieces[i] = regexEscape(shortPieces[i]);\n      longPieces[i] = regexEscape(longPieces[i]);\n      mixedPieces[i] = regexEscape(mixedPieces[i]);\n    }\n\n    this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n    this._weekdaysShortRegex = this._weekdaysRegex;\n    this._weekdaysMinRegex = this._weekdaysRegex;\n    this._weekdaysStrictRegex = new RegExp('^(' + longPieces.join('|') + ')', 'i');\n    this._weekdaysShortStrictRegex = new RegExp('^(' + shortPieces.join('|') + ')', 'i');\n    this._weekdaysMinStrictRegex = new RegExp('^(' + minPieces.join('|') + ')', 'i');\n  } // FORMATTING\n\n\n  function hFormat() {\n    return this.hours() % 12 || 12;\n  }\n\n  function kFormat() {\n    return this.hours() || 24;\n  }\n\n  addFormatToken('H', ['HH', 2], 0, 'hour');\n  addFormatToken('h', ['hh', 2], 0, hFormat);\n  addFormatToken('k', ['kk', 2], 0, kFormat);\n  addFormatToken('hmm', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('hmmss', 0, 0, function () {\n    return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n  addFormatToken('Hmm', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2);\n  });\n  addFormatToken('Hmmss', 0, 0, function () {\n    return '' + this.hours() + zeroFill(this.minutes(), 2) + zeroFill(this.seconds(), 2);\n  });\n\n  function meridiem(token, lowercase) {\n    addFormatToken(token, 0, 0, function () {\n      return this.localeData().meridiem(this.hours(), this.minutes(), lowercase);\n    });\n  }\n\n  meridiem('a', true);\n  meridiem('A', false); // ALIASES\n\n  addUnitAlias('hour', 'h'); // PRIORITY\n\n  addUnitPriority('hour', 13); // PARSING\n\n  function matchMeridiem(isStrict, locale) {\n    return locale._meridiemParse;\n  }\n\n  addRegexToken('a', matchMeridiem);\n  addRegexToken('A', matchMeridiem);\n  addRegexToken('H', match1to2);\n  addRegexToken('h', match1to2);\n  addRegexToken('k', match1to2);\n  addRegexToken('HH', match1to2, match2);\n  addRegexToken('hh', match1to2, match2);\n  addRegexToken('kk', match1to2, match2);\n  addRegexToken('hmm', match3to4);\n  addRegexToken('hmmss', match5to6);\n  addRegexToken('Hmm', match3to4);\n  addRegexToken('Hmmss', match5to6);\n  addParseToken(['H', 'HH'], HOUR);\n  addParseToken(['k', 'kk'], function (input, array, config) {\n    var kInput = toInt(input);\n    array[HOUR] = kInput === 24 ? 0 : kInput;\n  });\n  addParseToken(['a', 'A'], function (input, array, config) {\n    config._isPm = config._locale.isPM(input);\n    config._meridiem = input;\n  });\n  addParseToken(['h', 'hh'], function (input, array, config) {\n    array[HOUR] = toInt(input);\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n    getParsingFlags(config).bigHour = true;\n  });\n  addParseToken('Hmm', function (input, array, config) {\n    var pos = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos));\n    array[MINUTE] = toInt(input.substr(pos));\n  });\n  addParseToken('Hmmss', function (input, array, config) {\n    var pos1 = input.length - 4;\n    var pos2 = input.length - 2;\n    array[HOUR] = toInt(input.substr(0, pos1));\n    array[MINUTE] = toInt(input.substr(pos1, 2));\n    array[SECOND] = toInt(input.substr(pos2));\n  }); // LOCALES\n\n  function localeIsPM(input) {\n    // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n    // Using charAt should be more compatible.\n    return (input + '').toLowerCase().charAt(0) === 'p';\n  }\n\n  var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i;\n\n  function localeMeridiem(hours, minutes, isLower) {\n    if (hours > 11) {\n      return isLower ? 'pm' : 'PM';\n    } else {\n      return isLower ? 'am' : 'AM';\n    }\n  } // MOMENTS\n  // Setting the hour should keep the time, because the user explicitly\n  // specified which hour they want. So trying to maintain the same hour (in\n  // a new timezone) makes sense. Adding/subtracting hours does not follow\n  // this rule.\n\n\n  var getSetHour = makeGetSet('Hours', true);\n  var baseConfig = {\n    calendar: defaultCalendar,\n    longDateFormat: defaultLongDateFormat,\n    invalidDate: defaultInvalidDate,\n    ordinal: defaultOrdinal,\n    dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n    relativeTime: defaultRelativeTime,\n    months: defaultLocaleMonths,\n    monthsShort: defaultLocaleMonthsShort,\n    week: defaultLocaleWeek,\n    weekdays: defaultLocaleWeekdays,\n    weekdaysMin: defaultLocaleWeekdaysMin,\n    weekdaysShort: defaultLocaleWeekdaysShort,\n    meridiemParse: defaultLocaleMeridiemParse\n  }; // internal storage for locale config files\n\n  var locales = {};\n  var localeFamilies = {};\n  var globalLocale;\n\n  function normalizeLocale(key) {\n    return key ? key.toLowerCase().replace('_', '-') : key;\n  } // pick the locale from the array\n  // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n  // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\n\n  function chooseLocale(names) {\n    var i = 0,\n        j,\n        next,\n        locale,\n        split;\n\n    while (i < names.length) {\n      split = normalizeLocale(names[i]).split('-');\n      j = split.length;\n      next = normalizeLocale(names[i + 1]);\n      next = next ? next.split('-') : null;\n\n      while (j > 0) {\n        locale = loadLocale(split.slice(0, j).join('-'));\n\n        if (locale) {\n          return locale;\n        }\n\n        if (next && next.length >= j && compareArrays(split, next, true) >= j - 1) {\n          //the next array item is better than a shallower substring of this one\n          break;\n        }\n\n        j--;\n      }\n\n      i++;\n    }\n\n    return globalLocale;\n  }\n\n  function loadLocale(name) {\n    var oldLocale = null; // TODO: Find a better way to register and load all the locales in Node\n\n    if (!locales[name] && typeof module !== 'undefined' && module && module.exports) {\n      try {\n        oldLocale = globalLocale._abbr;\n        var aliasedRequire = require;\n        aliasedRequire('./locale/' + name);\n        getSetGlobalLocale(oldLocale);\n      } catch (e) {}\n    }\n\n    return locales[name];\n  } // This function will load locale and then set the global locale.  If\n  // no arguments are passed in, it will simply return the current global\n  // locale key.\n\n\n  function getSetGlobalLocale(key, values) {\n    var data;\n\n    if (key) {\n      if (isUndefined(values)) {\n        data = getLocale(key);\n      } else {\n        data = defineLocale(key, values);\n      }\n\n      if (data) {\n        // moment.duration._locale = moment._locale = data;\n        globalLocale = data;\n      } else {\n        if (typeof console !== 'undefined' && console.warn) {\n          //warn user if arguments are passed but the locale could not be set\n          console.warn('Locale ' + key + ' not found. Did you forget to load it?');\n        }\n      }\n    }\n\n    return globalLocale._abbr;\n  }\n\n  function defineLocale(name, config) {\n    if (config !== null) {\n      var locale,\n          parentConfig = baseConfig;\n      config.abbr = name;\n\n      if (locales[name] != null) {\n        deprecateSimple('defineLocaleOverride', 'use moment.updateLocale(localeName, config) to change ' + 'an existing locale. moment.defineLocale(localeName, ' + 'config) should only be used for creating a new locale ' + 'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.');\n        parentConfig = locales[name]._config;\n      } else if (config.parentLocale != null) {\n        if (locales[config.parentLocale] != null) {\n          parentConfig = locales[config.parentLocale]._config;\n        } else {\n          locale = loadLocale(config.parentLocale);\n\n          if (locale != null) {\n            parentConfig = locale._config;\n          } else {\n            if (!localeFamilies[config.parentLocale]) {\n              localeFamilies[config.parentLocale] = [];\n            }\n\n            localeFamilies[config.parentLocale].push({\n              name: name,\n              config: config\n            });\n            return null;\n          }\n        }\n      }\n\n      locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n      if (localeFamilies[name]) {\n        localeFamilies[name].forEach(function (x) {\n          defineLocale(x.name, x.config);\n        });\n      } // backwards compat for now: also set the locale\n      // make sure we set the locale AFTER all child locales have been\n      // created, so we won't end up with the child locale set.\n\n\n      getSetGlobalLocale(name);\n      return locales[name];\n    } else {\n      // useful for testing\n      delete locales[name];\n      return null;\n    }\n  }\n\n  function updateLocale(name, config) {\n    if (config != null) {\n      var locale,\n          tmpLocale,\n          parentConfig = baseConfig; // MERGE\n\n      tmpLocale = loadLocale(name);\n\n      if (tmpLocale != null) {\n        parentConfig = tmpLocale._config;\n      }\n\n      config = mergeConfigs(parentConfig, config);\n      locale = new Locale(config);\n      locale.parentLocale = locales[name];\n      locales[name] = locale; // backwards compat for now: also set the locale\n\n      getSetGlobalLocale(name);\n    } else {\n      // pass null for config to unupdate, useful for tests\n      if (locales[name] != null) {\n        if (locales[name].parentLocale != null) {\n          locales[name] = locales[name].parentLocale;\n        } else if (locales[name] != null) {\n          delete locales[name];\n        }\n      }\n    }\n\n    return locales[name];\n  } // returns locale data\n\n\n  function getLocale(key) {\n    var locale;\n\n    if (key && key._locale && key._locale._abbr) {\n      key = key._locale._abbr;\n    }\n\n    if (!key) {\n      return globalLocale;\n    }\n\n    if (!isArray(key)) {\n      //short-circuit everything else\n      locale = loadLocale(key);\n\n      if (locale) {\n        return locale;\n      }\n\n      key = [key];\n    }\n\n    return chooseLocale(key);\n  }\n\n  function listLocales() {\n    return keys(locales);\n  }\n\n  function checkOverflow(m) {\n    var overflow;\n    var a = m._a;\n\n    if (a && getParsingFlags(m).overflow === -2) {\n      overflow = a[MONTH] < 0 || a[MONTH] > 11 ? MONTH : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH]) ? DATE : a[HOUR] < 0 || a[HOUR] > 24 || a[HOUR] === 24 && (a[MINUTE] !== 0 || a[SECOND] !== 0 || a[MILLISECOND] !== 0) ? HOUR : a[MINUTE] < 0 || a[MINUTE] > 59 ? MINUTE : a[SECOND] < 0 || a[SECOND] > 59 ? SECOND : a[MILLISECOND] < 0 || a[MILLISECOND] > 999 ? MILLISECOND : -1;\n\n      if (getParsingFlags(m)._overflowDayOfYear && (overflow < YEAR || overflow > DATE)) {\n        overflow = DATE;\n      }\n\n      if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n        overflow = WEEK;\n      }\n\n      if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n        overflow = WEEKDAY;\n      }\n\n      getParsingFlags(m).overflow = overflow;\n    }\n\n    return m;\n  } // Pick the first defined of two or three arguments.\n\n\n  function defaults(a, b, c) {\n    if (a != null) {\n      return a;\n    }\n\n    if (b != null) {\n      return b;\n    }\n\n    return c;\n  }\n\n  function currentDateArray(config) {\n    // hooks is actually the exported moment object\n    var nowValue = new Date(hooks.now());\n\n    if (config._useUTC) {\n      return [nowValue.getUTCFullYear(), nowValue.getUTCMonth(), nowValue.getUTCDate()];\n    }\n\n    return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n  } // convert an array to a date.\n  // the array should mirror the parameters below\n  // note: all values past the year are optional and will default to the lowest possible value.\n  // [year, month, day , hour, minute, second, millisecond]\n\n\n  function configFromArray(config) {\n    var i,\n        date,\n        input = [],\n        currentDate,\n        expectedWeekday,\n        yearToUse;\n\n    if (config._d) {\n      return;\n    }\n\n    currentDate = currentDateArray(config); //compute day of the year from weeks and weekdays\n\n    if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n      dayOfYearFromWeekInfo(config);\n    } //if the day of the year is set, figure out what it is\n\n\n    if (config._dayOfYear != null) {\n      yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n      if (config._dayOfYear > daysInYear(yearToUse) || config._dayOfYear === 0) {\n        getParsingFlags(config)._overflowDayOfYear = true;\n      }\n\n      date = createUTCDate(yearToUse, 0, config._dayOfYear);\n      config._a[MONTH] = date.getUTCMonth();\n      config._a[DATE] = date.getUTCDate();\n    } // Default to current date.\n    // * if no year, month, day of month are given, default to today\n    // * if day of month is given, default month and year\n    // * if month is given, default only year\n    // * if year is given, don't default anything\n\n\n    for (i = 0; i < 3 && config._a[i] == null; ++i) {\n      config._a[i] = input[i] = currentDate[i];\n    } // Zero out whatever was not defaulted, including time\n\n\n    for (; i < 7; i++) {\n      config._a[i] = input[i] = config._a[i] == null ? i === 2 ? 1 : 0 : config._a[i];\n    } // Check for 24:00:00.000\n\n\n    if (config._a[HOUR] === 24 && config._a[MINUTE] === 0 && config._a[SECOND] === 0 && config._a[MILLISECOND] === 0) {\n      config._nextDay = true;\n      config._a[HOUR] = 0;\n    }\n\n    config._d = (config._useUTC ? createUTCDate : createDate).apply(null, input);\n    expectedWeekday = config._useUTC ? config._d.getUTCDay() : config._d.getDay(); // Apply timezone offset from input. The actual utcOffset can be changed\n    // with parseZone.\n\n    if (config._tzm != null) {\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n    }\n\n    if (config._nextDay) {\n      config._a[HOUR] = 24;\n    } // check for mismatching day of week\n\n\n    if (config._w && typeof config._w.d !== 'undefined' && config._w.d !== expectedWeekday) {\n      getParsingFlags(config).weekdayMismatch = true;\n    }\n  }\n\n  function dayOfYearFromWeekInfo(config) {\n    var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow;\n    w = config._w;\n\n    if (w.GG != null || w.W != null || w.E != null) {\n      dow = 1;\n      doy = 4; // TODO: We need to take the current isoWeekYear, but that depends on\n      // how we interpret now (local, utc, fixed offset). So create\n      // a now version of current config (take local/utc/offset flags, and\n      // create now).\n\n      weekYear = defaults(w.GG, config._a[YEAR], weekOfYear(createLocal(), 1, 4).year);\n      week = defaults(w.W, 1);\n      weekday = defaults(w.E, 1);\n\n      if (weekday < 1 || weekday > 7) {\n        weekdayOverflow = true;\n      }\n    } else {\n      dow = config._locale._week.dow;\n      doy = config._locale._week.doy;\n      var curWeek = weekOfYear(createLocal(), dow, doy);\n      weekYear = defaults(w.gg, config._a[YEAR], curWeek.year); // Default to current week.\n\n      week = defaults(w.w, curWeek.week);\n\n      if (w.d != null) {\n        // weekday -- low day numbers are considered next week\n        weekday = w.d;\n\n        if (weekday < 0 || weekday > 6) {\n          weekdayOverflow = true;\n        }\n      } else if (w.e != null) {\n        // local weekday -- counting starts from beginning of week\n        weekday = w.e + dow;\n\n        if (w.e < 0 || w.e > 6) {\n          weekdayOverflow = true;\n        }\n      } else {\n        // default to beginning of week\n        weekday = dow;\n      }\n    }\n\n    if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n      getParsingFlags(config)._overflowWeeks = true;\n    } else if (weekdayOverflow != null) {\n      getParsingFlags(config)._overflowWeekday = true;\n    } else {\n      temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n      config._a[YEAR] = temp.year;\n      config._dayOfYear = temp.dayOfYear;\n    }\n  } // iso 8601 regex\n  // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\n\n  var extendedIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var basicIsoRegex = /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([\\+\\-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/;\n  var tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/;\n  var isoDates = [['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/], ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/], ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/], ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false], ['YYYY-DDD', /\\d{4}-\\d{3}/], ['YYYY-MM', /\\d{4}-\\d\\d/, false], ['YYYYYYMMDD', /[+-]\\d{10}/], ['YYYYMMDD', /\\d{8}/], // YYYYMM is NOT allowed by the standard\n  ['GGGG[W]WWE', /\\d{4}W\\d{3}/], ['GGGG[W]WW', /\\d{4}W\\d{2}/, false], ['YYYYDDD', /\\d{7}/]]; // iso time formats and regexes\n\n  var isoTimes = [['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/], ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/], ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/], ['HH:mm', /\\d\\d:\\d\\d/], ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/], ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/], ['HHmmss', /\\d\\d\\d\\d\\d\\d/], ['HHmm', /\\d\\d\\d\\d/], ['HH', /\\d\\d/]];\n  var aspNetJsonRegex = /^\\/?Date\\((\\-?\\d+)/i; // date from iso format\n\n  function configFromISO(config) {\n    var i,\n        l,\n        string = config._i,\n        match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n        allowTime,\n        dateFormat,\n        timeFormat,\n        tzFormat;\n\n    if (match) {\n      getParsingFlags(config).iso = true;\n\n      for (i = 0, l = isoDates.length; i < l; i++) {\n        if (isoDates[i][1].exec(match[1])) {\n          dateFormat = isoDates[i][0];\n          allowTime = isoDates[i][2] !== false;\n          break;\n        }\n      }\n\n      if (dateFormat == null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[3]) {\n        for (i = 0, l = isoTimes.length; i < l; i++) {\n          if (isoTimes[i][1].exec(match[3])) {\n            // match[2] should be 'T' or space\n            timeFormat = (match[2] || ' ') + isoTimes[i][0];\n            break;\n          }\n        }\n\n        if (timeFormat == null) {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      if (!allowTime && timeFormat != null) {\n        config._isValid = false;\n        return;\n      }\n\n      if (match[4]) {\n        if (tzRegex.exec(match[4])) {\n          tzFormat = 'Z';\n        } else {\n          config._isValid = false;\n          return;\n        }\n      }\n\n      config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n      configFromStringAndFormat(config);\n    } else {\n      config._isValid = false;\n    }\n  } // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\n\n  var rfc2822 = /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/;\n\n  function extractFromRFC2822Strings(yearStr, monthStr, dayStr, hourStr, minuteStr, secondStr) {\n    var result = [untruncateYear(yearStr), defaultLocaleMonthsShort.indexOf(monthStr), parseInt(dayStr, 10), parseInt(hourStr, 10), parseInt(minuteStr, 10)];\n\n    if (secondStr) {\n      result.push(parseInt(secondStr, 10));\n    }\n\n    return result;\n  }\n\n  function untruncateYear(yearStr) {\n    var year = parseInt(yearStr, 10);\n\n    if (year <= 49) {\n      return 2000 + year;\n    } else if (year <= 999) {\n      return 1900 + year;\n    }\n\n    return year;\n  }\n\n  function preprocessRFC2822(s) {\n    // Remove comments and folding whitespace and replace multiple-spaces with a single space\n    return s.replace(/\\([^)]*\\)|[\\n\\t]/g, ' ').replace(/(\\s\\s+)/g, ' ').replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n  }\n\n  function checkWeekday(weekdayStr, parsedInput, config) {\n    if (weekdayStr) {\n      // TODO: Replace the vanilla JS Date object with an indepentent day-of-week check.\n      var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n          weekdayActual = new Date(parsedInput[0], parsedInput[1], parsedInput[2]).getDay();\n\n      if (weekdayProvided !== weekdayActual) {\n        getParsingFlags(config).weekdayMismatch = true;\n        config._isValid = false;\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var obsOffsets = {\n    UT: 0,\n    GMT: 0,\n    EDT: -4 * 60,\n    EST: -5 * 60,\n    CDT: -5 * 60,\n    CST: -6 * 60,\n    MDT: -6 * 60,\n    MST: -7 * 60,\n    PDT: -7 * 60,\n    PST: -8 * 60\n  };\n\n  function calculateOffset(obsOffset, militaryOffset, numOffset) {\n    if (obsOffset) {\n      return obsOffsets[obsOffset];\n    } else if (militaryOffset) {\n      // the only allowed military tz is Z\n      return 0;\n    } else {\n      var hm = parseInt(numOffset, 10);\n      var m = hm % 100,\n          h = (hm - m) / 100;\n      return h * 60 + m;\n    }\n  } // date and time from ref 2822 format\n\n\n  function configFromRFC2822(config) {\n    var match = rfc2822.exec(preprocessRFC2822(config._i));\n\n    if (match) {\n      var parsedArray = extractFromRFC2822Strings(match[4], match[3], match[2], match[5], match[6], match[7]);\n\n      if (!checkWeekday(match[1], parsedArray, config)) {\n        return;\n      }\n\n      config._a = parsedArray;\n      config._tzm = calculateOffset(match[8], match[9], match[10]);\n      config._d = createUTCDate.apply(null, config._a);\n\n      config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n      getParsingFlags(config).rfc2822 = true;\n    } else {\n      config._isValid = false;\n    }\n  } // date from iso format or fallback\n\n\n  function configFromString(config) {\n    var matched = aspNetJsonRegex.exec(config._i);\n\n    if (matched !== null) {\n      config._d = new Date(+matched[1]);\n      return;\n    }\n\n    configFromISO(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    }\n\n    configFromRFC2822(config);\n\n    if (config._isValid === false) {\n      delete config._isValid;\n    } else {\n      return;\n    } // Final attempt, use Input Fallback\n\n\n    hooks.createFromInputFallback(config);\n  }\n\n  hooks.createFromInputFallback = deprecate('value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' + 'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' + 'discouraged and will be removed in an upcoming major release. Please refer to ' + 'http://momentjs.com/guides/#/warnings/js-date/ for more info.', function (config) {\n    config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n  }); // constant that refers to the ISO standard\n\n  hooks.ISO_8601 = function () {}; // constant that refers to the RFC 2822 form\n\n\n  hooks.RFC_2822 = function () {}; // date from string and format string\n\n\n  function configFromStringAndFormat(config) {\n    // TODO: Move this to another part of the creation flow to prevent circular deps\n    if (config._f === hooks.ISO_8601) {\n      configFromISO(config);\n      return;\n    }\n\n    if (config._f === hooks.RFC_2822) {\n      configFromRFC2822(config);\n      return;\n    }\n\n    config._a = [];\n    getParsingFlags(config).empty = true; // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\n    var string = '' + config._i,\n        i,\n        parsedInput,\n        tokens,\n        token,\n        skipped,\n        stringLength = string.length,\n        totalParsedInputLength = 0;\n    tokens = expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\n    for (i = 0; i < tokens.length; i++) {\n      token = tokens[i];\n      parsedInput = (string.match(getParseRegexForToken(token, config)) || [])[0]; // console.log('token', token, 'parsedInput', parsedInput,\n      //         'regex', getParseRegexForToken(token, config));\n\n      if (parsedInput) {\n        skipped = string.substr(0, string.indexOf(parsedInput));\n\n        if (skipped.length > 0) {\n          getParsingFlags(config).unusedInput.push(skipped);\n        }\n\n        string = string.slice(string.indexOf(parsedInput) + parsedInput.length);\n        totalParsedInputLength += parsedInput.length;\n      } // don't parse if it's not a known token\n\n\n      if (formatTokenFunctions[token]) {\n        if (parsedInput) {\n          getParsingFlags(config).empty = false;\n        } else {\n          getParsingFlags(config).unusedTokens.push(token);\n        }\n\n        addTimeToArrayFromToken(token, parsedInput, config);\n      } else if (config._strict && !parsedInput) {\n        getParsingFlags(config).unusedTokens.push(token);\n      }\n    } // add remaining unparsed input length to the string\n\n\n    getParsingFlags(config).charsLeftOver = stringLength - totalParsedInputLength;\n\n    if (string.length > 0) {\n      getParsingFlags(config).unusedInput.push(string);\n    } // clear _12h flag if hour is <= 12\n\n\n    if (config._a[HOUR] <= 12 && getParsingFlags(config).bigHour === true && config._a[HOUR] > 0) {\n      getParsingFlags(config).bigHour = undefined;\n    }\n\n    getParsingFlags(config).parsedDateParts = config._a.slice(0);\n    getParsingFlags(config).meridiem = config._meridiem; // handle meridiem\n\n    config._a[HOUR] = meridiemFixWrap(config._locale, config._a[HOUR], config._meridiem);\n    configFromArray(config);\n    checkOverflow(config);\n  }\n\n  function meridiemFixWrap(locale, hour, meridiem) {\n    var isPm;\n\n    if (meridiem == null) {\n      // nothing to do\n      return hour;\n    }\n\n    if (locale.meridiemHour != null) {\n      return locale.meridiemHour(hour, meridiem);\n    } else if (locale.isPM != null) {\n      // Fallback\n      isPm = locale.isPM(meridiem);\n\n      if (isPm && hour < 12) {\n        hour += 12;\n      }\n\n      if (!isPm && hour === 12) {\n        hour = 0;\n      }\n\n      return hour;\n    } else {\n      // this is not supposed to happen\n      return hour;\n    }\n  } // date from string and array of format strings\n\n\n  function configFromStringAndArray(config) {\n    var tempConfig, bestMoment, scoreToBeat, i, currentScore;\n\n    if (config._f.length === 0) {\n      getParsingFlags(config).invalidFormat = true;\n      config._d = new Date(NaN);\n      return;\n    }\n\n    for (i = 0; i < config._f.length; i++) {\n      currentScore = 0;\n      tempConfig = copyConfig({}, config);\n\n      if (config._useUTC != null) {\n        tempConfig._useUTC = config._useUTC;\n      }\n\n      tempConfig._f = config._f[i];\n      configFromStringAndFormat(tempConfig);\n\n      if (!isValid(tempConfig)) {\n        continue;\n      } // if there is any input that was not parsed add a penalty for that format\n\n\n      currentScore += getParsingFlags(tempConfig).charsLeftOver; //or tokens\n\n      currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n      getParsingFlags(tempConfig).score = currentScore;\n\n      if (scoreToBeat == null || currentScore < scoreToBeat) {\n        scoreToBeat = currentScore;\n        bestMoment = tempConfig;\n      }\n    }\n\n    extend(config, bestMoment || tempConfig);\n  }\n\n  function configFromObject(config) {\n    if (config._d) {\n      return;\n    }\n\n    var i = normalizeObjectUnits(config._i);\n    config._a = map([i.year, i.month, i.day || i.date, i.hour, i.minute, i.second, i.millisecond], function (obj) {\n      return obj && parseInt(obj, 10);\n    });\n    configFromArray(config);\n  }\n\n  function createFromConfig(config) {\n    var res = new Moment(checkOverflow(prepareConfig(config)));\n\n    if (res._nextDay) {\n      // Adding is smart enough around DST\n      res.add(1, 'd');\n      res._nextDay = undefined;\n    }\n\n    return res;\n  }\n\n  function prepareConfig(config) {\n    var input = config._i,\n        format = config._f;\n    config._locale = config._locale || getLocale(config._l);\n\n    if (input === null || format === undefined && input === '') {\n      return createInvalid({\n        nullInput: true\n      });\n    }\n\n    if (typeof input === 'string') {\n      config._i = input = config._locale.preparse(input);\n    }\n\n    if (isMoment(input)) {\n      return new Moment(checkOverflow(input));\n    } else if (isDate(input)) {\n      config._d = input;\n    } else if (isArray(format)) {\n      configFromStringAndArray(config);\n    } else if (format) {\n      configFromStringAndFormat(config);\n    } else {\n      configFromInput(config);\n    }\n\n    if (!isValid(config)) {\n      config._d = null;\n    }\n\n    return config;\n  }\n\n  function configFromInput(config) {\n    var input = config._i;\n\n    if (isUndefined(input)) {\n      config._d = new Date(hooks.now());\n    } else if (isDate(input)) {\n      config._d = new Date(input.valueOf());\n    } else if (typeof input === 'string') {\n      configFromString(config);\n    } else if (isArray(input)) {\n      config._a = map(input.slice(0), function (obj) {\n        return parseInt(obj, 10);\n      });\n      configFromArray(config);\n    } else if (isObject(input)) {\n      configFromObject(config);\n    } else if (isNumber(input)) {\n      // from milliseconds\n      config._d = new Date(input);\n    } else {\n      hooks.createFromInputFallback(config);\n    }\n  }\n\n  function createLocalOrUTC(input, format, locale, strict, isUTC) {\n    var c = {};\n\n    if (locale === true || locale === false) {\n      strict = locale;\n      locale = undefined;\n    }\n\n    if (isObject(input) && isObjectEmpty(input) || isArray(input) && input.length === 0) {\n      input = undefined;\n    } // object construction must be done this way.\n    // https://github.com/moment/moment/issues/1423\n\n\n    c._isAMomentObject = true;\n    c._useUTC = c._isUTC = isUTC;\n    c._l = locale;\n    c._i = input;\n    c._f = format;\n    c._strict = strict;\n    return createFromConfig(c);\n  }\n\n  function createLocal(input, format, locale, strict) {\n    return createLocalOrUTC(input, format, locale, strict, false);\n  }\n\n  var prototypeMin = deprecate('moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other < this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  });\n  var prototypeMax = deprecate('moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/', function () {\n    var other = createLocal.apply(null, arguments);\n\n    if (this.isValid() && other.isValid()) {\n      return other > this ? this : other;\n    } else {\n      return createInvalid();\n    }\n  }); // Pick a moment m from moments so that m[fn](other) is true for all\n  // other. This relies on the function fn to be transitive.\n  //\n  // moments should either be an array of moment objects or an array, whose\n  // first element is an array of moment objects.\n\n  function pickBy(fn, moments) {\n    var res, i;\n\n    if (moments.length === 1 && isArray(moments[0])) {\n      moments = moments[0];\n    }\n\n    if (!moments.length) {\n      return createLocal();\n    }\n\n    res = moments[0];\n\n    for (i = 1; i < moments.length; ++i) {\n      if (!moments[i].isValid() || moments[i][fn](res)) {\n        res = moments[i];\n      }\n    }\n\n    return res;\n  } // TODO: Use [].sort instead?\n\n\n  function min() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isBefore', args);\n  }\n\n  function max() {\n    var args = [].slice.call(arguments, 0);\n    return pickBy('isAfter', args);\n  }\n\n  var now = function now() {\n    return Date.now ? Date.now() : +new Date();\n  };\n\n  var ordering = ['year', 'quarter', 'month', 'week', 'day', 'hour', 'minute', 'second', 'millisecond'];\n\n  function isDurationValid(m) {\n    for (var key in m) {\n      if (!(indexOf.call(ordering, key) !== -1 && (m[key] == null || !isNaN(m[key])))) {\n        return false;\n      }\n    }\n\n    var unitHasDecimal = false;\n\n    for (var i = 0; i < ordering.length; ++i) {\n      if (m[ordering[i]]) {\n        if (unitHasDecimal) {\n          return false; // only allow non-integers for smallest unit\n        }\n\n        if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n          unitHasDecimal = true;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  function isValid$1() {\n    return this._isValid;\n  }\n\n  function createInvalid$1() {\n    return createDuration(NaN);\n  }\n\n  function Duration(duration) {\n    var normalizedInput = normalizeObjectUnits(duration),\n        years = normalizedInput.year || 0,\n        quarters = normalizedInput.quarter || 0,\n        months = normalizedInput.month || 0,\n        weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n        days = normalizedInput.day || 0,\n        hours = normalizedInput.hour || 0,\n        minutes = normalizedInput.minute || 0,\n        seconds = normalizedInput.second || 0,\n        milliseconds = normalizedInput.millisecond || 0;\n    this._isValid = isDurationValid(normalizedInput); // representation for dateAddRemove\n\n    this._milliseconds = +milliseconds + seconds * 1e3 + // 1000\n    minutes * 6e4 + // 1000 * 60\n    hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n    // Because of dateAddRemove treats 24 hours as different from a\n    // day when working around DST, we need to store them separately\n\n    this._days = +days + weeks * 7; // It is impossible to translate months into days without knowing\n    // which months you are are talking about, so we have to store\n    // it separately.\n\n    this._months = +months + quarters * 3 + years * 12;\n    this._data = {};\n    this._locale = getLocale();\n\n    this._bubble();\n  }\n\n  function isDuration(obj) {\n    return obj instanceof Duration;\n  }\n\n  function absRound(number) {\n    if (number < 0) {\n      return Math.round(-1 * number) * -1;\n    } else {\n      return Math.round(number);\n    }\n  } // FORMATTING\n\n\n  function offset(token, separator) {\n    addFormatToken(token, 0, 0, function () {\n      var offset = this.utcOffset();\n      var sign = '+';\n\n      if (offset < 0) {\n        offset = -offset;\n        sign = '-';\n      }\n\n      return sign + zeroFill(~~(offset / 60), 2) + separator + zeroFill(~~offset % 60, 2);\n    });\n  }\n\n  offset('Z', ':');\n  offset('ZZ', ''); // PARSING\n\n  addRegexToken('Z', matchShortOffset);\n  addRegexToken('ZZ', matchShortOffset);\n  addParseToken(['Z', 'ZZ'], function (input, array, config) {\n    config._useUTC = true;\n    config._tzm = offsetFromString(matchShortOffset, input);\n  }); // HELPERS\n  // timezone chunker\n  // '+10:00' > ['10',  '00']\n  // '-1530'  > ['-15', '30']\n\n  var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n  function offsetFromString(matcher, string) {\n    var matches = (string || '').match(matcher);\n\n    if (matches === null) {\n      return null;\n    }\n\n    var chunk = matches[matches.length - 1] || [];\n    var parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n    var minutes = +(parts[1] * 60) + toInt(parts[2]);\n    return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n  } // Return a moment from input, that is local/utc/zone equivalent to model.\n\n\n  function cloneWithOffset(input, model) {\n    var res, diff;\n\n    if (model._isUTC) {\n      res = model.clone();\n      diff = (isMoment(input) || isDate(input) ? input.valueOf() : createLocal(input).valueOf()) - res.valueOf(); // Use low-level api, because this fn is low-level api.\n\n      res._d.setTime(res._d.valueOf() + diff);\n\n      hooks.updateOffset(res, false);\n      return res;\n    } else {\n      return createLocal(input).local();\n    }\n  }\n\n  function getDateOffset(m) {\n    // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n    // https://github.com/moment/moment/pull/1871\n    return -Math.round(m._d.getTimezoneOffset() / 15) * 15;\n  } // HOOKS\n  // This function will be called whenever a moment is mutated.\n  // It is intended to keep the offset in sync with the timezone.\n\n\n  hooks.updateOffset = function () {}; // MOMENTS\n  // keepLocalTime = true means only change the timezone, without\n  // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n  // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n  // +0200, so we adjust the time as needed, to be valid.\n  //\n  // Keeping the time actually adds/subtracts (one hour)\n  // from the actual represented time. That is why we call updateOffset\n  // a second time. In case it wants us to change the offset again\n  // _changeInProgress == true case, then we have to adjust, because\n  // there is no such time in the given timezone.\n\n\n  function getSetOffset(input, keepLocalTime, keepMinutes) {\n    var offset = this._offset || 0,\n        localAdjust;\n\n    if (!this.isValid()) {\n      return input != null ? this : NaN;\n    }\n\n    if (input != null) {\n      if (typeof input === 'string') {\n        input = offsetFromString(matchShortOffset, input);\n\n        if (input === null) {\n          return this;\n        }\n      } else if (Math.abs(input) < 16 && !keepMinutes) {\n        input = input * 60;\n      }\n\n      if (!this._isUTC && keepLocalTime) {\n        localAdjust = getDateOffset(this);\n      }\n\n      this._offset = input;\n      this._isUTC = true;\n\n      if (localAdjust != null) {\n        this.add(localAdjust, 'm');\n      }\n\n      if (offset !== input) {\n        if (!keepLocalTime || this._changeInProgress) {\n          addSubtract(this, createDuration(input - offset, 'm'), 1, false);\n        } else if (!this._changeInProgress) {\n          this._changeInProgress = true;\n          hooks.updateOffset(this, true);\n          this._changeInProgress = null;\n        }\n      }\n\n      return this;\n    } else {\n      return this._isUTC ? offset : getDateOffset(this);\n    }\n  }\n\n  function getSetZone(input, keepLocalTime) {\n    if (input != null) {\n      if (typeof input !== 'string') {\n        input = -input;\n      }\n\n      this.utcOffset(input, keepLocalTime);\n      return this;\n    } else {\n      return -this.utcOffset();\n    }\n  }\n\n  function setOffsetToUTC(keepLocalTime) {\n    return this.utcOffset(0, keepLocalTime);\n  }\n\n  function setOffsetToLocal(keepLocalTime) {\n    if (this._isUTC) {\n      this.utcOffset(0, keepLocalTime);\n      this._isUTC = false;\n\n      if (keepLocalTime) {\n        this.subtract(getDateOffset(this), 'm');\n      }\n    }\n\n    return this;\n  }\n\n  function setOffsetToParsedOffset() {\n    if (this._tzm != null) {\n      this.utcOffset(this._tzm, false, true);\n    } else if (typeof this._i === 'string') {\n      var tZone = offsetFromString(matchOffset, this._i);\n\n      if (tZone != null) {\n        this.utcOffset(tZone);\n      } else {\n        this.utcOffset(0, true);\n      }\n    }\n\n    return this;\n  }\n\n  function hasAlignedHourOffset(input) {\n    if (!this.isValid()) {\n      return false;\n    }\n\n    input = input ? createLocal(input).utcOffset() : 0;\n    return (this.utcOffset() - input) % 60 === 0;\n  }\n\n  function isDaylightSavingTime() {\n    return this.utcOffset() > this.clone().month(0).utcOffset() || this.utcOffset() > this.clone().month(5).utcOffset();\n  }\n\n  function isDaylightSavingTimeShifted() {\n    if (!isUndefined(this._isDSTShifted)) {\n      return this._isDSTShifted;\n    }\n\n    var c = {};\n    copyConfig(c, this);\n    c = prepareConfig(c);\n\n    if (c._a) {\n      var other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n      this._isDSTShifted = this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n    } else {\n      this._isDSTShifted = false;\n    }\n\n    return this._isDSTShifted;\n  }\n\n  function isLocal() {\n    return this.isValid() ? !this._isUTC : false;\n  }\n\n  function isUtcOffset() {\n    return this.isValid() ? this._isUTC : false;\n  }\n\n  function isUtc() {\n    return this.isValid() ? this._isUTC && this._offset === 0 : false;\n  } // ASP.NET json date format regex\n\n\n  var aspNetRegex = /^(\\-|\\+)?(?:(\\d*)[. ])?(\\d+)\\:(\\d+)(?:\\:(\\d+)(\\.\\d*)?)?$/; // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n  // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n  // and further modified to allow for strings containing both week and day\n\n  var isoRegex = /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n  function createDuration(input, key) {\n    var duration = input,\n        // matching against regexp is expensive, do it on demand\n    match = null,\n        sign,\n        ret,\n        diffRes;\n\n    if (isDuration(input)) {\n      duration = {\n        ms: input._milliseconds,\n        d: input._days,\n        M: input._months\n      };\n    } else if (isNumber(input)) {\n      duration = {};\n\n      if (key) {\n        duration[key] = input;\n      } else {\n        duration.milliseconds = input;\n      }\n    } else if (!!(match = aspNetRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: 0,\n        d: toInt(match[DATE]) * sign,\n        h: toInt(match[HOUR]) * sign,\n        m: toInt(match[MINUTE]) * sign,\n        s: toInt(match[SECOND]) * sign,\n        ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign // the millisecond decimal point is included in the match\n\n      };\n    } else if (!!(match = isoRegex.exec(input))) {\n      sign = match[1] === '-' ? -1 : 1;\n      duration = {\n        y: parseIso(match[2], sign),\n        M: parseIso(match[3], sign),\n        w: parseIso(match[4], sign),\n        d: parseIso(match[5], sign),\n        h: parseIso(match[6], sign),\n        m: parseIso(match[7], sign),\n        s: parseIso(match[8], sign)\n      };\n    } else if (duration == null) {\n      // checks for null or undefined\n      duration = {};\n    } else if (typeof duration === 'object' && ('from' in duration || 'to' in duration)) {\n      diffRes = momentsDifference(createLocal(duration.from), createLocal(duration.to));\n      duration = {};\n      duration.ms = diffRes.milliseconds;\n      duration.M = diffRes.months;\n    }\n\n    ret = new Duration(duration);\n\n    if (isDuration(input) && hasOwnProp(input, '_locale')) {\n      ret._locale = input._locale;\n    }\n\n    return ret;\n  }\n\n  createDuration.fn = Duration.prototype;\n  createDuration.invalid = createInvalid$1;\n\n  function parseIso(inp, sign) {\n    // We'd normally use ~~inp for this, but unfortunately it also\n    // converts floats to ints.\n    // inp may be undefined, so careful calling replace on it.\n    var res = inp && parseFloat(inp.replace(',', '.')); // apply sign while we're at it\n\n    return (isNaN(res) ? 0 : res) * sign;\n  }\n\n  function positiveMomentsDifference(base, other) {\n    var res = {};\n    res.months = other.month() - base.month() + (other.year() - base.year()) * 12;\n\n    if (base.clone().add(res.months, 'M').isAfter(other)) {\n      --res.months;\n    }\n\n    res.milliseconds = +other - +base.clone().add(res.months, 'M');\n    return res;\n  }\n\n  function momentsDifference(base, other) {\n    var res;\n\n    if (!(base.isValid() && other.isValid())) {\n      return {\n        milliseconds: 0,\n        months: 0\n      };\n    }\n\n    other = cloneWithOffset(other, base);\n\n    if (base.isBefore(other)) {\n      res = positiveMomentsDifference(base, other);\n    } else {\n      res = positiveMomentsDifference(other, base);\n      res.milliseconds = -res.milliseconds;\n      res.months = -res.months;\n    }\n\n    return res;\n  } // TODO: remove 'name' arg after deprecation is removed\n\n\n  function createAdder(direction, name) {\n    return function (val, period) {\n      var dur, tmp; //invert the arguments, but complain about it\n\n      if (period !== null && !isNaN(+period)) {\n        deprecateSimple(name, 'moment().' + name + '(period, number) is deprecated. Please use moment().' + name + '(number, period). ' + 'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.');\n        tmp = val;\n        val = period;\n        period = tmp;\n      }\n\n      val = typeof val === 'string' ? +val : val;\n      dur = createDuration(val, period);\n      addSubtract(this, dur, direction);\n      return this;\n    };\n  }\n\n  function addSubtract(mom, duration, isAdding, updateOffset) {\n    var milliseconds = duration._milliseconds,\n        days = absRound(duration._days),\n        months = absRound(duration._months);\n\n    if (!mom.isValid()) {\n      // No op\n      return;\n    }\n\n    updateOffset = updateOffset == null ? true : updateOffset;\n\n    if (months) {\n      setMonth(mom, get(mom, 'Month') + months * isAdding);\n    }\n\n    if (days) {\n      set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n    }\n\n    if (milliseconds) {\n      mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n    }\n\n    if (updateOffset) {\n      hooks.updateOffset(mom, days || months);\n    }\n  }\n\n  var add = createAdder(1, 'add');\n  var subtract = createAdder(-1, 'subtract');\n\n  function getCalendarFormat(myMoment, now) {\n    var diff = myMoment.diff(now, 'days', true);\n    return diff < -6 ? 'sameElse' : diff < -1 ? 'lastWeek' : diff < 0 ? 'lastDay' : diff < 1 ? 'sameDay' : diff < 2 ? 'nextDay' : diff < 7 ? 'nextWeek' : 'sameElse';\n  }\n\n  function calendar$1(time, formats) {\n    // We want to compare the start of today, vs this.\n    // Getting start-of-today depends on whether we're local/utc/offset or not.\n    var now = time || createLocal(),\n        sod = cloneWithOffset(now, this).startOf('day'),\n        format = hooks.calendarFormat(this, sod) || 'sameElse';\n    var output = formats && (isFunction(formats[format]) ? formats[format].call(this, now) : formats[format]);\n    return this.format(output || this.localeData().calendar(format, this, createLocal(now)));\n  }\n\n  function clone() {\n    return new Moment(this);\n  }\n\n  function isAfter(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() > localInput.valueOf();\n    } else {\n      return localInput.valueOf() < this.clone().startOf(units).valueOf();\n    }\n  }\n\n  function isBefore(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input);\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() < localInput.valueOf();\n    } else {\n      return this.clone().endOf(units).valueOf() < localInput.valueOf();\n    }\n  }\n\n  function isBetween(from, to, units, inclusivity) {\n    var localFrom = isMoment(from) ? from : createLocal(from),\n        localTo = isMoment(to) ? to : createLocal(to);\n\n    if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n      return false;\n    }\n\n    inclusivity = inclusivity || '()';\n    return (inclusivity[0] === '(' ? this.isAfter(localFrom, units) : !this.isBefore(localFrom, units)) && (inclusivity[1] === ')' ? this.isBefore(localTo, units) : !this.isAfter(localTo, units));\n  }\n\n  function isSame(input, units) {\n    var localInput = isMoment(input) ? input : createLocal(input),\n        inputMs;\n\n    if (!(this.isValid() && localInput.isValid())) {\n      return false;\n    }\n\n    units = normalizeUnits(units) || 'millisecond';\n\n    if (units === 'millisecond') {\n      return this.valueOf() === localInput.valueOf();\n    } else {\n      inputMs = localInput.valueOf();\n      return this.clone().startOf(units).valueOf() <= inputMs && inputMs <= this.clone().endOf(units).valueOf();\n    }\n  }\n\n  function isSameOrAfter(input, units) {\n    return this.isSame(input, units) || this.isAfter(input, units);\n  }\n\n  function isSameOrBefore(input, units) {\n    return this.isSame(input, units) || this.isBefore(input, units);\n  }\n\n  function diff(input, units, asFloat) {\n    var that, zoneDelta, output;\n\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    that = cloneWithOffset(input, this);\n\n    if (!that.isValid()) {\n      return NaN;\n    }\n\n    zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n    units = normalizeUnits(units);\n\n    switch (units) {\n      case 'year':\n        output = monthDiff(this, that) / 12;\n        break;\n\n      case 'month':\n        output = monthDiff(this, that);\n        break;\n\n      case 'quarter':\n        output = monthDiff(this, that) / 3;\n        break;\n\n      case 'second':\n        output = (this - that) / 1e3;\n        break;\n      // 1000\n\n      case 'minute':\n        output = (this - that) / 6e4;\n        break;\n      // 1000 * 60\n\n      case 'hour':\n        output = (this - that) / 36e5;\n        break;\n      // 1000 * 60 * 60\n\n      case 'day':\n        output = (this - that - zoneDelta) / 864e5;\n        break;\n      // 1000 * 60 * 60 * 24, negate dst\n\n      case 'week':\n        output = (this - that - zoneDelta) / 6048e5;\n        break;\n      // 1000 * 60 * 60 * 24 * 7, negate dst\n\n      default:\n        output = this - that;\n    }\n\n    return asFloat ? output : absFloor(output);\n  }\n\n  function monthDiff(a, b) {\n    // difference in months\n    var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n        // b is in (anchor - 1 month, anchor + 1 month)\n    anchor = a.clone().add(wholeMonthDiff, 'months'),\n        anchor2,\n        adjust;\n\n    if (b - anchor < 0) {\n      anchor2 = a.clone().add(wholeMonthDiff - 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor - anchor2);\n    } else {\n      anchor2 = a.clone().add(wholeMonthDiff + 1, 'months'); // linear across the month\n\n      adjust = (b - anchor) / (anchor2 - anchor);\n    } //check for negative zero, return zero if negative zero\n\n\n    return -(wholeMonthDiff + adjust) || 0;\n  }\n\n  hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n  hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n  function toString() {\n    return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n  }\n\n  function toISOString(keepOffset) {\n    if (!this.isValid()) {\n      return null;\n    }\n\n    var utc = keepOffset !== true;\n    var m = utc ? this.clone().utc() : this;\n\n    if (m.year() < 0 || m.year() > 9999) {\n      return formatMoment(m, utc ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ');\n    }\n\n    if (isFunction(Date.prototype.toISOString)) {\n      // native implementation is ~50x faster, use it when we can\n      if (utc) {\n        return this.toDate().toISOString();\n      } else {\n        return new Date(this.valueOf() + this.utcOffset() * 60 * 1000).toISOString().replace('Z', formatMoment(m, 'Z'));\n      }\n    }\n\n    return formatMoment(m, utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ');\n  }\n  /**\n   * Return a human readable representation of a moment that can\n   * also be evaluated to get a new moment which is the same\n   *\n   * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n   */\n\n\n  function inspect() {\n    if (!this.isValid()) {\n      return 'moment.invalid(/* ' + this._i + ' */)';\n    }\n\n    var func = 'moment';\n    var zone = '';\n\n    if (!this.isLocal()) {\n      func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n      zone = 'Z';\n    }\n\n    var prefix = '[' + func + '(\"]';\n    var year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n    var datetime = '-MM-DD[T]HH:mm:ss.SSS';\n    var suffix = zone + '[\")]';\n    return this.format(prefix + year + datetime + suffix);\n  }\n\n  function format(inputString) {\n    if (!inputString) {\n      inputString = this.isUtc() ? hooks.defaultFormatUtc : hooks.defaultFormat;\n    }\n\n    var output = formatMoment(this, inputString);\n    return this.localeData().postformat(output);\n  }\n\n  function from(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        to: this,\n        from: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function fromNow(withoutSuffix) {\n    return this.from(createLocal(), withoutSuffix);\n  }\n\n  function to(time, withoutSuffix) {\n    if (this.isValid() && (isMoment(time) && time.isValid() || createLocal(time).isValid())) {\n      return createDuration({\n        from: this,\n        to: time\n      }).locale(this.locale()).humanize(!withoutSuffix);\n    } else {\n      return this.localeData().invalidDate();\n    }\n  }\n\n  function toNow(withoutSuffix) {\n    return this.to(createLocal(), withoutSuffix);\n  } // If passed a locale key, it will set the locale for this\n  // instance.  Otherwise, it will return the locale configuration\n  // variables for this instance.\n\n\n  function locale(key) {\n    var newLocaleData;\n\n    if (key === undefined) {\n      return this._locale._abbr;\n    } else {\n      newLocaleData = getLocale(key);\n\n      if (newLocaleData != null) {\n        this._locale = newLocaleData;\n      }\n\n      return this;\n    }\n  }\n\n  var lang = deprecate('moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.', function (key) {\n    if (key === undefined) {\n      return this.localeData();\n    } else {\n      return this.locale(key);\n    }\n  });\n\n  function localeData() {\n    return this._locale;\n  }\n\n  var MS_PER_SECOND = 1000;\n  var MS_PER_MINUTE = 60 * MS_PER_SECOND;\n  var MS_PER_HOUR = 60 * MS_PER_MINUTE;\n  var MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR; // actual modulo - handles negative numbers (for dates before 1970):\n\n  function mod$1(dividend, divisor) {\n    return (dividend % divisor + divisor) % divisor;\n  }\n\n  function localStartOfDate(y, m, d) {\n    // the date constructor remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return new Date(y, m, d).valueOf();\n    }\n  }\n\n  function utcStartOfDate(y, m, d) {\n    // Date.UTC remaps years 0-99 to 1900-1999\n    if (y < 100 && y >= 0) {\n      // preserve leap years using a full 400 year cycle, then reset\n      return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n    } else {\n      return Date.UTC(y, m, d);\n    }\n  }\n\n  function startOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year(), 0, 1);\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3, 1);\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month(), 1);\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday());\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1));\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date());\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time -= mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR);\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_MINUTE);\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time -= mod$1(time, MS_PER_SECOND);\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function endOf(units) {\n    var time;\n    units = normalizeUnits(units);\n\n    if (units === undefined || units === 'millisecond' || !this.isValid()) {\n      return this;\n    }\n\n    var startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n    switch (units) {\n      case 'year':\n        time = startOfDate(this.year() + 1, 0, 1) - 1;\n        break;\n\n      case 'quarter':\n        time = startOfDate(this.year(), this.month() - this.month() % 3 + 3, 1) - 1;\n        break;\n\n      case 'month':\n        time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n        break;\n\n      case 'week':\n        time = startOfDate(this.year(), this.month(), this.date() - this.weekday() + 7) - 1;\n        break;\n\n      case 'isoWeek':\n        time = startOfDate(this.year(), this.month(), this.date() - (this.isoWeekday() - 1) + 7) - 1;\n        break;\n\n      case 'day':\n      case 'date':\n        time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n        break;\n\n      case 'hour':\n        time = this._d.valueOf();\n        time += MS_PER_HOUR - mod$1(time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE), MS_PER_HOUR) - 1;\n        break;\n\n      case 'minute':\n        time = this._d.valueOf();\n        time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n        break;\n\n      case 'second':\n        time = this._d.valueOf();\n        time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n        break;\n    }\n\n    this._d.setTime(time);\n\n    hooks.updateOffset(this, true);\n    return this;\n  }\n\n  function valueOf() {\n    return this._d.valueOf() - (this._offset || 0) * 60000;\n  }\n\n  function unix() {\n    return Math.floor(this.valueOf() / 1000);\n  }\n\n  function toDate() {\n    return new Date(this.valueOf());\n  }\n\n  function toArray() {\n    var m = this;\n    return [m.year(), m.month(), m.date(), m.hour(), m.minute(), m.second(), m.millisecond()];\n  }\n\n  function toObject() {\n    var m = this;\n    return {\n      years: m.year(),\n      months: m.month(),\n      date: m.date(),\n      hours: m.hours(),\n      minutes: m.minutes(),\n      seconds: m.seconds(),\n      milliseconds: m.milliseconds()\n    };\n  }\n\n  function toJSON() {\n    // new Date(NaN).toJSON() === null\n    return this.isValid() ? this.toISOString() : null;\n  }\n\n  function isValid$2() {\n    return isValid(this);\n  }\n\n  function parsingFlags() {\n    return extend({}, getParsingFlags(this));\n  }\n\n  function invalidAt() {\n    return getParsingFlags(this).overflow;\n  }\n\n  function creationData() {\n    return {\n      input: this._i,\n      format: this._f,\n      locale: this._locale,\n      isUTC: this._isUTC,\n      strict: this._strict\n    };\n  } // FORMATTING\n\n\n  addFormatToken(0, ['gg', 2], 0, function () {\n    return this.weekYear() % 100;\n  });\n  addFormatToken(0, ['GG', 2], 0, function () {\n    return this.isoWeekYear() % 100;\n  });\n\n  function addWeekYearFormatToken(token, getter) {\n    addFormatToken(0, [token, token.length], 0, getter);\n  }\n\n  addWeekYearFormatToken('gggg', 'weekYear');\n  addWeekYearFormatToken('ggggg', 'weekYear');\n  addWeekYearFormatToken('GGGG', 'isoWeekYear');\n  addWeekYearFormatToken('GGGGG', 'isoWeekYear'); // ALIASES\n\n  addUnitAlias('weekYear', 'gg');\n  addUnitAlias('isoWeekYear', 'GG'); // PRIORITY\n\n  addUnitPriority('weekYear', 1);\n  addUnitPriority('isoWeekYear', 1); // PARSING\n\n  addRegexToken('G', matchSigned);\n  addRegexToken('g', matchSigned);\n  addRegexToken('GG', match1to2, match2);\n  addRegexToken('gg', match1to2, match2);\n  addRegexToken('GGGG', match1to4, match4);\n  addRegexToken('gggg', match1to4, match4);\n  addRegexToken('GGGGG', match1to6, match6);\n  addRegexToken('ggggg', match1to6, match6);\n  addWeekParseToken(['gggg', 'ggggg', 'GGGG', 'GGGGG'], function (input, week, config, token) {\n    week[token.substr(0, 2)] = toInt(input);\n  });\n  addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n    week[token] = hooks.parseTwoDigitYear(input);\n  }); // MOMENTS\n\n  function getSetWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.week(), this.weekday(), this.localeData()._week.dow, this.localeData()._week.doy);\n  }\n\n  function getSetISOWeekYear(input) {\n    return getSetWeekYearHelper.call(this, input, this.isoWeek(), this.isoWeekday(), 1, 4);\n  }\n\n  function getISOWeeksInYear() {\n    return weeksInYear(this.year(), 1, 4);\n  }\n\n  function getWeeksInYear() {\n    var weekInfo = this.localeData()._week;\n\n    return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n  }\n\n  function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n    var weeksTarget;\n\n    if (input == null) {\n      return weekOfYear(this, dow, doy).year;\n    } else {\n      weeksTarget = weeksInYear(input, dow, doy);\n\n      if (week > weeksTarget) {\n        week = weeksTarget;\n      }\n\n      return setWeekAll.call(this, input, week, weekday, dow, doy);\n    }\n  }\n\n  function setWeekAll(weekYear, week, weekday, dow, doy) {\n    var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n        date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n    this.year(date.getUTCFullYear());\n    this.month(date.getUTCMonth());\n    this.date(date.getUTCDate());\n    return this;\n  } // FORMATTING\n\n\n  addFormatToken('Q', 0, 'Qo', 'quarter'); // ALIASES\n\n  addUnitAlias('quarter', 'Q'); // PRIORITY\n\n  addUnitPriority('quarter', 7); // PARSING\n\n  addRegexToken('Q', match1);\n  addParseToken('Q', function (input, array) {\n    array[MONTH] = (toInt(input) - 1) * 3;\n  }); // MOMENTS\n\n  function getSetQuarter(input) {\n    return input == null ? Math.ceil((this.month() + 1) / 3) : this.month((input - 1) * 3 + this.month() % 3);\n  } // FORMATTING\n\n\n  addFormatToken('D', ['DD', 2], 'Do', 'date'); // ALIASES\n\n  addUnitAlias('date', 'D'); // PRIORITY\n\n  addUnitPriority('date', 9); // PARSING\n\n  addRegexToken('D', match1to2);\n  addRegexToken('DD', match1to2, match2);\n  addRegexToken('Do', function (isStrict, locale) {\n    // TODO: Remove \"ordinalParse\" fallback in next major release.\n    return isStrict ? locale._dayOfMonthOrdinalParse || locale._ordinalParse : locale._dayOfMonthOrdinalParseLenient;\n  });\n  addParseToken(['D', 'DD'], DATE);\n  addParseToken('Do', function (input, array) {\n    array[DATE] = toInt(input.match(match1to2)[0]);\n  }); // MOMENTS\n\n  var getSetDayOfMonth = makeGetSet('Date', true); // FORMATTING\n\n  addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear'); // ALIASES\n\n  addUnitAlias('dayOfYear', 'DDD'); // PRIORITY\n\n  addUnitPriority('dayOfYear', 4); // PARSING\n\n  addRegexToken('DDD', match1to3);\n  addRegexToken('DDDD', match3);\n  addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n    config._dayOfYear = toInt(input);\n  }); // HELPERS\n  // MOMENTS\n\n  function getSetDayOfYear(input) {\n    var dayOfYear = Math.round((this.clone().startOf('day') - this.clone().startOf('year')) / 864e5) + 1;\n    return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n  } // FORMATTING\n\n\n  addFormatToken('m', ['mm', 2], 0, 'minute'); // ALIASES\n\n  addUnitAlias('minute', 'm'); // PRIORITY\n\n  addUnitPriority('minute', 14); // PARSING\n\n  addRegexToken('m', match1to2);\n  addRegexToken('mm', match1to2, match2);\n  addParseToken(['m', 'mm'], MINUTE); // MOMENTS\n\n  var getSetMinute = makeGetSet('Minutes', false); // FORMATTING\n\n  addFormatToken('s', ['ss', 2], 0, 'second'); // ALIASES\n\n  addUnitAlias('second', 's'); // PRIORITY\n\n  addUnitPriority('second', 15); // PARSING\n\n  addRegexToken('s', match1to2);\n  addRegexToken('ss', match1to2, match2);\n  addParseToken(['s', 'ss'], SECOND); // MOMENTS\n\n  var getSetSecond = makeGetSet('Seconds', false); // FORMATTING\n\n  addFormatToken('S', 0, 0, function () {\n    return ~~(this.millisecond() / 100);\n  });\n  addFormatToken(0, ['SS', 2], 0, function () {\n    return ~~(this.millisecond() / 10);\n  });\n  addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n  addFormatToken(0, ['SSSS', 4], 0, function () {\n    return this.millisecond() * 10;\n  });\n  addFormatToken(0, ['SSSSS', 5], 0, function () {\n    return this.millisecond() * 100;\n  });\n  addFormatToken(0, ['SSSSSS', 6], 0, function () {\n    return this.millisecond() * 1000;\n  });\n  addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n    return this.millisecond() * 10000;\n  });\n  addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n    return this.millisecond() * 100000;\n  });\n  addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n    return this.millisecond() * 1000000;\n  }); // ALIASES\n\n  addUnitAlias('millisecond', 'ms'); // PRIORITY\n\n  addUnitPriority('millisecond', 16); // PARSING\n\n  addRegexToken('S', match1to3, match1);\n  addRegexToken('SS', match1to3, match2);\n  addRegexToken('SSS', match1to3, match3);\n  var token;\n\n  for (token = 'SSSS'; token.length <= 9; token += 'S') {\n    addRegexToken(token, matchUnsigned);\n  }\n\n  function parseMs(input, array) {\n    array[MILLISECOND] = toInt(('0.' + input) * 1000);\n  }\n\n  for (token = 'S'; token.length <= 9; token += 'S') {\n    addParseToken(token, parseMs);\n  } // MOMENTS\n\n\n  var getSetMillisecond = makeGetSet('Milliseconds', false); // FORMATTING\n\n  addFormatToken('z', 0, 0, 'zoneAbbr');\n  addFormatToken('zz', 0, 0, 'zoneName'); // MOMENTS\n\n  function getZoneAbbr() {\n    return this._isUTC ? 'UTC' : '';\n  }\n\n  function getZoneName() {\n    return this._isUTC ? 'Coordinated Universal Time' : '';\n  }\n\n  var proto = Moment.prototype;\n  proto.add = add;\n  proto.calendar = calendar$1;\n  proto.clone = clone;\n  proto.diff = diff;\n  proto.endOf = endOf;\n  proto.format = format;\n  proto.from = from;\n  proto.fromNow = fromNow;\n  proto.to = to;\n  proto.toNow = toNow;\n  proto.get = stringGet;\n  proto.invalidAt = invalidAt;\n  proto.isAfter = isAfter;\n  proto.isBefore = isBefore;\n  proto.isBetween = isBetween;\n  proto.isSame = isSame;\n  proto.isSameOrAfter = isSameOrAfter;\n  proto.isSameOrBefore = isSameOrBefore;\n  proto.isValid = isValid$2;\n  proto.lang = lang;\n  proto.locale = locale;\n  proto.localeData = localeData;\n  proto.max = prototypeMax;\n  proto.min = prototypeMin;\n  proto.parsingFlags = parsingFlags;\n  proto.set = stringSet;\n  proto.startOf = startOf;\n  proto.subtract = subtract;\n  proto.toArray = toArray;\n  proto.toObject = toObject;\n  proto.toDate = toDate;\n  proto.toISOString = toISOString;\n  proto.inspect = inspect;\n  proto.toJSON = toJSON;\n  proto.toString = toString;\n  proto.unix = unix;\n  proto.valueOf = valueOf;\n  proto.creationData = creationData;\n  proto.year = getSetYear;\n  proto.isLeapYear = getIsLeapYear;\n  proto.weekYear = getSetWeekYear;\n  proto.isoWeekYear = getSetISOWeekYear;\n  proto.quarter = proto.quarters = getSetQuarter;\n  proto.month = getSetMonth;\n  proto.daysInMonth = getDaysInMonth;\n  proto.week = proto.weeks = getSetWeek;\n  proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n  proto.weeksInYear = getWeeksInYear;\n  proto.isoWeeksInYear = getISOWeeksInYear;\n  proto.date = getSetDayOfMonth;\n  proto.day = proto.days = getSetDayOfWeek;\n  proto.weekday = getSetLocaleDayOfWeek;\n  proto.isoWeekday = getSetISODayOfWeek;\n  proto.dayOfYear = getSetDayOfYear;\n  proto.hour = proto.hours = getSetHour;\n  proto.minute = proto.minutes = getSetMinute;\n  proto.second = proto.seconds = getSetSecond;\n  proto.millisecond = proto.milliseconds = getSetMillisecond;\n  proto.utcOffset = getSetOffset;\n  proto.utc = setOffsetToUTC;\n  proto.local = setOffsetToLocal;\n  proto.parseZone = setOffsetToParsedOffset;\n  proto.hasAlignedHourOffset = hasAlignedHourOffset;\n  proto.isDST = isDaylightSavingTime;\n  proto.isLocal = isLocal;\n  proto.isUtcOffset = isUtcOffset;\n  proto.isUtc = isUtc;\n  proto.isUTC = isUtc;\n  proto.zoneAbbr = getZoneAbbr;\n  proto.zoneName = getZoneName;\n  proto.dates = deprecate('dates accessor is deprecated. Use date instead.', getSetDayOfMonth);\n  proto.months = deprecate('months accessor is deprecated. Use month instead', getSetMonth);\n  proto.years = deprecate('years accessor is deprecated. Use year instead', getSetYear);\n  proto.zone = deprecate('moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/', getSetZone);\n  proto.isDSTShifted = deprecate('isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information', isDaylightSavingTimeShifted);\n\n  function createUnix(input) {\n    return createLocal(input * 1000);\n  }\n\n  function createInZone() {\n    return createLocal.apply(null, arguments).parseZone();\n  }\n\n  function preParsePostFormat(string) {\n    return string;\n  }\n\n  var proto$1 = Locale.prototype;\n  proto$1.calendar = calendar;\n  proto$1.longDateFormat = longDateFormat;\n  proto$1.invalidDate = invalidDate;\n  proto$1.ordinal = ordinal;\n  proto$1.preparse = preParsePostFormat;\n  proto$1.postformat = preParsePostFormat;\n  proto$1.relativeTime = relativeTime;\n  proto$1.pastFuture = pastFuture;\n  proto$1.set = set;\n  proto$1.months = localeMonths;\n  proto$1.monthsShort = localeMonthsShort;\n  proto$1.monthsParse = localeMonthsParse;\n  proto$1.monthsRegex = monthsRegex;\n  proto$1.monthsShortRegex = monthsShortRegex;\n  proto$1.week = localeWeek;\n  proto$1.firstDayOfYear = localeFirstDayOfYear;\n  proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n  proto$1.weekdays = localeWeekdays;\n  proto$1.weekdaysMin = localeWeekdaysMin;\n  proto$1.weekdaysShort = localeWeekdaysShort;\n  proto$1.weekdaysParse = localeWeekdaysParse;\n  proto$1.weekdaysRegex = weekdaysRegex;\n  proto$1.weekdaysShortRegex = weekdaysShortRegex;\n  proto$1.weekdaysMinRegex = weekdaysMinRegex;\n  proto$1.isPM = localeIsPM;\n  proto$1.meridiem = localeMeridiem;\n\n  function get$1(format, index, field, setter) {\n    var locale = getLocale();\n    var utc = createUTC().set(setter, index);\n    return locale[field](utc, format);\n  }\n\n  function listMonthsImpl(format, index, field) {\n    if (isNumber(format)) {\n      index = format;\n      format = undefined;\n    }\n\n    format = format || '';\n\n    if (index != null) {\n      return get$1(format, index, field, 'month');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 12; i++) {\n      out[i] = get$1(format, i, field, 'month');\n    }\n\n    return out;\n  } // ()\n  // (5)\n  // (fmt, 5)\n  // (fmt)\n  // (true)\n  // (true, 5)\n  // (true, fmt, 5)\n  // (true, fmt)\n\n\n  function listWeekdaysImpl(localeSorted, format, index, field) {\n    if (typeof localeSorted === 'boolean') {\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    } else {\n      format = localeSorted;\n      index = format;\n      localeSorted = false;\n\n      if (isNumber(format)) {\n        index = format;\n        format = undefined;\n      }\n\n      format = format || '';\n    }\n\n    var locale = getLocale(),\n        shift = localeSorted ? locale._week.dow : 0;\n\n    if (index != null) {\n      return get$1(format, (index + shift) % 7, field, 'day');\n    }\n\n    var i;\n    var out = [];\n\n    for (i = 0; i < 7; i++) {\n      out[i] = get$1(format, (i + shift) % 7, field, 'day');\n    }\n\n    return out;\n  }\n\n  function listMonths(format, index) {\n    return listMonthsImpl(format, index, 'months');\n  }\n\n  function listMonthsShort(format, index) {\n    return listMonthsImpl(format, index, 'monthsShort');\n  }\n\n  function listWeekdays(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n  }\n\n  function listWeekdaysShort(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n  }\n\n  function listWeekdaysMin(localeSorted, format, index) {\n    return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n  }\n\n  getSetGlobalLocale('en', {\n    dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n    ordinal: function ordinal(number) {\n      var b = number % 10,\n          output = toInt(number % 100 / 10) === 1 ? 'th' : b === 1 ? 'st' : b === 2 ? 'nd' : b === 3 ? 'rd' : 'th';\n      return number + output;\n    }\n  }); // Side effect imports\n\n  hooks.lang = deprecate('moment.lang is deprecated. Use moment.locale instead.', getSetGlobalLocale);\n  hooks.langData = deprecate('moment.langData is deprecated. Use moment.localeData instead.', getLocale);\n  var mathAbs = Math.abs;\n\n  function abs() {\n    var data = this._data;\n    this._milliseconds = mathAbs(this._milliseconds);\n    this._days = mathAbs(this._days);\n    this._months = mathAbs(this._months);\n    data.milliseconds = mathAbs(data.milliseconds);\n    data.seconds = mathAbs(data.seconds);\n    data.minutes = mathAbs(data.minutes);\n    data.hours = mathAbs(data.hours);\n    data.months = mathAbs(data.months);\n    data.years = mathAbs(data.years);\n    return this;\n  }\n\n  function addSubtract$1(duration, input, value, direction) {\n    var other = createDuration(input, value);\n    duration._milliseconds += direction * other._milliseconds;\n    duration._days += direction * other._days;\n    duration._months += direction * other._months;\n    return duration._bubble();\n  } // supports only 2.0-style add(1, 's') or add(duration)\n\n\n  function add$1(input, value) {\n    return addSubtract$1(this, input, value, 1);\n  } // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\n\n  function subtract$1(input, value) {\n    return addSubtract$1(this, input, value, -1);\n  }\n\n  function absCeil(number) {\n    if (number < 0) {\n      return Math.floor(number);\n    } else {\n      return Math.ceil(number);\n    }\n  }\n\n  function bubble() {\n    var milliseconds = this._milliseconds;\n    var days = this._days;\n    var months = this._months;\n    var data = this._data;\n    var seconds, minutes, hours, years, monthsFromDays; // if we have a mix of positive and negative values, bubble down first\n    // check: https://github.com/moment/moment/issues/2166\n\n    if (!(milliseconds >= 0 && days >= 0 && months >= 0 || milliseconds <= 0 && days <= 0 && months <= 0)) {\n      milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n      days = 0;\n      months = 0;\n    } // The following code bubbles up values, see the tests for\n    // examples of what that means.\n\n\n    data.milliseconds = milliseconds % 1000;\n    seconds = absFloor(milliseconds / 1000);\n    data.seconds = seconds % 60;\n    minutes = absFloor(seconds / 60);\n    data.minutes = minutes % 60;\n    hours = absFloor(minutes / 60);\n    data.hours = hours % 24;\n    days += absFloor(hours / 24); // convert days to months\n\n    monthsFromDays = absFloor(daysToMonths(days));\n    months += monthsFromDays;\n    days -= absCeil(monthsToDays(monthsFromDays)); // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12;\n    data.days = days;\n    data.months = months;\n    data.years = years;\n    return this;\n  }\n\n  function daysToMonths(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    // 400 years have 12 months === 4800\n    return days * 4800 / 146097;\n  }\n\n  function monthsToDays(months) {\n    // the reverse of daysToMonths\n    return months * 146097 / 4800;\n  }\n\n  function as(units) {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    var days;\n    var months;\n    var milliseconds = this._milliseconds;\n    units = normalizeUnits(units);\n\n    if (units === 'month' || units === 'quarter' || units === 'year') {\n      days = this._days + milliseconds / 864e5;\n      months = this._months + daysToMonths(days);\n\n      switch (units) {\n        case 'month':\n          return months;\n\n        case 'quarter':\n          return months / 3;\n\n        case 'year':\n          return months / 12;\n      }\n    } else {\n      // handle milliseconds separately because of floating point math errors (issue #1867)\n      days = this._days + Math.round(monthsToDays(this._months));\n\n      switch (units) {\n        case 'week':\n          return days / 7 + milliseconds / 6048e5;\n\n        case 'day':\n          return days + milliseconds / 864e5;\n\n        case 'hour':\n          return days * 24 + milliseconds / 36e5;\n\n        case 'minute':\n          return days * 1440 + milliseconds / 6e4;\n\n        case 'second':\n          return days * 86400 + milliseconds / 1000;\n        // Math.floor prevents floating point math errors here\n\n        case 'millisecond':\n          return Math.floor(days * 864e5) + milliseconds;\n\n        default:\n          throw new Error('Unknown unit ' + units);\n      }\n    }\n  } // TODO: Use this.as('ms')?\n\n\n  function valueOf$1() {\n    if (!this.isValid()) {\n      return NaN;\n    }\n\n    return this._milliseconds + this._days * 864e5 + this._months % 12 * 2592e6 + toInt(this._months / 12) * 31536e6;\n  }\n\n  function makeAs(alias) {\n    return function () {\n      return this.as(alias);\n    };\n  }\n\n  var asMilliseconds = makeAs('ms');\n  var asSeconds = makeAs('s');\n  var asMinutes = makeAs('m');\n  var asHours = makeAs('h');\n  var asDays = makeAs('d');\n  var asWeeks = makeAs('w');\n  var asMonths = makeAs('M');\n  var asQuarters = makeAs('Q');\n  var asYears = makeAs('y');\n\n  function clone$1() {\n    return createDuration(this);\n  }\n\n  function get$2(units) {\n    units = normalizeUnits(units);\n    return this.isValid() ? this[units + 's']() : NaN;\n  }\n\n  function makeGetter(name) {\n    return function () {\n      return this.isValid() ? this._data[name] : NaN;\n    };\n  }\n\n  var milliseconds = makeGetter('milliseconds');\n  var seconds = makeGetter('seconds');\n  var minutes = makeGetter('minutes');\n  var hours = makeGetter('hours');\n  var days = makeGetter('days');\n  var months = makeGetter('months');\n  var years = makeGetter('years');\n\n  function weeks() {\n    return absFloor(this.days() / 7);\n  }\n\n  var round = Math.round;\n  var thresholds = {\n    ss: 44,\n    // a few seconds to seconds\n    s: 45,\n    // seconds to minute\n    m: 45,\n    // minutes to hour\n    h: 22,\n    // hours to day\n    d: 26,\n    // days to month\n    M: 11 // months to year\n\n  }; // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\n  function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n    return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n  }\n\n  function relativeTime$1(posNegDuration, withoutSuffix, locale) {\n    var duration = createDuration(posNegDuration).abs();\n    var seconds = round(duration.as('s'));\n    var minutes = round(duration.as('m'));\n    var hours = round(duration.as('h'));\n    var days = round(duration.as('d'));\n    var months = round(duration.as('M'));\n    var years = round(duration.as('y'));\n    var a = seconds <= thresholds.ss && ['s', seconds] || seconds < thresholds.s && ['ss', seconds] || minutes <= 1 && ['m'] || minutes < thresholds.m && ['mm', minutes] || hours <= 1 && ['h'] || hours < thresholds.h && ['hh', hours] || days <= 1 && ['d'] || days < thresholds.d && ['dd', days] || months <= 1 && ['M'] || months < thresholds.M && ['MM', months] || years <= 1 && ['y'] || ['yy', years];\n    a[2] = withoutSuffix;\n    a[3] = +posNegDuration > 0;\n    a[4] = locale;\n    return substituteTimeAgo.apply(null, a);\n  } // This function allows you to set the rounding function for relative time strings\n\n\n  function getSetRelativeTimeRounding(roundingFunction) {\n    if (roundingFunction === undefined) {\n      return round;\n    }\n\n    if (typeof roundingFunction === 'function') {\n      round = roundingFunction;\n      return true;\n    }\n\n    return false;\n  } // This function allows you to set a threshold for relative time strings\n\n\n  function getSetRelativeTimeThreshold(threshold, limit) {\n    if (thresholds[threshold] === undefined) {\n      return false;\n    }\n\n    if (limit === undefined) {\n      return thresholds[threshold];\n    }\n\n    thresholds[threshold] = limit;\n\n    if (threshold === 's') {\n      thresholds.ss = limit - 1;\n    }\n\n    return true;\n  }\n\n  function humanize(withSuffix) {\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var locale = this.localeData();\n    var output = relativeTime$1(this, !withSuffix, locale);\n\n    if (withSuffix) {\n      output = locale.pastFuture(+this, output);\n    }\n\n    return locale.postformat(output);\n  }\n\n  var abs$1 = Math.abs;\n\n  function sign(x) {\n    return (x > 0) - (x < 0) || +x;\n  }\n\n  function toISOString$1() {\n    // for ISO strings we do not use the normal bubbling rules:\n    //  * milliseconds bubble up until they become hours\n    //  * days do not bubble at all\n    //  * months bubble up until they become years\n    // This is because there is no context-free conversion between hours and days\n    // (think of clock changes)\n    // and also not between days and months (28-31 days per month)\n    if (!this.isValid()) {\n      return this.localeData().invalidDate();\n    }\n\n    var seconds = abs$1(this._milliseconds) / 1000;\n    var days = abs$1(this._days);\n    var months = abs$1(this._months);\n    var minutes, hours, years; // 3600 seconds -> 60 minutes -> 1 hour\n\n    minutes = absFloor(seconds / 60);\n    hours = absFloor(minutes / 60);\n    seconds %= 60;\n    minutes %= 60; // 12 months -> 1 year\n\n    years = absFloor(months / 12);\n    months %= 12; // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\n    var Y = years;\n    var M = months;\n    var D = days;\n    var h = hours;\n    var m = minutes;\n    var s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n    var total = this.asSeconds();\n\n    if (!total) {\n      // this is the same as C#'s (Noda) and python (isodate)...\n      // but not other JS (goog.date)\n      return 'P0D';\n    }\n\n    var totalSign = total < 0 ? '-' : '';\n    var ymSign = sign(this._months) !== sign(total) ? '-' : '';\n    var daysSign = sign(this._days) !== sign(total) ? '-' : '';\n    var hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n    return totalSign + 'P' + (Y ? ymSign + Y + 'Y' : '') + (M ? ymSign + M + 'M' : '') + (D ? daysSign + D + 'D' : '') + (h || m || s ? 'T' : '') + (h ? hmsSign + h + 'H' : '') + (m ? hmsSign + m + 'M' : '') + (s ? hmsSign + s + 'S' : '');\n  }\n\n  var proto$2 = Duration.prototype;\n  proto$2.isValid = isValid$1;\n  proto$2.abs = abs;\n  proto$2.add = add$1;\n  proto$2.subtract = subtract$1;\n  proto$2.as = as;\n  proto$2.asMilliseconds = asMilliseconds;\n  proto$2.asSeconds = asSeconds;\n  proto$2.asMinutes = asMinutes;\n  proto$2.asHours = asHours;\n  proto$2.asDays = asDays;\n  proto$2.asWeeks = asWeeks;\n  proto$2.asMonths = asMonths;\n  proto$2.asQuarters = asQuarters;\n  proto$2.asYears = asYears;\n  proto$2.valueOf = valueOf$1;\n  proto$2._bubble = bubble;\n  proto$2.clone = clone$1;\n  proto$2.get = get$2;\n  proto$2.milliseconds = milliseconds;\n  proto$2.seconds = seconds;\n  proto$2.minutes = minutes;\n  proto$2.hours = hours;\n  proto$2.days = days;\n  proto$2.weeks = weeks;\n  proto$2.months = months;\n  proto$2.years = years;\n  proto$2.humanize = humanize;\n  proto$2.toISOString = toISOString$1;\n  proto$2.toString = toISOString$1;\n  proto$2.toJSON = toISOString$1;\n  proto$2.locale = locale;\n  proto$2.localeData = localeData;\n  proto$2.toIsoString = deprecate('toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)', toISOString$1);\n  proto$2.lang = lang; // Side effect imports\n  // FORMATTING\n\n  addFormatToken('X', 0, 0, 'unix');\n  addFormatToken('x', 0, 0, 'valueOf'); // PARSING\n\n  addRegexToken('x', matchSigned);\n  addRegexToken('X', matchTimestamp);\n  addParseToken('X', function (input, array, config) {\n    config._d = new Date(parseFloat(input, 10) * 1000);\n  });\n  addParseToken('x', function (input, array, config) {\n    config._d = new Date(toInt(input));\n  }); // Side effect imports\n\n  hooks.version = '2.24.0';\n  setHookCallback(createLocal);\n  hooks.fn = proto;\n  hooks.min = min;\n  hooks.max = max;\n  hooks.now = now;\n  hooks.utc = createUTC;\n  hooks.unix = createUnix;\n  hooks.months = listMonths;\n  hooks.isDate = isDate;\n  hooks.locale = getSetGlobalLocale;\n  hooks.invalid = createInvalid;\n  hooks.duration = createDuration;\n  hooks.isMoment = isMoment;\n  hooks.weekdays = listWeekdays;\n  hooks.parseZone = createInZone;\n  hooks.localeData = getLocale;\n  hooks.isDuration = isDuration;\n  hooks.monthsShort = listMonthsShort;\n  hooks.weekdaysMin = listWeekdaysMin;\n  hooks.defineLocale = defineLocale;\n  hooks.updateLocale = updateLocale;\n  hooks.locales = listLocales;\n  hooks.weekdaysShort = listWeekdaysShort;\n  hooks.normalizeUnits = normalizeUnits;\n  hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n  hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n  hooks.calendarFormat = getCalendarFormat;\n  hooks.prototype = proto; // currently HTML5 input type only supports 24-hour formats\n\n  hooks.HTML5_FMT = {\n    DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm',\n    // <input type=\"datetime-local\" />\n    DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss',\n    // <input type=\"datetime-local\" step=\"1\" />\n    DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS',\n    // <input type=\"datetime-local\" step=\"0.001\" />\n    DATE: 'YYYY-MM-DD',\n    // <input type=\"date\" />\n    TIME: 'HH:mm',\n    // <input type=\"time\" />\n    TIME_SECONDS: 'HH:mm:ss',\n    // <input type=\"time\" step=\"1\" />\n    TIME_MS: 'HH:mm:ss.SSS',\n    // <input type=\"time\" step=\"0.001\" />\n    WEEK: 'GGGG-[W]WW',\n    // <input type=\"week\" />\n    MONTH: 'YYYY-MM' // <input type=\"month\" />\n\n  };\n  return hooks;\n});","var baseIsEqual = require('./_baseIsEqual');\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\n\n\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nmodule.exports = isEqual;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","var baseAssignValue = require('./_baseAssignValue'),\n    createAggregator = require('./_createAggregator');\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\n\n\nvar keyBy = createAggregator(function (result, value, key) {\n  baseAssignValue(result, key, value);\n});\nmodule.exports = keyBy;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var arrayAggregator = require('./_arrayAggregator'),\n    baseAggregator = require('./_baseAggregator'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\n\n\nfunction createAggregator(setter, initializer) {\n  return function (collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nmodule.exports = createAggregator;","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayAggregator;","var baseEach = require('./_baseEach');\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\n\n\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function (value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseAggregator;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;"],"sourceRoot":""}